{"version":3,"sources":["models/AuthorityType.ts","redux/appReducer.js","redux/types.js","models/BaseEntity.ts","utils/StringUtil.ts","models/User.ts","models/settings/Menu.ts","constant/Menus.ts","redux/userReducer.js","models/settings/AttachmentInfo.ts","services/Promises.ts","services/MasterDataService.ts","services/UserService.ts","services/MusyrifManagementService.ts","services/StudentService.ts","redux/servicesReducer.ts","redux/reducers.js","middlewares/UserMiddleware.ts","middlewares/RealtimeChatMiddleware.js","redux/configureStore.js","middlewares/Common.ts","constant/Url.js","redux/actionCreators.ts","constant/stores.js","component/loader/Loader.js","utils/EventUtil.ts","component/alert/Alert.js","models/ApplicationProfile.ts","utils/websockets.js","component/BaseComponent.tsx","component/navigation/Header.tsx","component/loader/Spinner.tsx","component/pages/login/Login.tsx","component/pages/BasePage.tsx","utils/ComponentUtil.ts","component/pages/dashboard/main/DashboardMain.tsx","component/pages/home/HomeMain.tsx","utils/CollectionUtil.tsx","models/commons/Filter.ts","component/form/FormGroup.tsx","component/navigation/NavigationButtons.tsx","component/navigation/AnchorWithIcon.tsx","component/pages/management/EmployeeRow.tsx","component/navigation/AnchorButton.tsx","component/navigation/ToggleButton.tsx","component/pages/management/BaseManagementPage.tsx","component/pages/management/MusyrifManagement.tsx","component/pages/management/ManagementMain.tsx","models/Category.ts","component/container/Modal.tsx","component/pages/management/EditDeleteButton.tsx","component/pages/management/CategoryManagement.tsx","models/RulePoint.ts","component/pages/management/RulePointManagement.tsx","utils/DateUtil.ts","component/form/FilterPeriod.tsx","component/pages/dormitoryactivity/StudentList.tsx","models/Student.ts","models/PointRecord.ts","component/form/InputTime.tsx","component/pages/dormitoryactivity/form/FormStepThree.tsx","component/alert/SimpleError.tsx","component/pages/dormitoryactivity/form/FormStepTwo.tsx","component/pages/dormitoryactivity/form/FormStepOne.tsx","component/pages/dormitoryactivity/InputPointForm.tsx","component/container/Card.tsx","models/Class.ts","component/pages/dormitoryactivity/point-record/PointRecordDetail.tsx","component/pages/dormitoryactivity/DropPointButtons.tsx","component/pages/management/PointRecordsSummary.tsx","component/pages/dormitoryactivity/medicalrecord/StudentForm.tsx","models/MedicalRecord.ts","component/pages/dormitoryactivity/medicalrecord/MedicalRecordDailyInput.tsx","component/pages/dormitoryactivity/medicalrecord/MedicalRecordForm.tsx","component/pages/home/AboutUs.tsx","component/pages/login/Register.tsx","component/pages/dormitoryactivity/point-record/PointRecordEdit.tsx","component/layout/ApplicationContent.tsx","component/navigation/SideBar.tsx","component/layout/MainLayout.tsx","App.tsx","Root.tsx","serviceWorker.js","index.js"],"names":["AuthorityType","initState","mainApp","undefined","reducer","state","action","type","payload","BaseEntity","id","index","uniqueId","string","String","Date","getUTCMilliseconds","toString","months","twoDigits","value","User","nickname","name","email","password","profileImage","roles","user","requestId","nip","role","i","this","length","Object","assign","Menu","code","description","url","pathVariables","iconUrl","color","fontColor","active","menuClass","authenticated","showSidebar","subMenus","userAuthorized","clone","element","hasRole","defaultMenuIconClassName","getIconClassName","menu","getMenus","menuSet","_menus","subMenu","push","admin_asrama","musyrif_asrama","loginKey","loginStatus","loginFailed","menus","menuData","loggedUser","loginAttempt","applicationProfile","assetsPath","result","message","profile","referer","refresh","setLoginKeyCookie","data","AttachmentInfo","blob","Blob","arg0","split","info","axios","require","commonAjaxPostCalls","endpoint","request","Promise","resolve","reject","post","headers","commonAuthorizedHeader","then","axiosResponse","updateAccessToken","response","rawAxiosResponse","catch","e","console","error","commonAjaxPublicPostCalls","commonHeader","MasterDataService","getOne","contextPath","concat","delete","list","update","updateApplicationProfile","responseType","debug","fileName","rawSplit","extension","window","URL","createObjectURL","attachmentInfo","commonAjaxPostCallsWithBlob","instance","UserService","updateProfile","saveUser","requestApplicationId","callbackSuccess","callbackError","alert","requestApplicationIdNoAuth","MusyrifManagementService","filter","emp","employee_id","StudentService","submitMedicalRecord","record","req","medicalRecord","loadMonthlyMedicalRecord","studentId","month","year","fieldsFilter","student_id","setPointDropped","dropped","pointRecord","dropped_at","services","userService","getInstance","masterDataService","musyrifManagementService","studentService","rootReducer","combineReducers","appState","appReducer","userState","userReducer","servicesState","servicesReducers","initialState","performLoginMiddleware","store","next","meta","app","responseJson","loginSuccess","newAction","common","dispatch","log","finally","endLoading","getLoggedUserMiddleware","param","performLogoutMiddleware","logoutSuccess","setLoggedUserMiddleware","getMessagesMiddleware","fetch","method","body","JSON","stringify","json","err","storeChatMessageLocallyMiddleware","getStore","configureStore","createStore","applyMiddleware","userMiddleware","realtimeChatMiddleware","getRequestId","getLoginKey","LOGIN_KEY","getAssetsPath","getState","getCookie","accessToken","setCookie","cookieValue","cname","cvalue","exdays","d","setTime","getTime","expires","toUTCString","document","cookie","ca","decodeURIComponent","c","charAt","substring","indexOf","devMode","getElementById","rootValue","baseImageUrl","usedHost","apiAccount","performLogout","startLoading","mapCommonUserStateToProps","LoaderContent","props","realtime","className","style","margin","position","zIndex","marginBottom","aria-hidden","padding","marginTop","height","width","progress","transitionDuration","disabled","Loader","timer","intervalId","clearInterval","setState","endMessage","withTimer","setInterval","Component","doItLater","callback","intervalMs","timeout","setTimeout","clearTimeout","State","backColor","Backdrop","backgroundColor","bgColor","Footer","ref","yesButtonRef","onClick","onYes","yesOnly","noButtonRef","onNo","Header","fontClassName","title","onClose","Alert","close","React","createRef","isError","current","focus","headerClassName","display","children","ApplicationProfile","about","welcoming_message","pageIcon","backgroundUrl","contact","address","stompClient","wsConnected","subscriptionCallbacks","Array","sendToWebsocket","requestObject","send","BaseComponent","parentApp","updated","validateLoginStatus","isUserLoggedIn","backToLogin","sendWebSocket","setWsUpdateHandler","handler","resetWsUpdateHandler","getApplicationProfile","handleInputChange","event","target","checked","doAjax","withProgress","successCallback","errorCallback","params","commonAjax","commonAjaxWithProgress","getLoggedUser","isAdmin","scrollTop","opt","top","behavior","scrollTo","showConfirmation","showAlert","showConfirmationDanger","showAlertError","showInfo","showError","showCommonErrorAlert","getServices","history","IState","showNavLinks","buttonToggleNavRef","toggleNavLinks","onLogout","ok","setMenu","click","label","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","map","isActive","activeMenuCode","key","to","setMenuNull","NavBarTop","paddingLeft","fontSize","UserIcon","marginRight","withRouter","connect","Spinner","innerDivs","visibility","show","loading","editPassword","Login","updateCredentialProperty","getAttribute","preventDefault","performLogin","onSubmit","login","onChange","PasswordField","placeholder","required","EmailField","autoFocus","username","BasePage","componentReady","getAttachmentInfoFromFile","fileInput","files","file","reader","FileReader","readAsDataURL","onload","setUrl","onerror","Error","attachment","DashboardMain","addPointRecord","pathname","updateImage","accept","src","HomeMain","imageUrl","backgroundImage","backgroundSize","tableHeader","values","Filter","limit","page","orderType","orderBy","contains","exacts","day","module","dayTo","monthTo","yearTo","maxValue","availabilityCheck","useExistingFilterPage","withLimit","f","FormGroup","orientation","NavigationButtons","buttonIndexes","generateButtonValues","totalData","activePage","lastIndex","nextPage","previusPage","currentPage","displayed_buttons","buttonCount","Math","ceil","min","max","AnchorWithIcon","btnClassName","attributes","iconClassName","tyle","EmployeeRow","getEmployee","employee","activeStatusUpdate","onUpdated","activateMusyrif","activate","isMusyrif","startingNumber","AnchorButton","ToggleButton","yesLabel","noLabel","BaseManagementPage","modelName","overrideLoading","formRef","loadItems","itemsLoaded","items","emptyRecord","updateFilter","dataset","parseInt","updateFieldsFilter","loadAtPage","updateRecordProp","resetForm","oneRecordLoaded","item","showModal","recordUpdated","hideModal","callApiSubmit","reload","MusyrifManagement","setMusyrifOnly","musyrifOnly","onEmployeeStatusUpdate","EmployeeList","overflow","ManagementMain","Category","points","Modal","toggleable","footerContent","showFooter","EditDeleteButton","getRecord","rec","recordLoaded","recordLoadedForDetail","recordDeleted","loadRecord","loadRecordRequest","loadRecordForDetail","deleteRecord","hasType","types","record_id","CategoryManagement","category","ItemsList","RecordForm","RulePoint","category_id","point","droppable","categories","categoriesLoaded","RulePointManagement","rulePoint","categoriesNotLoaded","loadCategories","selectedCategoryId","reloadCategories","data-type","MONTHS","leapMonths","regularMonths","parseDate","s","b","m","days","arr","FilterPeriod","mode","Fragment","showlabel","hideDay","classes","StudentList","classesLoaded","loadClasses","getClasses","updateSelectedClass","inputPage","inputPoint","inputMedicalRecord","student","updateWithPointRecord","val","getDate","getMonth","getFullYear","selectedClassId","showPointRecord","level","sekolah","rombel","nama","colSpan","kelas","Student","nis","PointRecord","setDate","dateString","td","location","time","point_id","rule_point","pictures","getPicture","getTimestamp","DAYS","getDay","join","getHours","getMinutes","getSeconds","h","object","hour","minute","second","hours","minutesOrSeconds","InputTime","minutes","seconds","updateFromProps","updateValue","setNow","date","border","sec","marginLeft","FormStepThree","submit","updatePointRecord","updateDate","updateTime","setAttachment","removeAttachment","getAttachment","onBack","SimpleError","rulePoints","FormStepTwo","rulePointsLoaded","setRulePoint","loadRulePoints","getCategory","r","FormStepOne","setCategory","setSelectedCategory","formStep","savedRecord","InputPointForm","totalStep","validateStudentData","removeStudent","nextStep","step","submitRecord","submitPointRecord","recordSubmitted","back","Progress","Detail","toDateString","Warning","Card","Class","PointRecordDetail","pictureUrl","timeStamp","studentClassString","DropPointButtons","setDropped","isDropped","selectedCategory","showFilterDetail","PointRecordSummary","classessLoaded","getCategories","cat","showDetail","hideDetail","hideFilterDetail","openEditPage","p","class_id","point_name","category_name","recordLoadedForEdit","studentName","StudentForm","loadStudent","setSelectedItem","setItem","reset","selectedItem","onReset","cursor","ItemDetail","MedicalRecord","temperature_morning","temperature_afternoon","breakfast","lunch","dinner","medicine_consumption","genose_test","antigen_test","pcr_test","obj","y","MedicalRecordDailyInput","setRecord","period","monthName","rows","Checkbox","SingleRow","minHeight","forwardRef","mappedItems","Map","MedicalRecordForm","inputRefs","setStudent","loadMonthlyRecord","forEach","recordsLoaded","toMap","get","set","getFilter","dayCount","getMonthDays","gridTemplateColumns","repeat","AboutUs","appProfile","displayName","editPasswordRepeat","Register","UserModel","trim","userSaved","passwordMatch","fieldComplete","register","borderColor","CommonField","pointsMap","students","studentNameSearch","selectedPointId","PointRecordEdit","inputTimeRef","studentsLoaded","loadStudents","categoryId","catId","resp","checkPassedData","updateInput","updateRecordField","el","setSelectedRulePoint","validateInput","removeImage","updatePicture","resetStudents","categoryID","ApplicationContent","setSidebarMenus","exact","path","render","MusyrifManagementRoute","StudentsRoute","proos","LoginRoute","Dashboard","SideBar","isSidebarActive","parentMenu","pathName","addEventListener","handleScroll","removeEventListener","srcElement","sidebarMenus","brand","menuClassName","Brand","textAlign","paddingTop","paddingBottom","textDecoration","MainLayout","currentPathName","setCurrentMenu","pathRaw","firstPath","extractMenuPath","getMenuByMenuPath","getSubMenus","menuState","loadingPercentage","mainAppUpdated","appIdStatus","errorAuthenticatingApp","App","loadings","alertTitle","alertBody","alertIsYesOnly","alertIsError","alertOnYesCallback","alertOnCancelCallback","wsUpdateHandler","clientRef","alertCallback","onOk","requestAppId","setRequestId","retryRequestAppId","smoothEndLoading","handleProgress","msg","percentageFloat","percentage","floor","initWebsocket","callBackObjects","registerWebSocketCallbacks","subscribeUrl","handleWsUpdate","setMainApp","incrementLoadings","decrementLoadings","yesCallback","noCallback","dismissAlert","link","querySelector","createElement","setAttribute","head","appendChild","updateFavicon","Loading","text","loggedIn","actions","Root","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.22830f6e.chunk.js","sourcesContent":["\nexport   enum AuthorityType{\n    \n    admin_asrama = \"admin_asrama\",\n    musyrif_asrama = \"musyrif_asrama\",\n    user = \"user\"\n}\n","import * as types from './types'\r\n\r\nexport const initState = { \r\n    mainApp: undefined\r\n\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case types.SET_MAIN_APP:\r\n              \r\n            return { ...state, mainApp: action.payload }; \r\n       \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","/**\r\n * \r\n */\r\n \r\nexport const REMOVE_SHOP_ENTITY= \"remove_shop_entity\"; \r\nexport const FETCH_PRODUCT_CATEGORIES_ALL = \"all_product_categories\";\r\nexport const DO_LOGIN = \"do_login\";\r\nexport const DO_LOGOUT = \"do_logout\";    \r\nexport const SET_REQUEST_ID = \"SET_REQUEST_ID\"; \r\nexport const STORE_MESSAGE = \"store_message\";\r\nexport const GET_ENTITY_PROPERTY = \"get_entity_config\";\r\nexport const GET_MANAGEMENT_MENUS = \"GET_MANAGEMENT_MENUS\";\r\nexport const GET_MESSAGE = \"GET_MESSAGE\";\r\nexport const SET_MAIN_APP = \"SET_MAIN_APP\"; \r\nexport const GET_ENTITY_BY_ID = \"get_entity_by_id\";\r\nexport const UPDATE_ENTITY = \"update_entity\"; \r\nexport const REFRESH_LOGIN = \"refresh_login\";\r\nexport const GET_LOGGED_USER = \"get_logged_user\";\r\nexport const SET_LOGGED_USER = \"set_logged_user\";\r\nexport const SET_APPLICATION_PROFILE = \"SET_APPLICATION_PROFILE\";","\nexport default class BaseEntity{\n\tid?:any; \n\t \n\n}\n","let index = 1;\r\nexport const uniqueId = function () {\r\n\tlet string = new String(new Date().getUTCMilliseconds()).toString();\r\n\tindex++;\r\n\treturn index + \"-\" + string;\r\n}\r\n\r\nexport function beautifyNominal(val:any) {\r\n\tif (val == \"\" || val == null) return \"0\";\r\n\tconst isDecimal:boolean = new String(val).includes(\".\");\r\n\tconst isNegative:boolean = new String(val).startsWith(\"-\");\r\n\tif (isNegative) {\r\n\t\tval = new String(val).replace(\"-\",\"\");\r\n\t}\r\n\tconst rawVal = isDecimal? parseInt( new String(val).split(\".\")[0]) : parseInt(val);\r\n\tlet nominal = Math.abs(rawVal).toString();\r\n\tlet result = \"\";\r\n\tif (nominal.length > 3) { \r\n\t\tlet zeroIndex: number = 0;\r\n\t\tfor (let i = nominal.length - 1; i > 0; i--) {\r\n\t\t\tzeroIndex++; \r\n\t\t\tresult = nominal[i] + result;\r\n\t\t\tif (zeroIndex == 3 ) {\r\n\t\t\t\tresult = \".\" + result;\r\n\t\t\t\tzeroIndex = 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tresult = nominal[0] + result;\r\n\t} else {\r\n\t\tresult = val;\r\n\t}\r\n\tif (rawVal < 0) {\r\n\t\treturn rawVal;\r\n\t}\r\n\tif (isDecimal) {\r\n\t\tresult+= \",\"+ new String(val).split(\".\")[1];\r\n\t}\r\n\tif (isNegative) {\r\n\t\tresult = \"-\"+result;\r\n\t}\r\n\treturn result;\r\n}\r\n \r\n\r\nconst months = [\r\n\t\"Januari\", \"Ferbuari\", \"Maret\", \"April\", \"Mei\", \"Juni\",\r\n\t\"Juli\", \"Agustus\", \"September\", \"Oktober\", \"November\", \"Desember\"\r\n]\r\n\r\nexport const monthName = (index:number) => {\r\n\treturn months[index];\r\n}\r\n\r\nexport const monthYearString = function (m, y) {\r\n\tif (m == null || y == null) {\r\n\t\treturn \"-\";\r\n\t}\r\n\treturn months[m - 1] + \" \" + y;\r\n}\r\nexport const twoDigits = (value:number) :string => {\r\n    if (value >= 10) {\r\n        return   value.toString();\r\n    }\r\n    return \"0\"+value;\r\n}","import { AuthorityType } from './AuthorityType';\nimport BaseEntity from './BaseEntity';\n\nexport default class User extends BaseEntity{\n\tstatic clone(user: User): User {\n\t\t return Object.assign(new User(), user);\n\t}\n    hasRole(role: AuthorityType): boolean {\n        for (let i = 0; i < this.roles.length; i++) {\n\t\t\tconst element = this.roles[i];\n\t\t\tif (element == role) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n    }\n\tnickname?:string;\n\tname?:string;\n\temail?:string;\n\tpassword?:string;\n\tprofileImage?:string;\n\troles:AuthorityType[] = [AuthorityType.user];\n\trequestId?:string; \n\tnip?:string;\n\n}\n","import BaseEntity from '../BaseEntity'; \nimport { uniqueId } from '../../utils/StringUtil';\nimport { AuthorityType } from '../AuthorityType';\nimport User from './../User';\n\nexport default class Menu extends BaseEntity{\n\tstatic defaultMenuIconClassName:string = \"fas fa-folder\";\n\n\tcode:string = uniqueId();\n\tname?:string;\n\tdescription?:string;\n\turl?:string;\n\tpathVariables?:string; \n\ticonUrl?:string;\n\tcolor?:string;\n\tfontColor?:string;\n\trole:AuthorityType[] = [];\n\n\t//\n\tactive?:boolean = false;\n\tmenuClass?:string = \"fas fa-folder\";\n\tauthenticated?:boolean = false;\n\tshowSidebar?:boolean  = false;\n\tsubMenus?:Menu[] = undefined;\n\n\tstatic getIconClassName = (menu:Menu) => {\n\t\tif (undefined == menu.menuClass) {\n\t\t\treturn Menu.defaultMenuIconClassName;\n\t\t}\n\t\treturn menu.menuClass;\n\t}\n\n\tuserAuthorized? = (user?:User) : boolean => {\n\t\tif (this.role.length == 0) return true;\n\t\tif (!user) return false;\n\t\tuser = User.clone(user);\n\t\tfor (let i = 0; i < this.role.length; i++) {\n\t\t\tconst element = this.role[i];\n\t\t\tif (user.hasRole(element)){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n","\r\nimport { AuthorityType } from '../models/AuthorityType';\r\nimport Menu from '../models/settings/Menu';\r\n \r\n\r\nexport const getMenus = () => {\r\n    let menuSet: Menu[] = [];\r\n    for (let i = 0; i < _menus.length; i++) {\r\n        const element: Menu = _menus[i];\r\n        const menu:Menu = Object.assign(new Menu, element);\r\n        const subMenus:Menu[] = [];\r\n        if (element.subMenus) {\r\n            for (let i = 0; i < element.subMenus.length; i++) {\r\n                const subMenu = element.subMenus[i];\r\n                subMenus.push(Object.assign(new Menu, subMenu));\r\n            }\r\n            menu.subMenus = subMenus;\r\n        }\r\n        menuSet.push(menu);\r\n    }\r\n    \r\n    return menuSet;\r\n}\r\nexport const extractMenuPath = (pathName: string) => {\r\n    const pathRaw = pathName.split('/');\r\n   \r\n    let firstPath = pathRaw[0];\r\n    if (firstPath.trim() == \"\") {\r\n        firstPath = pathRaw[1];\r\n    }\r\n    return firstPath;\r\n}\r\nexport const getMenuByMenuPath = (pathName: string): Menu | null => {\r\n    const menus = getMenus();\r\n    try {\r\n        for (let i = 0; i < menus.length; i++) {\r\n            const menu: Menu = menus[i];\r\n            if (menu.url == \"/\" + pathName) {\r\n                return menu;\r\n            }\r\n        }\r\n        return null;\r\n    } catch (error) {\r\n        return null;\r\n    }\r\n}\r\n\r\nconst _menus: Menu[] = [\r\n    {\r\n        code: 'home',\r\n        name: \"Home\",\r\n        url: \"/home\",\r\n        menuClass: \"fa fa-home\",\r\n        active: false,\r\n        authenticated: false,\r\n        showSidebar: false,\r\n        role : []\r\n    },\r\n    \r\n    {\r\n        code: 'dashboard',\r\n        name: \"Dashboard\",\r\n        url: \"/dashboard\",\r\n        menuClass: \"fas fa-tachometer-alt\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true,\r\n        role: [AuthorityType.admin_asrama, AuthorityType.musyrif_asrama],\r\n        subMenus: [\r\n            {\r\n                code: 'menu1',\r\n                name: 'Menu #1',\r\n                url: 'menu1',\r\n                menuClass: 'fas fa-history',\r\n                role: [AuthorityType.admin_asrama, AuthorityType.musyrif_asrama],\r\n            },\r\n            // {\r\n            //     code: 'dashboard_productsales',\r\n            //     name: 'Product Sales',\r\n            //     url: 'productsales',\r\n            //     menuClass: 'fas fa-chart-line',\r\n            //     role: [],\r\n            // }\r\n        ]\r\n    }, \r\n    {\r\n        code: 'management',\r\n        name: \"Management\",\r\n        url: \"/management\",\r\n        menuClass: \"fas fa-mail-bulk\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true,\r\n        role: [AuthorityType.admin_asrama],\r\n        subMenus: [\r\n            {\r\n                code: 'musyrifmanagement',\r\n                name: 'Musyrif',\r\n                url: 'musyrifmanagement',\r\n                menuClass: 'fas fa-users',\r\n                role: [AuthorityType.admin_asrama],\r\n            },\r\n            {\r\n                code: 'rule_category',\r\n                name: 'Kategori Pelanggaran',\r\n                url: 'rule_category',\r\n                menuClass: 'fas fa-tags',\r\n                role: [AuthorityType.admin_asrama],\r\n            },\r\n            {\r\n                code: 'rule_point',\r\n                name: 'Poin Pelanggaran',\r\n                url: 'rule_point',\r\n                menuClass: 'fas fa-puzzle-piece',\r\n                role: [AuthorityType.admin_asrama],\r\n            },\r\n            // {\r\n            //     code: 'dashboard_productsales',\r\n            //     name: 'Product Sales',\r\n            //     url: 'productsales',\r\n            //     menuClass: 'fas fa-chart-line',\r\n            //     role: [],\r\n            // }\r\n        ]\r\n    }, \r\n    {\r\n        code: 'dormitoryactivity',\r\n        name: \"Asrama\",\r\n        url: \"/dormitoryactivity\",\r\n        menuClass: \"fas fa-school\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true,\r\n        role: [  AuthorityType.musyrif_asrama, AuthorityType.admin_asrama],\r\n        subMenus: [\r\n            {\r\n                code: 'studentlist',\r\n                name: 'Siswa',\r\n                url: 'studentlist',\r\n                menuClass: 'fas fa-users',\r\n                role: [ AuthorityType.musyrif_asrama],\r\n            },\r\n            {\r\n                code: 'input_point',\r\n                name: 'Input Pelanggaran',\r\n                url: 'inputpoint',\r\n                menuClass: 'fas fa-pen-square',\r\n                role: [ AuthorityType.musyrif_asrama],\r\n            }, \r\n            // {\r\n            //     code: 'medicalrecord',\r\n            //     name: 'Medical Record',\r\n            //     url: 'medicalrecord',\r\n            //     menuClass: 'fas fa-briefcase-medical',\r\n            //     role: [ AuthorityType.musyrif_asrama],\r\n            // },\r\n            {\r\n                code: 'pointsummary',\r\n                name: 'Rekap Pelanggaran',\r\n                url: 'pointsummary',\r\n                menuClass: 'fas fa-clipboard',\r\n                role: [ AuthorityType.musyrif_asrama, AuthorityType.admin_asrama],\r\n            },\r\n           \r\n            {\r\n                code: 'pointrecordedit',\r\n                name: 'Edit Pelanggaran',\r\n                url: 'pointrecordedit',\r\n                menuClass: 'fas fa-edit',\r\n                role: [ AuthorityType.musyrif_asrama],\r\n            },\r\n        ]\r\n    }, \r\n    \r\n];\r\n","import * as types from './types'\r\nimport * as menuData from '../constant/Menus' \r\nimport { setLoginKeyCookie } from './../middlewares/Common';\r\n\r\nexport const initState = {\r\n    loginKey: null,\r\n    loginStatus: false,\r\n    loginFailed: false,\r\n    menus: menuData.getMenus(),\r\n    loggedUser: null,\r\n    loginAttempt: false,\r\n    requestId: null,\r\n    applicationProfile: {},\r\n    assetsPath: \"\"\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    \r\n    let result = {};\r\n    switch (action.type) { \r\n        case types.SET_REQUEST_ID:\r\n            \r\n            result = {\r\n                ...state, requestId: action.payload.message,\r\n                applicationProfile: action.payload.profile ?? {},\r\n                assetsPath: action.payload.profile.assetsPath\r\n            };\r\n            \r\n            if (action.payload.loginStatus == true) {\r\n                result.loggedUser = action.payload.user;\r\n                result.loginStatus = true;\r\n            } else {\r\n                result.loginStatus = false;\r\n                result.loggedUser = null;\r\n            }\r\n            // console.debug(\"result\");\r\n            // console.debug(\"action.payload.requestId: \",action.payload.message); \r\n            // console.debug(\"REQUEST_ID result.loginStatus:\", result.loginStatus)\r\n            action.payload.referer.refresh();\r\n\r\n            return result;\r\n        case types.DO_LOGIN:\r\n            result = {\r\n                ...state,\r\n                loginAttempt: true,\r\n                loginStatus: action.payload.loginStatus,\r\n                loginKey: action.payload.loginKey,\r\n                loginFailed: action.payload.loginStatus == false,\r\n                loggedUser: action.payload.loggedUser\r\n            };\r\n            return result;\r\n        case types.DO_LOGOUT:\r\n            result = {\r\n                ...state,\r\n                loginStatus: false,\r\n                loggedUser: null\r\n            };\r\n            setLoginKeyCookie(null);\r\n            return result;\r\n        case types.REFRESH_LOGIN:\r\n            result = {\r\n                ...state,\r\n                loginStatus: action.payload.loginStatus,\r\n                loggedUser: action.payload.loggedUser,\r\n                requestId: action.payload.requestId,\r\n            };\r\n            return result;\r\n        case types.GET_LOGGED_USER:\r\n            result = {\r\n                ...state, loggedUser: action.payload.data\r\n            };\r\n            return result;\r\n        case types.SET_LOGGED_USER:\r\n            result = {\r\n                ...state, loggedUser: action.payload.user\r\n            };\r\n            return result;\r\n        case types.SET_APPLICATION_PROFILE:\r\n            result = {\r\n                ...state, applicationProfile: action.payload.applicationProfile\r\n            };\r\n            return result;\r\n        default:\r\n            return { ...state };\r\n\r\n    }\r\n}\r\n\r\nexport default reducer;","export default class AttachmentInfo {\r\n    setUrl(arg0: string) {\r\n        this.url = arg0;\r\n        this.data = arg0.split(\",\")[1];\r\n    }\r\n    static nameOnly(name: any): AttachmentInfo {\r\n        const info = new AttachmentInfo();\r\n        info.name = name;\r\n        return info;\r\n    }\r\n    static instance(name: any, url:string): AttachmentInfo {\r\n        const info = new AttachmentInfo();\r\n        info.name = name;\r\n        info.url = url;\r\n        return info;\r\n    }\r\n    name: string = \"\";\r\n    blob: Blob = new Blob();\r\n    url: string = \"\";\r\n    data: string = \"\";\r\n}","\r\nimport { commonAuthorizedHeader, commonHeader } from '../middlewares/Common';\r\nimport WebResponse from '../models/commons/WebResponse';\r\nimport { updateAccessToken } from './../middlewares/Common';\r\nimport AttachmentInfo from '../models/settings/AttachmentInfo';\r\n\r\nconst axios = require('axios');\r\n\r\nexport const rejectedPromise = (message: any) => {\r\n    return new Promise((res, rej) => {\r\n        rej(message);\r\n    });\r\n}\r\n\r\nexport const emptyPromise = (defaultResponse: any) => new Promise(function (res, rej) {\r\n    res(defaultResponse);\r\n});\r\n\r\nexport const commonAjaxPostCalls = (endpoint: string, payload?: any) => {\r\n    const request = payload == null ? {} : payload;\r\n    return new Promise<WebResponse>(function (resolve, reject) {\r\n        axios.post(endpoint, request, {\r\n            headers: commonAuthorizedHeader()\r\n        })\r\n            .then(axiosResponse => {\r\n                updateAccessToken(axiosResponse);\r\n                const response: WebResponse = axiosResponse.data;\r\n                response.rawAxiosResponse = axiosResponse;\r\n                if (response.code == \"00\") {\r\n\r\n                    resolve(response);\r\n                }\r\n                else { reject(response); }\r\n            })\r\n            .catch((e: any) => { \r\n                \r\n                console.error(e); \r\n                reject(e); \r\n            });\r\n    })\r\n}\r\n\r\n\r\nexport const commonAjaxPublicPostCalls = (endpoint: string, payload?: any) => {\r\n    const request = payload == null ? {} : payload;\r\n    return new Promise<WebResponse>(function (resolve, reject) {\r\n        axios.post(endpoint, request, {\r\n            headers: commonHeader()\r\n        })\r\n            .then(axiosResponse => {\r\n                \r\n                const response: WebResponse = axiosResponse.data;\r\n                response.rawAxiosResponse = axiosResponse;\r\n                if (response.code == \"00\") {\r\n                    resolve(response);\r\n                }\r\n                else { reject(response); }\r\n            })\r\n            .catch((e: any) => { \r\n                \r\n                console.error(e); \r\n                reject(e); \r\n            });\r\n    })\r\n}\r\n\r\nexport const commonAjaxPostCallsWithBlob = (endpoint: string, payload?: any) => {\r\n    const request = payload == null ? {} : payload;\r\n    return new Promise<AttachmentInfo>(function (resolve, reject) {\r\n        axios.post(endpoint, request, {\r\n            responseType: 'blob' ,\r\n            headers: commonAuthorizedHeader()\r\n        })\r\n            .then(axiosResponse => {\r\n                updateAccessToken(axiosResponse);\r\n                \r\n                const response: any = axiosResponse.data;\r\n                response.rawAxiosResponse = axiosResponse;\r\n                console.debug(\"axiosResponse.headers: \", axiosResponse.headers);\r\n                let contentDisposition = axiosResponse.headers[\"content-disposition\"];\r\n                let fileName = contentDisposition.split(\"filename=\")[1];\r\n                let rawSplit = fileName.split(\".\");\r\n                let extension = rawSplit[rawSplit.length - 1];\r\n                let blob = new Blob([response], { type: extension });\r\n                let url = window.URL.createObjectURL(blob);\r\n                // let a = document.createElement(\"a\");\r\n\r\n                // document.body.appendChild(a);\r\n\r\n                // a.href = url;\r\n                // a.style.display = 'none';\r\n                // a.download = fileName;\r\n                // a.click();\r\n\r\n                // window.URL.revokeObjectURL(url);\r\n                const attachmentInfo:AttachmentInfo = new AttachmentInfo();\r\n                attachmentInfo.name = fileName;\r\n                attachmentInfo.blob = blob;\r\n                attachmentInfo.url = url;\r\n                resolve(attachmentInfo);\r\n                \r\n            })\r\n            .catch((e: any) => { console.error(e); reject(e); });\r\n    })\r\n}","\r\nimport Filter from '../models/commons/Filter';\r\nimport WebRequest from '../models/commons/WebRequest';\r\nimport { contextPath } from './../constant/Url';\r\nimport { commonAjaxPostCalls, commonAjaxPostCallsWithBlob } from './Promises';\r\nimport ApplicationProfile from './../models/ApplicationProfile';\r\n\r\nexport default class MasterDataService { \r\n    private static instance?: MasterDataService;\r\n\r\n    static getInstance(): MasterDataService {\r\n        if (this.instance == null) {\r\n            this.instance = new MasterDataService();\r\n        }\r\n        return this.instance;\r\n    }\r\n    /**\r\n     * Get one by ID\r\n     * @param request \r\n     */\r\n    getOne = (request:WebRequest) => {\r\n        const endpoint: string = contextPath().concat(\"api/masterdata/getbyid\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    delete = (request:WebRequest) => {\r\n        const endpoint: string = contextPath().concat(\"api/masterdata/delete\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    list = (request: WebRequest)  => {\r\n        const endpoint: string = contextPath().concat(\"api/masterdata/list\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n\r\n    }\r\n\r\n    update = (request: WebRequest) => {\r\n        const endpoint: string = contextPath().concat(\"api/masterdata/update\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n   \r\n    updateApplicationProfile = (applicationProfile: ApplicationProfile) => {\r\n        const request: WebRequest = {\r\n            profile: applicationProfile\r\n        }\r\n        const endpoint = contextPath().concat(\"api/app/setting/updateprofile\");\r\n        return commonAjaxPostCalls(endpoint, request)\r\n    }\r\n\r\n    generateReport(request: WebRequest) {\r\n        const endpoint: string = contextPath().concat(\"api/app/report/records\");\r\n        return commonAjaxPostCallsWithBlob(endpoint, request);\r\n\r\n    }\r\n}","\r\nimport User from './../models/User';\r\nimport WebRequest from '../models/commons/WebRequest';\r\nimport { contextPath } from './../constant/Url';\r\nimport { commonAjaxPostCalls, commonAjaxPublicPostCalls } from './Promises';\r\nimport WebResponse from '../models/commons/WebResponse';\r\nimport { updateAccessToken } from './../middlewares/Common';\r\nexport default class UserService {\r\n    private static instance?: UserService;\r\n\r\n    static getInstance(): UserService {\r\n        if (this.instance == null) {\r\n            this.instance = new UserService();\r\n        }\r\n        return this.instance;\r\n    }\r\n    updateProfile = (user: User) => {\r\n\r\n        const request: WebRequest = {\r\n            user: user\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/member/account/updateprofile\")\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    saveUser = (user: User) => {\r\n\r\n        const request: WebRequest = {\r\n            user: user\r\n        } \r\n        const endpoint = contextPath().concat(\"api/public/register\")\r\n        return commonAjaxPublicPostCalls(endpoint, request);\r\n    }\r\n    requestApplicationId = (callbackSuccess: (response: WebResponse) => any, callbackError: ()=>any) => {\r\n        const url = contextPath() + \"api/accountdashboard/requestid\";\r\n        commonAjaxPostCalls(url, {}).then(data => {\r\n            if (data.code != \"00\") {\r\n                alert(\"Error requesting app ID\");\r\n                return;\r\n            }\r\n            const response = data.rawAxiosResponse;\r\n            updateAccessToken(response);\r\n            console.debug(\"response header:\", response.headers['api_token']);\r\n            callbackSuccess(data);\r\n        }).catch(e => {\r\n            console.error(\"ERROR requestApplicationId: \", e);\r\n            callbackError();\r\n        })\r\n\r\n    }\r\n    requestApplicationIdNoAuth = (callbackSuccess: (response:WebResponse)=>any, callbackError: ()=>any) => {\r\n        const url =   contextPath() + \"api/account/requestid\";\r\n        commonAjaxPublicPostCalls(url, {}).then(data => {\r\n          if (data.code != \"00\") {\r\n              alert(\"Error requesting app ID\");\r\n              return;\r\n          } \r\n          callbackSuccess(data);\r\n      }).catch(e=>{\r\n          console.error(\"ERROR requestApplicationId No Auth: \", e);\r\n        //   alert(\"Error, please reload OR try again\");\r\n            callbackError();\r\n      })\r\n          \r\n      }\r\n\r\n}","\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport { contextPath } from './../constant/Url';\r\nimport Filter from '../models/commons/Filter';\r\nimport Employee from '../models/Employee';\r\nimport WebRequest from '../models/commons/WebRequest';\r\nexport default class MusyrifManagementService {\r\n\r\n    private static instance?: MusyrifManagementService;\r\n\r\n    static getInstance(): MusyrifManagementService {\r\n        if (this.instance == null) {\r\n            this.instance = new MusyrifManagementService();\r\n        }\r\n        return this.instance;\r\n    }\r\n    public employeeList(filter: Filter) {\r\n        return commonAjaxPostCalls(contextPath() + \"/api/musyrifmanagement/employees\", {\r\n            filter: filter\r\n        });\r\n    }\r\n    activate(emp: Employee, active: boolean) {\r\n        const request:WebRequest = {\r\n            employee_id : emp.id,\r\n            active : active,\r\n        }\r\n        return commonAjaxPostCalls(contextPath() + \"/api/musyrifmanagement/activate\", request);\r\n    }\r\n}","\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport { contextPath } from '../constant/Url';\r\nimport Filter from '../models/commons/Filter';\r\nimport PointRecord from './../models/PointRecord';\r\nimport AttachmentInfo from './../models/settings/AttachmentInfo';\r\nimport WebRequest from './../models/commons/WebRequest';\r\nimport MedicalRecord from './../models/MedicalRecord';\r\nimport WebResponse from '../models/commons/WebResponse';\r\nexport default class StudentService {\r\n    \r\n\r\n    private static instance?: StudentService;\r\n\r\n    static getInstance(): StudentService {\r\n        if (this.instance == null) {\r\n            this.instance = new StudentService();\r\n        }\r\n        return this.instance;\r\n    }\r\n    public submitPointRecord(pointRecord: PointRecord, attachmentInfo?:AttachmentInfo|undefined) {\r\n        if (attachmentInfo) {\r\n            attachmentInfo.data = \"\";\r\n        }\r\n        const req:WebRequest = {\r\n            pointRecord: pointRecord,\r\n            attachmentInfo: attachmentInfo\r\n        }\r\n        return commonAjaxPostCalls(contextPath() + \"/api/dormitorymanagement/submitpointrecord\", req);\r\n    }\r\n    public getClasses() :Promise<WebResponse> {\r\n        return commonAjaxPostCalls(contextPath() + \"/api/dormitorymanagement/classes\", {});\r\n    }\r\n    public getCategories() :Promise<WebResponse> {\r\n        return commonAjaxPostCalls(contextPath() + \"/api/dormitorymanagement/rulecategories\", {});\r\n    }\r\n\r\n    public submitMedicalRecord = (record:MedicalRecord) => {\r\n        const req:WebRequest = {\r\n            medicalRecord: record\r\n        }\r\n        return commonAjaxPostCalls(contextPath() + \"/api/dormitorymanagement/submitmedicalrecord\", req)\r\n    }\r\n    public loadMonthlyMedicalRecord = (studentId:number, month:number, year:number) => {\r\n        const req:WebRequest = {\r\n            filter: {\r\n                year:year, month:month,\r\n                fieldsFilter: {student_id:studentId}\r\n            }\r\n        }\r\n        return commonAjaxPostCalls(contextPath() + \"/api/dormitorymanagement/monthlymedicalrecord\", req)\r\n    }\r\n\r\n    public setPointDropped = (id: number, dropped: boolean) => {\r\n        return commonAjaxPostCalls(contextPath() + \"/api/dormitorymanagement/droppoint\", { \r\n            pointRecord : {\r\n                id: id,\r\n                dropped_at: dropped?new Date():null\r\n            }\r\n        });\r\n    }\r\n     \r\n}","\r\nimport MasterDataService from '../services/MasterDataService';\r\nimport UserService from '../services/UserService';\r\n\r\nimport Services from './../services/Services';\r\nimport MusyrifManagementService from './../services/MusyrifManagementService';\r\nimport StudentService from '../services/StudentService';\r\n\r\nexport const initState: { services: Services } = {\r\n    services: {\r\n        userService: UserService.getInstance(), \r\n        masterDataService: MasterDataService.getInstance(),\r\n        musyrifManagementService: MusyrifManagementService.getInstance(),\r\n        studentService: StudentService.getInstance(),\r\n    }\r\n\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default reducer;","import * as appReducer from \"./appReducer\"\r\nimport * as userReducer from \"./userReducer\" \r\nimport  * as servicesReducers from './servicesReducer';\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport const rootReducer = combineReducers(\r\n    {\r\n        appState: appReducer.reducer,\r\n        userState: userReducer.reducer, \r\n        servicesState: servicesReducers.reducer\r\n    }\r\n);\r\n\r\nexport const initialState = {\r\n    appState: appReducer.initState,\r\n    userState: userReducer.initState, \r\n    servicesState: servicesReducers.initState\r\n}\r\n\r\nexport default rootReducer;","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\nconst axios = require('axios');\r\nexport const performLoginMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGIN) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n    axios.post(action.meta.url, 'email='+action.meta.email+ '&password='+action.meta.password, {\r\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\r\n    }).then(axiosResponse => {\r\n        const responseJson = axiosResponse.data;\r\n        let loginKey: string = \"\";\r\n        let loginSuccess: boolean = false;\r\n       \r\n        if (responseJson.code != null && responseJson.code == \"00\") {\r\n            loginKey = axiosResponse.headers['api_token'];\r\n            // console.log(\"api_token: \", loginKey);\r\n            loginSuccess = true;\r\n        } else {\r\n        }\r\n        let newAction = Object.assign({}, action, {\r\n            payload: {\r\n                loginStatus: loginSuccess,\r\n                loginKey: loginKey,\r\n                loggedUser: responseJson.user\r\n            }\r\n        });\r\n        common.updateAccessToken(axiosResponse);\r\n        delete newAction.meta;\r\n        store.dispatch(newAction);\r\n    })\r\n        .catch(console.log)\r\n        .finally(() => { app.endLoading(); });\r\n\r\n}\r\n \r\n\r\nexport const getLoggedUserMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_LOGGED_USER) { return next(action); }\r\n\r\n    let headers = common.commonAuthorizedHeader();\r\n\r\n    axios.post(action.meta.url, (action.payload), {\r\n        headers: headers\r\n    }).then(response => {\r\n        const data = response.data;\r\n\r\n        if (!data) {\r\n            alert(\"Error performing request\");\r\n            return;\r\n        }\r\n\r\n        let newAction = Object.assign({}, action, { payload: { data } });\r\n        delete newAction.meta;\r\n        store.dispatch(newAction);\r\n    })\r\n        .catch(console.log).finally(param => {\r\n            action.meta.app.endLoading();\r\n            action.meta.app.refresh();\r\n        });\r\n}\r\n\r\n\r\nexport const performLogoutMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGOUT) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n\r\n    axios.post(action.meta.url, (action.payload), {\r\n        headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => {\r\n            const responseJson = response.data;\r\n            let logoutSuccess = false;\r\n            if (responseJson.code == \"00\") {\r\n                logoutSuccess = true;\r\n            } else {\r\n                alert(\"Logout Failed\");\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    loginStatus: !logoutSuccess\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(console.log).finally(param => app.endLoading());\r\n}\r\n\r\nexport const setLoggedUserMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.SET_LOGGED_USER) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\n\r\nconst POST_METHOD = \"post\"; \r\n\r\nexport const getMessagesMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_MESSAGE) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: common.commonAuthorizedHeader()\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"sendChatMessageMiddleware Response:\", data);\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n \r\nexport const storeChatMessageLocallyMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.STORE_MESSAGE) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n} \r\n\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport { initialState, rootReducer } from './reducers' \r\nimport * as userMiddleware from '../middlewares/UserMiddleware' \r\nimport * as realtimeChatMiddleware from '../middlewares/RealtimeChatMiddleware' \r\n \r\nlet store = null;\r\nexport const getStore = () => {\r\n    return store;\r\n}\r\nexport const configureStore = () => {\r\n    store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        applyMiddleware(   \r\n\r\n            //user related\r\n            userMiddleware.performLoginMiddleware,\r\n            userMiddleware.performLogoutMiddleware,  \r\n            userMiddleware.getLoggedUserMiddleware, \r\n            userMiddleware.setLoggedUserMiddleware,\r\n \r\n\r\n            /*realtime chat*/\r\n            realtimeChatMiddleware.storeChatMessageLocallyMiddleware,\r\n            realtimeChatMiddleware.getMessagesMiddleware,\r\n\r\n        )\r\n    );\r\n\r\n    return store;\r\n}\r\n   \r\n\r\nexport default configureStore;","import {  getStore } from '../redux/configureStore';\r\nexport const commonAuthorizedHeader = () => {\r\n    return {\r\n        'Content-Type': 'application/json',\r\n        'requestId': getRequestId(),//'localStorage.getItem(\"requestId\")',\r\n        'Authorization': 'Bearer '+getLoginKey()\r\n    }\r\n};\r\nexport const commonHeader = () => {\r\n    return {\r\n        'Content-Type': 'application/json',\r\n        'requestId': getRequestId(), \r\n    }\r\n};\r\n\r\nconst LOGIN_KEY:string = \"dormitory-app-login-key-2\";\r\n \r\nexport const getAssetsPath = () :string => {\r\n    const store = getStore(); \r\n    if (null == store) return \"\";\r\n    const state = store.getState();\r\n    return state.userState.assetsPath;\r\n}\r\n\r\nexport const getRequestId = () :string => {\r\n    const store = getStore();\r\n    if (null == store) return \"\";\r\n    const state = store.getState();\r\n    return state.userState.requestId;\r\n}\r\nexport const getLoginKey = () => {\r\n    return getCookie(LOGIN_KEY);\r\n}\r\n\r\nexport const updateAccessToken = (axiosResponse) => {\r\n    if (axiosResponse && axiosResponse.headers && axiosResponse.headers['api_token']) {\r\n        const accessToken = axiosResponse.headers['api_token'];\r\n        // console.debug(\"update access token: \", accessToken);\r\n        setCookie(LOGIN_KEY, accessToken);\r\n    }\r\n} \r\nexport const setLoginKeyCookie = (cookieValue:any) => {\r\n    setCookie(LOGIN_KEY, cookieValue);\r\n}\r\nexport const setCookie = function (cname, cvalue, exdays=1) {\r\n    var d = new Date();\r\n    d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\r\n    var expires = \"expires=\" + d.toUTCString();\r\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n}\r\nexport const getCookie = function (cname) {\r\n    var name = cname + \"=\";\r\n    var decodedCookie = decodeURIComponent(document.cookie);\r\n    var ca = decodedCookie.split(';');\r\n    for (var i = 0; i < ca.length; i++) {\r\n        var c = ca[i];\r\n        while (c.charAt(0) == ' ') {\r\n            c = c.substring(1);\r\n        }\r\n        if (c.indexOf(name) == 0) {\r\n            return c.substring(name.length, c.length);\r\n        }\r\n    }\r\n    return \"\";\r\n}","import { getAssetsPath } from \"../middlewares/Common\";\r\n\r\nconst devMode = \r\n    document.getElementById(\"rootPath\").value == \"${contextPath}\" || \r\n    document.getElementById(\"rootPath\").value == \"\";\r\nconst rootValue = devMode ?\r\n     \"/universal-good-shop/\" : document.getElementById(\"rootPath\").value+\"/\";\r\n\r\nexport const contextPath = function(){\r\n    const contextPath = devMode? \"http://localhost:8080\".concat(rootValue):rootValue;\r\n    //console.debug(\"contextPath: \",contextPath,document.getElementById(\"rootPath\").value);\r\n    return contextPath;\r\n}\r\n\r\n// export const baseImageUrl() = contextPath()+\"assets/images/\"; \r\n// export const baseImageUrl() = \"https://developmentmode.000webhostapp.com/uploaded_storage/\"; \r\n// export const baseImageUrl() = \"http://localhost/storage/images/\"; \r\nexport const baseImageUrl = () => getAssetsPath()+ \"images/\"; \r\nexport const baseDocumentUrl = () => getAssetsPath()+ \"documents/\"; \r\n// export const baseImageUrl() = contextPath()+\"WebAsset/Shop1/Images/\"; \r\n\r\nexport const POST = \"post\";\r\n","import * as types from './types'\r\nimport * as url from '../constant/Url'\r\nimport { contextPath } from '../constant/Url'; \r\nimport User from './../models/User';\r\nimport ApplicationProfile from './../models/ApplicationProfile';\r\nimport WebResponse from '../models/commons/WebResponse';\r\n\r\nconst usedHost = url.contextPath();\r\nconst apiBaseUrl = usedHost + \"api/public/\"\r\nconst apiEntityBaseUrl = usedHost + \"api/app/entity/\"\r\nconst apiAccount = usedHost + \"api/accountdashboard/\"\r\nconst apiAdmin = usedHost + \"api/app/admin/\"    \r\n\r\nexport const getEntityProperty = (entityName, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_PROPERTY,\r\n        payload: {\r\n            entity: entityName\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_PROPERTY,\r\n            url: apiEntityBaseUrl.concat(\"config\"),\r\n            app: app,\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\n\r\nexport const getManagementMenus = (app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_MANAGEMENT_MENUS,\r\n        payload: {},\r\n        meta: {\r\n            type: types.GET_MANAGEMENT_MENUS,\r\n            url: apiEntityBaseUrl.concat(\"managementpages\"),\r\n            app: app,\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n \r\n\r\nexport const setRequestId = (data:WebResponse, app) => {\r\n   \r\n    const ret= {\r\n        type: types.SET_REQUEST_ID,\r\n        payload: { loginStatus: data.loggedIn, referer:app, ...data },\r\n        meta: {\r\n            type: types.SET_REQUEST_ID, \r\n        }\r\n    };\r\n    // console.debug(\"setRequestId: \", ret);\r\n    return ret;\r\n}\r\n\r\nexport const getMessageList = (app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.GET_MESSAGE,\r\n        payload: {},\r\n        meta: {\r\n            type: types.GET_MESSAGE, app: app,\r\n            url: apiAdmin.concat(\"getmessages\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const storeMessageLocally = (messages) => {\r\n\r\n    return {\r\n        type: types.STORE_MESSAGE,\r\n        payload: {\r\n            entities: messages\r\n        },\r\n        meta: {\r\n            type: types.STORE_MESSAGE,\r\n        }\r\n    };\r\n}\r\n    \r\n\r\nexport const performLogout = (app) => {\r\n    app.startLoading();\r\n    let loginRequest = {\r\n        type: types.DO_LOGOUT,\r\n        payload: {},\r\n        meta: { app: app, type: types.DO_LOGOUT, url: apiAccount.concat(\"logout\") }\r\n    };\r\n    return loginRequest;\r\n}\r\n\r\nexport const performLogin = (email, password, app) => {\r\n    app.startLoading();\r\n    let loginRequest = {\r\n        type: types.DO_LOGIN,\r\n        payload: {},\r\n        meta: {\r\n            type: types.DO_LOGIN, \r\n            url: contextPath().concat(\"api/account/login\"),\r\n                email: email, password: password,\r\n                app: app\r\n        }\r\n    };\r\n    return loginRequest;\r\n}\r\n\r\nexport const getLoggedUser = (app) => {\r\n    app.startLoading();\r\n    let request = {\r\n        type: types.GET_LOGGED_USER,\r\n        payload: {},\r\n        meta: { type: types.GET_LOGGED_USER, url: apiAccount.concat(\"user\"), app: app }\r\n    };\r\n    return request;\r\n}\r\n\r\nexport const setLoggedUser = (user: User) => {\r\n\r\n    let request = {\r\n        type: types.SET_LOGGED_USER,\r\n        payload: { user: Object.assign(new User(), user) },\r\n        meta: { type: types.SET_LOGGED_USER }\r\n    };\r\n    return request;\r\n}\r\n\r\nexport const setApplicationProfile = (applicationProfile: ApplicationProfile) => {\r\n\r\n    let request = {\r\n        type: types.SET_APPLICATION_PROFILE,\r\n        payload: { applicationProfile: applicationProfile },\r\n        meta: { type: types.SET_APPLICATION_PROFILE }\r\n    };\r\n    return request;\r\n}\r\n\r\nexport const removeEntity = () => ({\r\n    type: types.REMOVE_SHOP_ENTITY,\r\n    payload: {},\r\n    meta: { type: types.REMOVE_SHOP_ENTITY }\r\n})\r\n\r\n\r\nexport const  setMainApp = (mainApp:any) => ({\r\n    type: types.SET_MAIN_APP,\r\n    payload: mainApp,\r\n    meta: { type: types.SET_MAIN_APP }\r\n})\r\n\r\n","\r\nexport const mapCommonUserStateToProps = (state) => {\r\n    return {\r\n        applicationProfile: state.userState.applicationProfile,\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n        requestId: state.userState.requestId, \r\n        services: state.servicesState.services,\r\n        mainApp: state.appState.mainApp\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport './Loader.css'\r\n\r\nclass Loader extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            timer: 130,\r\n            intervalId: 0\r\n        }\r\n        this.update = () => {\r\n            if (this.state.timer < 0) {\r\n                clearInterval(this.state.intervalId);\r\n            }\r\n            console.log(\"tick\")\r\n            this.setState({ timer: this.state.timer - 1 })\r\n            if (this.state.timer < 0 && this.props.endMessage) {\r\n                this.props.endMessage();\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.withTimer == true) {\r\n            let intervalId = setInterval(this.update, 1, null);\r\n            this.setState({ intervalId: intervalId });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let className = \"message message-\" + this.props.type;\r\n\r\n        if (this.props.realtime == true) {\r\n            return <LoaderContent progress={this.props.progress} realtime={this.props.realtime} />\r\n        }\r\n\r\n        return (\r\n            <div className={className} >\r\n                <LoaderContent progress={this.props.progress} realtime={this.props.realtime} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nfunction LoaderContent(props) {\r\n    if (props.realtime) {\r\n        return (\r\n            <div className=\"row container-fluid bg-light\" style={{margin:0, position: 'fixed', zIndex: 100 }}>\r\n                <div className=\"col-1\">\r\n                <span style={{marginBottom:'3px'}} className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                </div>\r\n                <div className=\"col-11 progress\" style={{padding:0, marginTop: '7px', height:'10px'}}  >\r\n                    <div className=\"bg-primary\" style={{\r\n                        width: props.progress + \"%\",\r\n                        transitionDuration: '50ms',\r\n                        margin: 0,\r\n                    }}>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <button className=\"btn btn-dark \" type=\"button\" disabled>\r\n            <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n            <span className=\" \">Loading...</span>\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Loader;","\r\nimport ApplicationProfile from './../models/ApplicationProfile';\r\nimport { baseImageUrl } from './../constant/Url';\r\nexport const doItLater = (callback:()=>any, intervalMs:number) => {\r\n    const timeout = setTimeout(()=>{\r\n       callback();\r\n        clearTimeout(timeout);\r\n      }, intervalMs)\r\n}\r\n\r\n\r\nexport const  updateFavicon = (profile: ApplicationProfile) => {\r\n    if (profile.pageIcon) {\r\n      let link = document.querySelector('link[rel=\"shortcut icon\"]') ||\r\n        document.querySelector('link[rel=\"icon\"]');\r\n      if (!link) {\r\n        link = document.createElement('link');\r\n        link.id = 'favicon';\r\n        link.setAttribute(\"rel\", 'shortcut icon');\r\n        document.head.appendChild(link);\r\n      }\r\n      link.setAttribute(\"href\", baseImageUrl() + profile.pageIcon);\r\n    }\r\n  }","import React, { Component } from 'react'\r\nimport { doItLater } from './../../utils/EventUtil';\r\nconst initialMargin = '-200px';\r\nconst transitionDuration = '200ms';\r\nclass State {\r\n    backColor  = 'transparent';\r\n    marginTop = initialMargin;\r\n}\r\nclass Alert extends Component  {\r\n    yesButtonRef;\r\n    noButtonRef;\r\n    state  = new State();\r\n    constructor(props) {\r\n        super(props);\r\n        this.yesButtonRef = React.createRef();\r\n        this.noButtonRef = React.createRef();\r\n    }\r\n    onYes = (e) => {\r\n        \r\n        this.close(()=>{\r\n            if (this.props.onYes) {\r\n                this.props.onYes(e);\r\n            }\r\n        });\r\n    }\r\n    close = (callback)=> {\r\n        doItLater(()=>{\r\n            this.setState({backColor:'transparent', marginTop: initialMargin}, ()=>{\r\n                doItLater(callback, 100);\r\n                \r\n            });\r\n        }, 100);\r\n    }\r\n    onNo = (e) => {\r\n        \r\n        this.close(()=>{\r\n            if (this.props.onNo) {\r\n                this.props.onNo(e);\r\n            }\r\n        });\r\n    }\r\n    onClose = (e) => {\r\n       \r\n        this.close(()=>{\r\n            if (this.props.onClose) {\r\n                this.props.onClose(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        const isError = this.props.isError == true;\r\n        if (!isError && this.yesButtonRef.current) {\r\n            this.yesButtonRef.current.focus();\r\n        } else if (isError && this.noButtonRef.current) {\r\n            this.noButtonRef.current.focus();\r\n        } else if (isError && this.yesButtonRef.current) {\r\n            this.yesButtonRef.current.focus();\r\n        }\r\n\r\n        doItLater(()=>{\r\n            this.setState({backColor:'rgba(100,100,100,0.7)', marginTop:'30vh'})\r\n        }, 100);\r\n    }\r\n\r\n    render() {\r\n        const title = this.props.title ? this.props.title : \"Info\";\r\n        const yesOnly = this.props.yesOnly == true;\r\n        const isError = this.props.isError == true;\r\n        const headerClassName = isError ? 'bg-danger' : 'bg-info';\r\n        const headerFontClassName = 'text-light';\r\n        return (\r\n            <>\r\n                <Backdrop bgColor={this.state.backColor} />\r\n                <div className=\"modal show\" style={{ display: 'block' }}  >\r\n                    <div className=\"modal-dialog -modal-dialog-centered\" \r\n                        style={{\r\n                            transitionDuration:  transitionDuration,\r\n                            marginTop: this.state.marginTop\r\n                        }}\r\n                    >\r\n                        <div className=\"modal-content\" style={{marginTop:'5px',}} >\r\n                            <Header fontClassName={headerFontClassName} className={headerClassName} title={title} onClose={this.onClose} />\r\n                            <div className=\"modal-body\" > {this.props.children} </div>\r\n                            <Footer noButtonRef={this.noButtonRef} yesButtonRef={this.yesButtonRef} yesOnly={yesOnly} onYes={this.onYes} onNo={this.onNo} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction Backdrop(props ) {\r\n    return (\r\n        <div className=\"modal-backdrop\" style={{ transitionDuration:transitionDuration, backgroundColor: props.bgColor }\r\n        } > </div>\r\n    );\r\n}\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <div className={\"modal-footer \" + props.className} >\r\n            <button ref={props.yesButtonRef} type=\"button\"\r\n                onClick={props.onYes} className=\"btn btn-outline-primary\" > Yes </button>\r\n            {props.yesOnly ? \r\n                null : \r\n                <button ref={props.noButtonRef} type=\"button\"\r\n                    onClick={props.onNo} className=\"btn btn-outline-secondary\" > No \r\n                </button>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Header(props) {\r\n    return (<div className={\"modal-header \" + props.className} >\r\n        <h5 className={\"modal-title \" + props.fontClassName} id=\"exampleModalCenterTitle\" > {props.title} </h5>\r\n        < button onClick={props.onClose} type=\"button\" className=\"close\" >\r\n            <span aria-hidden=\"true\" className={props.fontClassName} > <i className=\"fas fa-times\" /> </span>\r\n        </button>\r\n    </div>)\r\n}\r\n\r\nexport default Alert;","import BaseEntity from './BaseEntity';\n\nexport default class ApplicationProfile extends BaseEntity{\n\tname?:string;\n\tcode?:string;\n\tdescription?:string;\n\tabout?:string;\n\twelcoming_message?:string;\n\ticonUrl?:string;\n\tpageIcon?:string;\n\tbackgroundUrl?:string;\n\tcolor?:string;\n\tfontColor?:string;\n\tcontact?:string;\n\taddress?:string;\n\n}\n","import { doItLater } from './EventUtil';\r\nlet stompClient = undefined;\r\nlet wsConnected = false;\r\nlet websocketUrl = undefined;\r\nconst onConnectCallbacks = new Array();\r\nconst subscriptionCallbacks = new Array();\r\nexport const isWsConnected = () => {\r\n\treturn wsConnected == true;\r\n}\r\nexport const setWebSocketUrl = (url) => {\r\n\twebsocketUrl = url;\r\n}\r\nexport const sendToWebsocket = (url, requestObject) => {\r\n\tif (!wsConnected || !stompClient) {\r\n\t\tconsole.info(\"Connecting\");\r\n\t\treturn false;\r\n\t}\r\n\tconsole.debug(\"SEND WEBSOCKET\")\r\n\tstompClient.send(url, {}, JSON.stringify(requestObject));\r\n\treturn true;\r\n}\r\n\r\nexport const addOnWsConnectCallbacks = (...callbacks) => {\r\n\tfor (let i = 0; i < callbacks.length; i++) {\r\n\t\tconst element = callbacks[i];\r\n\t\tonConnectCallbacks.push(element);\r\n\t}\r\n}\r\n\r\nexport const performWebsocketConnection = () => {\r\n\r\n\treturn;\r\n\tvar socket = new window.SockJS(websocketUrl);\r\n\tstompClient  = window.Stomp.over(socket);\r\n\tstompClient .connect({}, function (frame) {\r\n\t\twsConnected = true;\r\n\t\t// setConnected(true);\r\n\t\tconsole.log('Websocket CONNECTED: ', websocketUrl, 'frame :', frame, stompClient.ws._transport.ws.url);\r\n\t\tconsole.debug(\"subscriptionCallbacks :\", subscriptionCallbacks.length);\r\n\t\t// document.getElementById(\"ws-info\").innerHTML =\r\n\t\t// stompClients.ws._transport.ws.url;\r\n\t\tfor (let i = 0; i < subscriptionCallbacks.length; i++) {\r\n\t\t\tconst callBackObject = subscriptionCallbacks[i];\r\n\r\n\t\t\tif (callBackObject) {\r\n\r\n\t\t\t\tstompClient.subscribe(callBackObject.subscribeUrl, (response) => {\r\n\t\t\t\t\tvar respObject = JSON.parse(response.body);\r\n\t\t\t\t\tcallBackObject.callback(respObject);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < onConnectCallbacks.length; i++) {\r\n\t\t\tconst callback = onConnectCallbacks[i];\r\n\t\t\tcallback(frame);\r\n\t\t}\r\n\r\n\t}, (e) => {\r\n\t\tconsole.warn(\"Error connection websocket, reconnect\");\r\n\t\tdoItLater(performWebsocketConnection, 2000);\r\n\t});\r\n\r\n\t \r\n}\r\n\r\n /**\r\n  * \r\n  * @param  {...WsCallback} callBackObjects \r\n  */\r\nexport const registerWebSocketCallbacks = (...callBackObjects) => {\r\n\r\n\tif (null == callBackObjects) {\r\n\t\treturn;\r\n\t}\r\n\tfor (var i = 0; i < callBackObjects.length; i++) {\r\n\t\tsubscriptionCallbacks.push(callBackObjects[i]);\r\n\t}\r\n}\r\n","import { Component } from 'react';\r\nimport WebResponse from '../models/commons/WebResponse';\r\nimport ApplicationProfile from './../models/ApplicationProfile';\r\nimport User from './../models/User';\r\nimport Services from './../services/Services';\r\nimport { AuthorityType } from '../models/AuthorityType';\r\nimport WebRequest from '../models/commons/WebRequest';\r\nimport { sendToWebsocket } from './../utils/websockets';\r\nimport { doItLater } from './../utils/EventUtil';\r\n\r\nexport default class BaseComponent extends Component<any, any> {\r\n    parentApp: any;\r\n    authenticated: boolean = true;\r\n    state: any = { updated: new Date() };\r\n    constructor(props: any, authenticated = false) {\r\n        super(props);\r\n\r\n        this.authenticated = authenticated\r\n        this.parentApp = props.mainApp;\r\n    }\r\n\r\n    validateLoginStatus = (callback ?:() => any) => {\r\n        if (this.authenticated == false) { \r\n            if (callback) {\r\n                callback();\r\n            }\r\n            return true; }\r\n        if (this.isUserLoggedIn() == false) {\r\n            this.backToLogin();\r\n            return false;\r\n        }\r\n        if (callback) {\r\n            callback();\r\n        }\r\n        return true;\r\n    }\r\n\r\n    protected sendWebSocket = (url: string, payload: WebRequest) => {\r\n        sendToWebsocket(url, payload);\r\n    }\r\n\r\n    protected setWsUpdateHandler = (handler: Function | undefined) => {\r\n        if (this.parentApp) {\r\n            this.parentApp.setWsUpdateHandler(handler);\r\n        }\r\n    }\r\n    protected resetWsUpdateHandler = () => {\r\n        if (this.parentApp) {\r\n            this.parentApp.resetWsUpdateHandler();\r\n        }\r\n    }\r\n\r\n    getApplicationProfile = (): ApplicationProfile => {\r\n        return this.props.applicationProfile == null ? new ApplicationProfile() : this.props.applicationProfile;\r\n    }\r\n\r\n    handleInputChange = (event: any) => {\r\n        const target = event.target;\r\n        const value = target.type == 'checkbox' ? target.checked : target.value;\r\n        this.setState({ [target.name]: value });\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n     * @param {boolean} withProgress \r\n     */\r\n    startLoading(withProgress: boolean) {\r\n        this.parentApp.startLoading(withProgress);\r\n    }\r\n\r\n    endLoading() {\r\n        this.parentApp.endLoading();\r\n    }\r\n    /**\r\n     * api response must be instance of WebResponse\r\n     * @param method returning Promise\r\n     * @param withProgress \r\n     * @param successCallback \r\n     * @param errorCallback \r\n     * @param params \r\n     */\r\n    doAjax = (method: Function, withProgress: boolean, successCallback: Function, errorCallback?: Function, ...params: any) => {\r\n        this.startLoading(withProgress);\r\n        \r\n        method(...params).then( (response: WebResponse) => {\r\n            if (successCallback) {\r\n                successCallback(response);\r\n            }\r\n        }).catch( (e) => {\r\n            if (errorCallback) {\r\n                errorCallback(e);\r\n            } else {\r\n                if (typeof (e) == 'string') {\r\n                    alert(\"Operation Failed: \" + e);\r\n                }\r\n                alert(\"resource not found\");\r\n            }\r\n        }).finally(() => {\r\n            this.endLoading();\r\n        })\r\n    }\r\n\r\n    commonAjax = (method: Function, successCallback: Function, errorCallback: Function, ...params: any) => {\r\n        this.doAjax(method, false, successCallback, errorCallback, ...params);\r\n    }\r\n    commonAjaxWithProgress = (method: Function, successCallback: Function, errorCallback: Function, ...params: any) => {\r\n        this.doAjax(method, true, successCallback, errorCallback, ...params);\r\n    }\r\n    getLoggedUser = (): User | undefined => {\r\n        const user: User | undefined = this.props.loggedUser;\r\n        if (!user) return undefined;\r\n        user.password = \"^_^\";\r\n        return Object.assign(new User(), user);\r\n    }\r\n    isAdmin = (): boolean => {\r\n        const user = this.getLoggedUser();\r\n        if (!user) return false;\r\n        return user.hasRole(AuthorityType.admin_asrama);\r\n    }\r\n    scrollTop = () => {\r\n        // console.info(\"SCROLL TOP\");\r\n        const opt:ScrollToOptions = { top:0,  behavior: 'smooth' };\r\n        doItLater(()=>{\r\n        window.scrollTo(opt);\r\n        }, 100);\r\n    }\r\n    isUserLoggedIn = (): boolean => {\r\n        const loggedIn = true == this.props.loginStatus && null != this.props.loggedUser;\r\n        return loggedIn;\r\n    }\r\n    showConfirmation = (body: any): Promise<boolean> => {\r\n        const app = this;\r\n        return new Promise(function (resolve, reject) {\r\n            const onYes = function (e) {\r\n                resolve(true);\r\n            }\r\n            const onNo = function (e) {\r\n                resolve(false);\r\n            }\r\n            app.parentApp.showAlert(\"Konfirmasi\", body, false, onYes, onNo);\r\n        });\r\n\r\n    }\r\n    showConfirmationDanger = (body: any): Promise<any> => {\r\n        const app = this;\r\n        return new Promise(function (resolve, reject) {\r\n            const onYes = function (e) {\r\n                resolve(true);\r\n            }\r\n            const onNo = function (e) {\r\n                resolve(false);\r\n            }\r\n            app.parentApp.showAlertError(\"Konfirmasi\", body, false, onYes, onNo);\r\n        });\r\n\r\n    }\r\n    showInfo = (body: any) => {\r\n        this.parentApp.showAlert(\"Info\", body, true, function () { });\r\n    }\r\n    showError = (body: any) => {\r\n\r\n        this.parentApp.showAlertError(\"Error\", body, true, function () { });\r\n    }\r\n\r\n    backToLogin() {\r\n        if (!this.authenticated || this.props.history == null) {\r\n            return;\r\n        }\r\n        this.props.history.push(\"/login\");\r\n    }\r\n    refresh() {\r\n        this.setState({ updated: new Date() });\r\n    }\r\n\r\n    showCommonErrorAlert = (e: any) => {\r\n        console.error(e);\r\n\r\n        let message;\r\n        if (e.response && e.response.data) {\r\n            message = e.response.data.message;\r\n        } else {\r\n            message = e;\r\n        }\r\n        this.showError(\"Operasi Gagal: \" + message);\r\n    }\r\n    componentDidMount() {\r\n        if (this.validateLoginStatus()) {\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.authenticated == true && this.isUserLoggedIn() == false) {\r\n            console.debug(typeof this, \"BACK TO LOGIN\");\r\n            this.validateLoginStatus();\r\n        }\r\n    }\r\n\r\n    getServices = (): Services => {\r\n        return this.props.services;\r\n    }\r\n}","\r\nimport React, { useRef, Fragment } from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../constant/stores';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { performLogout } from './../../redux/actionCreators';\r\nimport { getMenus } from '../../constant/Menus';\r\nimport './Header.css';\r\nimport User from './../../models/User';\r\nimport { baseImageUrl } from './../../constant/Url';\r\nimport Menu from './../../models/settings/Menu';\r\nclass IState {\r\n    showNavLinks: boolean = false;\r\n}\r\nclass Header extends BaseComponent {\r\n    state: IState = new IState();\r\n    buttonToggleNavRef: React.RefObject<HTMLButtonElement> = React.createRef();\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    toggleNavLinks = () => {\r\n        this.setState({ showNavLinks: !this.state.showNavLinks });\r\n    }\r\n    onLogout = (e: any) => {\r\n        const app = this;\r\n        app.showConfirmation(\"Logout?\").then(\r\n            function (ok) {\r\n                if (ok) {\r\n                    app.props.performLogout(app.parentApp);\r\n                }\r\n            }\r\n        )\r\n    }\r\n    setMenu = (menu: Menu) => {\r\n        if (this.state.showNavLinks && this.buttonToggleNavRef.current) {\r\n            this.buttonToggleNavRef.current.click();\r\n        }\r\n        this.props.setMenu(menu);\r\n\r\n    }\r\n    render() {\r\n        const showNavLinks: boolean = this.state.showNavLinks;\r\n        const menus = getMenus();\r\n        const user = this.getLoggedUser();\r\n        return (\r\n            <div className=\"bg-dark container-fluid\" style={{ position: 'fixed', zIndex: 55, padding: 0, margin: 0 }}>\r\n                <NavBarTop label={this.getApplicationProfile().name} />\r\n                <nav id=\"navbar\" className=\"navbar navbar-expand-lg navbar-dark bg-dark\" style={{ width: '100%' }}>\r\n                    {/* <div className=\"container-fluid\"></div> */}\r\n                    <a id=\"navbar-brand\" className=\"navbar-brand\" href=\"#\">{this.getApplicationProfile().name}</a>\r\n                    <button ref={this.buttonToggleNavRef} onClick={this.toggleNavLinks} className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target=\"#navbarToggler\" aria-controls=\"navbarToggler\"\r\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <i className={showNavLinks ? \"fas fa-times\" : \"fas fa-bars\"} />\r\n                    </button>\r\n                    <div className={\"collapse navbar-collapse\"} id=\"navbarToggler\">\r\n                        <ul id=\"navbar-top\" className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n                            {menus.map(menu => {\r\n                                if (menu == null || (menu.authenticated && !user)) return null;\r\n                                if (menu.userAuthorized && menu.userAuthorized(user) == false) return null;\r\n                                const isActive = this.props.activeMenuCode == menu.code;\r\n                                return (\r\n                                    <li key={\"header-menu-\" + new String(menu.code)} className={\"nav-item \" + (isActive ? \"active nav-active\" : \"nav-inactive\")}>\r\n                                        <Link onClick={() => this.setMenu(menu)} className={\"nav-link  \"}\r\n                                            to={menu.url}><span>{menu.name}</span>\r\n                                        </Link></li>\r\n                                )\r\n                            })}\r\n                        </ul >\r\n                        <form className=\"form-inline my-2 my-lg-0\">\r\n                            <UserIcon setMenuNull={this.props.setMenuNull}\r\n                                onLogout={this.onLogout} user={user} />\r\n                        </form >\r\n                    </div >\r\n                </nav >\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst NavBarTop = (props) => {\r\n    return (\r\n        <div id=\"navbar-brand-top\" style={{ paddingLeft: '0.5rem' }} className=\"container-fluid\">\r\n            <a style={{ fontSize: '15px' }} className=\"text-white navbar-brand\" href=\"#\">\r\n                <strong>{props.label}</strong>\r\n            </a>\r\n        </div>\r\n    );\r\n}\r\nconst UserIcon = (props: { user: User | undefined, setMenuNull(): any, onLogout(e): any }) => {\r\n    if (props.user) {\r\n        return (\r\n            <Fragment>\r\n                <Link onClick={props.setMenuNull} style={{ marginRight: \"5px\" }} className=\"btn btn-light btn-sm my-2 my-sm-0\"\r\n                    to='/settings/user-profile'>\r\n                    <i className=\"fas fa-user-circle\"/>\r\n                        &nbsp;{props.user.name}\r\n                </Link>\r\n                <a style={{ marginRight: '5px' }} className=\"btn btn-danger btn-sm  my-2 my-sm-0\"\r\n                    onClick={props.onLogout}><i className=\"fas fa-sign-out-alt\"></i>&nbsp;Logout\r\n\t\t\t\t</a>\r\n            </Fragment>);\r\n    }\r\n    return (\r\n\r\n        <Link style={{ marginRight: '5px' }} onClick={props.setMenuNull} className=\"btn btn-sm btn-info my-2 my-sm-0\"\r\n            to='/login'> <i className=\"fas fa-sign-in-alt\"></i>&nbsp;Login\r\n        </Link>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    performLogout: (app: any) => dispatch(performLogout(app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(Header))","\r\nimport React, { Component } from 'react';\r\nimport './Spinner.css';\r\nexport default class Spinner extends Component<any, any>{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const innerDivs:JSX.Element[] = new Array<JSX.Element>();\r\n        for (let i = 0; i <= 11; i++) {\r\n            innerDivs.push(<div key={\"spinner-item-\"+i}></div>);\r\n        }\r\n        return (\r\n            <div style={{width:'85px', height:'85px', display:'block'}} className=\"container-fluid text-center\" >\r\n                 <div style={{visibility:this.props.show == false?'hidden':'visible'}} className=\"lds-spinner\">\r\n                  {innerDivs}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","\r\n\r\nimport React, { RefObject, Component, FormEvent, Fragment, ChangeEvent } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport './Login.css';\r\nimport { performLogin } from '../../../redux/actionCreators';\r\nimport Spinner from './../../loader/Spinner';\r\nimport AnchorWithIcon from './../../navigation/AnchorWithIcon';\r\nclass IState {\r\n    loading: boolean = false; email: string = \"\"; editPassword: string = \"\";\r\n}\r\nclass Login extends BaseComponent {\r\n    state: IState = new IState();\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    startLoading = () => this.setState({ loading: true });\r\n    endLoading = () => this.setState({ loading: false });\r\n    login(e: FormEvent) {\r\n        e.preventDefault();\r\n        this.props.performLogin(this.state.email, this.state.editPassword, this);\r\n    }\r\n    componentDidMount() {\r\n        document.title = \"Login\";\r\n        if (this.isUserLoggedIn()) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n\r\n        if (this.isUserLoggedIn()) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n    updateCredentialProperty = (e: ChangeEvent) => {\r\n        const target = e.target as HTMLInputElement;\r\n        const name: string | null = target.getAttribute(\"name\");\r\n        if (null == name) return;\r\n        this.setState({ [name]: target.value });\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"Login\" style={{ marginTop: '20px' }} >\r\n                <form name='login' onSubmit={(e) => { this.login(e) }}\r\n                    method='POST' className=\"form-signin\">\r\n                    <div className=\"text-center\">\r\n                        <h2><i className=\"fas fa-user-circle\"></i></h2>\r\n                        <h1 className=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\r\n                    </div>\r\n                    <EmailField value={this.state.email} onChange={this.updateCredentialProperty} />\r\n                    <PasswordField value={this.state.editPassword} onChange={this.updateCredentialProperty} />\r\n                    {this.state.loading ? <Spinner /> :\r\n\r\n                        <Fragment>\r\n                            <button className=\"btn text-light\" style={{ marginRight: '5px', backgroundColor: 'rgb(9,26,78)' }} type=\"submit\">\r\n                                Sign in\r\n                            </button>\r\n                            {/* <AnchorWithIcon className=\"btn btn-light border border-dark \" to=\"register\" children=\"Register\" /> */}\r\n                        </Fragment>}\r\n                    <input name=\"transport_type\" type=\"hidden\" value=\"rest\" />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst PasswordField = ({ value, onChange }) => {\r\n    return <Fragment>\r\n        <label className=\"sr-only\">Password</label>\r\n        <input name=\"editPassword\" value={value} onChange={onChange} type=\"password\" id=\"inputPassword\" className=\"form-control\"\r\n            placeholder=\"Password\" required />\r\n    </Fragment>\r\n}\r\nconst EmailField = ({ value, onChange }) => {\r\n    return (<Fragment>\r\n        <label className=\"sr-only\">Email</label>\r\n        <input name=\"email\" value={value} onChange={onChange} type=\"text\"  className=\"form-control\"\r\n            placeholder=\"Email\" required autoFocus />\r\n    </Fragment>)\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    performLogin: (username: string, password: string, app: any) => dispatch(performLogin(username, password, app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(Login))","\nimport BaseComponent from './../BaseComponent';\nexport default class BasePage extends BaseComponent{\n    constructor(props, protected title:string | undefined|null= undefined, authenticated:boolean = false) {\n        super(props, authenticated);\n        if (title !== undefined && title !== null) {\n            document.title = title;\n        } else {\n            document.title = \"Asrama KIIS\";\n        }\n    }\n\n    componentDidMount() {\n        this.validateLoginStatus(()=>{\n            this.scrollTop();\n            this.componentReady();\n        })\n    }\n\n    protected componentReady() {\n\n    }\n    // componentWillUnmount() {\n    //     document.title = \"Asrama KIIS\";\n    // }\n}","import AttachmentInfo from '../models/settings/AttachmentInfo';\r\n \r\n  \r\nexport const getAttachmentInfoFromFile = (fileInput:HTMLInputElement): Promise<AttachmentInfo> => {\r\n    return new Promise<AttachmentInfo>((resolve, reject) =>{\r\n        if (null == fileInput.files || !fileInput.files[0]) {\r\n            reject(new Error(\"No file\"));\r\n            return;\r\n        }\r\n        try { \r\n            const file:File = fileInput.files[0]; \r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            console.debug(\"fileInput.files[0]: \", file);\r\n            reader.onload = function () { \r\n                const info:AttachmentInfo = new AttachmentInfo();\r\n                info.setUrl(new String(reader.result).toString());\r\n                // info.\r\n                info.name = file.name;\r\n                resolve(info);\r\n             }\r\n            reader.onerror = function (error) {\r\n                reject(error);\r\n            }\r\n        } catch (e) {\r\n            reject(e);\r\n        }\r\n    });\r\n\r\n}\r\n \r\n\r\n/**\r\n * \r\n * @param {Number} totalButton \r\n * @param {Number} currentPage \r\n */\r\nexport const createNavButtons = (totalButton, currentPage) => {\r\n    totalButton = Math.ceil(totalButton);\r\n    if (!currentPage) { currentPage = 0 }\r\n    let buttonData = new Array();\r\n    let min = currentPage - 3 < 0 ? 0 : currentPage - 3;\r\n    let max = currentPage + 3 > totalButton ? totalButton : currentPage + 3;\r\n\r\n    if (min != 0) {\r\n        buttonData.push({\r\n            text: 1,\r\n            value: 0\r\n        });\r\n    }\r\n\r\n    for (let index = min; index < max; index++) {\r\n        buttonData.push({\r\n            text: index + 1,\r\n            value: index\r\n        });\r\n    }\r\n\r\n    if (max != totalButton) {\r\n        buttonData.push({\r\n            text: totalButton,\r\n            value: totalButton - 1\r\n        });\r\n    }\r\n\r\n\r\n    return buttonData;\r\n}\r\n\r\n ","\r\n\r\nimport React, { ChangeEvent, FormEvent } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../../constant/stores'; \r\nimport User from './../../../../models/User';\r\nimport BasePage from './../../BasePage';\r\nimport AttachmentInfo from './../../../../models/settings/AttachmentInfo';\r\nimport { getAttachmentInfoFromFile } from './../../../../utils/ComponentUtil';\r\n\r\nclass State {\r\n    attachment:AttachmentInfo | undefined;\r\n}\r\nclass DashboardMain extends BasePage {\r\n    state:State = new State();\r\n    constructor(props: any) {\r\n        super(props, \"Dashboard\", true);\r\n    }\r\n\r\n    addPointRecord = (e:FormEvent) => {\r\n        e.preventDefault();\r\n        if (!this.state.attachment) return;\r\n        \r\n        this.props.history.push({\r\n            pathname: '/dormitoryactivity/pointrecordedit',\r\n              state: {attachment: this.state.attachment }\r\n         })\r\n    }\r\n    updateImage = (e:ChangeEvent) => {\r\n        getAttachmentInfoFromFile(e.target as HTMLInputElement) \r\n            .then(attachment=>{\r\n                this.setState({attachment:attachment});\r\n            }).catch(console.error)\r\n    }\r\n    render() {\r\n        const user: User | undefined = this.getLoggedUser();\r\n        if (!user) return null;\r\n        return (\r\n            <div  className=\" section-body container-fluid\">\r\n                <h2>Dashboard</h2>\r\n                <div className=\"alert alert-info\">\r\n                    Welcome, <strong>{user.name}  </strong>\r\n                    <hr/>\r\n                    {/* <p className=\"badge badge-dark text-capitalize\">{(user.roles).join(\", \")}</p> */}\r\n                   \r\n                </div>\r\n                <form className=\"mt-10 text-center\" onSubmit={this.addPointRecord}>\r\n                    <h1><i className=\"fas fa-camera\" /></h1>\r\n                    <h3> Input Pelanggaran</h3>\r\n                    <input onChange={this.updateImage} type=\"file\" accept=\"image/*\" className=\"form-control mt-3\" />\r\n                    <p/>\r\n                    {this.state.attachment?\r\n                    <div>\r\n                        <input type=\"submit\" className=\"btn btn-dark btn-large\" value=\"Selanjutnya\" />\r\n                        <img className=\"w-100 mt-5\" src={this.state.attachment.url}/>\r\n                        \r\n                    </div>\r\n                    : null}\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps\r\n)(DashboardMain))","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from '../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport ApplicationProfile from '../../../models/ApplicationProfile';\r\nimport { baseImageUrl } from '../../../constant/Url';\r\n\r\nclass HomeMain extends BaseComponent {\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Home\";\r\n    }\r\n    render() {\r\n        const applicationProfile: ApplicationProfile = this.getApplicationProfile();\r\n        const imageUrl: string = baseImageUrl() + applicationProfile.backgroundUrl;\r\n        return (\r\n            <div className=\"section-body container-fluid\" style={{padding:0}}>\r\n                <div className=\"jumbotron\"\r\n                    style={{\r\n                        margin:'0px',\r\n                        marginTop: '20px',\r\n                        backgroundImage: 'url(\"' + imageUrl + '\")',\r\n                        backgroundSize: 'cover',\r\n                        color: applicationProfile.fontColor??\"rgb(0,0,0)\"\r\n                    }}\r\n                >\r\n                    <h1 className=\"display-4\">{applicationProfile.name}</h1>\r\n                    <p className=\"lead\">{applicationProfile.description}</p>\r\n                    <hr className=\"my-4\" />\r\n                    <p>{applicationProfile.welcoming_message}</p>\r\n                    <Link className=\"btn btn-primary btn-lg\" to=\"/about\" role=\"button\">About Us</Link>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n} \r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps, \r\n)(HomeMain))","import React from 'react'\r\nimport { uniqueId } from './StringUtil';\r\nexport const tableHeader = (...values:string[]) => {\r\n   \r\n    return (<thead>\r\n        <tr>\r\n            {values.map((value)=>{\r\n\r\n                return <th key={uniqueId()}>{value}</th>\r\n            })}\r\n        </tr>\r\n    </thead>)\r\n}\r\nexport const groupArray = function (array, division) {\r\n    if (null == array || array.length == 0) { return [] }\r\n    const groupedArray = new Array();\r\n    const itemPerDivision = Math.ceil(array.length / division)\r\n\r\n    if (itemPerDivision == 1) {\r\n        groupedArray.push(array);\r\n        return groupedArray;\r\n    }\r\n\r\n    for (let i = 0; i < division; i++) {\r\n        groupedArray.push(new Array());\r\n    }\r\n\r\n    let index = 1;\r\n    let divisionIndex = 0;\r\n    for (let i = 0; i < array.length; i++) {\r\n        const element = array[i];\r\n        groupedArray[divisionIndex].push(element);\r\n\r\n        index++;\r\n        if (index > itemPerDivision) {\r\n            divisionIndex++;\r\n            index = 1;\r\n        }\r\n    }\r\n\r\n    return groupedArray;\r\n}\r\n","\nexport default class Filter{\n    static withLimit = (arg0: number): Filter => {\n\t\tconst f =new Filter();\n\t\tf.limit = arg0;\n        return f;\n    }\n\tlimit? :number = 5; \n\tpage? :number = 0;\n\torderType?:string;\n\torderBy?:string;\n\tcontains?:boolean; \n\texacts?:boolean;\n\tday?:number;\n\tyear?:number;\n\tmonth?:number;\n\tmodule?:string;\n\tfieldsFilter:Record<string, any> = {};\n\tdayTo?:number;\n\tmonthTo?:number;\n\tyearTo?:number;\n\tmaxValue?:number;\n\tavailabilityCheck?:boolean;\n\t\n\t//\n\tuseExistingFilterPage?:boolean = false; \n\n}\n","\r\nimport React, { Component } from 'react';\r\ninterface Props {\r\n    orientation?:string,\r\n    show?:boolean,\r\n    children:any,\r\n    label?:any,\r\n    className?:string,\r\n}\r\nexport default class FormGroup extends Component<Props, any>\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        if (false == this.props.show) return null;\r\n        const orientation = this.props.orientation == 'vertical' ? 'vertical' : 'horizontal';\r\n        return (\r\n            <div className={`form-group ${this.props.className} ` + (orientation == 'vertical' ? '' : 'row')}>\r\n                <label className={(orientation == 'vertical' ? '' : 'col-sm-3')}><strong>{this.props.label ? this.props.label : null}</strong></label>\r\n                <div className={(orientation == 'vertical' ? '' : 'col-sm-9')}>\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nimport { uniqueId } from './../../utils/StringUtil';\r\ninterface IProps {\r\n    limit: number,\r\n    totalData: number,\r\n    activePage: number,\r\n    onClick: any\r\n}\r\nexport default class NavigationButtons extends Component<IProps, any> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        const buttonIndexes = generateButtonValues(this.props.limit, this.props.totalData, this.props.activePage);\r\n        if (buttonIndexes.length == 0) { return null }\r\n        const lastIndex = buttonIndexes[buttonIndexes.length - 1];\r\n        const nextPage = this.props.activePage + 1 >= lastIndex  ? 0 : this.props.activePage + 1;\r\n        const previusPage = this.props.activePage - 1 < 0? lastIndex-1 : this.props.activePage - 1;\r\n        return (<div>\r\n            <nav aria-label=\"Page navigation example\">\r\n                <ul className=\"pagination\">\r\n                    <li className=\"page-item\"><a className=\"page-link\" onClick={(e) => this.props.onClick(previusPage)}>Previous</a></li>\r\n                    {buttonIndexes.map((page, i) => {\r\n                        return <li key={\"NAV-\"+uniqueId()} className={\"page-item \"+(page-1 == this.props.activePage?\"active\":\"\")}><a className=\"page-link \" onClick={(e) => this.props.onClick(page - 1)} >{page}</a></li>\r\n                    })}\r\n                    <li className=\"page-item\"><a className=\"page-link\" onClick={(e) => this.props.onClick(nextPage)}>Next</a></li>\r\n                </ul>\r\n            </nav>\r\n        </div>)\r\n    }\r\n}\r\n\r\nconst generateButtonValues = (limit: number, totalData: number, currentPage: number) => {\r\n\r\n    /* DISPLAYED BUTTONS */\r\n    const displayed_buttons: number[] = [];\r\n    const buttonCount = Math.ceil(totalData / limit);\r\n\r\n    // console.debug(\"current page:\", currentPage);\r\n    const min = (currentPage) - 1;\r\n    const max = (currentPage) + 3;\r\n    // const min = (currentPage) - 2;\r\n    // const max = (currentPage) + 2;\r\n\r\n    // console.debug(\"min\", min, \"current page:\", currentPage, \"max\", max);\r\n    if (buttonCount > 1) {\r\n        displayed_buttons.push(1);\r\n    }\r\n    for (let i = min; i <= max; i++) {\r\n        if (i > 1 && i <= buttonCount) {\r\n            (displayed_buttons.push(i));\r\n        }\r\n    }\r\n    if (max < buttonCount) {\r\n        displayed_buttons.push(buttonCount);\r\n    }\r\n    return displayed_buttons;\r\n}\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\ninterface IProps{\r\n    show?:boolean, attributes?:any, iconClassName?:string, to?:string, className?:string,\r\n    style?:any, onClick?(e:any):any, children?:any\r\n}\r\nexport default class AnchorWithIcon extends Component<IProps, any>\r\n{\r\n    constructor(props: any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        if (this.props.show == false) return null;\r\n        const btnClassName = this.props.className ?? \"btn btn-outline-secondary\";\r\n        if (this.props.to) {\r\n            return <Link {...this.props.attributes} to={this.props.to} style={this.props.style} onClick={this.props.onClick} className={btnClassName} >\r\n                {this.props.iconClassName ?\r\n                    <span style={{ marginRight: this.props.children?'5px':'0px' }}><i className={this.props.iconClassName} /></span>\r\n                    :\r\n                    null}\r\n                {this.props.children}\r\n            </Link>\r\n        }\r\n        return (\r\n            <a {...this.props.attributes} tyle={this.props.style} onClick={this.props.onClick} className={btnClassName} >\r\n                {this.props.iconClassName ?\r\n                    <span style={{ marginRight: this.props.children?'5px':'0px' }}><i className={this.props.iconClassName} /></span>\r\n                    :\r\n                    null}\r\n                {this.props.children}\r\n            </a>\r\n        )\r\n    }\r\n}","\r\nimport BaseComponent from './../../BaseComponent';\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport Employee from './../../../models/Employee';\r\nimport { AuthorityType } from '../../../models/AuthorityType';\r\nimport MusyrifManagementService from './../../../services/MusyrifManagementService';\r\nimport ToggleButton from './../../navigation/ToggleButton';\r\nimport WebResponse from '../../../models/commons/WebResponse';\r\nimport AnchorWithIcon from './../../navigation/AnchorWithIcon';\r\nclass EmployeeRow extends BaseComponent {\r\n    musyrifManagementService: MusyrifManagementService;\r\n    constructor(props) {\r\n        super(props, true);\r\n        this.musyrifManagementService = this.getServices().musyrifManagementService;\r\n    }\r\n\r\n    getEmployee = (): Employee => {\r\n        return this.props.employee;\r\n    }\r\n    activeStatusUpdate = (response: WebResponse) => {\r\n        // this.showInfo(\"Success\");\r\n        if (this.props.onUpdated) {\r\n            this.props.onUpdated();\r\n        }\r\n    }\r\n    activateMusyrif = (active: boolean) => {\r\n        const emp = this.getEmployee();\r\n        this.commonAjax(\r\n            this.musyrifManagementService.activate,\r\n            this.activeStatusUpdate,\r\n            this.showCommonErrorAlert,\r\n            emp, active);\r\n\r\n    }\r\n    render() {\r\n        const props = this.props;\r\n        const emp = this.getEmployee();\r\n        const isMusyrif = emp.user?.hasRole(AuthorityType.musyrif_asrama);\r\n        return (\r\n            <tr key={emp.id} >\r\n                <td>{props.startingNumber + 1}</td>\r\n                <td>{emp.user?.name}</td>\r\n                <td>{emp.user?.email}</td>\r\n                <td>{emp.user?.nip}</td>\r\n                <td><i className={isMusyrif ? \"fas fa-check text-success\" : \"fas fa-times\"} /></td>\r\n                <td> {isMusyrif == true ?\r\n                    <AnchorWithIcon className=\"btn btn-danger btn-sm\" onClick={(e) => this.activateMusyrif(false)} >\r\n                        Nonaktifkan\r\n                    </AnchorWithIcon> :\r\n                    <AnchorWithIcon className=\"btn btn-success btn-sm\" onClick={(e) => this.activateMusyrif(true)} >\r\n                        Jadikan musyrif\r\n                    </AnchorWithIcon>\r\n                }\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps\r\n)(EmployeeRow))","\r\nimport React, { Component } from 'react';\r\ninterface IProps {\r\n    show?:boolean;\r\n    className?:string;\r\n    style?:any;\r\n    onClick?:any;\r\n    iconClassName?:string;\r\n    attributes?:any;\r\n}\r\nexport default class AnchorButton extends Component<IProps, any>\r\n{\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        if (this.props.show == false) return null;\r\n        const btnClassName = this.props.className??\"btn btn-outline-secondary\";\r\n        return (\r\n            <a style={this.props.style} {...this.props.attributes} onClick={this.props.onClick} className={btnClassName} >\r\n                {this.props.iconClassName?\r\n                <span style={this.props.children?{marginRight:'5px'}:{}}><i className={this.props.iconClassName}/></span>\r\n                :\r\n                null}\r\n                {this.props.children}\r\n            </a>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport AnchorButton from './AnchorButton';\r\ninterface Props {\r\n    onClick(val:boolean):void,\r\n    active:boolean,\r\n    yesLabel?:string,\r\n    noLabel?:string\r\n}\r\nexport default class ToggleButton extends Component<Props, any>{\r\n    \r\n    render() {\r\n        const props = this.props;\r\n        const active = this.props.active;\r\n        return (\r\n            <div className=\"btn-group\">\r\n                <AnchorButton className={\"btn  btn-sm \" + (active ? \"btn-dark\" : \"btn-outline-dark\")} onClick={(e) => this.props.onClick(true)} >\r\n                    {props.yesLabel??\"Yes\"}</AnchorButton>\r\n                <AnchorButton className={\"btn  btn-sm \" + (active == false ? \"btn-dark\" : \"btn-outline-dark\")} onClick={(e) => this.props.onClick(false)}  >\r\n                    {props.noLabel??\"No\"}</AnchorButton>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}","import React, { ChangeEvent } from 'react'\r\nimport BaseComponent from './../../BaseComponent';\r\nimport Modal from './../../container/Modal';\r\nimport MasterDataService from './../../../services/MasterDataService';\r\nimport WebResponse from '../../../models/commons/WebResponse';\r\nimport WebRequest from '../../../models/commons/WebRequest';\r\nimport BasePage from './../BasePage';\r\nimport './Management.css'\r\nexport default class BaseManagementPage extends BasePage {\r\n    protected masterDataService: MasterDataService;\r\n    protected modelName: string = \"undefined\";\r\n    protected formRef: React.RefObject<Modal> = React.createRef(); \r\n\r\n\r\n    constructor(props, modelName?: string, protected overrideLoading: boolean = false) {\r\n        super(props, \"Asrama KIIS\", true);\r\n        if (modelName) {\r\n            this.modelName = modelName;\r\n        }\r\n        this.masterDataService = this.getServices().masterDataService;\r\n         \r\n    }\r\n    startLoading = (withProgress: boolean = false) => {\r\n        if (this.overrideLoading) {\r\n            this.setState({ loading: true });\r\n        } else {\r\n            super.startLoading(withProgress);\r\n        }\r\n    }\r\n    endLoading = () => {\r\n        if (this.overrideLoading) {\r\n            this.setState({ loading: false });\r\n        } else {\r\n            super.endLoading();\r\n        }\r\n    }\r\n    loadItems = () => {\r\n        const request: WebRequest = {\r\n            filter: this.state.filter,\r\n            modelName: this.modelName\r\n        }\r\n        this.commonAjax(\r\n            this.masterDataService.list,\r\n            this.itemsLoaded,\r\n            this.showCommonErrorAlert,\r\n            request\r\n        )\r\n    }\r\n    itemsLoaded = (response: WebResponse) => {\r\n        this.setState({ items: response.items, totalData: response.totalData });\r\n    }\r\n    emptyRecord = (): any => {\r\n        throw new Error(\"Not Implemented\");\r\n    }\r\n    updateFilter = (e: ChangeEvent) => {\r\n        const filter = this.state.filter;\r\n        const target = (e.target as any);\r\n\r\n        if (!target.value || target.value == \"\") {\r\n            return;\r\n        }\r\n\r\n        let value:any;\r\n        if (target.type == 'number' || (target.dataset && target.dataset['type'] == 'number')) {\r\n            value = parseInt(target.value);\r\n        } else {\r\n            value = target.value;\r\n        }\r\n        filter[target.name] = value;\r\n        this.setState({ filter: filter })\r\n    }\r\n    updateFieldsFilter = (e: ChangeEvent) => {\r\n        const filter = this.state.filter;\r\n        const target = (e.target as any);\r\n        if (!filter.fieldsFilter) {\r\n            filter.fieldsFilter = {};\r\n        }\r\n        filter.fieldsFilter[target.name] = target.value;\r\n        this.setState({ filter: filter })\r\n    }\r\n    loadAtPage = (page: number) => {\r\n        const filter = this.state.filter;\r\n        filter.page = page;\r\n        this.setState({ filter: filter }, this.loadItems);\r\n    }\r\n    updateRecordProp = (e: ChangeEvent) => {\r\n        const target = e.target as any;\r\n        const dataset = target.dataset;\r\n        let value:any;\r\n        if (dataset['type'] && dataset['type'] == 'boolean') {\r\n            value = target.value == \"true\" ? true : false;\r\n        } else {\r\n            value =  target.value;\r\n        }\r\n        const record = this.state.record;\r\n        record[target.name] = value;\r\n        this.setState({ record: record });\r\n    }\r\n    resetForm = (callback?: () => any) => {\r\n        this.setState({ record: this.emptyRecord() }, callback);\r\n    }\r\n    oneRecordLoaded =  (item: any) => {\r\n        this.setState({ record: item }, () => {\r\n            if (this.formRef.current) {\r\n                this.formRef.current.showModal();\r\n            }\r\n            this.scrollTop();\r\n        });\r\n    }\r\n    componentDidMount() {\r\n        super.componentDidMount();\r\n        this.scrollTop();\r\n        this.loadItems();\r\n    }\r\n    recordUpdated = (response: WebResponse) => {\r\n        this.resetForm(() => {\r\n            if (this.formRef.current) {\r\n                this.formRef.current.hideModal();\r\n            }\r\n            this.showInfo(\"Success Update\");\r\n            this.loadItems();\r\n        });\r\n    }\r\n    protected callApiSubmit = (request: WebRequest) => {\r\n        this.commonAjax(\r\n            this.masterDataService.update,\r\n            this.recordUpdated,\r\n            this.showCommonErrorAlert,\r\n            request\r\n        )\r\n    }\r\n\r\n    reload = (e:any) => {\r\n        if (e) {\r\n            e.preventDefault();\r\n        }\r\n        this.loadAtPage(0);\r\n    }\r\n}","import React, { ChangeEvent } from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport Employee from './../../../models/Employee';\r\nimport { tableHeader } from './../../../utils/CollectionUtil';\r\nimport Filter from '../../../models/commons/Filter'; \r\nimport FormGroup from './../../form/FormGroup';\r\nimport NavigationButtons from './../../navigation/NavigationButtons';\r\nimport EmployeeRow from './EmployeeRow';\r\nimport User from '../../../models/User';\r\nimport ToggleButton from './../../navigation/ToggleButton';\r\nimport BaseManagementPage from './BaseManagementPage';\r\nclass State {\r\n    items:Employee[] = [];\r\n    filter:Filter = new Filter();\r\n    totalData:number = 0;\r\n}\r\nclass MusyrifManagement extends BaseManagementPage{\r\n    state:State = new State();\r\n    constructor(props) {\r\n        super(props, 'employee');\r\n        this.state.filter.limit = 10;\r\n        this.state.filter.fieldsFilter = {\r\n            'musyrif_only':true\r\n        }\r\n    }\r\n    setMusyrifOnly = (musyrifOnly:boolean) => {\r\n        const filter = this.state.filter;\r\n        if (!filter.fieldsFilter) {\r\n            filter.fieldsFilter = {};\r\n        }\r\n        filter.fieldsFilter['musyrif_only'] = musyrifOnly;\r\n        this.setState({filter: filter}, ()=> this.loadAtPage(0))\r\n    }\r\n    onEmployeeStatusUpdate = () => {\r\n        this.loadItems();\r\n    }\r\n    render() {\r\n        const filter = this.state.filter;\r\n        const musyrifOnly :boolean = filter.fieldsFilter && filter.fieldsFilter['musyrif_only']&&filter.fieldsFilter['musyrif_only'] == true;\r\n        return (\r\n            <div  className=\"section-body container-fluid\">\r\n                <h2>Musyrif</h2>\r\n                <hr/>\r\n               \r\n                <form onSubmit={this.reload}>\r\n                    <FormGroup label=\"Cari\">\r\n                        <input name=\"name\" placeholder=\"Nama atau email\" className=\"form-control-sm\" value={filter.fieldsFilter?filter.fieldsFilter['name']:\"\"} onChange={this.updateFieldsFilter} />\r\n                    </FormGroup>\r\n                    <FormGroup label=\"Jumlah Tampilan\">\r\n                        <input name=\"limit\" type=\"number\" className=\"form-control-sm\" value={filter.limit??5} onChange={this.updateFilter} />\r\n                    </FormGroup>\r\n                    <FormGroup label=\"Opsi\">\r\n                        <ToggleButton active={musyrifOnly} onClick={this.setMusyrifOnly} noLabel=\"Semua pegawai\" yesLabel=\"Hanya musyrif\" />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <input className=\"btn btn-primary btn-sm\" type=\"submit\" value=\"Submit\"/>\r\n                    </FormGroup>\r\n                </form>\r\n                <NavigationButtons activePage={filter.page??0} limit={filter.limit??5} totalData={this.state.totalData}\r\n                    onClick={this.loadAtPage} />\r\n                <EmployeeList onUpdated={this.onEmployeeStatusUpdate} startingNumber={(filter.page??0) *( filter.limit?? 5)} items={this.state.items} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst EmployeeList = (props:{onUpdated:()=>void,startingNumber:number, items:Employee[]}) => {\r\n    const items = props.items;\r\n    return (\r\n        <div className=\"container-fluid\" style={{overflow:'scroll'}}>\r\n        <table className=\"table table-striped\" >\r\n            {tableHeader(\"No\", \"Nama\", \"Email\", \"NIP\", \"Role: Musyrif\", \"Opsi\")}\r\n            <tbody>\r\n                {items.map((emp,i)=>{\r\n                    if (emp.user) {\r\n                        emp.user = User.clone(emp.user);\r\n                    }\r\n                    return (\r\n                        <EmployeeRow onUpdated={props.onUpdated} employee={emp} startingNumber={props.startingNumber+i} key={emp.id} />\r\n                    )\r\n                })}\r\n            </tbody>\r\n        </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(\r\n    connect(\r\n        mapCommonUserStateToProps\r\n    )(MusyrifManagement)\r\n)","import React from 'react'\r\nimport BaseComponent from './../../BaseComponent';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport BasePage from './../BasePage';\r\nclass ManagementMain extends BasePage\r\n{\r\n    constructor(props) {\r\n        super(props, \"Management\", true);\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container-fluid section-body\">\r\n                <h2>Halaman Manajemen</h2>\r\n                <div className=\"alert alert-info\">\r\n                    Welcome, <strong>{this.getLoggedUser()?.name}</strong>\r\n                    <hr/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(\r\n    connect(\r\n        mapCommonUserStateToProps\r\n    )(ManagementMain)\r\n)","\r\nimport BaseEntity from './BaseEntity';\r\nimport RulePoint from './RulePoint';\r\nexport default class Category extends BaseEntity\r\n{\r\n    name?:string;\r\n    description?:string;\r\n\r\n    points:RulePoint[] | undefined;\r\n}","\r\nimport React, { Component } from 'react';\r\nimport AnchorButton from '../navigation/AnchorButton';\r\nclass IState {\r\n    show:boolean = true\r\n}\r\ninterface IProps {\r\n    toggleable?:boolean, show?:boolean, title?:string, style?:any, footerContent?:any,showFooter?:boolean\r\n}\r\nexport default class Modal extends Component<IProps, IState> {\r\n    state:IState = new IState();\r\n    constructor(props: any) {\r\n        super(props);\r\n    }\r\n    hideModal = () => {\r\n        this.setState({show:false});\r\n    }\r\n    showModal = () => {\r\n        this.setState({show:true});\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.show == false) { this.setState({show:false}); }\r\n    }\r\n    render() {\r\n    //    if (this.props.show == false) { return null; }\r\n        const title = this.props.title?? \"Title\"; \r\n        if (this.props.toggleable == true && this.state.show == false) {\r\n            return (\r\n                <AnchorButton style={{marginBottom:'10px'}} onClick={this.showModal} iconClassName=\"fas fa-angle-down\" >Show {title}</AnchorButton>\r\n            )\r\n        }\r\n        const props = (({ style, show, footerContent, toggleable, ...props }) => props)(this.props) // remove b and c\r\n        return (\r\n            <div {...props} className=\"modal-content \" style={{...this.props.style, marginBottom:'10px'}}>\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">{title}</h5>\r\n                    {this.props.toggleable?\r\n                    <button type=\"button\" className=\"btn btn-sm\" onClick={this.hideModal} aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\">\r\n                            <i className='fas fa-times'/>\r\n                        </span>\r\n                    </button>\r\n                    :\r\n                    null}\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    {this.props.children}\r\n                </div>\r\n                {this.props.footerContent || this.props.showFooter == true?\r\n                <div className=\"modal-footer\">\r\n                    {this.props.footerContent}\r\n                </div>\r\n                :null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React from 'react'\r\nimport BaseComponent from './../../BaseComponent';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport AnchorWithIcon from './../../navigation/AnchorWithIcon';\r\nimport BaseEntity from './../../../models/BaseEntity';\r\nimport MasterDataService from './../../../services/MasterDataService';\r\nimport WebRequest from '../../../models/commons/WebRequest';\r\nimport WebResponse from '../../../models/commons/WebResponse'; \r\nclass EditDeleteButton extends BaseComponent\r\n{\r\n    masterDataService:MasterDataService;\r\n    constructor(props) {\r\n        super(props, true);\r\n        this.masterDataService = this.getServices().masterDataService;\r\n    }\r\n\r\n    get modelName  () : string   {\r\n        return this.props.modelName;\r\n    }\r\n    getRecord = () : BaseEntity => {\r\n        const rec = this.props.record;\r\n        if (!rec) {\r\n            alert(\"this.props.record undefined\");\r\n            return {};\r\n        }\r\n        return rec;\r\n    }\r\n    recordLoaded = (response:WebResponse) => {\r\n        if (this.props.recordLoaded) {\r\n            this.props.recordLoaded(response.item);\r\n        }\r\n    }\r\n    recordLoadedForDetail = (response:WebResponse) => {\r\n        if (this.props.recordLoadedForDetail) {\r\n            this.props.recordLoadedForDetail(response.item);\r\n        }\r\n    }\r\n    recordDeleted = (response:WebResponse) => {\r\n        this.showInfo(\"Record has been deleted\");\r\n        if (this.props.recordDeleted) {\r\n            this.props.recordDeleted(response.item);\r\n        }\r\n    }\r\n    get loadRecordRequest():WebRequest {\r\n        const req :WebRequest = {\r\n            record_id : this.getRecord().id,\r\n            modelName : this.modelName\r\n        }\r\n        return req;\r\n    }\r\n    loadRecord = () => {\r\n        \r\n        this.commonAjax(\r\n            this.masterDataService.getOne,\r\n            this.recordLoaded,\r\n            this.showCommonErrorAlert,\r\n            this.loadRecordRequest\r\n        )\r\n    }\r\n    loadRecordForDetail = () => {\r\n\r\n        this.commonAjax(\r\n            this.masterDataService.getOne,\r\n            this.recordLoadedForDetail,\r\n            this.showCommonErrorAlert,\r\n            this.loadRecordRequest\r\n        )\r\n    }\r\n    deleteRecord = () => {\r\n        this.showConfirmationDanger(\"Delete record?\")\r\n        .then(ok=>{\r\n            if (!ok) return;\r\n            this.commonAjax(\r\n                this.masterDataService.delete,\r\n                this.recordDeleted,\r\n                this.showCommonErrorAlert,\r\n                this.loadRecordRequest\r\n            )\r\n        })\r\n    }\r\n    hasType = (type:string):boolean => {\r\n        if (!this.props.types) return false;\r\n        return  (this.props.types as string[]).indexOf(type) >= 0;\r\n    }\r\n    render() {\r\n        const types:string[] | undefined = this.props.types ?? undefined;\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {types === undefined || this.hasType('detail') ?\r\n                    <AnchorWithIcon onClick={this.loadRecordForDetail} iconClassName=\"fas fa-info-circle\" className=\"btn btn-info btn-sm\"/>\r\n                    :\r\n                    null}\r\n                {types === undefined || this.hasType('edit') ?\r\n                    <AnchorWithIcon onClick={this.loadRecord} iconClassName=\"fas fa-edit\" className=\"btn btn-warning btn-sm\"/>\r\n                    :\r\n                    null}\r\n                {types === undefined || this.hasType('delete') ?\r\n                    <AnchorWithIcon onClick={this.deleteRecord} iconClassName=\"fas fa-times\" className=\"btn btn-danger btn-sm\"/>\r\n                    :\r\n                    null}\r\n               \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(\r\n    connect(\r\n        mapCommonUserStateToProps\r\n    )(EditDeleteButton)\r\n)","\r\nimport React, { ChangeEvent } from 'react'\r\nimport BaseComponent from './../../BaseComponent';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport Filter from '../../../models/commons/Filter';\r\nimport Category from './../../../models/Category';\r\nimport WebRequest from '../../../models/commons/WebRequest';\r\nimport FormGroup from './../../form/FormGroup';\r\nimport NavigationButtons from './../../navigation/NavigationButtons';\r\nimport Modal from './../../container/Modal';\r\nimport EditDeleteButton from './EditDeleteButton'\r\nimport { tableHeader } from './../../../utils/CollectionUtil';\r\nimport BaseManagementPage from './BaseManagementPage';\r\nclass State {\r\n    items: Category[] = [];\r\n    filter: Filter = new Filter();\r\n    totalData: number = 0;\r\n    record: Category = new Category();\r\n\r\n}\r\nclass CategoryManagement extends BaseManagementPage {\r\n    state: State = new State();\r\n    constructor(props) {\r\n        super(props, 'category');\r\n        this.state.filter.limit = 10;\r\n    }\r\n    \r\n    onSubmit = () => {\r\n        // console.debug(\"RECORD: \", this.state.record);\r\n        this.showConfirmation(\"Submit Data?\")\r\n            .then(ok => {\r\n                if (!ok) return;\r\n\r\n                const request: WebRequest = {\r\n                    category: this.state.record,\r\n                    modelName: this.modelName\r\n                }\r\n                this.callApiSubmit(request);\r\n            })\r\n    }\r\n    \r\n    emptyRecord = ():any => {\r\n        return new Category();\r\n    }\r\n    render() {\r\n        const filter: Filter = this.state.filter;\r\n        return (\r\n            <div className=\"container-fluid section-body\">\r\n                <h2>Kategori Pelanggaran</h2>\r\n                <hr />\r\n                <RecordForm formRef={this.formRef} resetForm={this.resetForm} onSubmit={this.onSubmit} record={this.state.record} updateRecordProp={this.updateRecordProp} />\r\n                <form onSubmit={this.reload}>\r\n                    <FormGroup label=\"Cari\">\r\n                        <input name=\"name\" placeholder=\"nama\" className=\"form-control-sm\" value={filter.fieldsFilter ? filter.fieldsFilter['name'] : \"\"} onChange={this.updateFieldsFilter} />\r\n                    </FormGroup>\r\n                    <FormGroup label=\"Jumlah Tampilan\">\r\n                        <input name=\"limit\" type=\"number\" className=\"form-control-sm\" value={filter.limit ?? 5} onChange={this.updateFilter} />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <input className=\"btn btn-primary btn-sm\" type=\"submit\" value=\"Submit\" />\r\n                    </FormGroup>\r\n                </form>\r\n                <NavigationButtons activePage={filter.page ?? 0} limit={filter.limit ?? 5} totalData={this.state.totalData}\r\n                    onClick={this.loadAtPage} />\r\n                <ItemsList \r\n                    recordLoaded={this.oneRecordLoaded}\r\n                    recordDeleted={this.loadItems}\r\n                    startingNumber={(filter.page??0)*(filter.limit??10)} items={this.state.items} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst ItemsList = (props: {startingNumber:number, items:Category[], recordLoaded(item:any), recordDeleted()}) => {\r\n\r\n    return (\r\n        <div style={{overflow:'scroll'}}>\r\n        <table className=\"table table-striped\">\r\n            {tableHeader(\"No\", \"Nama\", \"Deskripsi\", \"Opsi\")}\r\n            <tbody>\r\n                    {props.items.map((item, i)=>{\r\n\r\n                        return (\r\n                            <tr key={\"category-\"+i}>\r\n                                <td>{i+1+props.startingNumber}</td>\r\n                                <td>{item.name}</td>\r\n                                <td>{item.description}</td>\r\n                                <td><EditDeleteButton \r\n                                    recordLoaded={props.recordLoaded}\r\n                                    recordDeleted={props.recordDeleted}\r\n                                    record={item} modelName={'category'}/></td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n        </table>\r\n        </div>\r\n    )\r\n}\r\nconst RecordForm = (props: { formRef:React.RefObject<Modal>, updateRecordProp(e: ChangeEvent): any, resetForm():any, onSubmit(): any, record: Category }) => {\r\n\r\n    return (\r\n        <form className=\"record-form mb-3\" onSubmit={(e) => { e.preventDefault(); props.onSubmit() }}>\r\n            <Modal show={false} ref={props.formRef} toggleable={true} title=\"Record Form\" >\r\n                <FormGroup label=\"Nama\"><input required value={props.record.name ?? \"\"} onChange={props.updateRecordProp} className=\"form-control-sm\" name=\"name\" /></FormGroup>\r\n                <FormGroup label=\"Deskripsi\">\r\n                    <textarea required className=\"form-control\" name=\"description\" onChange={props.updateRecordProp} value={props.record.description ?? \"\"} />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-sm\" />\r\n                    &nbsp;\r\n                    <input type=\"reset\"   className=\"btn btn-secondary btn-sm\" onClick={(e)=>props.resetForm()} />\r\n                </FormGroup>\r\n            </Modal>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default withRouter(\r\n    connect(\r\n        mapCommonUserStateToProps\r\n    )(CategoryManagement)\r\n)","\r\nimport BaseEntity from './BaseEntity';\r\nimport Category from './Category';\r\nexport default class RulePoint extends BaseEntity\r\n{\r\n    \r\n    category?:Category;\r\n    category_id?:any;\r\n    name?:string;\r\n    description?:string;\r\n    point:number = 1;\r\n    droppable?:boolean = true;\r\n}","import React, { ChangeEvent } from 'react'\r\nimport BaseComponent from './../../BaseComponent';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport RulePoint from './../../../models/RulePoint';\r\nimport Filter from '../../../models/commons/Filter';\r\nimport MasterDataService from './../../../services/MasterDataService';\r\nimport Modal from './../../container/Modal';\r\nimport FormGroup from './../../form/FormGroup';\r\nimport WebRequest from '../../../models/commons/WebRequest';\r\nimport NavigationButtons from './../../navigation/NavigationButtons';\r\nimport EditDeleteButton from './EditDeleteButton';\r\nimport { tableHeader } from './../../../utils/CollectionUtil';\r\nimport BaseManagementPage from './BaseManagementPage';\r\nimport Category from './../../../models/Category';\r\nimport WebResponse from '../../../models/commons/WebResponse';\r\nimport AnchorWithIcon from './../../navigation/AnchorWithIcon';\r\nclass State {\r\n    items: RulePoint[] = [];\r\n    filter: Filter = new Filter();\r\n    totalData: number = 0;\r\n    record: RulePoint = new RulePoint();\r\n    categories: Category[] = [];\r\n    categoriesLoaded:boolean = false;\r\n\r\n}\r\nclass RulePointManagement extends BaseManagementPage\r\n{\r\n    state: State = new State();\r\n    \r\n    constructor(props) {\r\n        super(props, 'rulepoint');\r\n        this.state.filter.limit = 10;\r\n    }\r\n\r\n    onSubmit = () => {\r\n        // console.debug(\"RECORD: \", this.state.record);\r\n        this.showConfirmation(\"Submit Data?\")\r\n            .then(ok => {\r\n                if (!ok) return;\r\n\r\n                const request: WebRequest = {\r\n                    rulePoint: this.state.record,\r\n                    modelName: this.modelName\r\n                }\r\n                this.callApiSubmit(request);\r\n            })\r\n    }\r\n    componentDidMount() {\r\n        this.validateLoginStatus(()=>{\r\n            this.scrollTop();\r\n            this.loadCategories();\r\n        });\r\n    }\r\n    categoriesLoaded = (response: WebResponse) => {\r\n        this.setState({categories:response.items, categoriesLoaded: true}, ()=>{ this.resetForm(); this.loadItems() });\r\n    }\r\n    categoriesNotLoaded = (response: WebResponse) => {\r\n        this.setState({categories: [], categoriesLoaded: true}, this.resetForm);\r\n    }\r\n    loadCategories = () => {\r\n        const filter:Filter = new Filter();\r\n        filter.limit = 0;\r\n        const req:WebRequest = {\r\n            filter: filter,\r\n            modelName: 'category'\r\n        }\r\n        this.commonAjax(\r\n            this.masterDataService.list,\r\n            this.categoriesLoaded,\r\n            this.categoriesNotLoaded,\r\n            req\r\n        )\r\n    }\r\n    \r\n    emptyRecord = ():any => {\r\n        const record = new RulePoint();\r\n        if (this.state.categories.length > 0) {\r\n            record.category_id = this.state.categories[0].id;\r\n        }\r\n        return record;\r\n    }\r\n    \r\n    render() {\r\n        const filter: Filter = this.state.filter;\r\n        const categories: Category[] = this.state.categories;\r\n        if (this.state.categoriesLoaded && categories.length == 0) {\r\n            return (\r\n                <div className=\"container-fluid section-body\">\r\n                    <h2>Kategori pelanggaran belum ada</h2>\r\n                </div>\r\n            )\r\n        }\r\n        const selectedCategoryId = filter.fieldsFilter && filter.fieldsFilter['category_id'] ? filter.fieldsFilter['category_id'] : \"ALL\";\r\n        return (\r\n            <div className=\"container-fluid section-body\">\r\n                <h2>Poin Pelanggaran</h2>\r\n                <hr />\r\n                <RecordForm categories={categories} reloadCategories={this.loadCategories} formRef={this.formRef} resetForm={this.resetForm} onSubmit={this.onSubmit} record={this.state.record} updateRecordProp={this.updateRecordProp} />\r\n                <form onSubmit={this.reload}>\r\n                    <FormGroup label=\"Cari\">\r\n                        <input name=\"name\" placeholder=\"nama\" className=\"form-control-sm\" value={filter.fieldsFilter ? filter.fieldsFilter['name'] : \"\"} onChange={this.updateFieldsFilter} />\r\n                    </FormGroup>\r\n                    <FormGroup label=\"Category\">\r\n                    <div className=\"input-group\">\r\n                        <select value={selectedCategoryId} className=\"form-control-sm\" name=\"category_id\" onChange={this.updateFieldsFilter} >\r\n                            {[{id:\"ALL\", name:\"Semua\"},...categories].map((c)=>{\r\n\r\n                                return <option key={\"filter-cat-\"+c.id} value={c.id}>{c.name}</option>\r\n                            })}\r\n                        </select>\r\n                        <div className=\"input-group-append\">\r\n                            <AnchorWithIcon className=\"btn btn-sm\" iconClassName=\"fas fa-redo\" onClick={this.loadCategories}>Reload</AnchorWithIcon>\r\n                        </div>\r\n                    </div>\r\n                </FormGroup>\r\n                    <FormGroup label=\"Jumlah Tampilan\">\r\n                        <input type=\"number\" name=\"limit\" className=\"form-control-sm\" value={filter.limit ?? 5} onChange={this.updateFilter} />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <input className=\"btn btn-primary btn-sm\" type=\"submit\" value=\"Submit\" />\r\n                    </FormGroup>\r\n                </form>\r\n                <NavigationButtons activePage={filter.page ?? 0} limit={filter.limit ?? 5} totalData={this.state.totalData}\r\n                    onClick={this.loadAtPage} />\r\n                <ItemsList \r\n                    recordLoaded={this.oneRecordLoaded}\r\n                    recordDeleted={this.loadItems}\r\n                    startingNumber={(filter.page??0)*(filter.limit??10)} items={this.state.items} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst ItemsList = (props: {startingNumber:number, items:RulePoint[], recordLoaded(item:any), recordDeleted()}) => {\r\n\r\n    return (\r\n        <div style={{overflow:'scroll'}}>\r\n        <table className=\"table table-striped\">\r\n            {tableHeader(\"No\", \"Nama\", \"Poin\", \"Deskripsi\", \"Kategori\", \"Dapat diputihkan\", \"Opsi\")}\r\n            <tbody>\r\n                    {props.items.map((item, i)=>{\r\n                        return (\r\n                            <tr key={`RulePoint-${i}`}>\r\n                                <td>{i+1+props.startingNumber}</td>\r\n                                <td>{item.name}</td>\r\n                                <td>{item.point}</td>\r\n                                <td>{item.description}</td>\r\n                                <td>{item.category?.name}</td>\r\n                                <td>{item.droppable ? \"Ya\" : \"TIdak\"}</td>\r\n                                <td><EditDeleteButton \r\n                                    recordLoaded={props.recordLoaded}\r\n                                    recordDeleted={props.recordDeleted}\r\n                                    record={item} modelName={'rulepoint'}/></td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n        </table>\r\n        </div>\r\n    )\r\n}\r\nconst RecordForm = (props: { categories:Category[], formRef:React.RefObject<Modal>, \r\n    updateRecordProp(e: ChangeEvent): any, \r\n    resetForm():any, \r\n    onSubmit(): any, record: RulePoint, reloadCategories():any }) => {\r\n\r\n    return (\r\n        <form className=\"record-form mb-3\" onSubmit={(e) => { e.preventDefault(); props.onSubmit() }}>\r\n            <Modal show={false} ref={props.formRef} toggleable={true} title=\"Record Form\" >\r\n                <FormGroup label=\"Nama\"><input value={props.record.name ?? \"\"} onChange={props.updateRecordProp} className=\"form-control-sm\" name=\"name\" required/></FormGroup>\r\n                <FormGroup label=\"Poin\"><input type=\"number\" value={props.record.point} onChange={props.updateRecordProp} className=\"form-control-sm\" name=\"point\" required/></FormGroup>\r\n                <FormGroup label=\"Deskripsi\">\r\n                    <textarea className=\"form-control\" name=\"description\" onChange={props.updateRecordProp} value={props.record.description ?? \"\"}  />\r\n                </FormGroup>\r\n                <FormGroup label=\"Dapat diputihkan\">\r\n                    <select className=\"form-control-sm\" data-type=\"boolean\" name=\"droppable\" onChange={props.updateRecordProp} value={props.record.droppable == true ? \"true\":\"false\"} required>\r\n                        <option value={\"true\"} >Ya</option>\r\n                        <option value={\"false\"}>Tidak</option>\r\n                    </select>\r\n                </FormGroup>\r\n                <FormGroup label=\"Category\">\r\n                    <div className=\"input-group\">\r\n                        <select required value={props.record.category_id} className=\"form-control-sm\" name=\"category_id\" onChange={props.updateRecordProp} >\r\n                            {props.categories.map((c)=>{\r\n\r\n                                return <option key={\"cat-\"+c.id} value={c.id}>{c.name}</option>\r\n                            })}\r\n                        </select>\r\n                        <div className=\"input-group-append\">\r\n                        <AnchorWithIcon className=\"btn btn-sm\" iconClassName=\"fas fa-redo\" onClick={props.reloadCategories}>Reload</AnchorWithIcon>\r\n                        </div>\r\n                    </div>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-sm\" />\r\n                    &nbsp;\r\n                    <input value=\"Reset\" type=\"reset\" className=\"btn btn-secondary btn-sm\" onClick={(e)=>props.resetForm()} />\r\n                </FormGroup>\r\n            </Modal>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default withRouter(\r\n    connect(\r\n        mapCommonUserStateToProps\r\n    )(RulePointManagement)\r\n)","import { join } from \"path\";\r\nimport { twoDigits } from './StringUtil';\r\n\r\nexport const MONTHS = [\r\n    \"Januari\",\r\n    \"Februari\",\r\n    \"Maret\",\r\n    \"April\",\r\n    \"Mei\",\r\n    \"Juni\",\r\n    \"Juli\",\r\n    \"Agustus\",\r\n    \"September\",\r\n    \"Oktober\",\r\n    \"November\",\r\n    \"Desember\"\r\n]\r\n\r\nconst leapMonths = [ 31, (  29  ), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\r\nconst regularMonths = [ 31, (  28  ), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\r\n/**\r\n * \r\n * @param {Number} month starts at 0\r\n */\r\nexport const getMonthDays = (month:number, year:number = new Date().getFullYear()) : number=> {\r\n    if(year % 4 == 0){\r\n        return leapMonths[month];\r\n    }\r\n    return regularMonths[month];\r\n}\r\n\r\nexport const getInputReadableDate = (date:Date) :string => {\r\n    const year = date.getFullYear();\r\n\r\n    const arr = [year, twoDigits(date.getMonth()+1), twoDigits(date.getDate())];\r\n    return arr.join(\"-\");\r\n}\r\nexport function addDays(date:Date, days:number) :Date{\r\n    const result:Date = new Date(date);\r\n    result.setDate(result.getDate() + days);\r\n    return result;\r\n  }\r\n  export const getDiffDays = (a:Date, b:Date) : number => {\r\n    // Discard the time and time-zone information.\r\n\r\n    console.debug(\"DIFF DATE \",a,\" vs \", b);\r\n    const _MS_PER_DAY = 1000 * 60 * 60 * 24;\r\n    const utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());\r\n    const utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate()); \r\n    return Math.floor((utc2 - utc1) / _MS_PER_DAY);\r\n}\r\n\r\nexport const parseDate = (s:string) :Date => {\r\n    var b:string[] = s.split(/\\D/);\r\n    var m = parseInt(b[1]);\r\n    return new Date(parseInt(b[0]), --m, parseInt(b[2]));\r\n  }\r\nexport const timerString = (inputSeconds:number ) => {\r\n    let hour = 0;\r\n    let minutes:number = 0;\r\n    let seconds = 0;\r\n    let totalSeconds = inputSeconds;\r\n    if (totalSeconds >= 3600) {\r\n        hour = totalSeconds/ 3600;\r\n        totalSeconds = totalSeconds % 3600;\r\n    }\r\n    if (totalSeconds >= 60) {\r\n        minutes = totalSeconds/60;\r\n        totalSeconds = totalSeconds%60;\r\n    }\r\n    seconds = totalSeconds; \r\n\r\n    return  twoDigits(hour)+\":\"+twoDigits(Math.floor(minutes))+\":\"+twoDigits(seconds);\r\n}\r\n\r\n\r\n\r\n","import React, { ChangeEvent } from 'react';\nimport Filter from '../../models/commons/Filter';\nimport { MONTHS } from './../../utils/DateUtil';\n\nconst days = (): number[] => {\n    const arr: number[] = [];\n    for (let i = 1; i <= 31; i++) {\n        arr.push(i);\n    }\n    return arr;\n}\nconst  FilterPeriod = (props: { showlabel?:boolean, hideDay?:boolean, mode?: string, filter: Filter, onChange(e: ChangeEvent): any, }) => {\n    const filter: Filter = props.filter;\n    if (props.mode == \"to\") {\n        return (\n            <React.Fragment>\n                {props.showlabel === true? <input className=\"form-control-sm\" value=\"Sampai tanggal\" disabled /> :null}\n                {props.hideDay != true?\n                <select data-type=\"number\" className=\"form-control-sm\" name=\"dayTo\" value={filter.dayTo ?? 0} onChange={props.onChange}>\n                    {days().map((d) => {\n                        return <option key={\"f-d-\" + d} value={d}>{d == 0 ? 'day' : d}</option>\n                    })}\n                </select> :null}\n                <select data-type=\"number\" className=\"form-control-sm\" name=\"monthTo\" value={filter.monthTo ?? 0} onChange={props.onChange}>\n                    {MONTHS.map((m, i) => {\n                        return <option key={\"f-m-\" + i} value={(i + 1)}>{m}</option>\n                    })}\n                </select>\n                <input name=\"yearTo\" placeholder=\"year\" className=\"form-control-sm\" value={filter.yearTo ?? \"\"} onChange={props.onChange} />\n            </React.Fragment>\n\n        )\n    }\n    return (\n        <React.Fragment>\n            {props.showlabel === true?<input className=\"form-control-sm\" value=\"Dari tanggal\" disabled /> :null}\n            {props.hideDay != true?<select data-type=\"number\" className=\"form-control-sm\" name=\"day\" value={filter.day ?? 0} onChange={props.onChange}>\n                {days().map((d) => {\n                    return <option key={\"f-d-\" + d} value={d}>{d == 0 ? 'day' : d}</option>\n                })}\n            </select>: null}\n            <select data-type=\"number\" className=\"form-control-sm\" name=\"month\" value={filter.month ?? 0} onChange={props.onChange}>\n                {MONTHS.map((m, i) => {\n                    return <option key={\"f-m-\" + i} value={(i + 1)}>{m}</option>\n                })}\n            </select>\n            <input name=\"year\" placeholder=\"year\" className=\"form-control-sm\" value={filter.year?? \"\"} onChange={props.onChange} />\n        </React.Fragment>\n    )\n}\n\nexport default  FilterPeriod;","import React, { ChangeEvent } from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport Student from '../../../models/Student';\r\nimport StudentService from '../../../services/StudentService';\r\nimport Filter from '../../../models/commons/Filter';\r\nimport WebResponse from '../../../models/commons/WebResponse';\r\nimport Class from '../../../models/Class';\r\nimport FormGroup from '../../form/FormGroup';\r\nimport NavigationButtons from '../../navigation/NavigationButtons';\r\nimport { tableHeader } from '../../../utils/CollectionUtil';\r\nimport AnchorWithIcon from '../../navigation/AnchorWithIcon';\r\nimport MasterDataService from '../../../services/MasterDataService';\r\nimport BaseManagementPage from '../management/BaseManagementPage';\r\nimport Spinner from '../../loader/Spinner';\r\nimport FilterPeriod from './../../form/FilterPeriod';\r\nimport { MONTHS } from './../../../utils/DateUtil';\r\nimport ToggleButton from './../../navigation/ToggleButton';\r\nclass State {\r\n    items: Student[] = [];\r\n    classes: Class[] = [];\r\n    totalData: number = 0;\r\n    filter: Filter = new Filter();\r\n    loading: boolean = false;\r\n}\r\nclass StudentList extends BaseManagementPage {\r\n    state: State = new State();\r\n    studentService: StudentService;\r\n    masterDataService: MasterDataService;\r\n    constructor(props) {\r\n        super(props, 'student');\r\n        this.studentService = this.getServices().studentService;\r\n        this.masterDataService = this.getServices().masterDataService;\r\n        this.state.filter.limit = 10;\r\n        this.state.filter.day = this.state.filter.dayTo = new Date().getDate();\r\n        this.state.filter.month = this.state.filter.monthTo = new Date().getMonth() + 1;\r\n        this.state.filter.year = this.state.filter.yearTo = new Date().getFullYear();\r\n        this.state.filter.fieldsFilter = {\r\n            'class_id': 'ALL',\r\n            'with_point_record': false\r\n        }\r\n    }\r\n\r\n    itemsLoaded = (response: WebResponse) => {\r\n        this.setState({ items: response.items, totalData: response.totalData });\r\n    }\r\n    classesLoaded = (response: WebResponse) => {\r\n        this.setState({ classes: response.items }, this.loadItems);\r\n    }\r\n    loadItems = () => {\r\n        this.commonAjax(\r\n            this.masterDataService.list,\r\n            this.itemsLoaded,\r\n            this.showCommonErrorAlert,\r\n            { modelName: 'student', filter: this.state.filter }\r\n        )\r\n    }\r\n    loadAtPage = (page: number) => {\r\n        const filter = this.state.filter;\r\n        filter.page = page;\r\n        this.setState({ filter: filter }, this.loadItems);\r\n    }\r\n    loadClasses = () => {\r\n        this.commonAjax(\r\n            this.studentService.getClasses,\r\n            this.classesLoaded,\r\n            this.showCommonErrorAlert,\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.validateLoginStatus(() => {\r\n            this.scrollTop();\r\n            this.loadClasses();\r\n        })\r\n    }\r\n    updateSelectedClass = (e: ChangeEvent) => {\r\n        const target = e.target as HTMLSelectElement;\r\n        const filter = this.state.filter;\r\n        if (!filter.fieldsFilter) {\r\n            filter.fieldsFilter = {};\r\n        }\r\n        filter.fieldsFilter['class_id'] = target.value;\r\n        this.setState({ filter: filter });\r\n    }\r\n    inputPage = (type: string, s: Student) => {\r\n        switch (type) {\r\n            case 'pointrecord':\r\n                this.inputPoint(s);\r\n                break;\r\n            case 'medicalrecord':\r\n                this.inputMedicalRecord(s);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    inputPoint = (student: Student) => {\r\n        this.props.history.push({\r\n            pathname: \"/dormitoryactivity/inputpoint\",\r\n            state: { student: student }\r\n        })\r\n    }\r\n    inputMedicalRecord = (student: Student) => {\r\n        this.props.history.push({\r\n            pathname: \"/dormitoryactivity/medicalrecord\",\r\n            state: { student: student }\r\n        })\r\n    }\r\n    updateWithPointRecord = (val: boolean) => {\r\n        const filter = this.state.filter;\r\n        if (filter.fieldsFilter) {\r\n            filter.fieldsFilter['with_point_record'] = val;\r\n        }\r\n        this.setState({ filter: filter });\r\n    }\r\n    onSubmit = (e) => { e.preventDefault(); this.loadAtPage(0) }\r\n    render() {\r\n\r\n        const filter = this.state.filter;\r\n        const classes = this.state.classes;\r\n        const defaultClass: Class = { id: \"ALL\", level: \"Semua Kelas\", sekolah: {} };\r\n        const selectedClassId = filter.fieldsFilter && filter.fieldsFilter['class_id'] ? filter.fieldsFilter['class_id'] : \"ALL\";\r\n        const showPointRecord = filter.fieldsFilter && filter.fieldsFilter['with_point_record'] && filter.fieldsFilter['with_point_record'] == true;\r\n        return (\r\n            <div className=\"container-fluid section-body\">\r\n                <h2>Siswa</h2>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                    <FormGroup label=\"Cari\">\r\n                        <div className=\"input-group\">\r\n                            <input name=\"name\" placeholder=\"Nama\" className=\"form-control-sm\" value={filter.fieldsFilter ? filter.fieldsFilter['name'] : \"\"} onChange={this.updateFieldsFilter} />\r\n                            <select value={selectedClassId} onChange={this.updateFieldsFilter} className=\"form-control-sm\" name=\"class_id\">\r\n                                {[defaultClass, ...classes].map((c) => {\r\n                                    return <option key={'class_' + c.id} value={c.id}>{c.level}{c.rombel} - {c.sekolah?.nama}</option>\r\n                                })}\r\n                            </select>\r\n                        </div>\r\n                    </FormGroup>\r\n                    <FormGroup label=\"Jumlah Tampilan\">\r\n                        <input name=\"limit\" type=\"number\" className=\"form-control-sm\" value={filter.limit ?? 5} onChange={this.updateFilter} />\r\n                    </FormGroup>\r\n                    <FormGroup label=\"Periode\">\r\n                        <ToggleButton active={showPointRecord}\r\n                            yesLabel={\"tampilkan poin\"} noLabel=\"tanpa poin\"\r\n                            onClick={this.updateWithPointRecord}\r\n                        />\r\n                        {showPointRecord ?\r\n                            <React.Fragment>\r\n                                <div className=\"input-group\">\r\n                                    <FilterPeriod filter={filter} onChange={this.updateFilter} />\r\n                                </div>\r\n                                <div className=\"input-group\">\r\n                                    <FilterPeriod mode={\"to\"} filter={filter} onChange={this.updateFilter} />\r\n                                </div>\r\n                            </React.Fragment> : null}\r\n                    </FormGroup>\r\n                    {showPointRecord ?\r\n                        <FormGroup>\r\n                            {filter.day} {MONTHS[(filter.month ?? 1) - 1]} {filter.year} - {filter.dayTo} {MONTHS[(filter.monthTo ?? 1) - 1]} {filter.yearTo}\r\n                        </FormGroup>\r\n                        : null}\r\n                    <FormGroup>\r\n                        <input type=\"submit\" className=\"btn btn-primary btn-sm\" value=\"Submit\" />\r\n                    </FormGroup>\r\n\r\n                </form>\r\n                <p />\r\n                <NavigationButtons onClick={this.loadAtPage} activePage={filter.page ?? 0} limit={filter.limit ?? 10} totalData={this.state.totalData} />\r\n                <ItemsList showPointRecord={showPointRecord} loading={this.state.loading} inputPage={this.inputPage} startingNumber={(filter.page ?? 0) * (filter.limit ?? 10)} items={this.state.items} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst ItemsList = (props: { showPointRecord: boolean, loading: boolean, startingNumber: number, inputPage(type: string, s: Student): any, items: Student[] }) => {\r\n\r\n    return (\r\n        <div style={{ overflow: 'scroll' }}>\r\n            <table className=\"table table-striped\">\r\n                {props.showPointRecord ? tableHeader(\"No\", \"\", \"Name\", \"Kelas\", \"Point\") : tableHeader(\"No\", \"\", \"Name\", \"Kelas\")}\r\n                <tbody>\r\n                    {props.loading ?\r\n                        <tr><td colSpan={5}><Spinner /></td></tr>\r\n\r\n                        : props.items.map((student, i) => {\r\n\r\n                            return (\r\n                                <tr key={\"student-\" + i}>\r\n                                    <td>{i + 1 + props.startingNumber}</td>\r\n                                    <td>\r\n                                        <div style={{ width: '100px' }}>\r\n                                            <AnchorWithIcon className=\"btn\" onClick={(e) => props.inputPage('pointrecord', student)} iconClassName=\"far fa-edit\" />\r\n                                            <AnchorWithIcon className=\"btn\" onClick={(e) => props.inputPage('medicalrecord', student)} iconClassName=\"fas fa-notes-medical\" />\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        {student.user?.name}</td>\r\n                                    <td>{student.kelas?.level} {student.kelas?.rombel} {student.kelas?.sekolah?.nama}</td>\r\n                                    {props.showPointRecord ? <td>{student.point}</td> : null}\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps\r\n)(StudentList))","\r\nimport BaseEntity from './BaseEntity';\r\nimport User from './User';\r\nimport Class from './Class';\r\nexport default class Student extends BaseEntity\r\n{\r\n    nis?:string;\r\n    kelas?:Class;\r\n    user?:User;\r\n\r\n    point?:number;\r\n}","\nimport BaseEntity from './BaseEntity';\nimport { parseDate } from './../utils/DateUtil';\nimport { twoDigits as td } from './../utils/StringUtil';\nimport RulePoint from './RulePoint';\nimport Student from './Student';\nimport Pictures from './Pictures';\nimport { contextPath } from './../constant/Url';\nexport default class PointRecord extends BaseEntity\n{\n    setTime(h: number, m: number, s: number) {\n        this.time = [td(h), td(m), td(s)].join(\":\");\n    }\n    setDate = (d: Date) => {\n        this.day = d.getDate();\n        this.month = d.getMonth() + 1;\n        this.year = d.getFullYear();\n    }\n    dateString = () :string=>{\n        return `${this.year}-${td(this.month)}-${td(this.day)}`;\n    }\n    location?:string;\n    day:number = new Date().getDate();\n    month:number = new Date().getMonth()+1;\n    year:number = new Date().getFullYear();\n    time:string;\n    description?:string;\n    student_id?:string;\n    point_id?:number;\n\n    rule_point?:RulePoint;\n    student?:Student;\n    dropped_at?:Date;\n\n    pictures:Pictures[] = [];\n\n    constructor() {\n        super();\n        const d = new Date();\n        this.time =  [td(d.getHours()), td(d.getMinutes()), td(d.getSeconds())].join(\":\");\n    }\n\n    /**\n     * get picture URL\n     */\n    getPicture = () :string|null => {\n        if (this.pictures.length == 0) {\n            return null;\n        }\n        return  contextPath()+'upload/POINT_RECORD/'+this.pictures[0].name;\n    }\n\n    getDate = ():Date => {\n        return parseDate(this.dateString());\n    }\n\n    getTimestamp = () :string => {\n\n        const d = this.getDate();\n        const day = DAYS[d.getDay()];\n        return day+\", \"+[\n            td(d.getDate()), td(d.getMonth()+1), d.getFullYear()\n        ].join(\"/\")+\" \"+this.time;\n    }\n\n    public static clone = (object:PointRecord) => {\n        return Object.assign(new PointRecord(), object);\n    }\n}\n\nconst DAYS = [\n    \"Ahad\", \"Senin\", \"Selasa\", \"Rabu\", \"Kamis\", \"Jumat\", \"Sabtu\"\n]","import React from 'react';\nimport { Component, ChangeEvent } from 'react';\nimport { twoDigits } from './../../utils/StringUtil';\ninterface Props{\n    onChange(h:number,m:number,s:number):any,\n    value:string,\n}\nclass State {\n    hour:number = new Date().getHours();\n    minute:number = new Date().getMinutes();\n    second:number = new Date().getSeconds();\n}\nconst hours:number[] = [\n    0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,\n];\nconst minutesOrSeconds = ()  : number[]=> {\n    const arr:number[]=  [];\n    for (let i = 1; i < 60; i++) {\n        arr.push(i);   \n    }\n    return arr; \n}\nexport default class InputTime extends Component<Props, any> {\n    state:State = new State();\n    minutes:number[];\n    seconds:number[] ;\n    constructor (props) {\n        super(props);\n        this.minutes = minutesOrSeconds();\n        this.seconds = minutesOrSeconds();\n    }\n    componentDidMount() {\n        this.updateFromProps();\n    }\n    updateFromProps = () => {\n        try {\n            const val = this.props.value.split(\":\");\n            this.setState({hour: parseInt(val[0]), minute: parseInt(val[1]), second: parseInt(val[2])});\n        } catch (error) {\n            \n        }\n    }\n    updateValue = (e:ChangeEvent) => {\n        const target = e.target as HTMLSelectElement;\n        if (target) {\n            const name = target.name;\n            this.setState({[name]: target.value}, this.onChange);\n        }\n        \n    }\n    setNow = () => {\n        const date = new Date();\n        this.setState({\n            hour: date.getHours(),\n            minute: date.getMinutes(),\n            second: date.getSeconds()\n        }, this.onChange)\n    }\n    onChange = () => {\n        this.props.onChange(this.state.hour, this.state.minute, this.state.second)\n    }\n    render() {\n         \n        return (<div className=\"form-control bg-light\">\n            <select name=\"hour\" style={{border:'none'}} value={this.state.hour} onChange={this.updateValue} >\n                {hours.map((hour)=>{\n                    return <option key={\"HOUR-\"+hour} value={hour} >{twoDigits(hour)}</option>\n                })}\n            </select>\n            <select name=\"minute\" style={{border:'none'}}  value={this.state.minute} onChange={this.updateValue}>\n                {this.minutes.map((min)=>{\n                    return <option key={\"MIN-\"+min} value={min} >{twoDigits(min)}</option>\n                })}\n            </select>\n            <select name=\"second\" style={{border:'none'}}  value={this.state.second} onChange={this.updateValue}>\n                {this.seconds.map((sec)=>{\n                    return <option key={\"SEC-\"+sec} value={sec} >{twoDigits(sec)}</option>\n                })}\n            </select>\n            <a style={{marginLeft: 5}}  onClick={this.setNow} ><i className=\"fas fa-history\"/></a>\n        </div>)\n    }\n}","import React, { ChangeEvent } from 'react'\nimport BaseComponent from '../../../BaseComponent';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\nimport RulePoint from '../../../../models/RulePoint';\nimport FormGroup from '../../../form/FormGroup';\nimport PointRecord from '../../../../models/PointRecord';\nimport { parseDate } from '../../../../utils/DateUtil';\nimport InputTime from '../../../form/InputTime';\nimport { getAttachmentInfoFromFile } from '../../../../utils/ComponentUtil';\nimport AttachmentInfo from '../../../../models/settings/AttachmentInfo';\nclass State {\n    pointRecord: PointRecord = new PointRecord();\n}\nclass FormStepThree extends BaseComponent {\n    state: State = new State();\n    constructor(props) {\n        super(props, true);\n    }\n\n    onSubmit = () => {\n        this.showConfirmation(\"Submit Data?\")\n            .then(ok => {\n                if (ok) {  \n                    this.props.submit(this.state.pointRecord);\n                }\n            })\n    }\n    get rulePoint (): RulePoint  {\n        return this.props.rulePoint;\n    }\n    updatePointRecord = (e: ChangeEvent) => {\n        const target = e.target as any;\n        const pointRecord = this.state.pointRecord;\n        pointRecord[target.name] = target.value;\n        this.setState({ pointRecord: pointRecord });\n\n    }\n    updateDate = (e: ChangeEvent) => {\n        const date: Date = parseDate((e.target as HTMLInputElement).value);\n        const pointRecord = this.state.pointRecord;\n        pointRecord.setDate(date);\n        this.setState({ pointRecord: pointRecord });\n    }\n    updateTime = (h: number, m: number, s: number) => {\n        const pointRecord = this.state.pointRecord;\n        pointRecord.setTime(h, m, s);\n        this.setState({ pointRecord: pointRecord });\n    }\n    setAttachment = (e: ChangeEvent) => {\n        const target = e.target as HTMLInputElement;\n        getAttachmentInfoFromFile(target).then((attachment: AttachmentInfo) => {\n            this.props.setAttachment(attachment);\n        });\n    }\n    removeAttachment = () => {\n        this.props.removeAttachment();\n    }\n    getAttachment = (): AttachmentInfo | undefined => {\n        return this.props.attachmentInfo;\n    }\n    render() {\n        const rulePoint: RulePoint = this.rulePoint;\n        const pointRecord: PointRecord = this.state.pointRecord;\n        const attachment = this.getAttachment();\n        return (\n            <form onSubmit={(e) => { e.preventDefault(); this.onSubmit() }}>\n                <FormGroup label=\"Category\">{rulePoint.category?.name} - {rulePoint.name} <span className=\"badge badge-dark\">{rulePoint.point}</span></FormGroup>\n                <FormGroup label=\"Date\">\n                    <input type=\"date\" className=\"form-control\" onChange={this.updateDate} name=\"date\" value={pointRecord.dateString()} />\n                </FormGroup>\n                <FormGroup label=\"Time\">\n                    <InputTime onChange={this.updateTime} value={pointRecord.time} />\n                </FormGroup>\n                <FormGroup label=\"Location\">\n                    <input className=\"form-control\" onChange={this.updatePointRecord} name=\"location\" value={pointRecord.location ?? \"\"} />\n                </FormGroup>\n                <FormGroup label=\"Picture\">\n                    {attachment ?\n                        <>\n                            <img style={{marginRight:10}} className=\"border border-dark\" src={attachment.url} width={100} height={100} />\n                            <AnchorWithIcon iconClassName=\"fas fa-times\" className=\"btn btn-danger\" onClick={this.removeAttachment}></AnchorWithIcon>\n                        </>\n                        : <input type=\"file\" accept={\"image/*\"} className=\"form-control\" onChange={this.setAttachment} name=\"attachment\" />\n                    }\n                </FormGroup>\n                <FormGroup label=\"Description\">\n                    <textarea value={pointRecord.description ?? \"\"} onChange={this.updatePointRecord} name=\"description\" className=\"form-control\"></textarea>\n                </FormGroup>\n                <AnchorWithIcon className=\"btn btn-secondary float-left\" iconClassName=\"fas fa-arrow-left\" onClick={this.props.onBack} >Back</AnchorWithIcon>\n                <button className=\"btn btn-success float-right\" >Submit</button>\n            </form>\n        )\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(FormStepThree)\n)","\r\nimport React, { Component } from 'react';\r\nexport default class SimpleError extends Component<any, any>\r\n{\r\n\r\n    render() {\r\n        if (this.props.show == false) return null;\r\n        return (\r\n            <div style={ this.props.style} className=\"alert alert-danger\">\r\n                {this.props.children??\"Error Occured\"}\r\n            </div>\r\n        )\r\n    }\r\n}","\nimport React from 'react'\nimport BaseComponent from '../../../BaseComponent';\nimport MasterDataService from '../../../../services/MasterDataService';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\nimport FormGroup from '../../../form/FormGroup';\nimport Category from '../../../../models/Category';\nimport RulePoint from '../../../../models/RulePoint';\nimport WebRequest from '../../../../models/commons/WebRequest';\nimport WebResponse from '../../../../models/commons/WebResponse';\nimport Spinner from '../../../loader/Spinner';\nimport SimpleError from '../../../alert/SimpleError';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\nclass State { \n    rulePoints: RulePoint[]  = []; \n    loading:boolean = false;\n}\nclass FormStepTwo extends BaseComponent {\n    masterDataService: MasterDataService;\n    state:State = new State();\n    constructor(props) {\n        super(props, true);\n        this.masterDataService = this.getServices().masterDataService;\n    }\n    startLoading = () => this.setState({loading:true});\n    endLoading = () => this.setState({loading:false});\n    rulePointsLoaded = (response: WebResponse) => {\n        this.setState({ rulePoints: response.items }, () => {\n            if (response.items.length > 0) {\n                if (!this.props.rulePoint) {\n                    this.setRulePoint(response.items[0]);\n                }\n            }\n        });\n    }\n    \n    loadRulePoints = () => {\n        if (null == this.getCategory()) return;\n        const req: WebRequest = {\n            filter: {limit:0, fieldsFilter:{category_id:this.getCategory().id}},\n            modelName: 'rulepoint',\n        }\n        this.commonAjax(\n            this.masterDataService.list,\n            this.rulePointsLoaded,\n            this.showCommonErrorAlert,\n            req\n        )\n    }\n    getCategory = ()  : Category => {\n        return this.props.category;\n    }\n    componentDidMount() {\n        super.componentDidMount();\n        this.loadRulePoints();\n    }\n    onSubmit = () => {\n        this.props.onSubmit();\n    }\n    setRulePoint = (r:RulePoint) => {\n        this.props.setRulePoint(r);\n    }\n    render() {\n        const category = this.getCategory();\n\n        if (null == category) {\n            return <SimpleError>Category not found</SimpleError>\n        }\n        if (this.state.loading) {\n            return <Spinner/>\n        }\n        if (this.state.rulePoints.length == 0) {\n            return <SimpleError>Rule Points for {category.name} not found</SimpleError>\n        }\n\n        const rulePoints =this.state.rulePoints;\n        return (\n            <form onSubmit={e => { e.preventDefault(); this.onSubmit() }} >\n                <FormGroup label=\"Category\" children={category.name}/>\n                <FormGroup label=\"Name\">\n                <select className=\"form-control\" onChange={(e)=>e.preventDefault()} value={this.props.rulePoint ? this.props.rulePoint.id : null} >\n                    {rulePoints.map((rulePoint) => {\n                        return <option key={\"select-rulePoint-\" + rulePoint.id}\n                            onClick={(e) => { this.setRulePoint(rulePoint) }}\n                            value={rulePoint.id}>{rulePoint.name}</option>\n                    })}\n                </select>\n                </FormGroup>\n                <FormGroup label=\"Point\" children={this.props.rulePoint?.point}/>\n                <hr/>\n                <AnchorWithIcon className=\"btn btn-secondary float-left\"  iconClassName=\"fas fa-arrow-left\" onClick={this.props.onBack} >Back</AnchorWithIcon>\n                <AnchorWithIcon className=\"btn btn-info float-right\" iconClassName=\"fas fa-arrow-right\" onClick={this.onSubmit} >Next</AnchorWithIcon>\n            </form>\n        );\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(FormStepTwo)\n)","\nimport React from 'react'\nimport BaseComponent from '../../../BaseComponent';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\nimport WebResponse from '../../../../models/commons/WebResponse';\nimport WebRequest from '../../../../models/commons/WebRequest';\nimport Category from '../../../../models/Category';\nimport MasterDataService from '../../../../services/MasterDataService';\nimport FormGroup from '../../../form/FormGroup';\nimport SimpleError from '../../../alert/SimpleError';\nimport Spinner from '../../../loader/Spinner';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\nimport Filter from '../../../../models/commons/Filter';\nclass State {\n    categories: Category[] = [];\n    loading: boolean = false;\n}\nclass FormStepOne extends BaseComponent {\n    state: State = new State();\n    masterDataService: MasterDataService;\n    constructor(props) {\n        super(props, true);\n        this.masterDataService = this.getServices().masterDataService;\n    }\n    categoriesLoaded = (response: WebResponse) => {\n        this.setState({ categories: response.items, categoriesLoaded: true }, () => {\n            if (response.items.length > 0) {\n                if (!this.props.category) {\n                    this.setCategory(response.items[0]);\n                }\n            }\n        });\n    }\n    startLoading = () => this.setState({ loading: true });\n    endLoading = () => this.setState({ loading: false });\n    setCategory = (c: Category) => {\n        this.props.setSelectedCategory(c);  \n    }\n    loadCategories = () => {\n        const req: WebRequest = {\n            filter: Filter.withLimit(0),\n            modelName: 'category'\n        }\n        this.commonAjax(\n            this.masterDataService.list,\n            this.categoriesLoaded,\n            this.showCommonErrorAlert,\n            req\n        )\n    }\n    componentDidMount() {\n        super.componentDidMount();\n        this.loadCategories();\n    }\n    onSubmit = () => {\n        this.props.onSubmit();\n    }\n    render() {\n        const categories = this.state.categories;\n        const category = this.props.category;\n        if (this.state.loading) {\n            return <Spinner />\n        }\n        if (categories.length == 0) {\n            return <SimpleError>Categories not found</SimpleError>\n        }\n        return (\n            <form onSubmit={(e) => { e.preventDefault(); this.onSubmit() }}>\n                <FormGroup label=\"Category\">\n                    <select className=\"form-control\" onChange={(e)=>e.preventDefault()} value={category ? category.id??\"\" : \"\"} >\n                        {categories.map((c) => {\n                            return <option key={\"select-cat-\" + c.id}\n                                onClick={(e) => { this.setCategory(c) }}\n                                value={c.id}>{c.name}</option>\n                        })}\n                    </select>\n\n                </FormGroup>\n                <hr/>\n                <AnchorWithIcon className=\"btn btn-secondary float-left\" iconClassName=\"fas fa-arrow-left\" onClick={this.props.onBack} >Back</AnchorWithIcon>\n                \n                <AnchorWithIcon className=\"btn btn-info float-right\" iconClassName=\"fas fa-arrow-right\" onClick={this.onSubmit}>Next</AnchorWithIcon>\n            </form >\n\n\n        )\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(FormStepOne)\n)","\nimport React from 'react'\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\nimport Student from '../../../models/Student';\nimport AnchorWithIcon from '../../navigation/AnchorWithIcon';\nimport Modal from '../../container/Modal';\nimport FormStepThree from './form/FormStepThree';\nimport FormStepTwo from './form/FormStepTwo';\nimport FormStepOne from './form/FormStepOne';\nimport Category from '../../../models/Category';\nimport RulePoint from '../../../models/RulePoint';\nimport SimpleError from '../../alert/SimpleError';\nimport PointRecord from '../../../models/PointRecord';\nimport StudentService from '../../../services/StudentService';\nimport WebResponse from '../../../models/commons/WebResponse';\nimport FormGroup from '../../form/FormGroup';\nimport { doItLater } from '../../../utils/EventUtil';\nimport AttachmentInfo from './../../../models/settings/AttachmentInfo';\nimport BasePage from './../BasePage';\n\nclass State {\n    student?: Student\n    category?: Category;\n    rulePoint?: RulePoint;\n    formStep: number = 0;\n    savedRecord?: PointRecord;\n    attachmentInfo?:AttachmentInfo;\n}\nclass InputPointForm extends BasePage {\n    state: State = new State();\n    studentService: StudentService;\n    totalStep: number = 4;\n    constructor(props) {\n        super(props, \"Input Point Record\", true);\n        this.studentService = this.getServices().studentService;\n    }\n    validateStudentData = () => {\n        if (!this.props.location.state) {\n            return;\n        }\n        const student = this.props.location.state.student;\n        if (student) {\n            this.setState({ student: Object.assign(new Student(), student) });\n        }\n    }\n    componentDidMount() {\n        super.componentDidMount();\n        this.validateStudentData();\n        this.scrollTop();\n        doItLater(()=>{\n            this.nextStep(1);\n        }, 200);\n        \n    }\n    setAttachment = (attachmentInfo:AttachmentInfo|undefined) => {\n        this.setState({attachmentInfo:attachmentInfo});\n    }\n    removeStudent = () => {\n       this.setState({formStep: 0}, ()=>{\n           doItLater(()=>{\n               this.setState({student:undefined})\n           }, 500); \n       })\n    }\n    removeAttachment = () => {\n        this.setAttachment(undefined);\n    }\n    setCategory = (c: Category) => {\n        this.setState({ category: c });\n    }\n    setRulePoint = (r: RulePoint) => {\n        this.setState({ rulePoint: r });\n    }\n    nextStep = (step: number) => {\n        this.setState({ formStep: step });\n    }\n    submitRecord = (record: PointRecord) => {\n        \n        if (!this.state.student || !this.state.rulePoint) {\n            alert(\"ERROR: student or rulePoint missing!\");\n            return;\n        }\n        record.student_id = this.state.student?.id;\n        record.point_id = this.state.rulePoint?.id;\n        this.commonAjax(\n            this.studentService.submitPointRecord,\n            this.recordSubmitted,\n            this.showCommonErrorAlert,\n            record, this.state.attachmentInfo\n        )\n    }\n    recordSubmitted = (response: WebResponse) => {\n        this.setState({ savedRecord: response.item, formStep: 4 }, this.scrollTop);\n    }\n    render() {\n        const student: Student | undefined = this.state.student;\n        if (!student) {\n            return <Warning />\n        }\n\n        return (\n            <div className=\"container-fluid section-body\">\n                <h2>Input Point</h2>\n                <Modal title={student.user?.name + \" - \" + student.kelas?.level + student.kelas?.rombel + \" \" + student.kelas?.sekolah?.nama}>\n\n                    <Progress step={this.state.formStep} totalStep={this.totalStep} />\n                    {this.state.formStep == 1 ?\n                         <FormStepOne category={this.state.category} \n                            onBack={this.removeStudent}\n                            setSelectedCategory={this.setCategory}\n                            onSubmit={() => { this.nextStep(2) }} />\n                        : null}\n                    {this.state.formStep == 2 && this.state.category ?\n                        <FormStepTwo\n                            rulePoint={this.state.rulePoint}\n                            \n                            setRulePoint={this.setRulePoint}\n                            category={this.state.category} onBack={() => this.nextStep(1)} onSubmit={() => { this.nextStep(3) }}\n                        /> : null}\n                    {this.state.formStep == 3 && this.state.category && this.state.rulePoint ?\n                        <FormStepThree submit={this.submitRecord}\n                            attachmentInfo={this.state.attachmentInfo}\n                            setAttachment={this.setAttachment}\n                            removeAttachment={this.removeAttachment} \n                            rulePoint={this.state.rulePoint}\n                            onBack={() => this.nextStep(2)}\n                        /> : null}\n                    {this.state.formStep == 4 && this.state.savedRecord ?\n                        <Detail back={() => this.setState({ student: null })} record={this.state.savedRecord} />\n                        : null\n                    }\n                    \n                </Modal>\n            </div>\n        )\n    }\n}\n\nconst Progress = (props: { step: number, totalStep: number }) => {\n    return (\n        <div className=\"progress\" style={{ height:'5px', marginBottom: 15}}>\n            <div className=\"bg-info\" style={{transitionDuration: '500ms', width: (props.step / props.totalStep * 100) + '%' }}  ></div>\n        </div>\n    )\n}\n\nconst Detail = (props: { record: PointRecord, back(): any }) => {\n    const record = PointRecord.clone(props.record);\n    const date = record.getDate();\n    return (\n        <div>\n            <h4 className=\"text-center text-success\"><i className=\"fas fa-check\" style={{ marginRight: 5 }} />Record saved</h4>\n            <p />\n            <FormGroup label=\"Date\">{date.toDateString()} {record.time}</FormGroup>\n            <FormGroup label=\"Category\">{record.rule_point?.category?.name}</FormGroup>\n            <FormGroup label=\"Name\">{record.rule_point?.name}</FormGroup>\n            <FormGroup label=\"Point\">{record.rule_point?.point}</FormGroup>\n            <FormGroup label=\"Location\">{record.location}</FormGroup>\n            {record.getPicture()?\n            <FormGroup label=\"Picture\">\n                <img src={record.getPicture()??\"\"} width={200} height={200} />\n            </FormGroup>\n            :null}\n            <hr />\n            <FormGroup><a onClick={props.back} className=\"btn btn-dark\">Ok</a></FormGroup>\n        </div>\n    )\n}\n\nconst Warning = () => {\n    return (\n        <div className=\"container-fluid section-body\">\n            <h2>Input Point</h2>\n            <SimpleError>\n                <i className=\"fas fa-exclamation-circle\" />&nbsp;Please select student <hr />\n                <AnchorWithIcon to={\"/dormitoryactivity/studentlist\"} iconClassName=\"fas fa-list\">Student List</AnchorWithIcon>\n            </SimpleError>\n        </div>\n    )\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(InputPointForm)\n)","\r\nimport React, { Component } from 'react';\r\nexport default class Card extends Component<any, any> {\r\n    constructor(props: any) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div {...this.props.attributes} className={\"card \" + this.props.className}>\r\n                {this.props.title ? <div className=\"card-header\">\r\n                    {this.props.title}\r\n                </div> : null}\r\n                <div className=\"card-body\">\r\n                    {this.props.children}\r\n                </div>\r\n                {this.props.footerContent != undefined ?\r\n                    <div className=\"card-footer\">\r\n                        {this.props.footerContent}\r\n                    </div>\r\n                    : null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","\r\nimport School from './School';\r\nimport Student from './Student';\r\n\r\nexport default class Class {\r\n    static studentClassString(student: Student| undefined): string {\r\n        return (student?.kelas?.level??\"\") +(student?.kelas?.rombel??\"\") + \" \" + (student?.kelas?.sekolah?.nama??\"\");\r\n    }\r\n    id?:string;\r\n    name?:string;\r\n    level?:string;\r\n    rombel?:string;\r\n    sekolah?:School;\r\n}","\nimport React, { Component } from 'react'\nimport PointRecord from '../../../../models/PointRecord';\nimport Card from '../../../container/Card';\nimport FormGroup from '../../../form/FormGroup';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\nimport Class from '../../../../models/Class';\nimport { doItLater } from './../../../../utils/EventUtil';\n\ninterface IProps {\n    record:PointRecord;\n    close():any;\n}\nexport default class PointRecordDetail extends Component<IProps, any> {\n\n    componentDidMount() {\n        const opt:ScrollToOptions = { top:0,  behavior: 'smooth' };\n        doItLater(()=>{\n            window.scrollTo(opt);\n        }, 100);\n    }\n\n    render() {\n        const record = PointRecord.clone(this.props.record);\n        const pictureUrl = record.getPicture();\n        const timeStamp = record.getTimestamp();\n        return <Card title={\"Detail Pelanggaran\"} footerContent={<AnchorWithIcon className=\"btn btn-dark\" onClick={this.props.close} >Ok</AnchorWithIcon>}>\n            <FormGroup label=\"Nama\">{record.student?.user?.name} - {Class.studentClassString(record.student)}</FormGroup>\n            <FormGroup label=\"Pelanggaran\">\n                <strong>{record.rule_point?.category?.name}</strong> - {record.rule_point?.name} <span className=\"badge badge-dark\">{record.rule_point?.point}</span>\n            </FormGroup>\n            <FormGroup label=\"Waktu\" children={timeStamp} />\n            <FormGroup label=\"Lokasi\" children={record.location??\"-\"} />\n            <FormGroup label=\"Deskripsi\" children={record.description??\"-\"} />\n            <FormGroup label=\"Diputihkan\" children={record.dropped_at??\"-\"} />\n            \n            <FormGroup label=\"Gambar\">\n                {pictureUrl?\n                <img src={pictureUrl} width={200} height={200} className=\"border border-dark\" />:null}\n            </FormGroup>\n        </Card>\n    }\n}","import React from 'react'\nimport BaseComponent from './../../BaseComponent';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\nimport PointRecord from './../../../models/PointRecord';\nimport AnchorWithIcon from './../../navigation/AnchorWithIcon';\nimport StudentService from './../../../services/StudentService';\n\nclass State {\n    loading: boolean = false;\n}\nclass DropPointButtons extends BaseComponent {\n    studentService: StudentService;\n    state: State = new State();\n    constructor(props) {\n        super(props, true);\n        this.studentService = this.getServices().studentService;\n    }\n    startLoading = () => { this.setState({ loading: true }); }\n    endLoading = () => { this.setState({ loading: false }); }\n    getRecord = (): PointRecord => {\n        return this.props.record;\n    }\n\n    setDropped = (isDropped: boolean) => {\n        const item = this.getRecord();\n        this.commonAjax(this.studentService.setPointDropped,\n            this.props.onUpdated,\n            this.showCommonErrorAlert,\n            item.id, isDropped);\n    }\n    render() {\n        const item = this.getRecord();\n        if (this.state.loading) {\n\n            return <button className=\"btn btn-info btn-sm\">\n                <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n            </button>\n        }\n        return (\n            item.dropped_at ?\n                <AnchorWithIcon onClick={(e) => this.setDropped(false)} className=\"btn btn-info btn-sm\" iconClassName=\"fas fa-arrow-up\">\n                    Undrop\n                </AnchorWithIcon> :\n                <AnchorWithIcon onClick={(e) => this.setDropped(true)} className=\"btn btn-info btn-sm\" iconClassName=\"fas fa-arrow-down\">\n                    Drop\n                </AnchorWithIcon>\n        )\n    }\n}\n\nexport default withRouter(connect(\n    mapCommonUserStateToProps\n)(DropPointButtons))","import React, { ChangeEvent } from 'react'\nimport BaseManagementPage from './BaseManagementPage';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\nimport EditDeleteButton from './EditDeleteButton'\nimport PointRecord from '../../../models/PointRecord';\nimport Filter from '../../../models/commons/Filter';\nimport FormGroup from '../../form/FormGroup';\nimport NavigationButtons from '../../navigation/NavigationButtons';\nimport { tableHeader } from '../../../utils/CollectionUtil';\nimport Spinner from '../../loader/Spinner';\nimport FilterPeriod from '../../form/FilterPeriod';\nimport PointRecordDetail from '../dormitoryactivity/point-record/PointRecordDetail';\nimport StudentService from '../../../services/StudentService';\nimport WebResponse from '../../../models/commons/WebResponse';\nimport Category from '../../../models/Category';\nimport Class from '../../../models/Class';\nimport { MONTHS } from './../../../utils/DateUtil';\nimport DropPointButtons from '../dormitoryactivity/DropPointButtons';\nclass State {\n    items: PointRecord[] = [];\n    filter: Filter = new Filter();\n    totalData: number = 0;\n    record?: PointRecord;\n    loading: boolean = false;\n    categories: Category[] = [];\n    classes: Class[] = [];\n    selectedCategory:Category| undefined;\n    showFilterDetail:boolean = false;\n}\n\nclass PointRecordSummary extends BaseManagementPage {\n    state: State = new State();\n    private studentService:StudentService;\n    constructor(props) {\n        super(props, 'pointrecord', false);\n         \n        this.studentService = this.getServices().studentService;\n\n        const f = new Filter();\n        const d = new Date();\n        \n        f.limit = 10;\n        f.day = f.dayTo = d.getDate();\n        f.month = 1; //January\n        f.monthTo = d.getMonth() + 1;\n        f.year = f.yearTo = d.getFullYear();\n        f.fieldsFilter =  {dropped : 'ALL',  class_id : 'ALL', point_name : '', category_name:''  };\n\n        this.state.filter = f;\n                                \n    }\n \n    componentDidMount() {\n        super.componentDidMount();\n        this.loadCategories();\n        this.loadClasses();\n    }\n    loadClasses = () => {\n        this.commonAjax(this.studentService.getClasses,\n            this.classessLoaded, console.error)\n    }\n    loadCategories = () => {\n        this.commonAjax(this.studentService.getCategories,\n            this.categoriesLoaded, console.error);\n    }\n    categoriesLoaded = (response:WebResponse) => {\n        this.setState({categories: response.items});\n    }\n    classessLoaded = (response:WebResponse) => {\n        this.setState({classes: response.items});\n    }\n    setSelectedCategory = (cat:Category) => {\n        const filter = this.state.filter;\n        if (cat.id == \"\") {\n            filter.fieldsFilter['point_name'] = '';\n        }\n        this.setState({filter: filter, selectedCategory:cat});\n    }\n    showDetail = (item:PointRecord) => this.setState({record: item}); \n    hideDetail = () => this.setState({record: undefined}, this.scrollTop);\n    showFilterDetail = () =>  this.setState({showFilterDetail: true}); \n    hideFilterDetail = () =>  this.setState({showFilterDetail: false}); \n    \n    openEditPage = (p:PointRecord) => {\n        this.props.history.push({\n            pathname: '/dormitoryactivity/pointrecordedit',\n              state: {record: p }\n         })\n        \n    }\n\n    render() {\n        const filter: Filter = this.state.filter;\n        const fieldsFilter = filter.fieldsFilter;\n        const title = \"Rekap Pelanggaran\";\n        if (this.state.record) {\n            return (\n                <div className=\"container-fluid section-body\">\n                    <h2>{title}</h2>\n                    <PointRecordDetail record={this.state.record} close={this.hideDetail} />\n                </div>\n            )\n        }\n        const defaultClass: Class = { id: \"ALL\", level: \"Semua Kelas\", sekolah: {} };\n        const selectedClassId =  filter.fieldsFilter['class_id'] ? filter.fieldsFilter['class_id'] : \"ALL\";\n\n        return (\n            <div className=\"container-fluid section-body\">\n                <h2>{title}</h2>\n                <hr />\n                <form className=\"form-filter\" onSubmit={this.reload}>\n                    <FormGroup label=\"Cari\">\n                        <div className=\"input-group\">\n                            <input name=\"name\" placeholder=\"Nama siswa\" className=\"form-control-sm\" value={fieldsFilter ? fieldsFilter['name'] : \"\"} onChange={this.updateFieldsFilter} />\n                            <select value={selectedClassId} onChange={this.updateFieldsFilter} className=\"form-control-sm\" name=\"class_id\">\n                                {[defaultClass, ...this.state.classes].map((c) => {\n                                    return <option key={'class_' + c.id} value={c.id}>{c.level}{c.rombel} - {c.sekolah?.nama}</option>\n                                })}\n                            </select>  \n                        </div>\n                    </FormGroup>\n                    {this.state.showFilterDetail?\n                    <><div  className=\"filter-sticky bg-white border border-gray pt-3 pb-3 pl-3 pr-3\">\n                        <FormGroup label=\"Kategori\"> \n                                <select value={filter.fieldsFilter['category_name']} onChange={this.updateFieldsFilter} className=\"form-control-sm\" name=\"category_name\">\n                                    {[Object.assign(new Category, {id:\"\", name:\"Semua\"}), ...this.state.categories].map((c) => {\n                                        return <option onClick={()=>this.setSelectedCategory(c)}  key={'cat_' + c.id} value={c.id == \"\" ? c.id :c.name}>{c.name}</option>\n                                    })}\n                                </select> \n                        </FormGroup>\n                        {this.state.selectedCategory && this.state.selectedCategory.points?\n                            <FormGroup label=\"Pelanggaran\">\n                                <select value={filter.fieldsFilter['point_name']} onChange={this.updateFieldsFilter} className=\"form-control-sm\" name=\"point_name\">\n                                    {[{id:\"\", name:\"Semua\"}, ...this.state.selectedCategory.points].map((c) => {\n                                        return <option key={'cat_' + c.id} value={c.id == \"\" ? c.id :c.name}>{c.name}</option>\n                                    })}\n                                </select>\n                            </FormGroup>:\n                        null}\n                        <FormGroup label=\"Periode\">\n                            <div className=\"input-group\">\n                                <FilterPeriod filter={filter} onChange={this.updateFilter} />\n                            </div>\n                            <div className=\"input-group\">\n                                <FilterPeriod mode={\"to\"} filter={filter} onChange={this.updateFilter} />\n                            </div> \n                        </FormGroup>\n                        <FormGroup label=\"Pemutihan\">\n                            <select name=\"dropped\" className=\"form-control-sm\" value={fieldsFilter ? fieldsFilter['dropped'] : 'ALL'} onChange={this.updateFieldsFilter}>\n                                <option value=\"ALL\">All</option>\n                                <option value=\"false\">Belum</option>\n                                <option value=\"true\">Sudah</option>\n                            </select>\n                        </FormGroup>\n                        <FormGroup label=\"Jumlah Tampilan\">\n                            <input type=\"number\" name=\"limit\" className=\"form-control-sm\" value={filter.limit ?? 5} onChange={this.updateFilter} />\n                        </FormGroup>\n                        <FormGroup label=\"\">\n                            <a className=\"btn btn-dark btn-sm\" onClick={this.hideFilterDetail}>Tutup</a>\n                            <input className=\"ml-3 btn btn-primary btn-sm\" type=\"submit\" value=\"Cari\" />\n                        </FormGroup>\n                    </div>\n                    <FormGroup label=\"\">\n                        <a className=\"btn btn-dark btn-sm\" onClick={this.hideFilterDetail}>Tutup Detail Filter</a>\n                    </FormGroup>\n                    </>\n                    :<FormGroup label=\"\">\n                        <a className=\"btn btn-dark btn-sm\" onClick={this.showFilterDetail}>Tampil Detail Filter</a>\n                    </FormGroup> }\n                    <FormGroup label=\"Periode\">\n                        {filter.day} {MONTHS[(filter.month ?? 1) - 1]} {filter.year} - {filter.dayTo} {MONTHS[(filter.monthTo ?? 1) - 1]} {filter.yearTo}\n                    </FormGroup>\n                    <FormGroup>\n                        <input className=\"btn btn-primary btn-sm\" type=\"submit\" value=\"Submit\" />\n                    </FormGroup>\n                </form>\n\n                <NavigationButtons activePage={filter.page ?? 0} limit={filter.limit ?? 10} totalData={this.state.totalData}\n                    onClick={this.loadAtPage} />\n                <ItemsList isAdmin={this.isAdmin()} startingNumber={(filter.page ?? 0) * (filter.limit ?? 10)} loading={this.state.loading}\n                    recordLoadedForDetail={this.showDetail}\n                    recordLoadedForEdit={this.openEditPage}\n                    recordUpdated={this.loadItems}\n                    items={this.state.items} />\n            </div>\n        )\n    }\n}\n\nconst ItemsList = (props: { \n    isAdmin:boolean,\n    loading: boolean, startingNumber: number, \n    items: PointRecord[], recordLoadedForDetail(item: PointRecord):any,\n    recordLoadedForEdit(item: PointRecord):any, recordUpdated():any\n}) => {\n\n    return (\n        <div style={{ overflow: 'scroll' }}>\n            <table className=\"table \">\n                {tableHeader(\"No\", \"Siswa\", \"Kelas\", \"Tanggal\", \"Pelanggaran\", \"Poin\", \"Lokasi\", \"Gambar\", \"Pemutihan\", \"Opsi\")}\n                <tbody>\n\n                    {props.loading ?\n                        <tr><td colSpan={7}><Spinner /></td></tr>\n                        : \n                        props.items.map((item, i) => {\n                            item = PointRecord.clone(item);\n                            const student = item.student;\n                            return (\n                                <tr key={\"PointRecord-\" + i}  className={item.dropped_at?\"alert alert-success\":\"\" }>\n                                    <td>{i + 1 + props.startingNumber}</td>\n                                    <td>{item.student?.user?.name}</td>\n                                    <td>{Class.studentClassString(student)}</td>\n                                    <td>{item.getTimestamp()}</td>\n                                    <td>{item.rule_point?.name} ({item.rule_point?.category?.name})</td>\n                                    <td>{item.rule_point?.point}</td>\n                                    <td>{item.location}</td>\n                                    <td>{item.getPicture() ?\n                                        <img src={item.getPicture() ?? \"\"} width={50} height={50} />\n                                        : null}</td>\n                                    <td>{item.dropped_at ? <i className=\"fas fa-check\"/>  : \"-\"} </td>\n                                    <td>\n                                        {props.isAdmin? <DropPointButtons record={item} onUpdated={props.recordUpdated} /> :\n                                        <EditDeleteButton record={item} \n                                        types={[ !props.isAdmin&& item.dropped_at?null:'edit','detail', props.isAdmin?'delete':null]}\n                                            recordLoadedForDetail={props.recordLoadedForDetail}\n                                            recordLoaded={props.recordLoadedForEdit} \n                                            modelName={'pointrecord'} />\n                                        }\n                                    </td>\n                                </tr>\n                            )\n                        })}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(PointRecordSummary)\n)","import React, { FormEvent } from 'react'\nimport BaseComponent from './../../../BaseComponent';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from './../../../../constant/stores';\nimport Card from './../../../container/Card';\nimport FormGroup from './../../../form/FormGroup';\nimport Student from './../../../../models/Student';\nimport MasterDataService from './../../../../services/MasterDataService';\nimport WebRequest from './../../../../models/commons/WebRequest';\nimport WebResponse from './../../../../models/commons/WebResponse';\nimport AnchorWithIcon from './../../../navigation/AnchorWithIcon';\nimport Class from './../../../../models/Class';\nclass State {\n    studentName?:string;\n    items:Student[] = [];\n    item?:Student;\n}\nclass StudentForm extends BaseComponent{\n\n    state:State = new State();\n    masterDataService:MasterDataService;\n    constructor(props) {\n        super(props, true);\n        this.masterDataService = this.getServices().masterDataService;\n    }\n\n    submit = (e:FormEvent) => {\n        e.preventDefault();\n        this.loadStudent();\n    }\n    itemsLoaded = (response: WebResponse) => {\n        this.setState({items: response.items});\n    }\n    loadStudent = () => {\n        const request:WebRequest = {\n            modelName:'student',\n            filter:{\n                limit: 15,\n                fieldsFilter: {  name:this.state.studentName  }\n            }\n        }\n        this.commonAjax(\n            this.masterDataService.list,\n            this.itemsLoaded,\n            this.showCommonErrorAlert,\n            request\n        )\n    }\n    setSelectedItem = (item:Student) => {\n        this.setState({item:item,  items:[], studentName:undefined}, ()=> {\n            if (this.props.setItem) {\n                this.props.setItem(item);\n            }\n        });\n    }\n    reset = () => {\n        this.setState({item:undefined, items:[], studentName:undefined}, () => {\n            if (this.props.setItem) {\n                this.props.setItem(undefined);\n            }\n        });\n    }\n    render() {\n        const items:Student[] = this.state.items;\n        const selectedItem:Student | undefined = this.state.item;\n        return (\n            <form onReset={this.reset} onSubmit={this.submit}>\n                <Card title=\"Select Student\">\n                    <FormGroup label=\"Search\">\n                        <input placeholder=\"Name\" value={this.state.studentName??\"\"} className=\"form-control\" onChange={this.handleInputChange} name=\"studentName\" />\n                        {items.length > 0?<div style={{position:'absolute', zIndex: 200}} className=\"container-fluid bg-light rounded-sm border border-dark\">\n                                {items.map(item=>{\n                                    return (\n                                        <div className=\"option-item\"onClick={()=>{\n                                            this.setSelectedItem(item);\n                                        }} style={{cursor: 'pointer'}} key={\"Student-\"+item.id} >{item.user?.name}</div>\n                                    )\n                                })}\n                                <a onClick={this.reset} className=\"option-item\"><i className=\"fas fa-times\"/>&nbsp;close</a>\n                            </div>:null}\n                    </FormGroup>\n                    {selectedItem?\n                    <ItemDetail item={selectedItem} />\n                    :null}\n                    <hr/>\n                    <div className=\"btn-group float-right\">\n                        <input type=\"submit\" className=\"btn btn-dark\" value=\"Search\" />\n                        <input type=\"reset\" className=\"btn btn-secondary\" value=\"Reset\" />\n                        <AnchorWithIcon to={\"/dormitoryactivity/studentlist\"} iconClassName=\"fas fa-list\">Student List</AnchorWithIcon>\n                    </div>\n                </Card>\n            </form>\n        )\n    }\n}\n\nconst ItemDetail = (props:{item:Student}) => {\n\n    return (\n        <>\n            <FormGroup label=\"Name\">{props.item.user?.name}</FormGroup>\n            <FormGroup label=\"Kelas\">{Class.studentClassString(props.item)}</FormGroup>\n            \n        </>\n    )\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(StudentForm)\n)","\nimport BaseEntity from './BaseEntity';\nimport Student from './Student';\nexport default class MedicalRecord extends BaseEntity {\n      day: number = new Date().getDate();\n      month: number = new Date().getMonth();\n      year: number = new Date().getFullYear();\n      temperature_morning?: number;\n      temperature_afternoon?: number;\n      breakfast?: boolean;\n      lunch?: boolean;\n      dinner?: boolean;\n      medicine_consumption: boolean = false;\n      genose_test?: boolean;\n      antigen_test?: boolean;\n      pcr_test?: boolean;\n      description?: string\n      student_id;\n      student?: Student;\n\n      public static clone = (obj:MedicalRecord) : MedicalRecord => {\n            return Object.assign(new MedicalRecord(), obj);\n      }\n      public static instance = (student_id:string, d: number, m: number, y: number): MedicalRecord => {\n            const obj = new MedicalRecord();\n            obj.day = d;\n            obj.month = m;\n            obj.year = y;\n            obj.student_id = student_id;\n            return obj;\n      }\n}","import React, { ChangeEvent, Component, FormEvent } from 'react'\nimport BaseComponent from './../../../BaseComponent';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from './../../../../constant/stores';\nimport MedicalRecord from './../../../../models/MedicalRecord';\nimport StudentService from './../../../../services/StudentService';\nimport WebResponse from './../../../../models/commons/WebResponse';\nimport { twoDigits, monthName } from '../../../../utils/StringUtil';\n\nclass State {\n    record: MedicalRecord = new MedicalRecord();\n}\nclass MedicalRecordDailyInput extends BaseComponent {\n    state: State = new State();\n    studentService: StudentService;\n    constructor(props) {\n        super(props, true);\n        this.studentService = this.getServices().studentService;\n        this.state.record = MedicalRecord.instance(props.student.id, props.day, props.month, props.year);\n    }\n    reset = () => {\n        const props = this.props;\n        this.setState({ record: MedicalRecord.instance(props.student.id, props.day, props.month, props.year) });\n    }\n    setRecord = (record: MedicalRecord) => {\n        this.setState({ record: MedicalRecord.clone(record) });\n    }\n\n    onChange = (e: ChangeEvent) => {\n        const record = this.state.record;\n        const target = e.target as HTMLInputElement;\n        record[target.name] = target.type == 'checkbox' ? target.checked : target.value;\n        this.setState({ record: MedicalRecord.clone(record) });\n    }\n\n    recordSubmitted = (response: WebResponse) => {\n        this.showInfo(\"Data has been submitted\");\n    }\n\n    onSubmit = (e: FormEvent) => {\n        e.preventDefault();\n        const record: MedicalRecord = this.state.record;\n        record.student_id = this.props.student.id;\n        this.commonAjax(\n            this.studentService.submitMedicalRecord,\n            this.recordSubmitted,\n            this.showCommonErrorAlert,\n            record\n        )\n    }\n\n    render() {\n        const record = this.state.record;\n        const period = twoDigits(record.day) + \" \" + monthName(record.month - 1);\n        return (\n            <form onSubmit={this.onSubmit}>\n                <table className=\"table table-bordered table-striped\" style={{ fontSize: '0.8em' }}>\n                    <tbody>\n                        <SingleRow><h5 className='text-center'> {period}</h5></SingleRow>\n                        <SingleRow>\n                            <input type='number' onChange={this.onChange} placeholder=\"Suhu Pagi\" className=\"form-control\" name=\"temperature_morning\" value={record.temperature_morning ?? \"\"} />\n                        </SingleRow>\n                        <SingleRow>\n                            <input type='number' onChange={this.onChange} placeholder=\"Suhu Sore\" className=\"form-control\" name=\"temperature_afternoon\" value={record.temperature_afternoon ?? \"\"} />\n                        </SingleRow>\n                        <SingleRow>\n                            <Checkbox label=\"Sarapan\" onChange={this.onChange} name=\"breakfast\" checked={record.breakfast ?? false} />\n                        </SingleRow>\n                        <SingleRow>\n                            <Checkbox label=\"Makan Siang\" onChange={this.onChange} name=\"lunch\" checked={record.lunch ?? false} />\n                        </SingleRow>\n                        <SingleRow>\n                            <Checkbox label=\"Makan Malam\" onChange={this.onChange} name=\"dinner\" checked={record.dinner ?? false} />\n                        </SingleRow>\n                        <SingleRow>\n                            <Checkbox label=\"Konsumsi Obat\" onChange={this.onChange} name=\"medicine_consumption\" checked={record.medicine_consumption ?? false} />\n                        </SingleRow>\n                        <SingleRow>\n                            <Checkbox label=\"Tes Genose\" onChange={this.onChange} name=\"genose_test\" checked={record.genose_test ?? false} />\n                        </SingleRow>\n                        <SingleRow>\n                            <Checkbox label=\"Tes Antigen\" onChange={this.onChange} name=\"antigen_test\" checked={record.antigen_test ?? false} />\n                        </SingleRow>\n                        <SingleRow>\n                            <Checkbox label=\"Tes PCR\" onChange={this.onChange} name=\"pcr_test\" checked={record.pcr_test ?? false} />\n                        </SingleRow>\n                        <SingleRow>\n                            <textarea placeholder=\"Catatan\" onChange={this.onChange} style={{ fontSize: '0.9em' }} name=\"description\" value={record.description ?? \"\"}\n                                className=\"form-control\" rows={3} />\n                        </SingleRow>\n                        <SingleRow>\n                            <button className=\"btn btn-success\" type=\"submit\">\n                                <i className=\"fas fa-save\" /> {period}\n                            </button>\n                        </SingleRow>\n                    </tbody>\n                </table>\n            </form>\n        )\n    }\n}\n\nconst Checkbox = (props: { onChange(e: ChangeEvent): any, label: string, name: string, checked: boolean }) => {\n\n    return (\n        <>{props.label}\n            <input type=\"checkbox\" style={{ marginRight: 5 }} className=\"form-control\"\n                onChange={props.onChange}\n                name={props.name}\n                checked={props.checked} />\n        </>\n    )\n}\nconst SingleRow = (props: { children: any }) => {\n    return (\n        <tr><td>\n            <div className=\"text-center\" style={{ minHeight: 40 }}>{props.children}</div></td></tr>\n    )\n}\n\nexport default\n    connect(\n        mapCommonUserStateToProps, null, null, { forwardRef: true }\n    )(MedicalRecordDailyInput)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\nimport StudentForm from './StudentForm';\nimport Student from './../../../../models/Student';\nimport FilterPeriod from './../../../form/FilterPeriod';\nimport Filter from './../../../../models/commons/Filter';\nimport { getMonthDays } from './../../../../utils/DateUtil';\nimport Card from './../../../container/Card';\nimport MedicalRecord from './../../../../models/MedicalRecord';\nimport MedicalRecordDailyInput from './MedicalRecordDailyInput';\nimport StudentService from './../../../../services/StudentService';\nimport WebResponse from './../../../../models/commons/WebResponse';\nimport AnchorWithIcon from './../../../navigation/AnchorWithIcon';\nimport { doItLater } from './../../../../utils/EventUtil';\nimport BasePage from './../../BasePage';\nimport SimpleError from './../../../alert/SimpleError';\nclass State {\n    student?: Student;\n    month: number = new Date().getMonth() + 1;\n    year: number = new Date().getFullYear();\n    mappedItems: Map<number, MedicalRecord> = new Map()\n}\nclass MedicalRecordForm extends BasePage {\n    state: State = new State();\n    studentService: StudentService;\n    inputRefs: Map<number, any> = new Map();\n    constructor(props) {\n        super(props, \"Medical Record\", true);\n        this.studentService = this.getServices().studentService;\n    }\n    setStudent = (student: Student | undefined) => {\n        if (student) {\n            student = Object.assign(new Student(), student);\n        }\n        this.setState({ student: student }, this.loadMonthlyRecord);\n    }\n    validateStudentData = () => {\n        const student = this.props.location.state?this.props.location.state.student : undefined;\n        if (student) {\n            this.setStudent(student);\n        }\n    }\n    \n    reset = () => {\n        doItLater(() => {\n            if (this.state.student)\n            this.inputRefs.forEach((ref: any, day: number) => {\n                if (ref) { ref.reset(); }\n            })\n        }, 100);\n    }\n    recordsLoaded = (response: WebResponse) => {\n\n        const mappedItems:Map<String, MedicalRecord> = this.toMap(response.items);\n        \n        this.setState({ mappedItems: mappedItems }, () => {\n            doItLater(() => {\n                this.inputRefs.forEach((ref: any, day: number) => {\n                    let record = mappedItems.get(day.toString());\n                    if (!record) {\n                        record = MedicalRecord.instance(this.state.student?.id, day, this.state.month, this.state.year);\n                    } else {\n                        record = MedicalRecord.clone(record);\n                    }\n                    if (ref) {\n                        ref.setRecord(record);\n                    }\n                })\n            }, 100);\n        });\n    }\n\n\n    toMap = (items: MedicalRecord[]): Map<String, MedicalRecord> => {\n        const map: Map<String, MedicalRecord> = new Map();\n        for (let i = 0; i < items.length; i++) {\n            const item = items[i];\n            map.set(item.day.toString(), item);\n        }\n        return map;\n    }\n\n    loadMonthlyRecord = () => {\n        this.commonAjax(\n            this.studentService.loadMonthlyMedicalRecord,\n            this.recordsLoaded, this.showCommonErrorAlert,\n            this.state.student?.id, this.state.month, this.state.year\n        )\n    }\n\n    getFilter = (): Filter => {\n        const f = new Filter();\n        f.month = this.state.month;\n        f.year = this.state.year;\n        return f;\n    }\n\n    componentDidMount() {\n        this.validateLoginStatus(()=>{\n            this.scrollTop();\n            this.validateStudentData();\n        });\n    }\n    dayCount = () => {\n        return getMonthDays(this.state.month, this.state.year);\n    }\n    render() {\n        const student = this.state.student;\n        const filter = this.getFilter();\n        const dayCount = this.dayCount();\n        const days: number[] = [];\n        for (let i = 1; i <= dayCount; i++) {\n            days.push(i);\n        }\n        const gridTemplateColumns = ('150px ').repeat(dayCount);\n\n        return (\n            <div className=\"container-fluid section-body\">\n                <h2> {student ? student.user?.name: this.title}</h2> \n                <hr/>\n                <StudentForm setItem={this.setStudent} />\n                <p />\n                {student ?\n                    <Card>\n                        <div className=\"input-group\">\n                            <FilterPeriod filter={filter} hideDay onChange={this.handleInputChange} />\n                            <div className=\"input-group-append\">\n                            <AnchorWithIcon iconClassName=\"fas fa-redo\" onClick={this.loadMonthlyRecord}>Load Data</AnchorWithIcon>\n                            </div>\n                        </div>\n                        <hr/>\n                        <div className=\"container-fluid  row\"> \n                            <div className=\"col-12\" style={{ overflow: 'scroll' }}>\n                                <div style={{ display: 'grid', gridTemplateColumns: gridTemplateColumns }}>\n\n                                    {days.map(day =>\n                                        <MedicalRecordDailyInput key={\"record-input-\" + day} student={student}\n                                            ref={ref => {this.inputRefs.set(day, ref)}}\n                                            year={this.state.year}\n                                            month={this.state.month} day={day} />)}\n                                </div>\n                            </div>\n                        </div>\n                    </Card>\n                    : <Warning/>}\n            </div>\n        )\n    }\n\n}\n\n\nconst Warning = () => {\n    return (<SimpleError>\n                <i className=\"fas fa-exclamation-circle\" />&nbsp;Please select student <hr />\n                <AnchorWithIcon to={\"/dormitoryactivity/studentlist\"} iconClassName=\"fas fa-list\">Student List</AnchorWithIcon>\n            </SimpleError> )\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(MedicalRecordForm)\n)","import React from 'react';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport Card from './../../container/Card';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport ApplicationProfile from './../../../models/ApplicationProfile';\r\nimport FormGroup from '../../form/FormGroup';\r\nclass AboutUs extends BaseComponent {\r\n    constructor(props) {\r\n        super(props, false);\r\n    }\r\n    componentDidMount() {\r\n        document.title = \"About Us\";\r\n    }\r\n    render() {\r\n        const appProfile:ApplicationProfile = this.getApplicationProfile();\r\n        return (<div className=\"section-body container-fluid\" style={{marginTop:'20px'}}>\r\n            <h2>About Us</h2>\r\n            <Card title=\"Application\">\r\n                <FormGroup label=\"Name\">{appProfile.name}</FormGroup>\r\n                <FormGroup  ><i>{appProfile.description}</i></FormGroup>\r\n                <FormGroup label=\"Contact\">{appProfile.contact}</FormGroup>\r\n                <FormGroup label=\"Address\">{appProfile.address}</FormGroup>\r\n            </Card>\r\n            <p/>\r\n            <Card title=\"Development Mode\">\r\n                {/* <FormGroup label=\"Repository\"><a target=\"_blank\" href=\"https://github.com/fajaralmu\">https://github.com/fajaralmu</a></FormGroup>\r\n                <FormGroup label=\"Front End\">React Js</FormGroup>\r\n                <FormGroup><a target=\"_blank\" href=\"https://github.com/fajaralmu/front-end-shopping-mart-v2\">https://github.com/fajaralmu/front-end-shopping-mart-v2</a></FormGroup>\r\n                <FormGroup label=\"Back End\">Java, Spring MVC</FormGroup>\r\n                <FormGroup><a target=\"_blank\" href=\"https://github.com/fajaralmu/universal-good-shop-v2\">https://github.com/fajaralmu/universal-good-shop-v2</a></FormGroup> */}\r\n            </Card>\r\n            <p/>\r\n        </div>);\r\n    }\r\n}\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps, \r\n)(AboutUs))","\r\n\r\nimport React, { RefObject, Component, FormEvent, Fragment, ChangeEvent } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from '../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport './Login.css';\r\nimport Spinner from '../../loader/Spinner';\r\nimport UserService from './../../../services/UserService';\r\nimport UserModel from './../../../models/User';\r\nimport WebResponse from '../../../models/commons/WebResponse'; \r\nclass IState {\r\n    loading: boolean = false; displayName: string = \"\";\r\n    username: string = \"\";\r\n    editPassword: string = \"\";\r\n    editPasswordRepeat: string = \"\";\r\n}\r\nclass Register extends BaseComponent {\r\n    state: IState = new IState();\r\n    userService: UserService;\r\n    constructor(props: any) {\r\n        super(props, false);\r\n        this.userService = this.getServices().userService;\r\n    }\r\n    startLoading = () => this.setState({ loading: true });\r\n    endLoading = () => this.setState({ loading: false });\r\n    register(e: FormEvent) {\r\n        e.preventDefault();\r\n        if (this.fieldComplete()) {\r\n            if (this.passwordMatch() == false) {\r\n                this.showCommonErrorAlert(\"Password mismatch\");\r\n                return;\r\n            }\r\n            this.saveUser();\r\n        } else {\r\n            this.showCommonErrorAlert(\"Field is not complete\");\r\n        }\r\n    }\r\n    saveUser = () => {\r\n        const user = new UserModel();\r\n        user.password = this.state.editPassword.trim();\r\n        user.nickname = this.state.username.trim();\r\n        user.name = this.state.displayName.trim();\r\n        this.commonAjax(\r\n            this.userService.saveUser,\r\n            this.userSaved,\r\n            this.showCommonErrorAlert,\r\n            user\r\n        );\r\n    }\r\n    userSaved = (response: WebResponse) => {\r\n        this.showConfirmation(\"Success\")\r\n            .then((ok) => {\r\n                this.backToLogin();\r\n            })\r\n    }\r\n    passwordMatch = () => {\r\n        return this.state.editPassword.trim() != \"\" && this.state.editPassword.trim() == this.state.editPasswordRepeat.trim();\r\n    }\r\n    fieldComplete = () => {\r\n        return this.state.displayName.trim() != \"\"\r\n            && this.state.username.trim() != \"\"\r\n            && this.state.editPassword.trim() != \"\"\r\n            && this.state.editPasswordRepeat.trim() != \"\";\r\n    }\r\n    componentDidMount() {\r\n        document.title = \"Register\";\r\n        if (this.isUserLoggedIn()) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.isUserLoggedIn()) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"RegisterForm\" className=\"Register-wrapper\" style={{ margin: 0, padding: 0 }}>\r\n                <div className=\"text-center\" style={{ marginTop: '25px' }}>\r\n                    <h1>Register</h1>\r\n                </div>\r\n                <form name='Register' onSubmit={(e) => { this.register(e) }}\r\n                    method='POST' className=\"form-signin text-center\">\r\n                    <CommonField name=\"username\" value={this.state.username} onChange={this.handleInputChange} />\r\n                    <CommonField name=\"displayName\" value={this.state.displayName} onChange={this.handleInputChange} />\r\n\r\n                    <PasswordField name=\"editPassword\" value={this.state.editPassword} onChange={this.handleInputChange} />\r\n                    <PasswordField name=\"editPasswordRepeat\" value={this.state.editPasswordRepeat} onChange={this.handleInputChange} />\r\n\r\n                    {this.state.loading ? <Spinner /> :\r\n                        <button className=\"btn text-light\" style={{ backgroundColor: 'rgb(9,26,78)' }} type=\"submit\">\r\n                            Register\r\n                        </button>}\r\n                    <p />\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst PasswordField = ({ name, value, onChange }) => {\r\n    return <Fragment>\r\n        <label className=\"sr-only\">Password</label>\r\n        <input style={{ borderColor: 'rgb(9,26,78)' }} name={name} value={value} onChange={onChange} type=\"password\" id=\"inputPassword\" className=\"form-control\"\r\n            placeholder={name} required />\r\n        <p />\r\n    </Fragment>\r\n}\r\nconst CommonField = ({ name, value, onChange }) => {\r\n    return (<Fragment>\r\n        <label className=\"sr-only\">Username</label>\r\n        <input style={{ borderColor: 'rgb(9,26,78)' }} name={name} value={value} onChange={onChange} type=\"text\" id=\"username\" className=\"form-control\"\r\n            placeholder={name} required autoFocus />\r\n        <p />\r\n    </Fragment>)\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    //  performRegister: (username: string, password: string, app: any) => dispatch(performRegister(username, password, app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(Register))","import React, { ChangeEvent, FormEvent } from 'react'\nimport BasePage from './../../BasePage';\nimport { withRouter, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from './../../../../constant/stores';\nimport PointRecord from './../../../../models/PointRecord';\nimport FormGroup from '../../../form/FormGroup';\nimport Class from './../../../../models/Class';\nimport StudentService from './../../../../services/StudentService';\nimport WebResponse from './../../../../models/commons/WebResponse';\nimport Category from './../../../../models/Category';\nimport WebRequest from './../../../../models/commons/WebRequest';\nimport RulePoint from './../../../../models/RulePoint';\nimport MasterDataService from './../../../../services/MasterDataService';\nimport InputTime from './../../../form/InputTime';\nimport { parseDate } from '../../../../utils/DateUtil';\nimport AnchorWithIcon from './../../../navigation/AnchorWithIcon';\nimport AttachmentInfo from './../../../../models/settings/AttachmentInfo';\nimport { getAttachmentInfoFromFile } from '../../../../utils/ComponentUtil';\nimport Student from './../../../../models/Student';\nimport Filter from '../../../../models/commons/Filter';\nimport './style.css'\nclass State {\n    record : PointRecord  = new PointRecord();\n    categories:Category[] = [];\n    pointsMap:Record<string, RulePoint[]> = {};\n    students:Student[] = [];\n\n    studentNameSearch:string = \"\";\n\n    selectedCategoryId:string = \"\";\n    selectedPointId:string = \"\";\n\n    attachment:AttachmentInfo|undefined;\n}\nclass PointRecordEdit extends BasePage{\n    \n    state:State = new State();\n    studentService:StudentService;\n    masterDataService:MasterDataService;\n    inputTimeRef:React.RefObject<InputTime> = React.createRef();\n    constructor(props) {\n        super(props, \"Edit Pelanggaran\", true);\n        this.studentService = this.getServices().studentService;\n        this.masterDataService = this.getServices().masterDataService;\n    }\n\n    componentReady() {\n        this.checkPassedData();\n        this.loadCategories();\n    }\n\n    categoriesLoaded = (response: WebResponse) => {\n        this.setState({categories: response.items});\n    }\n    studentsLoaded = (response: WebResponse) => {\n        this.setState({students: response.items});\n    }\n    loadCategories = () => {\n        this.commonAjax(\n            this.studentService.getCategories,\n            this.categoriesLoaded,  this.showCommonErrorAlert\n        )\n    }\n    loadStudents = (e:FormEvent) => {\n        e.preventDefault();\n        if (\"\" == this.state.studentNameSearch) return;\n        const req:WebRequest = {\n            filter:new Filter(),\n            modelName:'student',\n        }\n        if (req.filter)\n            req.filter.fieldsFilter = {\n                'name':this.state.studentNameSearch\n            }\n        this.commonAjax(\n            this.masterDataService.list,\n            this.studentsLoaded,  this.showCommonErrorAlert,\n            req\n        )\n    }\n    rulePointsLoaded = (categoryId:string, response:WebResponse) => {\n        const pointsMap = this.state.pointsMap;\n        pointsMap[categoryId.toString()] = response.items;\n        this.setState({pointsMap: pointsMap});\n    }\n    loadRulePoints = (catId:string) => {  \n        if (catId === \"\" || this.state.pointsMap[catId] !== undefined) {\n            return;\n        }\n        const req: WebRequest = {\n            filter: {limit:0, fieldsFilter:{category_id: catId}},\n            modelName: 'rulepoint',\n        }\n        this.commonAjax(\n            this.masterDataService.list,\n            (resp) => this.rulePointsLoaded(catId, resp),\n            this.showCommonErrorAlert,\n            req\n        )\n    }\n\n    checkPassedData = () => {\n        if (this.props.location &&  this.props.location.state) { \n            this.setState({\n                record: PointRecord.clone(this.props.location.state.record),\n                attachment: this.props.location.state.attachment\n             }, this.updateInput);\n        }\n    }\n    updateInput = () => {\n        /**\n         * time\n         */\n        if (this.inputTimeRef.current) {\n            this.inputTimeRef.current.updateFromProps();\n        }\n        /**\n         * etc\n         */\n    }\n\n    updateRecordField =(e:ChangeEvent) => {\n        const record = this.state.record;\n        const el = e.target as HTMLElement;\n        const name = el['name'];\n        const value = el['value']\n        record[name] =  value;\n        this.setState({record: record});\n    }\n    setSelectedRulePoint = (p:RulePoint) => {\n        const record = this.state.record;\n        record.rule_point = p;\n        record.point_id = p.id;\n        this.setState({record: record});\n    }\n\n    updateTime = (h: number, m: number, s: number) => {\n        const record = this.state.record;\n        record.setTime(h, m, s);\n        this.setState({ record: record });\n    }\n    updateDate = (e: ChangeEvent) => {\n        const date: Date = parseDate((e.target as HTMLInputElement).value);\n        const record = this.state.record;\n        record.setDate(date);\n        this.setState({ pointRecord: record });\n    }\n    submit = () => {\n        this.commonAjax(\n            this.studentService.submitPointRecord,\n            this.recordSubmitted,\n            this.showCommonErrorAlert,\n            this.state.record, this.state.attachment\n        )\n    }\n    recordSubmitted = (r:WebResponse) => {\n        this.setState({record : new PointRecord(), attachment: undefined, selectedCategoryId: \"\"}, ()=> {\n            this.showInfo(\"Data berhasil disimpan\");\n            this.scrollTop();\n        })\n    }\n\n    validateInput = () => {\n        const rec = this.state.record;\n        return ( rec.student_id && rec.point_id  )\n    }\n\n    onSubmit = (e:FormEvent) => {\n        e.preventDefault();\n        if (!this.validateInput()) {\n            this.showError(\"Input tidak lengkap\");\n            return;\n        }\n        this.showConfirmation(\"Simpan data?\")\n        .then(ok=>{\n            if (ok) {  this.submit();  }\n        })\n    }\n    removeImage = () => {\n        this.showConfirmationDanger(\"Hapus gambar?\")\n        .then(ok=>{\n            if (ok) {\n                const record = this.state.record;\n                record.pictures = [];\n                this.setState({record: record, attachment: undefined});\n            }\n        })\n    }\n    updatePicture = (e:ChangeEvent) => {\n        getAttachmentInfoFromFile(e.target as HTMLInputElement)\n        .then(attachment=>{ \n            this.setState({attachment:attachment});\n        }).catch(console.error)\n    }\n    setStudent = (s:Student) => {\n        const record = this.state.record;\n        record.student = s;\n        record.student_id = s.id;\n        this.setState({record: record, students:[], studentNameSearch: ''});\n    }\n    resetStudents = () => this.setState({students: []});\n    render() {\n\n        const record = this.state.record;\n        const categoryID = this.state.selectedCategoryId;\n        const pointsMap = this.state.pointsMap;\n        const pictureUrl = this.state.attachment?this.state.attachment.url : record.getPicture();\n\n        return (\n            <div className=\"section-body container-fluid\">\n                <h2>Edit Pelanggaran</h2>\n                <hr/>\n                <form id=\"form-search-student\" onSubmit={this.loadStudents}>\n                    <FormGroup  label=\"Siswa\" >\n                        <div className=\"mb-3\" style={{position:'absolute'}}>\n                            <div className=\"input-group\">\n                                <input name=\"studentNameSearch\" className=\"form-control\" onChange={this.handleInputChange} value={this.state.studentNameSearch}\n                                    placeholder=\"Cari Nama\" />\n                                <input type=\"submit\" value=\"Cari\" className=\"btn btn-secondary\" />\n                            </div>\n                            {this.state.students.length > 0?\n                            <div className=\"bg-light border rounded border-secondary\" style={{position:'relative', zIndex: 10, padding: 3}}>\n                                {this.state.students.map(s=>{\n                                    return (\n                                        <div onClick={()=> this.setStudent(s)} className=\"option-item\" key={`s_form_${s.id}`}>\n                                            {s.user?.name} {Class.studentClassString(s)}\n                                        </div>\n                                    )\n                                })}\n                                <AnchorWithIcon iconClassName=\"fas fa-times\" className=\"btn btn-dark w-100\" onClick={this.resetStudents} >Tutup</AnchorWithIcon>\n                            </div>\n                            :null}\n                        </div>\n                    </FormGroup>\n                    {record.student? <FormGroup>\n                        <div  >{record.student.user?.name ?? \"\"} {Class.studentClassString(record.student)}\n                        </div> \n                    </FormGroup>\n                    : null}\n                </form>\n                <form onSubmit={this.onSubmit}>\n                    <FormGroup label=\"Pelanggaran\">\n                        <p>{record.rule_point?.name??\"-\"} {record.rule_point? `(${record.rule_point.point})` :\"\"}</p>\n                        <p/>\n                        <select value={categoryID} name=\"selectedCategoryId\" onChange={this.handleInputChange} className=\"form-control\">\n                             <option value=\"\">Pilih Kategori</option>\n                             {this.state.categories.map((cat:Category)=>{\n                                 return (\n                                    <option onClick={(e)=> this.loadRulePoints(cat.id.toString())} key={`cat_ed_opt_${cat.id}`} value={cat.id}>\n                                        {cat.name}\n                                    </option>\n                                 )\n                             })}\n                         </select>\n                         <p/>\n                         <select className=\"form-control\" >\n                             <option value=\"\">Pilih Pelanggaran</option>\n                             {pointsMap[categoryID]?\n                                pointsMap[categoryID].map(p=>{\n                                 return (\n                                    <option onClick={(e)=> this.setSelectedRulePoint(p)} key={`rp_ed_opt_${p.id}`} value={p.id}>\n                                        {p.name} ({p.point})\n                                    </option>\n                                 )\n                             }) : null}\n                         </select>\n                    </FormGroup>\n                    <FormGroup label=\"Tanggal\">\n                        <input type=\"date\" className=\"form-control\" onChange={this.updateDate} name=\"date\" value={record.dateString()} />\n                    </FormGroup>\n                    <FormGroup label=\"Waktu\">\n                        <InputTime ref={this.inputTimeRef} onChange={this.updateTime} value={record.time} />\n                    </FormGroup>\n                    <FormGroup label=\"Lokasi\">\n                        <input type=\"text\" name=\"location\" onChange={this.updateRecordField} className=\"form-control\" value={record.location??\"\"} />\n                    </FormGroup>\n                    <FormGroup label=\"Deskripsi\">\n                        <textarea className=\"form-control\" name=\"description\" onChange={this.updateRecordField} value={record.description??\"\"} />\n                    </FormGroup>\n                    <FormGroup label=\"Gambar\">\n                        {pictureUrl?\n                            <>\n                                <img src={pictureUrl} width={200} height={200} className=\"border border-dark\" />\n                                <p/> \n                                <AnchorWithIcon className=\"btn btn-danger btn-sm\"  onClick={this.removeImage} iconClassName=\"fas fa-times\"  >Hapus Gambar</AnchorWithIcon>\n                            </>:\n                            <div>\n                                <input onChange={this.updatePicture} type=\"file\" accept=\"image/*\" className=\"form-control\" />\n                            </div>\n                        }\n                    </FormGroup>\n                    <FormGroup>\n                        <Link className=\"btn btn-dark\" to=\"/dormitoryactivity/pointsummary\">Kembali</Link>\n                        <input type=\"submit\" className=\"btn btn-primary ml-3\" value=\"Submit\" />\n                    </FormGroup>\n                    {/* <FormGroup label=\"Siswa\">\n                        <input type=\"text\" className=\"form-control\" value={record.student?.user?.name} />\n                    </FormGroup> */}\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    \n)(PointRecordEdit))\n","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../constant/stores';\r\nimport { withRouter, Switch, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Login from '../pages/login/Login';\r\nimport DashboardMain from '../pages/dashboard/main/DashboardMain';\r\nimport HomeMain from '../pages/home/HomeMain';\r\nimport Menu from '../../models/settings/Menu'; \r\nimport MusyrifManagement from '../pages/management/MusyrifManagement';\r\nimport ManagementMain from '../pages/management/ManagementMain';\r\nimport CategoryManagement from '../pages/management/CategoryManagement';\r\nimport RulePointManagement from '../pages/management/RulePointManagement';\r\nimport StudentList from '../pages/dormitoryactivity/StudentList';\r\nimport InputPointForm from '../pages/dormitoryactivity/InputPointForm';\r\nimport PointRecordsManagement from '../pages/management/PointRecordsSummary';\r\nimport MedicalRecordForm from '../pages/dormitoryactivity/medicalrecord/MedicalRecordForm';\r\nimport AboutUs from './../pages/home/AboutUs';\r\nimport Register from '../pages/login/Register'; \r\nimport PointRecordEdit from '../pages/dormitoryactivity/point-record/PointRecordEdit';\r\n\r\nclass ApplicationContent extends BaseComponent {\r\n \r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    setSidebarMenus = (menus: Menu[]) => {\r\n        this.props.setSidebarMenus(menus);\r\n    }\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Switch>\r\n                   \r\n                    {/* -------- home -------- */}\r\n                    <Route exact path=\"/home\" render={\r\n                        (props: any) => {\r\n                            return <HomeMain />\r\n                        }\r\n                    } />\r\n                    <Route exact path=\"/\" render={\r\n                        (props: any) =>\r\n                            <HomeMain />\r\n                    } />\r\n                    <Route exact path=\"/about\" render={\r\n                        (props: any) =>\r\n                            <AboutUs />\r\n                    } />\r\n                     \r\n{/* \r\n                     \r\n                    <Route exact path=\"/management\" render={\r\n                        (props: any) => {\r\n                            console.debug(\"MANAGEMENTS path\")\r\n                            return <MasterDataMain setSidebarMenus={this.setSidebarMenus} />\r\n                        }\r\n                    } />\r\n                    <Route exact path=\"/management/:code\" render={\r\n                        (props: any) =>\r\n                            <MasterDataMain setSidebarMenus={this.setSidebarMenus} />\r\n                    } /> */}\r\n\r\n\r\n                    {/* ///////// PUBLIC ///////// */}\r\n\r\n                </Switch>\r\n                <LoginRoute />\r\n                <StudentsRoute />\r\n                <MusyrifManagementRoute/>\r\n                <Dashboard />\r\n            </Fragment>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        // document.title = \"Login\";\r\n    }\r\n\r\n}\r\n\r\nconst MusyrifManagementRoute  = (props) => {\r\n\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/management\" render={\r\n                (props:any) => <ManagementMain />\r\n            } />\r\n            <Route exact path=\"/management/musyrifmanagement\" render={\r\n                (props:any) => <MusyrifManagement />\r\n            } />\r\n            <Route exact path=\"/management/rule_category\" render={\r\n                (props:any) => <CategoryManagement />\r\n            } />\r\n            <Route exact path=\"/management/rule_point\" render={\r\n                (props:any) => <RulePointManagement />\r\n            } />\r\n        </Switch>\r\n    )\r\n}\r\n\r\nconst StudentsRoute = (proos) => {\r\n\r\n    return (\r\n        <Switch>\r\n             <Route exact path=\"/dormitoryactivity/studentlist\" render={\r\n                (props:any) => <StudentList />\r\n            } />\r\n             <Route exact path=\"/dormitoryactivity/inputpoint\" render={\r\n                (props:any) => <InputPointForm/>\r\n            } />\r\n             <Route exact path=\"/dormitoryactivity/pointsummary\" render={\r\n                (props:any) => <PointRecordsManagement/>\r\n            } />\r\n             <Route exact path=\"/dormitoryactivity/pointrecordedit\" render={\r\n                (props:any) => <PointRecordEdit/>\r\n            } />\r\n             <Route exact path=\"/dormitoryactivity/medicalrecord\" render={\r\n                (props:any) => <MedicalRecordForm/>\r\n            } />\r\n            \r\n        </Switch>\r\n    )\r\n}\r\nconst LoginRoute = (props) => {\r\n\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/login\" render={\r\n                (props: any) =>\r\n                    <Login />\r\n            } />\r\n            <Route exact path=\"/register\" render={\r\n                (props: any) =>\r\n                    <Register />\r\n            } />\r\n        </Switch>\r\n    )\r\n}\r\n\r\n\r\nconst Dashboard = (props) => {\r\n    return (\r\n        <Switch>\r\n            {/* -------- dashboard -------- */}\r\n            <Route exact path=\"/dashboard\" render={\r\n                (props: any) => {\r\n                   \r\n                        console.debug(\"dashboard path\")   \r\n                       return  <DashboardMain />\r\n                }\r\n                   \r\n            } />\r\n            {/* <Route exact path=\"/dashboard/quizhistory\" render={\r\n                (props: any) =>\r\n                    <QuizHistoryPage />\r\n            } /> */}\r\n        </Switch>\r\n    )\r\n}\r\n \r\n\r\nconst mapDispatchToProps = (dispatch: Function) => ({})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(ApplicationContent))","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../constant/stores';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { performLogout } from './../../redux/actionCreators';\r\nimport Menu from '../../models/settings/Menu';\r\nimport './SideBar.css'\r\n\r\nclass SideBar extends BaseComponent {\r\n    constructor(props: { sidebarMenus?: Menu[] }) {\r\n        super(props, false);\r\n    }\r\n    isSidebarActive = (menu: Menu) => {\r\n        const parentMenu: Menu = this.props.parentMenu;\r\n        if (null == parentMenu) { return false; }\r\n        const pathName = this.props.location.pathname;\r\n        return parentMenu.url + \"/\" + menu.url == pathName;\r\n    }\r\n    componentDidMount() {\r\n        window.addEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    handleScroll(event) {\r\n        let scrollTop = event.srcElement.body.scrollTop,\r\n            itemTranslate = Math.min(0, scrollTop / 3 - 60);\r\n        // console.debug(\"scrollTop: \", scrollTop);\r\n\r\n    }\r\n    render() {\r\n        const parentMenu: Menu = this.props.parentMenu;\r\n        if (null == parentMenu) { return null }\r\n        const menus: Menu[] = this.props.sidebarMenus == null ? [] : this.props.sidebarMenus;\r\n        const user = this.getLoggedUser();\r\n        return (\r\n            <ul id=\"sidebar\" className=\"sidebar-nav bg-light\">\r\n                <Brand show={parentMenu != null} brand={parentMenu} />\r\n\r\n                {menus.map(menu => {\r\n                    if (menu.userAuthorized && !menu.userAuthorized(user)) return null;\r\n                    const isActive: boolean = this.isSidebarActive(menu);\r\n                    const menuClassName = isActive ? 'menu-active' : 'regular-menu';\r\n                    return (\r\n                        <li className={\"sidebar-item \" + menuClassName} key={\"SIDEBAR_\" + menu.code}><Link to={parentMenu.url + \"/\" + menu.url}>\r\n                            <span className=\"sidebar-icon\"><i className={Menu.getIconClassName(menu)}></i></span>\r\n                            <span className={'menu-label'} >{menu.name}</span>\r\n                        </Link></li>\r\n                    )\r\n                })\r\n                }\r\n            </ul >\r\n        )\r\n    }\r\n\r\n}\r\nconst Brand = (props) => {\r\n    if (props.show == false) return null;\r\n    return (\r\n        <Fragment>\r\n            <li id=\"sidebar-brand\" className=\"sidebar-brand\" style={{ marginBottom: '20px' }}>\r\n                <div style={{\r\n                    textAlign: 'center', paddingTop: '10px',\r\n                    paddingBottom: '10px'\r\n                }}>\r\n                    <h3 className=\"text-dark\">\r\n                        <i className={Menu.getIconClassName(props.brand)}></i>\r\n                    </h3>\r\n                    <Link to={props.brand.url} style={{ textDecoration: 'none' }}><h4 className=\"text-dark\">{props.brand.name}</h4></Link>\r\n                </div>\r\n            </li>\r\n            <li className={\"sidebar-item-brand \"} >\r\n                <Link to={props.brand.url}>\r\n                    <span className=\"sidebar-icon\"><i className={Menu.getIconClassName(props.brand)}></i></span>\r\n                </Link>\r\n            </li>\r\n        </Fragment>\r\n    )\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    performLogout: (app: any) => dispatch(performLogout(app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(SideBar))","import React, { Fragment } from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../constant/stores';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { performLogout } from './../../redux/actionCreators';\r\nimport Header from '../navigation/Header';\r\nimport ApplicationContent from './ApplicationContent';\r\nimport SideBar from '../navigation/SideBar';\r\nimport './Layout.css';\r\nimport Menu from '../../models/settings/Menu';\r\nimport { getMenuByMenuPath, extractMenuPath } from './../../constant/Menus';\r\nclass IState {\r\n    showSidebar: boolean = false;\r\n    activeMenuCode: any = null;\r\n    menu?: Menu;\r\n    sidebarMenus?: Menu[]\r\n};\r\nclass MainLayout extends BaseComponent {\r\n    state: IState = new IState();\r\n    currentPathName: string = \"\";\r\n    constructor(props: any) {\r\n        super(props, false);\r\n        this.state = {\r\n            ...this.state,\r\n        }\r\n    }\r\n    setMenuNull = () => {\r\n        this.setState({ menu: undefined, showSidebar: false, activeMenuCode: null, sidebarMenus: null });\r\n    }\r\n    setMenu = (menu: Menu) => {\r\n        if (menu == null) {\r\n            return;\r\n        }\r\n        this.setState({ menu: menu, sidebarMenus: null, showSidebar: menu.showSidebar, activeMenuCode: menu.code });\r\n    }\r\n    setSidebarMenus = (menus: Menu[]) => {\r\n        // console.debug(\"Set sidebar menus: \", menus);\r\n        this.setState({ sidebarMenus: menus });\r\n    }\r\n    componentDidMount() {\r\n        this.setCurrentMenu();\r\n    }\r\n    componentDidUpdate() {\r\n        this.setCurrentMenu();\r\n    }\r\n    setCurrentMenu = () => {\r\n        const pathName = extractMenuPath(this.props.location.pathname);\r\n\r\n        if (pathName == this.currentPathName) {\r\n            return;\r\n        }\r\n        this.currentPathName = pathName;\r\n        const menu = getMenuByMenuPath(pathName);\r\n        if (menu == null) {\r\n            this.setMenuNull();\r\n        } else {\r\n            this.setMenu(menu);\r\n        }\r\n    }\r\n    getSubMenus = () :Menu[]|null => {\r\n        const menuState:Menu|undefined = this.state.menu;\r\n        if (menuState && menuState.subMenus != null && menuState.subMenus?.length > 0) {\r\n            return menuState.subMenus;\r\n        }\r\n        if (this.state.sidebarMenus) {\r\n            return this.state.sidebarMenus;\r\n        }\r\n        return null;\r\n    }\r\n    render() {\r\n        const showSidebar: boolean = this.state.showSidebar == true;\r\n        const className = showSidebar ? \"app-content\" : \"content\";\r\n        return (\r\n            <Fragment>\r\n                <Header setMenuNull={this.setMenuNull} activeMenuCode={this.state.activeMenuCode} setMenu={this.setMenu} />\r\n                <div id=\"content-wrapper\" className={\"container-fluid  \" + className}>\r\n                    <ApplicationContent setSidebarMenus={this.setSidebarMenus} />\r\n                </div>\r\n                {showSidebar ?\r\n                    <SideBar sidebarMenus={this.getSubMenus()} parentMenu={this.state.menu} />\r\n                    : null}\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    performLogout: (app: any) => dispatch(performLogout(app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(MainLayout))","\nimport React, { Component, Fragment, RefObject } from 'react';\nimport './App.css';\nimport { withRouter } from 'react-router-dom'\nimport * as actions from './redux/actionCreators'\nimport { connect } from 'react-redux'\nimport SockJsClient from 'react-stomp';\nimport * as url from './constant/Url';\nimport { mapCommonUserStateToProps } from './constant/stores';\nimport Loader from './component/loader/Loader';\nimport Alert from './component/alert/Alert';\nimport MainLayout from './component/layout/MainLayout';\nimport WebResponse from './models/commons/WebResponse';\nimport Spinner from './component/loader/Spinner';\nimport { performWebsocketConnection, setWebSocketUrl, registerWebSocketCallbacks } from './utils/websockets';\nimport UserService from './services/UserService';\nimport AnchorWithIcon from './component/navigation/AnchorWithIcon';\nimport { time } from 'console';\nimport { doItLater, updateFavicon } from './utils/EventUtil';\n\nclass IState {\n  loading: boolean = false;\n  loadingPercentage: number = 0;\n  requestId?: string;\n  mainAppUpdated: Date = new Date();\n  showAlert: boolean = false;\n  realtime: boolean = false;\n  appIdStatus: string = \"Loading App Id\";\n  errorAuthenticatingApp: boolean = false;\n}\nclass App extends Component<any, IState> {\n  wsConnected: boolean = false;\n  loadings: number = 0;\n  alertTitle: String = \"Info\";\n  alertBody: any = null;\n  alertIsYesOnly: boolean = true;\n  alertIsError: boolean = false;\n  alertOnYesCallback: Function = function (e) { };\n  alertOnCancelCallback: Function = function (e) { };\n  wsUpdateHandler: Function | undefined = undefined;\n  clientRef: RefObject<SockJsClient> = React.createRef();\n  userService: UserService;\n  // alertRef: RefObject<Alert> = React.createRef();\n  alertCallback = {\n    title: \"Info\", message: \"Info\", yesOnly: false,\n    onOk: () => { }, onNo: () => { }\n  }\n\n  constructor(props: any) {\n    super(props);\n    this.state = new IState();\n    this.userService = this.props.services.userService;\n\n    this.props.setMainApp(this);\n  }\n  refresh = () => { this.setState({ mainAppUpdated: new Date() }); }\n\n  requestAppId = () => {\n    this.setState({ appIdStatus: \"Authenticating application\", errorAuthenticatingApp: false });\n    this.userService.requestApplicationId((response) => {\n      this.props.setRequestId(response, this);\n      this.refresh();\n      this.setState({ errorAuthenticatingApp: false });\n    }, this.retryRequestAppId)\n\n  }\n  retryRequestAppId = () => {\n    this.setState({ appIdStatus: \"Authenticating application (Retrying)\", errorAuthenticatingApp: false });\n    this.userService.requestApplicationIdNoAuth((response) => {\n      this.props.setRequestId(response, this);\n      this.setState({ errorAuthenticatingApp: false });\n    },\n      () =>\n        this.setState({ errorAuthenticatingApp: true }))\n\n  }\n  incrementLoadings() {\n    this.loadings++;\n  }\n\n  decrementLoadings() {\n    this.loadings--;\n    if (this.loadings < 0) {\n      this.loadings = 0;\n    }\n  }\n\n  startLoading(realtime: boolean = false) {\n    this.incrementLoadings();\n    this.setState({ loading: true, realtime: realtime });\n  }\n\n  endLoading() {\n    this.decrementLoadings();\n    if (this.loadings == 0) {\n      if (this.state.realtime) {\n        this.setState({ loadingPercentage: 100 }, this.smoothEndLoading);\n      } else {\n        this.setState({ loading: false, loadingPercentage: 0 });\n      }\n    }\n  }\n\n  smoothEndLoading = () => {\n    doItLater(() => {\n      this.setState({ loading: false, loadingPercentage: 0 });\n    }, 100);\n  }\n\n  handleProgress = (msg: WebResponse) => {\n    const percentageFloat: number = msg.percentage ?? 0;\n    let percentage = Math.floor(percentageFloat);\n    if (percentageFloat < 0 || percentageFloat > 100) {\n      this.endLoading();\n    }\n    this.setState({ loadingPercentage: percentage });\n  }\n\n  showAlert(title: string, body: any, yesOnly: boolean, yesCallback: Function, noCallback?: Function) {\n    this.alertTitle = title;\n    this.alertBody = body;\n    this.alertIsYesOnly = yesOnly;\n    const app = this;\n    this.alertOnYesCallback = function (e) {\n      app.dismissAlert();\n      yesCallback(e);\n    }\n    if (!yesOnly) {\n      this.alertOnCancelCallback = function (e) {\n        app.dismissAlert();\n        if (noCallback != null) {\n          noCallback(e);\n        }\n      };\n    }\n    this.setState({ showAlert: true });\n  }\n\n  dismissAlert() {\n    this.alertIsError = false;\n    this.setState({ showAlert: false })\n  }\n  showAlertError(title: string, body: any, yesOnly: boolean, yesCallback: Function, noCallback?: Function) {\n    this.alertIsError = true;\n    this.showAlert(title, body, yesOnly, yesCallback, noCallback)\n  }\n\n  componentDidUpdate() {\n    // console.debug(\"APP UPDATED\");\n    if (this.props.applicationProfile) {\n      updateFavicon(this.props.applicationProfile);\n    }\n    if (this.props.requestId && !this.wsConnected) {\n      this.initWebsocket();\n    }\n  }\n\n  componentDidMount() {\n    this.requestAppId();\n    this.setState({ loadingPercentage: 0 });\n  }\n\n  initWebsocket = () => {\n    setWebSocketUrl(url.contextPath() + 'realtime-app');\n    registerWebSocketCallbacks({\n      subscribeUrl: \"/wsResp/progress/\" + this.props.requestId,\n      callback: this.handleProgress  //must use lambda\n    },\n      {\n        subscribeUrl: \"/wsResp/\" + this.props.requestId + \"/update\",\n        callback: (response) => this.handleWsUpdate(response)\n      });\n    performWebsocketConnection();\n    this.wsConnected = true;\n  }\n\n  private handleWsUpdate = (response: any) => {\n\n    if (this.wsUpdateHandler) {\n      this.wsUpdateHandler(response);\n    }\n  }\n\n  setWsUpdateHandler = (handler: Function | undefined) => {\n    this.wsUpdateHandler = handler;\n  }\n  resetWsUpdateHandler = () => {\n    this.setWsUpdateHandler(undefined);\n  }\n\n  render() {\n    if (!this.props.requestId) {\n      return (\n        <div className=\"text-center\" style={{ paddingTop: '10%' }}>\n          <h2>{this.state.appIdStatus}</h2>\n          {this.state.errorAuthenticatingApp ?\n            <AnchorWithIcon iconClassName=\"fas fa-redo\" onClick={this.retryRequestAppId} children=\"Retry\" /> :\n            <Spinner />}\n        </div>\n      )\n    }\n    return (\n      <Fragment>\n        <Loading realtime={this.state.realtime} loading={this.state.loading} loadingPercentage={this.state.loadingPercentage} />\n        {this.state.showAlert ?\n          <Alert title={this.alertTitle}\n            isError={this.alertIsError}\n            onClose={(e) => this.setState({ showAlert: false })}\n            yesOnly={this.alertIsYesOnly}\n            onYes={this.alertOnYesCallback} onNo={this.alertOnCancelCallback}\n          >{this.alertBody}</Alert> :\n          null}\n        <MainLayout />\n        {/* <SockJsClient url={usedHost + 'realtime-app'} topics={['/wsResp/progress/' + this.props.requestId]}\n\n          onMessage={(msg: WebResponse) => { this.handleMessage(msg) }}\n          ref={this.clientRef} /> */}\n      </Fragment>\n    )\n  }\n}\n\nfunction Loading(props) {\n  if (props.loading == true) {\n    return (\n      <Loader realtime={props.realtime} progress={props.loadingPercentage} text=\"Please wait...\" type=\"loading\" />\n    );\n  }\n  return null;\n}\n\n\nconst mapDispatchToProps = (dispatch: Function) => ({\n  setMainApp: (app: App) => dispatch(actions.setMainApp(app)),\n  setRequestId: (response: WebResponse, app: App) => dispatch(actions.setRequestId(response, app)),\n})\n\nexport default withRouter(connect(\n  mapCommonUserStateToProps,\n  mapDispatchToProps\n)(App))\n","import React from 'react'\r\nimport App from './App'\r\nimport configureStore from './redux/configureStore'\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n \r\nconst Root = (props:any)  => {\r\n\r\n    const store = configureStore();\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <App/>\r\n            </HashRouter>\r\n        </Provider>  \r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Root;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './Root.tsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}