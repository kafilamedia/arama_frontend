{"version":3,"sources":["models/AuthorityType.ts","constant/Url.js","models/BaseEntity.ts","models/User.ts","redux/actionCreators.ts","redux/types.js","constant/stores.js","component/loader/Loader.js","utils/EventUtil.ts","component/alert/Alert.js","models/ApplicationProfile.ts","utils/websockets.js","component/BaseComponent.tsx","utils/StringUtil.ts","models/settings/Menu.ts","constant/Menus.ts","component/navigation/Header.tsx","component/loader/Spinner.tsx","component/pages/login/Login.tsx","component/pages/BasePage.tsx","models/settings/AttachmentInfo.ts","utils/ComponentUtil.ts","component/pages/dashboard/main/DashboardMain.tsx","component/pages/home/HomeMain.tsx","models/Employee.ts","utils/CollectionUtil.tsx","models/commons/Filter.ts","component/form/FormGroup.tsx","component/navigation/NavigationButtons.tsx","component/navigation/AnchorWithIcon.tsx","component/pages/management/EmployeeRow.tsx","component/navigation/AnchorButton.tsx","component/navigation/ToggleButton.tsx","component/pages/management/BaseManagementPage.tsx","component/pages/management/MusyrifManagement.tsx","component/pages/management/ManagementMain.tsx","models/Category.ts","component/container/Modal.tsx","component/pages/management/EditDeleteButton.tsx","component/pages/management/CategoryManagement.tsx","models/RulePoint.ts","component/pages/management/RulePointManagement.tsx","utils/DateUtil.ts","component/form/FilterPeriod.tsx","component/pages/asrama/StudentList.tsx","models/Student.ts","models/PointRecord.ts","component/form/InputTime.tsx","component/pages/asrama/form/FormStepThree.tsx","component/alert/SimpleError.tsx","component/pages/asrama/form/FormStepTwo.tsx","component/pages/asrama/form/FormStepOne.tsx","component/pages/asrama/InputPointForm.tsx","component/container/Card.tsx","models/Class.ts","component/pages/asrama/point-record/PointRecordDetail.tsx","component/pages/asrama/DropPointButtons.tsx","component/pages/management/PointRecordsSummary.tsx","component/pages/asrama/medicalrecord/StudentForm.tsx","models/MedicalRecord.ts","component/pages/asrama/medicalrecord/MedicalRecordDailyInput.tsx","component/pages/asrama/medicalrecord/MedicalRecordForm.tsx","component/pages/home/AboutUs.tsx","component/pages/login/Register.tsx","component/pages/shared/StudentSearchForm.tsx","component/pages/asrama/point-record/PointRecordEdit.tsx","component/pages/dashboard/main/FollowUpReminder.tsx","models/WarningAction.ts","component/pages/management/WarningActionManagement.tsx","component/pages/shared/EmployeeSearchForm.tsx","component/pages/settings/ConfigSettingPage.tsx","component/pages/report/StudentSemesterReport.tsx","models/CategoryPredicate.ts","component/pages/management/CategoryPredicateManagement.tsx","models/RuleViolation.ts","component/pages/management/RuleViolationManagement.tsx","component/layout/ApplicationContent.tsx","component/navigation/SideBar.tsx","component/layout/MainLayout.tsx","App.tsx","redux/appReducer.js","middlewares/Common.ts","redux/userReducer.js","services/Promises.ts","services/MasterDataService.ts","services/UserService.ts","services/MusyrifManagementService.ts","services/StudentService.ts","models/commons/WebRequest.ts","services/ConfigurationService.ts","redux/servicesReducer.ts","redux/reducers.js","middlewares/UserMiddleware.ts","middlewares/RealtimeChatMiddleware.js","redux/configureStore.js","Root.tsx","serviceWorker.js","index.js"],"names":["AuthorityType","devMode","document","getElementById","value","rootValue","contextPath","concat","baseImageUrl","BaseEntity","id","created_at","updated_at","User","nickname","name","email","password","profileImage","roles","user","requestId","nip","role","i","this","length","Object","assign","usedHost","url","apiAccount","performLogout","app","startLoading","type","payload","meta","mapCommonUserStateToProps","state","applicationProfile","userState","loggedUser","loginStatus","services","servicesState","mainApp","appState","LoaderContent","props","realtime","className","style","margin","position","zIndex","marginBottom","aria-hidden","padding","marginTop","height","width","progress","transitionDuration","disabled","Loader","timer","intervalId","update","clearInterval","console","log","setState","endMessage","withTimer","setInterval","Component","doItLater","callback","intervalMs","timeout","setTimeout","clearTimeout","State","backColor","Backdrop","backgroundColor","bgColor","Footer","ref","yesButtonRef","onClick","onYes","yesOnly","noButtonRef","onNo","Header","fontClassName","title","onClose","Alert","e","close","React","createRef","isError","current","focus","headerClassName","display","children","ApplicationProfile","code","description","about","welcoming_message","iconUrl","pageIcon","backgroundUrl","color","fontColor","contact","address","warning_point","division_head_id","division_head","division_head_signature","school_director_id","school_director","school_director_signature","report_date","semester","tahun_ajaran","stamp","dormitory_stamp","divisionHeadSignatureAttachment","directorSignatureAttachment","stampAttachment","dormitoryStampAttachment","stompClient","undefined","wsConnected","subscriptionCallbacks","Array","sendToWebsocket","requestObject","debug","send","JSON","stringify","info","BaseComponent","authenticated","parentApp","updated","Date","validateLoginStatus","isUserLoggedIn","backToLogin","sendWebSocket","setWsUpdateHandler","handler","resetWsUpdateHandler","getApplicationProfile","handleInputChange","event","stateFieldName","target","checked","parseInt","el","doAjax","method","withProgress","successCallback","errorCallback","params","then","response","catch","alert","finally","endLoading","commonAjax","commonAjaxWithProgress","getLoggedUser","isAdmin","hasRole","admin_asrama","scrollTop","opt","top","behavior","window","scrollTo","showConfirmation","body","Promise","resolve","reject","showAlert","showConfirmationDanger","showAlertError","showInfo","showError","showCommonSuccessAlert","showCommonErrorAlert","message","error","data","getServices","history","push","index","uniqueId","string","String","getUTCMilliseconds","toString","months","twoDigits","Menu","pathVariables","active","menuClass","showSidebar","subMenus","userAuthorized","clone","element","defaultMenuIconClassName","getIconClassName","menu","getMenus","menuSet","_menus","subMenu","musyrif_asrama","IState","showNavLinks","buttonToggleNavRef","toggleNavLinks","onLogout","ok","setMenu","click","menus","label","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","map","isActive","activeMenuCode","key","to","setMenuNull","NavBarTop","paddingLeft","fontSize","UserIcon","marginRight","withRouter","connect","dispatch","Spinner","innerDivs","visibility","show","loading","editPassword","Login","updateCredentialProperty","getAttribute","preventDefault","performLogin","onSubmit","login","onChange","PasswordField","placeholder","required","EmailField","autoFocus","username","BasePage","componentReady","AttachmentInfo","blob","Blob","arg0","split","getAttachmentInfoFromFile","fileInput","files","file","reader","FileReader","readAsDataURL","onload","setUrl","result","onerror","Error","attachment","DashboardMain","studentService","addPointRecord","pathname","updateImage","accept","src","HomeMain","imageUrl","backgroundImage","backgroundSize","Employee","tableHeader","values","Filter","limit","page","orderType","orderBy","contains","exacts","day","year","month","module","fieldsFilter","dayTo","monthTo","yearTo","maxValue","availabilityCheck","resetFieldsFilter","f","withLimit","FormGroup","orientation","NavigationButtons","buttonIndexes","generateButtonValues","totalData","activePage","lastIndex","nextPage","previusPage","currentPage","displayed_buttons","buttonCount","Math","ceil","min","max","AnchorWithIcon","btnClassName","attributes","iconClassName","tyle","EmployeeRow","musyrifManagementService","getEmployee","employee","activeStatusUpdate","onUpdated","activateMusyrif","emp","activate","isMusyrif","startingNumber","AnchorButton","ToggleButton","yesLabel","noLabel","BaseManagementPage","modelName","overrideLoading","masterDataService","formRef","emptyRecord","loadItems","request","filter","list","itemsLoaded","items","updateFilter","dataset","updateFieldsFilter","loadAtPage","updateRecordProp","record","resetForm","oneRecordLoaded","item","showModal","recordUpdated","hideModal","callApiSubmit","reload","MusyrifManagement","setMusyrifOnly","musyrifOnly","onEmployeeStatusUpdate","EmployeeList","overflow","ManagementMain","Category","points","object","Modal","toggleable","footerContent","showFooter","EditDeleteButton","getRecord","rec","recordLoaded","recordLoadedForDetail","recordDeleted","loadRecord","getOne","loadRecordRequest","loadRecordForDetail","deleteRecord","delete","hasType","types","indexOf","record_id","CategoryManagement","category","ItemsList","RecordForm","RulePoint","category_id","point","droppable","categories","categoriesLoaded","RulePointManagement","rulePoint","categoriesNotLoaded","loadCategories","req","selectedCategoryId","reloadCategories","c","data-type","MONTHS","leapMonths","regularMonths","parseDate","s","b","m","days","arr","FilterPeriod","mode","Fragment","showlabel","hideDay","d","classes","StudentList","classesLoaded","loadClasses","getClasses","updateSelectedClass","inputPage","inputPoint","inputMedicalRecord","student","updateWithPointRecord","val","getDate","getMonth","getFullYear","selectedClassId","showPointRecord","level","sekolah","rombel","nama","colSpan","kelas","Student","nis","PointRecord","setDate","dateString","td","location","time","student_id","point_id","rule_point","dropped_at","pictures","getPicture","getTimestamp","DAYS","getDay","join","getHours","getMinutes","getSeconds","h","hour","minute","second","hours","minutesOrSeconds","InputTime","minutes","seconds","updateFromProps","updateValue","setNow","date","border","sec","marginLeft","pointRecord","FormStepThree","submit","updatePointRecord","updateDate","updateTime","setTime","setAttachment","removeAttachment","getAttachment","attachmentInfo","onBack","SimpleError","rulePoints","FormStepTwo","rulePointsLoaded","setRulePoint","loadRulePoints","getCategory","r","updateRulePoint","select","filteredItems","FormStepOne","setCategory","setSelectedCategory","updateCategory","formStep","savedRecord","InputPointForm","totalStep","validateStudentData","removeStudent","nextStep","step","submitRecord","submitPointRecord","recordSubmitted","back","Progress","Detail","toDateString","Warning","Card","Class","PointRecordDetail","pictureUrl","timeStamp","studentClassString","DropPointButtons","setDropped","isDropped","setPointDropped","selectedCategory","showFilterDetail","defaultFieldsFilter","dropped","class_id","point_name","category_name","PointRecordSummary","classessLoaded","getCategories","cat","showDetail","hideDetail","hideFilterDetail","openEditPage","p","resetFilter","followUp","dropAll","itemIdArray","undropAll","autoComplete","recordLoadedForEdit","forEach","optionTypes","studentName","StudentForm","loadStudent","setSelectedItem","setItem","reset","selectedItem","onReset","cursor","ItemDetail","MedicalRecord","temperature_morning","temperature_afternoon","breakfast","lunch","dinner","medicine_consumption","genose_test","antigen_test","pcr_test","obj","instance","y","MedicalRecordDailyInput","setRecord","submitMedicalRecord","period","monthName","rows","Checkbox","SingleRow","minHeight","forwardRef","mappedItems","Map","MedicalRecordForm","inputRefs","setStudent","loadMonthlyRecord","recordsLoaded","toMap","get","set","loadMonthlyMedicalRecord","getFilter","dayCount","getMonthDays","gridTemplateColumns","repeat","AboutUs","appProfile","displayName","editPasswordRepeat","Register","userService","saveUser","UserModel","trim","userSaved","passwordMatch","fieldComplete","register","borderColor","CommonField","keyword","StudentSearchForm","selectItem","pointsMap","selectedPointId","PointRecordEdit","inputTimeRef","categoryId","catId","resp","checkPassedData","updateInput","updateRecordField","setSelectedRulePoint","validateInput","removeImage","updatePicture","categoryID","followUpInfos","FollowUpReminder","loadReminder","getFollowUpReminders","TOTAL_POINT","FOLLOW_UP_COUNT","WarningAction","WarningActionManagement","warningAction","EmployeeSearchForm","ConfigSettingPage","configService","configUpdated","updateField","fieldName","profile","updateAttachment","configurationService","divisionHeadSignatureURL","directorSignatureURL","stampURL","dormitoryStampURL","StudentSemesterReport","selectClassRef","loadRaporData","classId","getRaporData","raporDataLoaded","downloadData","downloadRaporData","reportCreated","downloadRapor","open","createElement","download","reportHeader","class","ci","total_point","predicate_letter","predicate_desc","headers","CategoryPredicate","CategoryPredicateManagement","categoryPredicate","RuleViolation","RuleViolationManagement","ruleViolation","ApplicationContent","setSidebarMenus","exact","path","render","Setting","Report","Management","Asrama","proos","LoginRoute","Dashboard","SideBar","isSidebarActive","parentMenu","pathName","addEventListener","handleScroll","removeEventListener","srcElement","sidebarMenus","brand","menuClassName","Brand","textAlign","paddingTop","paddingBottom","textDecoration","MainLayout","currentPathName","setCurrentMenu","pathRaw","firstPath","extractMenuPath","getMenuByMenuPath","getSubMenus","menuState","loadingPercentage","mainAppUpdated","appIdStatus","errorAuthenticatingApp","App","loadings","alertTitle","alertBody","alertIsYesOnly","alertIsError","alertOnYesCallback","alertOnCancelCallback","wsUpdateHandler","clientRef","alertCallback","onOk","refresh","requestAppId","requestApplicationId","setRequestId","retryRequestAppId","requestApplicationIdNoAuth","smoothEndLoading","handleProgress","msg","percentageFloat","percentage","floor","initWebsocket","callBackObjects","registerWebSocketCallbacks","subscribeUrl","handleWsUpdate","setMainApp","incrementLoadings","decrementLoadings","yesCallback","noCallback","dismissAlert","link","querySelector","setAttribute","head","appendChild","updateFavicon","Loading","text","loggedIn","referer","actions","initState","reducer","action","commonAuthorizedHeader","getRequestId","getLoginKey","LOGIN_KEY","store","getStore","getState","getCookie","updateAccessToken","axiosResponse","accessToken","setCookie","setLoginKeyCookie","cookieValue","cname","cvalue","exdays","getTime","expires","toUTCString","cookie","ca","decodeURIComponent","charAt","substring","loginKey","loginFailed","menuData","loginAttempt","assetsPath","axios","require","commonAjaxPostCalls","endpoint","post","rawAxiosResponse","commonAjaxPublicPostCalls","commonAjaxPostCallsWithBlob","responseType","fileName","rawSplit","extension","URL","createObjectURL","MasterDataService","UserService","updateProfile","callbackSuccess","callbackError","MusyrifManagementService","employee_id","StudentService","pointRecordId","medicalRecord","studentId","recordIdArray","WebRequest","attachmentInfo2","attachmentInfo3","attachmentInfo4","ConfigurationService","validateField","getInstance","rootReducer","combineReducers","appReducer","userReducer","servicesReducers","initialState","performLoginMiddleware","next","responseJson","loginSuccess","newAction","common","getLoggedUserMiddleware","param","performLogoutMiddleware","logoutSuccess","setLoggedUserMiddleware","getMessagesMiddleware","fetch","json","err","storeChatMessageLocallyMiddleware","configureStore","createStore","applyMiddleware","userMiddleware","realtimeChatMiddleware","Root","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.59ea7cf5.chunk.js","sourcesContent":["\nexport   enum AuthorityType{\n    \n    admin_asrama = \"admin_asrama\",\n    musyrif_asrama = \"musyrif_asrama\",\n    user = \"user\"\n}\n","\r\nconst devMode = \r\n    document.getElementById(\"rootPath\").value == \"${contextPath}\" || \r\n    document.getElementById(\"rootPath\").value == \"\";\r\nconst rootValue = devMode ?\r\n     \"/\" : document.getElementById(\"rootPath\").value+\"/\";\r\n\r\nexport const contextPath = function(){\r\n    const contextPath = devMode? \"http://localhost:8080\".concat(rootValue):rootValue;\r\n    return contextPath;\r\n}\r\nexport const baseImageUrl = () => contextPath()+ \"images/\"; \r\n","\nexport default class BaseEntity{\n\tid?:any; \n\n\tcreated_at?:string;\n\tupdated_at?:string;\n\t \n\n}\n","import { AuthorityType } from './AuthorityType';\nimport BaseEntity from './BaseEntity';\n\nexport default class User extends BaseEntity{\n\tstatic clone(user: User): User {\n\t\t return Object.assign(new User(), user);\n\t}\n    hasRole(role: AuthorityType): boolean {\n        for (let i = 0; i < this.roles.length; i++) {\n\t\t\tconst element = this.roles[i];\n\t\t\tif (element == role) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n    }\n\tnickname?:string;\n\tname?:string;\n\temail?:string;\n\tpassword?:string;\n\tprofileImage?:string;\n\troles:AuthorityType[] = [AuthorityType.user];\n\trequestId?:string; \n\tnip?:string;\n\n}\n","import * as types from './types'\r\nimport * as url from '../constant/Url'\r\nimport { contextPath } from '../constant/Url'; \r\nimport User from './../models/User';\r\nimport ApplicationProfile from './../models/ApplicationProfile';\r\nimport WebResponse from '../models/commons/WebResponse';\r\n\r\nconst usedHost = url.contextPath();\r\nconst apiBaseUrl = usedHost + \"api/public/\"\r\nconst apiEntityBaseUrl = usedHost + \"api/app/entity/\"\r\nconst apiAccount = usedHost + \"api/accountdashboard/\"\r\nconst apiAdmin = usedHost + \"api/app/admin/\"    \r\n\r\nexport const getEntityProperty = (entityName, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_PROPERTY,\r\n        payload: {\r\n            entity: entityName\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_PROPERTY,\r\n            url: apiEntityBaseUrl.concat(\"config\"),\r\n            app: app,\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\n\r\nexport const getManagementMenus = (app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_MANAGEMENT_MENUS,\r\n        payload: {},\r\n        meta: {\r\n            type: types.GET_MANAGEMENT_MENUS,\r\n            url: apiEntityBaseUrl.concat(\"managementpages\"),\r\n            app: app,\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n \r\n\r\nexport const setRequestId = (data:WebResponse, app) => {\r\n   \r\n    const ret= {\r\n        type: types.SET_REQUEST_ID,\r\n        payload: { loginStatus: data.loggedIn, referer:app, ...data },\r\n        meta: {\r\n            type: types.SET_REQUEST_ID, \r\n        }\r\n    };\r\n    // console.debug(\"setRequestId: \", ret);\r\n    return ret;\r\n}\r\n\r\nexport const getMessageList = (app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.GET_MESSAGE,\r\n        payload: {},\r\n        meta: {\r\n            type: types.GET_MESSAGE, app: app,\r\n            url: apiAdmin.concat(\"getmessages\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const storeMessageLocally = (messages) => {\r\n\r\n    return {\r\n        type: types.STORE_MESSAGE,\r\n        payload: {\r\n            entities: messages\r\n        },\r\n        meta: {\r\n            type: types.STORE_MESSAGE,\r\n        }\r\n    };\r\n}\r\n    \r\n\r\nexport const performLogout = (app) => {\r\n    app.startLoading();\r\n    let loginRequest = {\r\n        type: types.DO_LOGOUT,\r\n        payload: {},\r\n        meta: { app: app, type: types.DO_LOGOUT, url: apiAccount.concat(\"logout\") }\r\n    };\r\n    return loginRequest;\r\n}\r\n\r\nexport const performLogin = (email, password, app) => {\r\n    app.startLoading();\r\n    let loginRequest = {\r\n        type: types.DO_LOGIN,\r\n        payload: {},\r\n        meta: {\r\n            type: types.DO_LOGIN, \r\n            url: contextPath().concat(\"api/account/login\"),\r\n                email: email, password: password,\r\n                app: app\r\n        }\r\n    };\r\n    return loginRequest;\r\n}\r\n\r\nexport const getLoggedUser = (app) => {\r\n    app.startLoading();\r\n    let request = {\r\n        type: types.GET_LOGGED_USER,\r\n        payload: {},\r\n        meta: { type: types.GET_LOGGED_USER, url: apiAccount.concat(\"user\"), app: app }\r\n    };\r\n    return request;\r\n}\r\n\r\nexport const setLoggedUser = (user: User) => {\r\n\r\n    let request = {\r\n        type: types.SET_LOGGED_USER,\r\n        payload: { user: Object.assign(new User(), user) },\r\n        meta: { type: types.SET_LOGGED_USER }\r\n    };\r\n    return request;\r\n}\r\n\r\nexport const setApplicationProfile = (applicationProfile: ApplicationProfile) => {\r\n\r\n    let request = {\r\n        type: types.SET_APPLICATION_PROFILE,\r\n        payload: { applicationProfile: applicationProfile },\r\n        meta: { type: types.SET_APPLICATION_PROFILE }\r\n    };\r\n    return request;\r\n}\r\n\r\nexport const removeEntity = () => ({\r\n    type: types.REMOVE_SHOP_ENTITY,\r\n    payload: {},\r\n    meta: { type: types.REMOVE_SHOP_ENTITY }\r\n})\r\n\r\n\r\nexport const  setMainApp = (mainApp:any) => ({\r\n    type: types.SET_MAIN_APP,\r\n    payload: mainApp,\r\n    meta: { type: types.SET_MAIN_APP }\r\n})\r\n\r\n","/**\r\n * \r\n */\r\n \r\nexport const REMOVE_SHOP_ENTITY= \"remove_shop_entity\"; \r\nexport const FETCH_PRODUCT_CATEGORIES_ALL = \"all_product_categories\";\r\nexport const DO_LOGIN = \"do_login\";\r\nexport const DO_LOGOUT = \"do_logout\";    \r\nexport const SET_REQUEST_ID = \"SET_REQUEST_ID\"; \r\nexport const STORE_MESSAGE = \"store_message\";\r\nexport const GET_ENTITY_PROPERTY = \"get_entity_config\";\r\nexport const GET_MANAGEMENT_MENUS = \"GET_MANAGEMENT_MENUS\";\r\nexport const GET_MESSAGE = \"GET_MESSAGE\";\r\nexport const SET_MAIN_APP = \"SET_MAIN_APP\"; \r\nexport const GET_ENTITY_BY_ID = \"get_entity_by_id\";\r\nexport const UPDATE_ENTITY = \"update_entity\"; \r\nexport const REFRESH_LOGIN = \"refresh_login\";\r\nexport const GET_LOGGED_USER = \"get_logged_user\";\r\nexport const SET_LOGGED_USER = \"set_logged_user\";\r\nexport const SET_APPLICATION_PROFILE = \"SET_APPLICATION_PROFILE\";","\r\nexport const mapCommonUserStateToProps = (state) => {\r\n    return {\r\n        applicationProfile: state.userState.applicationProfile,\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n        requestId: state.userState.requestId, \r\n        services: state.servicesState.services,\r\n        mainApp: state.appState.mainApp\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport './Loader.css'\r\n\r\nclass Loader extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            timer: 130,\r\n            intervalId: 0\r\n        }\r\n        this.update = () => {\r\n            if (this.state.timer < 0) {\r\n                clearInterval(this.state.intervalId);\r\n            }\r\n            console.log(\"tick\")\r\n            this.setState({ timer: this.state.timer - 1 })\r\n            if (this.state.timer < 0 && this.props.endMessage) {\r\n                this.props.endMessage();\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.withTimer == true) {\r\n            let intervalId = setInterval(this.update, 1, null);\r\n            this.setState({ intervalId: intervalId });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let className = \"message message-\" + this.props.type;\r\n\r\n        if (this.props.realtime == true) {\r\n            return <LoaderContent progress={this.props.progress} realtime={this.props.realtime} />\r\n        }\r\n\r\n        return (\r\n            <div className={className} >\r\n                <LoaderContent progress={this.props.progress} realtime={this.props.realtime} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nfunction LoaderContent(props) {\r\n    if (props.realtime) {\r\n        return (\r\n            <div className=\"row container-fluid bg-light\" style={{margin:0, position: 'fixed', zIndex: 100 }}>\r\n                <div className=\"col-1\">\r\n                <span style={{marginBottom:'3px'}} className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                </div>\r\n                <div className=\"col-11 progress\" style={{padding:0, marginTop: '7px', height:'10px'}}  >\r\n                    <div className=\"bg-primary\" style={{\r\n                        width: props.progress + \"%\",\r\n                        transitionDuration: '50ms',\r\n                        margin: 0,\r\n                    }}>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <button className=\"btn btn-dark \" type=\"button\" disabled>\r\n            <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n            <span className=\" \">Loading...</span>\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Loader;","\r\nimport ApplicationProfile from './../models/ApplicationProfile';\r\nimport { baseImageUrl } from './../constant/Url';\r\nexport const doItLater = (callback:()=>any, intervalMs:number) => {\r\n    const timeout = setTimeout(()=>{\r\n       callback();\r\n        clearTimeout(timeout);\r\n      }, intervalMs)\r\n}\r\n\r\n\r\nexport const  updateFavicon = (profile: ApplicationProfile) => {\r\n    if (profile.pageIcon) {\r\n      let link = document.querySelector('link[rel=\"shortcut icon\"]') ||\r\n        document.querySelector('link[rel=\"icon\"]');\r\n      if (!link) {\r\n        link = document.createElement('link');\r\n        link.id = 'favicon';\r\n        link.setAttribute(\"rel\", 'shortcut icon');\r\n        document.head.appendChild(link);\r\n      }\r\n      link.setAttribute(\"href\", baseImageUrl() + profile.pageIcon);\r\n    }\r\n  }","import React, { Component } from 'react'\r\nimport { doItLater } from './../../utils/EventUtil';\r\nconst initialMargin = '-200px';\r\nconst transitionDuration = '200ms';\r\nclass State {\r\n    backColor  = 'transparent';\r\n    marginTop = initialMargin;\r\n}\r\nclass Alert extends Component  {\r\n    yesButtonRef;\r\n    noButtonRef;\r\n    state  = new State();\r\n    constructor(props) {\r\n        super(props);\r\n        this.yesButtonRef = React.createRef();\r\n        this.noButtonRef = React.createRef();\r\n    }\r\n    onYes = (e) => {\r\n        \r\n        this.close(()=>{\r\n            if (this.props.onYes) {\r\n                this.props.onYes(e);\r\n            }\r\n        });\r\n    }\r\n    close = (callback)=> {\r\n        doItLater(()=>{\r\n            this.setState({backColor:'transparent', marginTop: initialMargin}, ()=>{\r\n                doItLater(callback, 100);\r\n                \r\n            });\r\n        }, 100);\r\n    }\r\n    onNo = (e) => {\r\n        \r\n        this.close(()=>{\r\n            if (this.props.onNo) {\r\n                this.props.onNo(e);\r\n            }\r\n        });\r\n    }\r\n    onClose = (e) => {\r\n       \r\n        this.close(()=>{\r\n            if (this.props.onClose) {\r\n                this.props.onClose(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        const isError = this.props.isError == true;\r\n        if (!isError && this.yesButtonRef.current) {\r\n            this.yesButtonRef.current.focus();\r\n        } else if (isError && this.noButtonRef.current) {\r\n            this.noButtonRef.current.focus();\r\n        } else if (isError && this.yesButtonRef.current) {\r\n            this.yesButtonRef.current.focus();\r\n        }\r\n\r\n        doItLater(()=>{\r\n            this.setState({backColor:'rgba(100,100,100,0.7)', marginTop:'30vh'})\r\n        }, 100);\r\n    }\r\n\r\n    render() {\r\n        const title = this.props.title ? this.props.title : \"Info\";\r\n        const yesOnly = this.props.yesOnly == true;\r\n        const isError = this.props.isError == true;\r\n        const headerClassName = isError ? 'bg-danger' : 'bg-info';\r\n        const headerFontClassName = 'text-light';\r\n        return (\r\n            <>\r\n                <Backdrop bgColor={this.state.backColor} />\r\n                <div className=\"modal show\" style={{ display: 'block' }}  >\r\n                    <div className=\"modal-dialog -modal-dialog-centered\" \r\n                        style={{\r\n                            transitionDuration:  transitionDuration,\r\n                            marginTop: this.state.marginTop\r\n                        }}\r\n                    >\r\n                        <div className=\"modal-content\" style={{marginTop:'5px',}} >\r\n                            <Header fontClassName={headerFontClassName} className={headerClassName} title={title} onClose={this.onClose} />\r\n                            <div className=\"modal-body\" > {this.props.children} </div>\r\n                            <Footer noButtonRef={this.noButtonRef} yesButtonRef={this.yesButtonRef} yesOnly={yesOnly} onYes={this.onYes} onNo={this.onNo} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction Backdrop(props ) {\r\n    return (\r\n        <div className=\"modal-backdrop\" style={{ transitionDuration:transitionDuration, backgroundColor: props.bgColor }\r\n        } > </div>\r\n    );\r\n}\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <div className={\"modal-footer \" + props.className} >\r\n            <button ref={props.yesButtonRef} type=\"button\"\r\n                onClick={props.onYes} className=\"btn btn-outline-primary\" > Yes </button>\r\n            {props.yesOnly ? \r\n                null : \r\n                <button ref={props.noButtonRef} type=\"button\"\r\n                    onClick={props.onNo} className=\"btn btn-outline-secondary\" > No \r\n                </button>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Header(props) {\r\n    return (<div className={\"modal-header \" + props.className} >\r\n        <h5 className={\"modal-title \" + props.fontClassName} id=\"exampleModalCenterTitle\" > {props.title} </h5>\r\n        < button onClick={props.onClose} type=\"button\" className=\"close\" >\r\n            <span aria-hidden=\"true\" className={props.fontClassName} > <i className=\"fas fa-times\" /> </span>\r\n        </button>\r\n    </div>)\r\n}\r\n\r\nexport default Alert;","import BaseEntity from './BaseEntity';\nimport Employee from './Employee';\nimport AttachmentInfo from './settings/AttachmentInfo';\nimport { contextPath } from './../constant/Url';\n\nexport default class ApplicationProfile extends BaseEntity{\n    \n\tname?:string;\n\tcode?:string;\n\tdescription?:string;\n\tabout?:string;\n\twelcoming_message?:string;\n\ticonUrl?:string;\n\tpageIcon?:string;\n\tbackgroundUrl?:string;\n\tcolor?:string;\n\tfontColor?:string;\n\tcontact?:string;\n\taddress?:string;\n\twarning_point: number|undefined;\n\t\n\tdivision_head_id?:string;\n\tdivision_head?:Employee;\n\tdivision_head_signature?:string;\n\n\tschool_director_id?:string;\n\tschool_director?:Employee;\n\tschool_director_signature?:string;\n\n\treport_date?:string;\n\n\tsemester?:number;\n\ttahun_ajaran?:string;\n\n\tstamp?:string;\n\tdormitory_stamp?:string;\n\n\tdivisionHeadSignatureAttachment?:AttachmentInfo;\n\tdirectorSignatureAttachment?:AttachmentInfo;\n\tstampAttachment?:AttachmentInfo;\n\tdormitoryStampAttachment?:AttachmentInfo;\n\n\tget stampURL(){\n\t\tif (this.stampAttachment) {\n\t\t\treturn this.stampAttachment.url;\n\t\t}\n\t\treturn contextPath()+'upload/PROFILE/'+this.stamp;\n\t}\n\tget dormitoryStampURL(){\n\t\tif (this.dormitoryStampAttachment) {\n\t\t\treturn this.dormitoryStampAttachment.url;\n\t\t}\n\t\treturn contextPath()+'upload/PROFILE/'+this.dormitory_stamp;\n\t}\n\tget divisionHeadSignatureURL(){\n\t\tif (this.divisionHeadSignatureAttachment) {\n\t\t\treturn this.divisionHeadSignatureAttachment.url;\n\t\t}\n\t\treturn contextPath()+'upload/PROFILE/'+this.division_head_signature;\n\t\t\n\t}\n\tget directorSignatureURL(){\n\t\tif (this.directorSignatureAttachment) {\n\t\t\treturn this.directorSignatureAttachment.url;\n\t\t}\n\t\treturn contextPath()+'upload/PROFILE/'+this.school_director_signature;\n\t}\n\n\tvalidateField() {\n        if (this.division_head) {\n\t\t\tthis.division_head_id = this.division_head.id;\n\t\t}\n\t\tif (this.school_director) {\n\t\t\tthis.school_director_id = this.school_director.id;\n\t\t}\n    }\n}\n","import { doItLater } from './EventUtil';\r\nlet stompClient = undefined;\r\nlet wsConnected = false;\r\nlet websocketUrl = undefined;\r\nconst onConnectCallbacks = new Array();\r\nconst subscriptionCallbacks = new Array();\r\nexport const isWsConnected = () => {\r\n\treturn wsConnected == true;\r\n}\r\nexport const setWebSocketUrl = (url) => {\r\n\twebsocketUrl = url;\r\n}\r\nexport const sendToWebsocket = (url, requestObject) => {\r\n\tif (!wsConnected || !stompClient) {\r\n\t\tconsole.info(\"Connecting\");\r\n\t\treturn false;\r\n\t}\r\n\tconsole.debug(\"SEND WEBSOCKET\")\r\n\tstompClient.send(url, {}, JSON.stringify(requestObject));\r\n\treturn true;\r\n}\r\n\r\nexport const addOnWsConnectCallbacks = (...callbacks) => {\r\n\tfor (let i = 0; i < callbacks.length; i++) {\r\n\t\tconst element = callbacks[i];\r\n\t\tonConnectCallbacks.push(element);\r\n\t}\r\n}\r\n\r\nexport const performWebsocketConnection = () => {\r\n\r\n\treturn;\r\n\tvar socket = new window.SockJS(websocketUrl);\r\n\tstompClient  = window.Stomp.over(socket);\r\n\tstompClient .connect({}, function (frame) {\r\n\t\twsConnected = true;\r\n\t\t// setConnected(true);\r\n\t\tconsole.log('Websocket CONNECTED: ', websocketUrl, 'frame :', frame, stompClient.ws._transport.ws.url);\r\n\t\tconsole.debug(\"subscriptionCallbacks :\", subscriptionCallbacks.length);\r\n\t\t// document.getElementById(\"ws-info\").innerHTML =\r\n\t\t// stompClients.ws._transport.ws.url;\r\n\t\tfor (let i = 0; i < subscriptionCallbacks.length; i++) {\r\n\t\t\tconst callBackObject = subscriptionCallbacks[i];\r\n\r\n\t\t\tif (callBackObject) {\r\n\r\n\t\t\t\tstompClient.subscribe(callBackObject.subscribeUrl, (response) => {\r\n\t\t\t\t\tvar respObject = JSON.parse(response.body);\r\n\t\t\t\t\tcallBackObject.callback(respObject);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < onConnectCallbacks.length; i++) {\r\n\t\t\tconst callback = onConnectCallbacks[i];\r\n\t\t\tcallback(frame);\r\n\t\t}\r\n\r\n\t}, (e) => {\r\n\t\tconsole.warn(\"Error connection websocket, reconnect\");\r\n\t\tdoItLater(performWebsocketConnection, 2000);\r\n\t});\r\n\r\n\t \r\n}\r\n\r\n /**\r\n  * \r\n  * @param  {...WsCallback} callBackObjects \r\n  */\r\nexport const registerWebSocketCallbacks = (...callBackObjects) => {\r\n\r\n\tif (null == callBackObjects) {\r\n\t\treturn;\r\n\t}\r\n\tfor (var i = 0; i < callBackObjects.length; i++) {\r\n\t\tsubscriptionCallbacks.push(callBackObjects[i]);\r\n\t}\r\n}\r\n","import { Component } from 'react';\r\nimport WebResponse from '../models/commons/WebResponse';\r\nimport ApplicationProfile from './../models/ApplicationProfile';\r\nimport User from './../models/User';\r\nimport Services from './../services/Services';\r\nimport { AuthorityType } from '../models/AuthorityType';\r\nimport WebRequest from '../models/commons/WebRequest';\r\nimport { sendToWebsocket } from './../utils/websockets';\r\nimport { doItLater } from './../utils/EventUtil';\r\n\r\nexport default class BaseComponent extends Component<any, any> {\r\n    parentApp: any;\r\n    authenticated: boolean = true;\r\n    state: any = { updated: new Date() };\r\n    constructor(props: any, authenticated = false) {\r\n        super(props);\r\n\r\n        this.authenticated = authenticated\r\n        this.parentApp = props.mainApp;\r\n    }\r\n\r\n    validateLoginStatus = (callback ?:() => any) => {\r\n        if (this.authenticated == false) { \r\n            if (callback) {\r\n                callback();\r\n            }\r\n            return true; }\r\n        if (this.isUserLoggedIn() == false) {\r\n            this.backToLogin();\r\n            return false;\r\n        }\r\n        if (callback) {\r\n            callback();\r\n        }\r\n        return true;\r\n    }\r\n\r\n    protected sendWebSocket = (url: string, payload: WebRequest) => {\r\n        sendToWebsocket(url, payload);\r\n    }\r\n\r\n    protected setWsUpdateHandler = (handler: Function | undefined) => {\r\n        if (this.parentApp) {\r\n            this.parentApp.setWsUpdateHandler(handler);\r\n        }\r\n    }\r\n    protected resetWsUpdateHandler = () => {\r\n        if (this.parentApp) {\r\n            this.parentApp.resetWsUpdateHandler();\r\n        }\r\n    }\r\n\r\n    getApplicationProfile = (): ApplicationProfile => {\r\n        return Object.assign(new ApplicationProfile(), this.props.applicationProfile);\r\n    }\r\n\r\n    handleInputChange = (event: any, stateFieldName?:string|undefined) => {\r\n        const target = event.target;\r\n        let value = target.type == 'checkbox' ? target.checked : target.value;\r\n        if (target.type == 'number') {\r\n            value = parseInt(value);\r\n        }\r\n        if (stateFieldName) {\r\n            const el = this.state[stateFieldName];\r\n            el[target.name] = value;\r\n            this.setState({ [stateFieldName]: el});\r\n        } else {\r\n            this.setState({ [target.name]: value });\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n     * @param {boolean} withProgress \r\n     */\r\n    startLoading(withProgress: boolean) {\r\n        this.parentApp.startLoading(withProgress);\r\n    }\r\n\r\n    endLoading() {\r\n        this.parentApp.endLoading();\r\n    }\r\n    /**\r\n     * api response must be instance of WebResponse\r\n     * @param method returning Promise\r\n     * @param withProgress \r\n     * @param successCallback \r\n     * @param errorCallback \r\n     * @param params \r\n     */\r\n    doAjax = (method: Function, withProgress: boolean, successCallback: Function, errorCallback?: Function, ...params: any) => {\r\n        this.startLoading(withProgress);\r\n        \r\n        method(...params).then( (response: WebResponse) => {\r\n            if (successCallback) {\r\n                successCallback(response);\r\n            }\r\n        }).catch( (e) => {\r\n            if (errorCallback) {\r\n                errorCallback(e);\r\n            } else {\r\n                if (typeof (e) == 'string') {\r\n                    alert(\"Operation Failed: \" + e);\r\n                }\r\n                alert(\"resource not found\");\r\n            }\r\n        }).finally(() => {\r\n            this.endLoading();\r\n        })\r\n    }\r\n\r\n    commonAjax = (method: Function, successCallback: Function, errorCallback: Function, ...params: any) => {\r\n        this.doAjax(method, false, successCallback, errorCallback, ...params);\r\n    }\r\n    commonAjaxWithProgress = (method: Function, successCallback: Function, errorCallback: Function, ...params: any) => {\r\n        this.doAjax(method, true, successCallback, errorCallback, ...params);\r\n    }\r\n    getLoggedUser = (): User | undefined => {\r\n        const user: User | undefined = this.props.loggedUser;\r\n        if (!user) return undefined;\r\n        user.password = \"^_^\";\r\n        return Object.assign(new User(), user);\r\n    }\r\n    isAdmin = (): boolean => {\r\n        const user = this.getLoggedUser();\r\n        if (!user) return false;\r\n        return user.hasRole(AuthorityType.admin_asrama);\r\n    }\r\n    scrollTop = () => {\r\n        // console.info(\"SCROLL TOP\");\r\n        const opt:ScrollToOptions = { top:0,  behavior: 'smooth' };\r\n        doItLater(()=>{\r\n        window.scrollTo(opt);\r\n        }, 100);\r\n    }\r\n    isUserLoggedIn = (): boolean => {\r\n        const loggedIn = true == this.props.loginStatus && null != this.props.loggedUser;\r\n        return loggedIn;\r\n    }\r\n    showConfirmation = (body: any): Promise<boolean> => {\r\n        const app = this;\r\n        return new Promise(function (resolve, reject) {\r\n            const onYes = function (e) {\r\n                resolve(true);\r\n            }\r\n            const onNo = function (e) {\r\n                resolve(false);\r\n            }\r\n            app.parentApp.showAlert(\"Konfirmasi\", body, false, onYes, onNo);\r\n        });\r\n\r\n    }\r\n    showConfirmationDanger = (body: any): Promise<any> => {\r\n        const app = this;\r\n        return new Promise(function (resolve, reject) {\r\n            const onYes = function (e) {\r\n                resolve(true);\r\n            }\r\n            const onNo = function (e) {\r\n                resolve(false);\r\n            }\r\n            app.parentApp.showAlertError(\"Konfirmasi\", body, false, onYes, onNo);\r\n        });\r\n\r\n    }\r\n    showInfo = (body: any) => {\r\n        this.parentApp.showAlert(\"Info\", body, true, function () { });\r\n    }\r\n    showError = (body: any) => {\r\n        this.parentApp.showAlertError(\"Error\", body, true, function () { });\r\n    }\r\n\r\n    backToLogin() {\r\n        if (!this.authenticated || this.props.history == null) {\r\n            return;\r\n        }\r\n        this.props.history.push(\"/login\");\r\n    }\r\n    refresh() {\r\n        this.setState({ updated: new Date() });\r\n    }\r\n    showCommonSuccessAlert = () => {\r\n        this.showInfo(\"Success\");\r\n    }\r\n    showCommonErrorAlert = (e: any) => {\r\n        console.error(e);\r\n\r\n        let message;\r\n        if (e.response && e.response.data) {\r\n            message = e.response.data.message;\r\n        } else {\r\n            message = e;\r\n        }\r\n        this.showError(\"Operasi Gagal: \" + message);\r\n    }\r\n    componentDidMount() {\r\n        if (this.validateLoginStatus()) {\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.authenticated == true && this.isUserLoggedIn() == false) {\r\n            console.debug(typeof this, \"BACK TO LOGIN\");\r\n            this.validateLoginStatus();\r\n        }\r\n    }\r\n\r\n    getServices = (): Services => {\r\n        return this.props.services;\r\n    }\r\n}","let index = 1;\r\nexport const uniqueId = function () {\r\n\tlet string = new String(new Date().getUTCMilliseconds()).toString();\r\n\tindex++;\r\n\treturn index + \"-\" + string;\r\n}\r\n\r\nexport function beautifyNominal(val:any) {\r\n\tif (val == \"\" || val == null) return \"0\";\r\n\tconst isDecimal:boolean = new String(val).includes(\".\");\r\n\tconst isNegative:boolean = new String(val).startsWith(\"-\");\r\n\tif (isNegative) {\r\n\t\tval = new String(val).replace(\"-\",\"\");\r\n\t}\r\n\tconst rawVal = isDecimal? parseInt( new String(val).split(\".\")[0]) : parseInt(val);\r\n\tlet nominal = Math.abs(rawVal).toString();\r\n\tlet result = \"\";\r\n\tif (nominal.length > 3) { \r\n\t\tlet zeroIndex: number = 0;\r\n\t\tfor (let i = nominal.length - 1; i > 0; i--) {\r\n\t\t\tzeroIndex++; \r\n\t\t\tresult = nominal[i] + result;\r\n\t\t\tif (zeroIndex == 3 ) {\r\n\t\t\t\tresult = \".\" + result;\r\n\t\t\t\tzeroIndex = 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tresult = nominal[0] + result;\r\n\t} else {\r\n\t\tresult = val;\r\n\t}\r\n\tif (rawVal < 0) {\r\n\t\treturn rawVal;\r\n\t}\r\n\tif (isDecimal) {\r\n\t\tresult+= \",\"+ new String(val).split(\".\")[1];\r\n\t}\r\n\tif (isNegative) {\r\n\t\tresult = \"-\"+result;\r\n\t}\r\n\treturn result;\r\n}\r\n \r\n\r\nconst months = [\r\n\t\"Januari\", \"Ferbuari\", \"Maret\", \"April\", \"Mei\", \"Juni\",\r\n\t\"Juli\", \"Agustus\", \"September\", \"Oktober\", \"November\", \"Desember\"\r\n]\r\n\r\nexport const monthName = (index:number) => {\r\n\treturn months[index];\r\n}\r\n\r\nexport const monthYearString = function (m, y) {\r\n\tif (m == null || y == null) {\r\n\t\treturn \"-\";\r\n\t}\r\n\treturn months[m - 1] + \" \" + y;\r\n}\r\nexport const twoDigits = (value:number) :string => {\r\n    if (value >= 10) {\r\n        return   value.toString();\r\n    }\r\n    return \"0\"+value;\r\n}","import BaseEntity from '../BaseEntity'; \nimport { uniqueId } from '../../utils/StringUtil';\nimport { AuthorityType } from '../AuthorityType';\nimport User from './../User';\n\nexport default class Menu extends BaseEntity{\n\tstatic defaultMenuIconClassName:string = \"fas fa-folder\";\n\n\tcode:string = uniqueId();\n\tname?:string;\n\tdescription?:string;\n\turl?:string;\n\tpathVariables?:string; \n\ticonUrl?:string;\n\tcolor?:string;\n\tfontColor?:string;\n\trole:AuthorityType[] = [];\n\n\t//\n\tactive?:boolean = false;\n\tmenuClass?:string = \"fas fa-folder\";\n\tauthenticated?:boolean = false;\n\tshowSidebar?:boolean  = false;\n\tsubMenus?:Menu[] = undefined;\n\n\tstatic getIconClassName = (menu:Menu) => {\n\t\tif (undefined == menu.menuClass) {\n\t\t\treturn Menu.defaultMenuIconClassName;\n\t\t}\n\t\treturn menu.menuClass;\n\t}\n\n\tuserAuthorized? = (user?:User) : boolean => {\n\t\tif (this.role.length == 0) return true;\n\t\tif (!user) return false;\n\t\tuser = User.clone(user);\n\t\tfor (let i = 0; i < this.role.length; i++) {\n\t\t\tconst element = this.role[i];\n\t\t\tif (user.hasRole(element)){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n","\r\nimport { AuthorityType } from '../models/AuthorityType';\r\nimport Menu from '../models/settings/Menu';\r\n \r\n\r\nexport const getMenus = () => {\r\n    let menuSet: Menu[] = [];\r\n    for (let i = 0; i < _menus.length; i++) {\r\n        const element: Menu = _menus[i];\r\n        const menu:Menu = Object.assign(new Menu, element);\r\n        const subMenus:Menu[] = [];\r\n        if (element.subMenus) {\r\n            for (let i = 0; i < element.subMenus.length; i++) {\r\n                const subMenu = element.subMenus[i];\r\n                subMenus.push(Object.assign(new Menu, subMenu));\r\n            }\r\n            menu.subMenus = subMenus;\r\n        }\r\n        menuSet.push(menu);\r\n    }\r\n    \r\n    return menuSet;\r\n}\r\nexport const extractMenuPath = (pathName: string) => {\r\n    const pathRaw = pathName.split('/');\r\n   \r\n    let firstPath = pathRaw[0];\r\n    if (firstPath.trim() == \"\") {\r\n        firstPath = pathRaw[1];\r\n    }\r\n    return firstPath;\r\n}\r\nexport const getMenuByMenuPath = (pathName: string): Menu | null => {\r\n    const menus = getMenus();\r\n    try {\r\n        for (let i = 0; i < menus.length; i++) {\r\n            const menu: Menu = menus[i];\r\n            if (menu.url == \"/\" + pathName) {\r\n                return menu;\r\n            }\r\n        }\r\n        return null;\r\n    } catch (error) {\r\n        return null;\r\n    }\r\n}\r\n\r\nconst _menus: Menu[] = [\r\n    {\r\n        code: 'home',\r\n        name: \"Home\",\r\n        url: \"/home\",\r\n        menuClass: \"fa fa-home\",\r\n        active: false,\r\n        authenticated: false,\r\n        showSidebar: false,\r\n        role : []\r\n    },\r\n    \r\n    {\r\n        code: 'dashboard',\r\n        name: \"Dashboard\",\r\n        url: \"/dashboard\",\r\n        menuClass: \"fas fa-tachometer-alt\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true,\r\n        role: [AuthorityType.admin_asrama, AuthorityType.musyrif_asrama],\r\n        subMenus: [\r\n            {\r\n                code: 'followup',\r\n                name: 'Follow Up',\r\n                url: 'followup',\r\n                menuClass: 'fas fa-history',\r\n                role: [ AuthorityType.musyrif_asrama],\r\n            },\r\n            // {\r\n            //     code: 'dashboard_productsales',\r\n            //     name: 'Product Sales',\r\n            //     url: 'productsales',\r\n            //     menuClass: 'fas fa-chart-line',\r\n            //     role: [],\r\n            // }\r\n        ]\r\n    }, \r\n    {\r\n        code: 'management',\r\n        name: \"Manajemen\",\r\n        url: \"/management\",\r\n        menuClass: \"fas fa-mail-bulk\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true,\r\n        role: [AuthorityType.admin_asrama, AuthorityType.musyrif_asrama],\r\n        subMenus: [\r\n            {\r\n                code: 'musyrifmanagement',\r\n                name: 'Musyrif',\r\n                url: 'musyrifmanagement',\r\n                menuClass: 'fas fa-users',\r\n                role: [AuthorityType.admin_asrama],\r\n            },\r\n            {\r\n                code: 'rule_category',\r\n                name: 'Kategori Pelanggaran',\r\n                url: 'rule_category',\r\n                menuClass: 'fas fa-tags',\r\n                role: [AuthorityType.admin_asrama],\r\n            },\r\n            {\r\n                code: 'rule_point',\r\n                name: 'Poin Pelanggaran',\r\n                url: 'rule_point',\r\n                menuClass: 'fas fa-puzzle-piece',\r\n                role: [AuthorityType.admin_asrama],\r\n            }, \r\n            {\r\n                code: 'warning_action',\r\n                name: 'Peringatan',\r\n                url: 'warning_action',\r\n                menuClass: 'fas fa-exclamation-triangle',\r\n                role: [AuthorityType.admin_asrama, AuthorityType.musyrif_asrama],\r\n            }, \r\n            {\r\n                code: 'category_predicate',\r\n                name: 'Predikat Rapor',\r\n                url: 'category_predicate',\r\n                menuClass: 'far fa-flag',\r\n                role: [AuthorityType.admin_asrama, ],\r\n            }, \r\n            {\r\n                code: 'rule_violation',\r\n                name: 'Pelanggaran Umum',\r\n                url: 'rule_violation',\r\n                menuClass: 'fas fa-times-circle',\r\n                role: [AuthorityType.musyrif_asrama, ],\r\n            }, \r\n        ]\r\n    }, \r\n    {\r\n        code: 'asrama',\r\n        name: \"Asrama\",\r\n        url: \"/asrama\",\r\n        menuClass: \"fas fa-school\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true,\r\n        role: [  AuthorityType.musyrif_asrama, AuthorityType.admin_asrama],\r\n        subMenus: [\r\n            {\r\n                code: 'studentlist',\r\n                name: 'Siswa',\r\n                url: 'studentlist',\r\n                menuClass: 'fas fa-users',\r\n                role: [ AuthorityType.musyrif_asrama],\r\n            },\r\n            {\r\n                code: 'input_point',\r\n                name: 'Form Pelanggaran Tipe 1',\r\n                url: 'inputpoint',\r\n                menuClass: 'fas fa-edit',\r\n                role: [ AuthorityType.musyrif_asrama],\r\n            }, \r\n            {\r\n                code: 'pointrecordedit',\r\n                name: 'Form Pelanggaran Tipe 2',\r\n                url: 'pointrecordedit',\r\n                menuClass: 'fas fa-edit',\r\n                role: [ AuthorityType.musyrif_asrama],\r\n            },\r\n            // {\r\n            //     code: 'medicalrecord',\r\n            //     name: 'Medical Record',\r\n            //     url: 'medicalrecord',\r\n            //     menuClass: 'fas fa-briefcase-medical',\r\n            //     role: [ AuthorityType.musyrif_asrama],\r\n            // },\r\n            {\r\n                code: 'pointsummary',\r\n                name: 'Rekap Pelanggaran',\r\n                url: 'pointsummary',\r\n                menuClass: 'fas fa-clipboard',\r\n                role: [ AuthorityType.musyrif_asrama, AuthorityType.admin_asrama],\r\n            },\r\n           \r\n            \r\n        ]\r\n    }, \r\n    {\r\n        code: 'report',\r\n        name: \"Laporan\",\r\n        url: \"/report\",\r\n        menuClass: \"fas fa-file\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true,\r\n        role: [  AuthorityType.musyrif_asrama, AuthorityType.admin_asrama],\r\n        subMenus: [\r\n            {\r\n                code: 'studentreport',\r\n                name: 'Rapor',\r\n                url: 'studentreport',\r\n                menuClass: 'fas fa-file',\r\n                role: [ AuthorityType.musyrif_asrama, AuthorityType.admin_asrama],\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        code: 'settings',\r\n        name: \"Setting\",\r\n        url: \"/settings\",\r\n        menuClass: \"fas fa-cogs\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true,\r\n        role: [  AuthorityType.admin_asrama],\r\n        subMenus: [\r\n            {\r\n                code: 'config',\r\n                name: 'Konfigurasi',\r\n                url: 'config',\r\n                menuClass: 'fas fa-cog',\r\n                role: [ AuthorityType.admin_asrama],\r\n            },\r\n        ]\r\n    }\r\n    \r\n];\r\n","\r\nimport React, { useRef, Fragment } from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../constant/stores';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { performLogout } from './../../redux/actionCreators';\r\nimport { getMenus } from '../../constant/Menus';\r\nimport './Header.css';\r\nimport User from './../../models/User';\r\nimport { baseImageUrl } from './../../constant/Url';\r\nimport Menu from './../../models/settings/Menu';\r\nclass IState {\r\n    showNavLinks: boolean = false;\r\n}\r\nclass Header extends BaseComponent {\r\n    state: IState = new IState();\r\n    buttonToggleNavRef: React.RefObject<HTMLButtonElement> = React.createRef();\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    toggleNavLinks = () => {\r\n        this.setState({ showNavLinks: !this.state.showNavLinks });\r\n    }\r\n    onLogout = (e: any) => {\r\n        const app = this;\r\n        app.showConfirmation(\"Logout?\").then(\r\n            function (ok) {\r\n                if (ok) {\r\n                    app.props.performLogout(app.parentApp);\r\n                }\r\n            }\r\n        )\r\n    }\r\n    setMenu = (menu: Menu) => {\r\n        if (this.state.showNavLinks && this.buttonToggleNavRef.current) {\r\n            this.buttonToggleNavRef.current.click();\r\n        }\r\n        this.props.setMenu(menu);\r\n\r\n    }\r\n    render() {\r\n        const showNavLinks: boolean = this.state.showNavLinks;\r\n        const menus = getMenus();\r\n        const user = this.getLoggedUser();\r\n        return (\r\n            <div className=\"bg-dark container-fluid\" style={{ position: 'fixed', zIndex: 55, padding: 0, margin: 0 }}>\r\n                <NavBarTop label={this.getApplicationProfile().name} />\r\n                <nav id=\"navbar\" className=\"navbar navbar-expand-lg navbar-dark bg-dark\" style={{ width: '100%' }}>\r\n                    {/* <div className=\"container-fluid\"></div> */}\r\n                    <a id=\"navbar-brand\" className=\"navbar-brand\" href=\"#\">{this.getApplicationProfile().name}</a>\r\n                    <button ref={this.buttonToggleNavRef} onClick={this.toggleNavLinks} className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target=\"#navbarToggler\" aria-controls=\"navbarToggler\"\r\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <i className={showNavLinks ? \"fas fa-times\" : \"fas fa-bars\"} />\r\n                    </button>\r\n                    <div className={\"collapse navbar-collapse\"} id=\"navbarToggler\">\r\n                        <ul id=\"navbar-top\" className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n                            {menus.map(menu => {\r\n                                if (menu == null || (menu.authenticated && !user)) return null;\r\n                                if (menu.userAuthorized && menu.userAuthorized(user) == false) return null;\r\n                                const isActive = this.props.activeMenuCode == menu.code;\r\n                                return (\r\n                                    <li key={\"header-menu-\" + new String(menu.code)} className={\"nav-item \" + (isActive ? \"active nav-active\" : \"nav-inactive\")}>\r\n                                        <Link onClick={() => this.setMenu(menu)} className={\"nav-link  \"}\r\n                                            to={menu.url}><span>{menu.name}</span>\r\n                                        </Link></li>\r\n                                )\r\n                            })}\r\n                        </ul >\r\n                        <form className=\"form-inline my-2 my-lg-0\">\r\n                            <UserIcon setMenuNull={this.props.setMenuNull}\r\n                                onLogout={this.onLogout} user={user} />\r\n                        </form >\r\n                    </div >\r\n                </nav >\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst NavBarTop = (props) => {\r\n    return (\r\n        <div id=\"navbar-brand-top\" style={{ paddingLeft: '0.5rem' }} className=\"container-fluid\">\r\n            <a style={{ fontSize: '15px' }} className=\"text-white navbar-brand\" href=\"#\">\r\n                <strong>{props.label}</strong>\r\n            </a>\r\n        </div>\r\n    );\r\n}\r\nconst UserIcon = (props: { user: User | undefined, setMenuNull(): any, onLogout(e): any }) => {\r\n    if (props.user) {\r\n        return (\r\n            <Fragment>\r\n                <Link onClick={props.setMenuNull} style={{ marginRight: \"5px\" }} className=\"btn btn-light btn-sm my-2 my-sm-0\"\r\n                    to='/settings/user-profile'>\r\n                    <i className=\"fas fa-user-circle\"/>\r\n                        &nbsp;{props.user.name}\r\n                </Link>\r\n                <a style={{ marginRight: '5px' }} className=\"btn btn-danger btn-sm  my-2 my-sm-0\"\r\n                    onClick={props.onLogout}><i className=\"fas fa-sign-out-alt\"></i>&nbsp;Logout\r\n\t\t\t\t</a>\r\n            </Fragment>);\r\n    }\r\n    return (\r\n\r\n        <Link style={{ marginRight: '5px' }} onClick={props.setMenuNull} className=\"btn btn-sm btn-info my-2 my-sm-0\"\r\n            to='/login'> <i className=\"fas fa-sign-in-alt\"></i>&nbsp;Login\r\n        </Link>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    performLogout: (app: any) => dispatch(performLogout(app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(Header))","\r\nimport React, { Component } from 'react';\r\nimport './Spinner.css';\r\nexport default class Spinner extends Component<any, any>{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const innerDivs:JSX.Element[] = new Array<JSX.Element>();\r\n        for (let i = 0; i <= 11; i++) {\r\n            innerDivs.push(<div key={\"spinner-item-\"+i}></div>);\r\n        }\r\n        return (\r\n            <div style={{width:'85px', height:'85px', display:'block'}} className=\"container-fluid text-center\" >\r\n                 <div style={{visibility:this.props.show == false?'hidden':'visible'}} className=\"lds-spinner\">\r\n                  {innerDivs}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","\r\n\r\nimport React, { RefObject, Component, FormEvent, Fragment, ChangeEvent } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport './Login.css';\r\nimport { performLogin } from '../../../redux/actionCreators';\r\nimport Spinner from './../../loader/Spinner';\r\nimport AnchorWithIcon from './../../navigation/AnchorWithIcon';\r\nclass IState {\r\n    loading: boolean = false; email: string = \"\"; editPassword: string = \"\";\r\n}\r\nclass Login extends BaseComponent {\r\n    state: IState = new IState();\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    startLoading = () => this.setState({ loading: true });\r\n    endLoading = () => this.setState({ loading: false });\r\n    login(e: FormEvent) {\r\n        e.preventDefault();\r\n        this.props.performLogin(this.state.email, this.state.editPassword, this);\r\n    }\r\n    componentDidMount() {\r\n        document.title = \"Login\";\r\n        if (this.isUserLoggedIn()) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n\r\n        if (this.isUserLoggedIn()) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n    updateCredentialProperty = (e: ChangeEvent) => {\r\n        const target = e.target as HTMLInputElement;\r\n        const name: string | null = target.getAttribute(\"name\");\r\n        if (null == name) return;\r\n        this.setState({ [name]: target.value });\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"Login\" style={{ marginTop: '20px' }} >\r\n                <form name='login' onSubmit={(e) => { this.login(e) }}\r\n                    method='POST' className=\"form-signin\">\r\n                    <div className=\"text-center\">\r\n                        <h2><i className=\"fas fa-user-circle\"></i></h2>\r\n                        <h1 className=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\r\n                    </div>\r\n                    <EmailField value={this.state.email} onChange={this.updateCredentialProperty} />\r\n                    <PasswordField value={this.state.editPassword} onChange={this.updateCredentialProperty} />\r\n                    {this.state.loading ? <Spinner /> :\r\n\r\n                        <Fragment>\r\n                            <button className=\"btn text-light\" style={{ marginRight: '5px', backgroundColor: 'rgb(9,26,78)' }} type=\"submit\">\r\n                                Sign in\r\n                            </button>\r\n                            {/* <AnchorWithIcon className=\"btn btn-light border border-dark \" to=\"register\" children=\"Register\" /> */}\r\n                        </Fragment>}\r\n                    <input name=\"transport_type\" type=\"hidden\" value=\"rest\" />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst PasswordField = ({ value, onChange }) => {\r\n    return <Fragment>\r\n        <label className=\"sr-only\">Password</label>\r\n        <input name=\"editPassword\" value={value} onChange={onChange} type=\"password\" id=\"inputPassword\" className=\"form-control\"\r\n            placeholder=\"Password\" required />\r\n    </Fragment>\r\n}\r\nconst EmailField = ({ value, onChange }) => {\r\n    return (<Fragment>\r\n        <label className=\"sr-only\">Email</label>\r\n        <input name=\"email\" value={value} onChange={onChange} type=\"text\"  className=\"form-control\"\r\n            placeholder=\"Email\" required autoFocus />\r\n    </Fragment>)\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    performLogin: (username: string, password: string, app: any) => dispatch(performLogin(username, password, app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(Login))","\nimport BaseComponent from './../BaseComponent';\nexport default class BasePage extends BaseComponent{\n    constructor(props, protected title:string | undefined|null= undefined, authenticated:boolean = false) {\n        super(props, authenticated);\n        if (title !== undefined && title !== null) {\n            document.title = title;\n        } else {\n            document.title = \"Asrama KIIS\";\n        }\n    }\n\n    componentDidMount() {\n        this.validateLoginStatus(()=>{\n            this.scrollTop();\n            this.componentReady();\n        })\n    }\n\n    protected componentReady() {\n\n    }\n    // componentWillUnmount() {\n    //     document.title = \"Asrama KIIS\";\n    // }\n}","export default class AttachmentInfo {\r\n    setUrl(arg0: string) {\r\n        this.url = arg0;\r\n        this.data = arg0.split(\",\")[1];\r\n    }\r\n    static nameOnly(name: any): AttachmentInfo {\r\n        const info = new AttachmentInfo();\r\n        info.name = name;\r\n        return info;\r\n    }\r\n    static instance(name: any, url:string): AttachmentInfo {\r\n        const info = new AttachmentInfo();\r\n        info.name = name;\r\n        info.url = url;\r\n        return info;\r\n    }\r\n    name: string = \"\";\r\n    blob: Blob = new Blob();\r\n    url: string = \"\";\r\n    data: string = \"\";\r\n}","import AttachmentInfo from '../models/settings/AttachmentInfo';\r\n \r\n  \r\nexport const getAttachmentInfoFromFile = (fileInput:HTMLInputElement): Promise<AttachmentInfo> => {\r\n    return new Promise<AttachmentInfo>((resolve, reject) =>{\r\n        if (null == fileInput.files || !fileInput.files[0]) {\r\n            reject(new Error(\"No file\"));\r\n            return;\r\n        }\r\n        try { \r\n            const file:File = fileInput.files[0]; \r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            console.debug(\"fileInput.files[0]: \", file);\r\n            reader.onload = function () { \r\n                const info:AttachmentInfo = new AttachmentInfo();\r\n                info.setUrl(new String(reader.result).toString());\r\n                // info.\r\n                info.name = file.name;\r\n                resolve(info);\r\n             }\r\n            reader.onerror = function (error) {\r\n                reject(error);\r\n            }\r\n        } catch (e) {\r\n            reject(e);\r\n        }\r\n    });\r\n\r\n}\r\n \r\n\r\n/**\r\n * \r\n * @param {Number} totalButton \r\n * @param {Number} currentPage \r\n */\r\nexport const createNavButtons = (totalButton, currentPage) => {\r\n    totalButton = Math.ceil(totalButton);\r\n    if (!currentPage) { currentPage = 0 }\r\n    let buttonData = new Array();\r\n    let min = currentPage - 3 < 0 ? 0 : currentPage - 3;\r\n    let max = currentPage + 3 > totalButton ? totalButton : currentPage + 3;\r\n\r\n    if (min != 0) {\r\n        buttonData.push({\r\n            text: 1,\r\n            value: 0\r\n        });\r\n    }\r\n\r\n    for (let index = min; index < max; index++) {\r\n        buttonData.push({\r\n            text: index + 1,\r\n            value: index\r\n        });\r\n    }\r\n\r\n    if (max != totalButton) {\r\n        buttonData.push({\r\n            text: totalButton,\r\n            value: totalButton - 1\r\n        });\r\n    }\r\n\r\n\r\n    return buttonData;\r\n}\r\n\r\n ","\r\n\r\nimport React, { ChangeEvent, FormEvent } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../../constant/stores'; \r\nimport User from './../../../../models/User';\r\nimport BasePage from './../../BasePage';\r\nimport AttachmentInfo from './../../../../models/settings/AttachmentInfo';\r\nimport { getAttachmentInfoFromFile } from './../../../../utils/ComponentUtil';\r\nimport StudentService from './../../../../services/StudentService';\r\nimport { AuthorityType } from '../../../../models/AuthorityType';\r\n\r\nclass State {\r\n    attachment:AttachmentInfo | undefined;\r\n}\r\nclass DashboardMain extends BasePage {\r\n    state:State = new State();\r\n    studentService:StudentService;\r\n    constructor(props: any) {\r\n        super(props, \"Dashboard\", true);\r\n        this.studentService = this.getServices().studentService;\r\n    }\r\n\r\n    addPointRecord = (e:FormEvent) => {\r\n        e.preventDefault();\r\n        if (!this.state.attachment) return;\r\n        \r\n        this.props.history.push({\r\n            pathname: '/asrama/pointrecordedit',\r\n              state: {attachment: this.state.attachment }\r\n         })\r\n    }\r\n    updateImage = (e:ChangeEvent) => {\r\n        getAttachmentInfoFromFile(e.target as HTMLInputElement) \r\n            .then(attachment=>{\r\n                this.setState({attachment:attachment});\r\n            }).catch(console.error)\r\n    }\r\n    render() {\r\n        const user: User | undefined = this.getLoggedUser();\r\n        if (!user) return null;\r\n        return (\r\n            <div  className=\" section-body container-fluid\">\r\n                <h2>Dashboard</h2>\r\n                <div className=\"alert alert-info\">\r\n                    Welcome, <strong>{user.name}  </strong>\r\n                    <hr/>\r\n                    {/* <p className=\"badge badge-dark text-capitalize\">{(user.roles).join(\", \")}</p> */}\r\n                   \r\n                </div>\r\n                { !this.getLoggedUser()?.hasRole(AuthorityType.musyrif_asrama) ? null :\r\n                    <form className=\"mt-10 text-center\" onSubmit={this.addPointRecord}>\r\n                        <h1><i className=\"fas fa-camera\" /></h1>\r\n                        <h3> Input Pelanggaran</h3>\r\n                        <input onChange={this.updateImage} type=\"file\" accept=\"image/*\" className=\"form-control mt-3\" />\r\n                        <p/>\r\n                        {this.state.attachment?\r\n                        <div>\r\n                            <input type=\"submit\" className=\"btn btn-dark btn-large\" value=\"Selanjutnya\" />\r\n                            <img className=\"w-100 mt-5\" src={this.state.attachment.url}/>\r\n                            \r\n                        </div>\r\n                        : null}\r\n                    </form>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps\r\n)(DashboardMain))","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from '../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport ApplicationProfile from '../../../models/ApplicationProfile';\r\nimport { baseImageUrl } from '../../../constant/Url';\r\n\r\nclass HomeMain extends BaseComponent {\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Home\";\r\n    }\r\n    render() {\r\n        const applicationProfile: ApplicationProfile = this.getApplicationProfile();\r\n        const imageUrl: string = baseImageUrl() + applicationProfile.backgroundUrl;\r\n        return (\r\n            <div className=\"section-body container-fluid\" style={{padding:0}}>\r\n                <div className=\"jumbotron\"\r\n                    style={{\r\n                        margin:'0px',\r\n                        marginTop: '20px',\r\n                        backgroundImage: 'url(\"' + imageUrl + '\")',\r\n                        backgroundSize: 'cover',\r\n                        color: applicationProfile.fontColor??\"rgb(0,0,0)\"\r\n                    }}\r\n                >\r\n                    <h1 className=\"display-4\">{applicationProfile.name}</h1>\r\n                    <p className=\"lead\">{applicationProfile.description}</p>\r\n                    <hr className=\"my-4\" />\r\n                    <p>{applicationProfile.welcoming_message}</p>\r\n                    <Link className=\"btn btn-primary btn-lg\" to=\"/about\" role=\"button\">About Us</Link>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n} \r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps, \r\n)(HomeMain))","\r\nimport BaseEntity from './BaseEntity';\r\nimport User from './User';\r\nexport default class Employee extends BaseEntity\r\n{\r\n    user?:User;\r\n}","import React from 'react'\r\nimport { uniqueId } from './StringUtil';\r\nexport const tableHeader = (...values:string[]) => {\r\n   \r\n    return (<thead>\r\n        <tr>\r\n            {values.map((value)=>{\r\n\r\n                return <th key={uniqueId()}>{value}</th>\r\n            })}\r\n        </tr>\r\n    </thead>)\r\n}\r\nexport const groupArray = function (array, division) {\r\n    if (null == array || array.length == 0) { return [] }\r\n    const groupedArray = new Array();\r\n    const itemPerDivision = Math.ceil(array.length / division)\r\n\r\n    if (itemPerDivision == 1) {\r\n        groupedArray.push(array);\r\n        return groupedArray;\r\n    }\r\n\r\n    for (let i = 0; i < division; i++) {\r\n        groupedArray.push(new Array());\r\n    }\r\n\r\n    let index = 1;\r\n    let divisionIndex = 0;\r\n    for (let i = 0; i < array.length; i++) {\r\n        const element = array[i];\r\n        groupedArray[divisionIndex].push(element);\r\n\r\n        index++;\r\n        if (index > itemPerDivision) {\r\n            divisionIndex++;\r\n            index = 1;\r\n        }\r\n    }\r\n\r\n    return groupedArray;\r\n}\r\n","\nexport default class Filter{\n    static resetFieldsFilter = (f:Filter) : Filter => {\n        for (const key in f.fieldsFilter) {\n\t\t\tf.fieldsFilter[key] = \"\";\n\t\t}\n\t\treturn f;\n    }\n    static withLimit = (arg0: number): Filter => {\n\t\tconst f =new Filter();\n\t\tf.limit = arg0;\n        return f;\n    }\n\tlimit? :number = 5; \n\tpage? :number = 0;\n\torderType?:string;\n\torderBy?:string;\n\tcontains?:boolean; \n\texacts?:boolean;\n\tday?:number;\n\tyear?:number;\n\tmonth?:number;\n\tmodule?:string;\n\tfieldsFilter:Record<string, any> = {};\n\tdayTo?:number;\n\tmonthTo?:number;\n\tyearTo?:number;\n\tmaxValue?:number;\n\tavailabilityCheck?:boolean;\n\t \n\n}\n","\r\nimport React, { Component } from 'react';\r\ninterface Props {\r\n    orientation?:string,\r\n    show?:boolean,\r\n    children:any,\r\n    label?:any,\r\n    className?:string,\r\n}\r\nexport default class FormGroup extends Component<Props, any>\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        if (false == this.props.show) return null;\r\n        const orientation = this.props.orientation == 'vertical' ? 'vertical' : 'horizontal';\r\n        return (\r\n            <div className={`form-group ${this.props.className} ` + (orientation == 'vertical' ? '' : 'row')}>\r\n                <label className={(orientation == 'vertical' ? '' : 'col-sm-3')}><strong>{this.props.label ? this.props.label : null}</strong></label>\r\n                <div className={(orientation == 'vertical' ? '' : 'col-sm-9')}>\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nimport { uniqueId } from './../../utils/StringUtil';\r\ninterface IProps {\r\n    limit: number,\r\n    totalData: number,\r\n    activePage: number,\r\n    onClick: any\r\n}\r\nexport default class NavigationButtons extends Component<IProps, any> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        const buttonIndexes = generateButtonValues(this.props.limit, this.props.totalData, this.props.activePage);\r\n        if (buttonIndexes.length == 0) { return null }\r\n        const lastIndex = buttonIndexes[buttonIndexes.length - 1];\r\n        const nextPage = this.props.activePage + 1 >= lastIndex  ? 0 : this.props.activePage + 1;\r\n        const previusPage = this.props.activePage - 1 < 0? lastIndex-1 : this.props.activePage - 1;\r\n        return (<div>\r\n            <nav aria-label=\"Page navigation example\">\r\n                <ul className=\"pagination\">\r\n                    <li className=\"page-item\"><a className=\"page-link\" onClick={(e) => this.props.onClick(previusPage)}>Previous</a></li>\r\n                    {buttonIndexes.map((page, i) => {\r\n                        return <li key={\"NAV-\"+uniqueId()} className={\"page-item \"+(page-1 == this.props.activePage?\"active\":\"\")}><a className=\"page-link \" onClick={(e) => this.props.onClick(page - 1)} >{page}</a></li>\r\n                    })}\r\n                    <li className=\"page-item\"><a className=\"page-link\" onClick={(e) => this.props.onClick(nextPage)}>Next</a></li>\r\n                </ul>\r\n            </nav>\r\n        </div>)\r\n    }\r\n}\r\n\r\nconst generateButtonValues = (limit: number, totalData: number, currentPage: number) => {\r\n\r\n    /* DISPLAYED BUTTONS */\r\n    const displayed_buttons: number[] = [];\r\n    const buttonCount = Math.ceil(totalData / limit);\r\n\r\n    // console.debug(\"current page:\", currentPage);\r\n    const min = (currentPage) - 1;\r\n    const max = (currentPage) + 3;\r\n    // const min = (currentPage) - 2;\r\n    // const max = (currentPage) + 2;\r\n\r\n    // console.debug(\"min\", min, \"current page:\", currentPage, \"max\", max);\r\n    if (buttonCount > 1) {\r\n        displayed_buttons.push(1);\r\n    }\r\n    for (let i = min; i <= max; i++) {\r\n        if (i > 1 && i <= buttonCount) {\r\n            (displayed_buttons.push(i));\r\n        }\r\n    }\r\n    if (max < buttonCount) {\r\n        displayed_buttons.push(buttonCount);\r\n    }\r\n    return displayed_buttons;\r\n}\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\ninterface IProps{\r\n    show?:boolean, attributes?:any, iconClassName?:string, to?:string, className?:string,\r\n    style?:any, onClick?(e:any):any, children?:any\r\n}\r\nexport default class AnchorWithIcon extends Component<IProps, any>\r\n{\r\n    constructor(props: any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        if (this.props.show == false) return null;\r\n        const btnClassName = this.props.className ?? \"btn btn-outline-secondary\";\r\n        if (this.props.to) {\r\n            return <Link {...this.props.attributes} to={this.props.to} style={this.props.style} onClick={this.props.onClick} className={btnClassName} >\r\n                {this.props.iconClassName ?\r\n                    <span style={{ marginRight: this.props.children?'5px':'0px' }}><i className={this.props.iconClassName} /></span>\r\n                    :\r\n                    null}\r\n                {this.props.children}\r\n            </Link>\r\n        }\r\n        return (\r\n            <a {...this.props.attributes} tyle={this.props.style} onClick={this.props.onClick} className={btnClassName} >\r\n                {this.props.iconClassName ?\r\n                    <span style={{ marginRight: this.props.children?'5px':'0px' }}><i className={this.props.iconClassName} /></span>\r\n                    :\r\n                    null}\r\n                {this.props.children}\r\n            </a>\r\n        )\r\n    }\r\n}","\r\nimport BaseComponent from './../../BaseComponent';\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport Employee from './../../../models/Employee';\r\nimport { AuthorityType } from '../../../models/AuthorityType';\r\nimport MusyrifManagementService from './../../../services/MusyrifManagementService';\r\nimport ToggleButton from './../../navigation/ToggleButton';\r\nimport WebResponse from '../../../models/commons/WebResponse';\r\nimport AnchorWithIcon from './../../navigation/AnchorWithIcon';\r\nclass EmployeeRow extends BaseComponent {\r\n    musyrifManagementService: MusyrifManagementService;\r\n    constructor(props) {\r\n        super(props, true);\r\n        this.musyrifManagementService = this.getServices().musyrifManagementService;\r\n    }\r\n\r\n    getEmployee = (): Employee => {\r\n        return this.props.employee;\r\n    }\r\n    activeStatusUpdate = (response: WebResponse) => {\r\n        // this.showInfo(\"Success\");\r\n        if (this.props.onUpdated) {\r\n            this.props.onUpdated();\r\n        }\r\n    }\r\n    activateMusyrif = (active: boolean) => {\r\n        const emp = this.getEmployee();\r\n        this.commonAjax(\r\n            this.musyrifManagementService.activate,\r\n            this.activeStatusUpdate,\r\n            this.showCommonErrorAlert,\r\n            emp, active);\r\n\r\n    }\r\n    render() {\r\n        const props = this.props;\r\n        const emp = this.getEmployee();\r\n        const isMusyrif = emp.user?.hasRole(AuthorityType.musyrif_asrama);\r\n        return (\r\n            <tr key={emp.id} >\r\n                <td>{props.startingNumber + 1}</td>\r\n                <td>{emp.user?.name}</td>\r\n                <td>{emp.user?.email}</td>\r\n                <td>{emp.user?.nip}</td>\r\n                <td><i className={isMusyrif ? \"fas fa-check text-success\" : \"fas fa-times\"} /></td>\r\n                <td> {isMusyrif == true ?\r\n                    <AnchorWithIcon className=\"btn btn-danger btn-sm\" onClick={(e) => this.activateMusyrif(false)} >\r\n                        Nonaktifkan\r\n                    </AnchorWithIcon> :\r\n                    <AnchorWithIcon className=\"btn btn-success btn-sm\" onClick={(e) => this.activateMusyrif(true)} >\r\n                        Jadikan musyrif\r\n                    </AnchorWithIcon>\r\n                }\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps\r\n)(EmployeeRow))","\r\nimport React, { Component } from 'react';\r\ninterface IProps {\r\n    show?:boolean;\r\n    className?:string;\r\n    style?:any;\r\n    onClick?:any;\r\n    iconClassName?:string;\r\n    attributes?:any;\r\n}\r\nexport default class AnchorButton extends Component<IProps, any>\r\n{\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        if (this.props.show == false) return null;\r\n        const btnClassName = this.props.className??\"btn btn-outline-secondary\";\r\n        return (\r\n            <a style={this.props.style} {...this.props.attributes} onClick={this.props.onClick} className={btnClassName} >\r\n                {this.props.iconClassName?\r\n                <span style={this.props.children?{marginRight:'5px'}:{}}><i className={this.props.iconClassName}/></span>\r\n                :\r\n                null}\r\n                {this.props.children}\r\n            </a>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport AnchorButton from './AnchorButton';\r\ninterface Props {\r\n    onClick(val:boolean):void,\r\n    active:boolean,\r\n    yesLabel?:string,\r\n    noLabel?:string\r\n}\r\nexport default class ToggleButton extends Component<Props, any>{\r\n    \r\n    render() {\r\n        const props = this.props;\r\n        const active = this.props.active;\r\n        return (\r\n            <div className=\"btn-group\">\r\n                <AnchorButton className={\"btn  btn-sm \" + (active ? \"btn-dark\" : \"btn-outline-dark\")} onClick={(e) => this.props.onClick(true)} >\r\n                    {props.yesLabel??\"Yes\"}</AnchorButton>\r\n                <AnchorButton className={\"btn  btn-sm \" + (active == false ? \"btn-dark\" : \"btn-outline-dark\")} onClick={(e) => this.props.onClick(false)}  >\r\n                    {props.noLabel??\"No\"}</AnchorButton>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}","import React, { ChangeEvent } from 'react'\r\nimport BaseComponent from './../../BaseComponent';\r\nimport Modal from './../../container/Modal';\r\nimport MasterDataService from './../../../services/MasterDataService';\r\nimport WebResponse from '../../../models/commons/WebResponse';\r\nimport WebRequest from '../../../models/commons/WebRequest';\r\nimport BasePage from './../BasePage';\r\nimport './Management.css'\r\nimport BaseEntity from './../../../models/BaseEntity';\r\n\r\nexport default  class BaseManagementPage extends BasePage {\r\n    protected masterDataService: MasterDataService;\r\n    protected modelName: string = \"undefined\";\r\n    protected formRef: React.RefObject<Modal> = React.createRef(); \r\n\r\n    emptyRecord = () : BaseEntity => { \r\n        throw new Error(\"Empty Record Method is Not Implemented....\");\r\n    }\r\n\r\n    constructor(props, modelName?: string, protected overrideLoading: boolean = false) {\r\n        super(props, \"Asrama KIIS\", true);\r\n        if (modelName) {\r\n            this.modelName = modelName;\r\n        }\r\n        this.masterDataService = this.getServices().masterDataService;\r\n         \r\n    }\r\n    startLoading = (withProgress: boolean = false) => {\r\n        if (this.overrideLoading) {\r\n            this.setState({ loading: true });\r\n        } else {\r\n            super.startLoading(withProgress);\r\n        }\r\n    }\r\n    endLoading = () => {\r\n        if (this.overrideLoading) {\r\n            this.setState({ loading: false });\r\n        } else {\r\n            super.endLoading();\r\n        }\r\n    }\r\n    loadItems = () => {\r\n        const request: WebRequest = {\r\n            filter: this.state.filter,\r\n            modelName: this.modelName\r\n        }\r\n        this.commonAjax(\r\n            this.masterDataService.list,\r\n            this.itemsLoaded,\r\n            this.showCommonErrorAlert,\r\n            request\r\n        )\r\n    }\r\n    itemsLoaded = (response: WebResponse) => {\r\n        this.setState({ items: response.items, totalData: response.totalData });\r\n    }\r\n    \r\n    updateFilter = (e: ChangeEvent) => {\r\n        const filter = this.state.filter;\r\n        const target = (e.target as any);\r\n\r\n        if (!target.value || target.value == \"\") {\r\n            return;\r\n        }\r\n\r\n        let value:any;\r\n        if (target.type == 'number' || (target.dataset && target.dataset['type'] == 'number')) {\r\n            value = parseInt(target.value);\r\n        } else {\r\n            value = target.value;\r\n        }\r\n        filter[target.name] = value;\r\n        this.setState({ filter: filter })\r\n    }\r\n    updateFieldsFilter = (e: ChangeEvent) => {\r\n        const filter = this.state.filter;\r\n        const target = (e.target as any);\r\n        if (!filter.fieldsFilter) {\r\n            filter.fieldsFilter = {};\r\n        }\r\n        filter.fieldsFilter[target.name] = target.value;\r\n        this.setState({ filter: filter })\r\n    }\r\n    loadAtPage = (page: number) => {\r\n        const filter = this.state.filter;\r\n        filter.page = page;\r\n        this.setState({ filter: filter }, this.loadItems);\r\n    }\r\n    updateRecordProp = (e: ChangeEvent) => {\r\n        const target = e.target as any;\r\n        const dataset = target.dataset;\r\n        let value:any;\r\n        if (dataset['type'] && dataset['type'] == 'boolean') {\r\n            value = target.value == \"true\" ? true : false;\r\n        } else {\r\n            value =  target.value;\r\n        }\r\n        const record = this.state.record;\r\n        record[target.name] = value;\r\n        this.setState({ record: record });\r\n    }\r\n    resetForm = (callback?: () => any) => {\r\n        this.setState({ record: this.emptyRecord() }, callback);\r\n    }\r\n    oneRecordLoaded =  (item: any) => {\r\n        this.setState({ record: item }, () => {\r\n            if (this.formRef.current) {\r\n                this.formRef.current.showModal();\r\n            }\r\n            this.scrollTop();\r\n        });\r\n    }\r\n    componentDidMount() {\r\n        super.componentDidMount();\r\n        this.scrollTop();\r\n        this.loadItems();\r\n    }\r\n    recordUpdated = (response: WebResponse) => {\r\n        this.resetForm(() => {\r\n            if (this.formRef.current) {\r\n                this.formRef.current.hideModal();\r\n            }\r\n            this.showInfo(\"Success Update\");\r\n            this.loadItems();\r\n        });\r\n    }\r\n    protected callApiSubmit = (request: WebRequest) => {\r\n        this.commonAjax(\r\n            this.masterDataService.update,\r\n            this.recordUpdated,\r\n            this.showCommonErrorAlert,\r\n            request\r\n        )\r\n    }\r\n\r\n    reload = (e:any) => {\r\n        if (e && e.preventDefault) {\r\n            e.preventDefault();\r\n        }\r\n        this.loadAtPage(0);\r\n    }\r\n}","import React, { ChangeEvent } from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport Employee from './../../../models/Employee';\r\nimport { tableHeader } from './../../../utils/CollectionUtil';\r\nimport Filter from '../../../models/commons/Filter'; \r\nimport FormGroup from './../../form/FormGroup';\r\nimport NavigationButtons from './../../navigation/NavigationButtons';\r\nimport EmployeeRow from './EmployeeRow';\r\nimport User from '../../../models/User';\r\nimport ToggleButton from './../../navigation/ToggleButton';\r\nimport BaseManagementPage from './BaseManagementPage';\r\nclass State {\r\n    items:Employee[] = [];\r\n    filter:Filter = new Filter();\r\n    totalData:number = 0;\r\n}\r\nclass MusyrifManagement extends BaseManagementPage{\r\n    state:State = new State();\r\n    constructor(props) {\r\n        super(props, 'employee');\r\n        this.state.filter.limit = 10;\r\n        this.state.filter.fieldsFilter = {\r\n            'musyrif_only':true\r\n        }\r\n    }\r\n    emptyRecord = () => new Employee();\r\n    setMusyrifOnly = (musyrifOnly:boolean) => {\r\n        const filter = this.state.filter;\r\n        if (!filter.fieldsFilter) {\r\n            filter.fieldsFilter = {};\r\n        }\r\n        filter.fieldsFilter['musyrif_only'] = musyrifOnly;\r\n        this.setState({filter: filter}, ()=> this.loadAtPage(0))\r\n    }\r\n    onEmployeeStatusUpdate = () => {\r\n        this.loadItems();\r\n    }\r\n    render() {\r\n        const filter = this.state.filter;\r\n        const musyrifOnly :boolean = filter.fieldsFilter && filter.fieldsFilter['musyrif_only']&&filter.fieldsFilter['musyrif_only'] == true;\r\n        return (\r\n            <div  className=\"section-body container-fluid\">\r\n                <h2>Musyrif</h2>\r\n                <hr/>\r\n               \r\n                <form onSubmit={this.reload}>\r\n                    <FormGroup label=\"Cari\">\r\n                        <input name=\"name\" placeholder=\"Nama atau email\" className=\"form-control-sm\" value={filter.fieldsFilter?filter.fieldsFilter['name']:\"\"} onChange={this.updateFieldsFilter} />\r\n                    </FormGroup>\r\n                    <FormGroup label=\"Jumlah Tampilan\">\r\n                        <input name=\"limit\" type=\"number\" className=\"form-control-sm\" value={filter.limit??5} onChange={this.updateFilter} />\r\n                    </FormGroup>\r\n                    <FormGroup label=\"Opsi\">\r\n                        <ToggleButton active={musyrifOnly} onClick={this.setMusyrifOnly} noLabel=\"Semua pegawai\" yesLabel=\"Hanya musyrif\" />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <input className=\"btn btn-primary btn-sm\" type=\"submit\" value=\"Submit\"/>\r\n                    </FormGroup>\r\n                </form>\r\n                <NavigationButtons activePage={filter.page??0} limit={filter.limit??5} totalData={this.state.totalData}\r\n                    onClick={this.loadAtPage} />\r\n                <EmployeeList onUpdated={this.onEmployeeStatusUpdate} startingNumber={(filter.page??0) *( filter.limit?? 5)} items={this.state.items} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst EmployeeList = (props:{onUpdated:()=>void,startingNumber:number, items:Employee[]}) => {\r\n    const items = props.items;\r\n    return (\r\n        <div className=\"container-fluid\" style={{overflow:'scroll'}}>\r\n        <table className=\"table table-striped\" >\r\n            {tableHeader(\"No\", \"Nama\", \"Email\", \"NIP\", \"Role: Musyrif\", \"Opsi\")}\r\n            <tbody>\r\n                {items.map((emp,i)=>{\r\n                    if (emp.user) {\r\n                        emp.user = User.clone(emp.user);\r\n                    }\r\n                    return (\r\n                        <EmployeeRow onUpdated={props.onUpdated} employee={emp} startingNumber={props.startingNumber+i} key={emp.id} />\r\n                    )\r\n                })}\r\n            </tbody>\r\n        </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(\r\n    connect(\r\n        mapCommonUserStateToProps\r\n    )(MusyrifManagement)\r\n)","import React from 'react'\r\nimport BaseComponent from './../../BaseComponent';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport BasePage from './../BasePage';\r\nclass ManagementMain extends BasePage\r\n{\r\n    constructor(props) {\r\n        super(props, \"Management\", true);\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container-fluid section-body\">\r\n                <h2>Halaman Manajemen</h2>\r\n                <div className=\"alert alert-info\">\r\n                    Welcome, <strong>{this.getLoggedUser()?.name}</strong>\r\n                    <hr/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(\r\n    connect(\r\n        mapCommonUserStateToProps\r\n    )(ManagementMain)\r\n)","\r\nimport BaseEntity from './BaseEntity';\r\nimport RulePoint from './RulePoint';\r\nexport default class Category extends BaseEntity\r\n{\r\n    name?:string;\r\n    description?:string;\r\n\r\n    points:RulePoint[] | undefined;\r\n\r\n    static clone = (object:any) : Category => {\r\n        return Object.assign(new Category, object);\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nimport AnchorButton from '../navigation/AnchorButton';\r\nclass IState {\r\n    show:boolean = true\r\n}\r\ninterface IProps {\r\n    toggleable?:boolean, show?:boolean, title?:string, style?:any, footerContent?:any,showFooter?:boolean\r\n}\r\nexport default class Modal extends Component<IProps, IState> {\r\n    state:IState = new IState();\r\n    constructor(props: any) {\r\n        super(props);\r\n    }\r\n    hideModal = () => {\r\n        this.setState({show:false});\r\n    }\r\n    showModal = () => {\r\n        this.setState({show:true});\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.show == false) { this.setState({show:false}); }\r\n    }\r\n    render() {\r\n    //    if (this.props.show == false) { return null; }\r\n        const title = this.props.title?? \"Title\"; \r\n        if (this.props.toggleable == true && this.state.show == false) {\r\n            return (\r\n                <AnchorButton style={{marginBottom:'10px'}} onClick={this.showModal} iconClassName=\"fas fa-angle-down\" >Show {title}</AnchorButton>\r\n            )\r\n        }\r\n        const props = (({ style, show, footerContent, toggleable, ...props }) => props)(this.props) // remove b and c\r\n        return (\r\n            <div {...props} className=\"modal-content \" style={{...this.props.style, marginBottom:'10px'}}>\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">{title}</h5>\r\n                    {this.props.toggleable?\r\n                    <button type=\"button\" className=\"btn btn-sm\" onClick={this.hideModal} aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\">\r\n                            <i className='fas fa-times'/>\r\n                        </span>\r\n                    </button>\r\n                    :\r\n                    null}\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    {this.props.children}\r\n                </div>\r\n                {this.props.footerContent || this.props.showFooter == true?\r\n                <div className=\"modal-footer\">\r\n                    {this.props.footerContent}\r\n                </div>\r\n                :null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React from 'react'\r\nimport BaseComponent from './../../BaseComponent';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport AnchorWithIcon from './../../navigation/AnchorWithIcon';\r\nimport BaseEntity from './../../../models/BaseEntity';\r\nimport MasterDataService from './../../../services/MasterDataService';\r\nimport WebRequest from '../../../models/commons/WebRequest';\r\nimport WebResponse from '../../../models/commons/WebResponse'; \r\nclass EditDeleteButton extends BaseComponent\r\n{\r\n    masterDataService:MasterDataService;\r\n    constructor(props) {\r\n        super(props, true);\r\n        this.masterDataService = this.getServices().masterDataService;\r\n    }\r\n\r\n    get modelName  () : string   {\r\n        return this.props.modelName;\r\n    }\r\n    getRecord = () : BaseEntity => {\r\n        const rec = this.props.record;\r\n        if (!rec) {\r\n            alert(\"this.props.record undefined\");\r\n            return {};\r\n        }\r\n        return rec;\r\n    }\r\n    recordLoaded = (response:WebResponse) => {\r\n        if (this.props.recordLoaded) {\r\n            this.props.recordLoaded(response.item);\r\n        }\r\n    }\r\n    recordLoadedForDetail = (response:WebResponse) => {\r\n        if (this.props.recordLoadedForDetail) {\r\n            this.props.recordLoadedForDetail(response.item);\r\n        }\r\n    }\r\n    recordDeleted = (response:WebResponse) => {\r\n        this.showInfo(\"Record has been deleted\");\r\n        if (this.props.recordDeleted) {\r\n            this.props.recordDeleted(response.item);\r\n        }\r\n    }\r\n    get loadRecordRequest():WebRequest {\r\n        const req :WebRequest = {\r\n            record_id : this.getRecord().id,\r\n            modelName : this.modelName\r\n        }\r\n        return req;\r\n    }\r\n    loadRecord = () => {\r\n        \r\n        this.commonAjax(\r\n            this.masterDataService.getOne,\r\n            this.recordLoaded,\r\n            this.showCommonErrorAlert,\r\n            this.loadRecordRequest\r\n        )\r\n    }\r\n    loadRecordForDetail = () => {\r\n\r\n        this.commonAjax(\r\n            this.masterDataService.getOne,\r\n            this.recordLoadedForDetail,\r\n            this.showCommonErrorAlert,\r\n            this.loadRecordRequest\r\n        )\r\n    }\r\n    deleteRecord = () => {\r\n        this.showConfirmationDanger(\"Delete record?\")\r\n        .then(ok=>{\r\n            if (!ok) return;\r\n            this.commonAjax(\r\n                this.masterDataService.delete,\r\n                this.recordDeleted,\r\n                this.showCommonErrorAlert,\r\n                this.loadRecordRequest\r\n            )\r\n        })\r\n    }\r\n    hasType = (type:string):boolean => {\r\n        if (!this.props.types) return false;\r\n        return  (this.props.types as string[]).indexOf(type) >= 0;\r\n    }\r\n    render() {\r\n        const types:string[] | undefined = this.props.types ?? undefined;\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {this.hasType('detail') ?\r\n                    <AnchorWithIcon onClick={this.loadRecordForDetail} iconClassName=\"fas fa-info-circle\" className=\"btn btn-info btn-sm\"/>\r\n                    :\r\n                    null}\r\n                {types === undefined || this.hasType('edit') ?\r\n                    <AnchorWithIcon onClick={this.loadRecord} iconClassName=\"fas fa-edit\" className=\"btn btn-warning btn-sm\"/>\r\n                    :\r\n                    null}\r\n                {types === undefined || this.hasType('delete') ?\r\n                    <AnchorWithIcon onClick={this.deleteRecord} iconClassName=\"fas fa-times\" className=\"btn btn-danger btn-sm\"/>\r\n                    :\r\n                    null}\r\n               \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(\r\n    connect(\r\n        mapCommonUserStateToProps\r\n    )(EditDeleteButton)\r\n)","\r\nimport React, { ChangeEvent } from 'react'\r\nimport BaseComponent from './../../BaseComponent';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport Filter from '../../../models/commons/Filter';\r\nimport Category from './../../../models/Category';\r\nimport WebRequest from '../../../models/commons/WebRequest';\r\nimport FormGroup from './../../form/FormGroup';\r\nimport NavigationButtons from './../../navigation/NavigationButtons';\r\nimport Modal from './../../container/Modal';\r\nimport EditDeleteButton from './EditDeleteButton'\r\nimport { tableHeader } from './../../../utils/CollectionUtil';\r\nimport BaseManagementPage from './BaseManagementPage';\r\nimport BaseEntity from './../../../models/BaseEntity';\r\nclass State {\r\n    items: Category[] = [];\r\n    filter: Filter = new Filter();\r\n    totalData: number = 0;\r\n    record: Category = new Category();\r\n\r\n}\r\nclass CategoryManagement extends BaseManagementPage {\r\n    state: State = new State();\r\n    constructor(props) {\r\n        super(props, 'category');\r\n        this.state.filter.limit = 10;\r\n    }\r\n    \r\n    onSubmit = () => {\r\n        // console.debug(\"RECORD: \", this.state.record);\r\n        this.showConfirmation(\"Submit Data?\")\r\n            .then(ok => {\r\n                if (!ok) return;\r\n\r\n                const request: WebRequest = {\r\n                    category: this.state.record,\r\n                    modelName: this.modelName\r\n                }\r\n                this.callApiSubmit(request);\r\n            })\r\n    }\r\n    \r\n    emptyRecord = ():BaseEntity => new Category(); \r\n    render() {\r\n        const filter: Filter = this.state.filter;\r\n        return (\r\n            <div className=\"container-fluid section-body\">\r\n                <h2>Kategori Pelanggaran</h2>\r\n                <hr />\r\n                <RecordForm formRef={this.formRef} resetForm={this.resetForm} onSubmit={this.onSubmit} record={this.state.record} updateRecordProp={this.updateRecordProp} />\r\n                <form onSubmit={this.reload}>\r\n                    <FormGroup label=\"Cari\">\r\n                        <input name=\"name\" placeholder=\"nama\" className=\"form-control-sm\" value={filter.fieldsFilter ? filter.fieldsFilter['name'] : \"\"} onChange={this.updateFieldsFilter} />\r\n                    </FormGroup>\r\n                    <FormGroup label=\"Jumlah Tampilan\">\r\n                        <input name=\"limit\" type=\"number\" className=\"form-control-sm\" value={filter.limit ?? 5} onChange={this.updateFilter} />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <input className=\"btn btn-primary btn-sm\" type=\"submit\" value=\"Submit\" />\r\n                    </FormGroup>\r\n                </form>\r\n                <NavigationButtons activePage={filter.page ?? 0} limit={filter.limit ?? 5} totalData={this.state.totalData}\r\n                    onClick={this.loadAtPage} />\r\n                <ItemsList \r\n                    recordLoaded={this.oneRecordLoaded}\r\n                    recordDeleted={this.loadItems}\r\n                    startingNumber={(filter.page??0)*(filter.limit??10)} items={this.state.items} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst ItemsList = (props: {startingNumber:number, items:Category[], recordLoaded(item:any), recordDeleted()}) => {\r\n\r\n    return (\r\n        <div style={{overflow:'scroll'}}>\r\n        <table className=\"table table-striped\">\r\n            {tableHeader(\"No\", \"Nama\", \"Deskripsi\", \"Opsi\")}\r\n            <tbody>\r\n                    {props.items.map((item, i)=>{\r\n\r\n                        return (\r\n                            <tr key={\"category-\"+i}>\r\n                                <td>{i+1+props.startingNumber}</td>\r\n                                <td>{item.name}</td>\r\n                                <td>{item.description}</td>\r\n                                <td><EditDeleteButton \r\n                                    recordLoaded={props.recordLoaded}\r\n                                    recordDeleted={props.recordDeleted}\r\n                                    record={item} modelName={'category'}/></td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n        </table>\r\n        </div>\r\n    )\r\n}\r\nconst RecordForm = (props: { formRef:React.RefObject<Modal>, updateRecordProp(e: ChangeEvent): any, resetForm():any, onSubmit(): any, record: Category }) => {\r\n\r\n    return (\r\n        <form className=\"record-form mb-3\" onSubmit={(e) => { e.preventDefault(); props.onSubmit() }}>\r\n            <Modal show={false} ref={props.formRef} toggleable={true} title=\"Record Form\" >\r\n                <FormGroup label=\"Nama\"><input required value={props.record.name ?? \"\"} onChange={props.updateRecordProp} className=\"form-control\" name=\"name\" /></FormGroup>\r\n                <FormGroup label=\"Deskripsi\">\r\n                    <textarea required className=\"form-control\" name=\"description\" onChange={props.updateRecordProp} value={props.record.description ?? \"\"} />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-sm\" />\r\n                    &nbsp;\r\n                    <input type=\"reset\"   className=\"btn btn-secondary btn-sm\" onClick={(e)=>props.resetForm()} />\r\n                </FormGroup>\r\n            </Modal>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default withRouter(\r\n    connect(\r\n        mapCommonUserStateToProps\r\n    )(CategoryManagement)\r\n)","\r\nimport BaseEntity from './BaseEntity';\r\nimport Category from './Category';\r\nexport default class RulePoint extends BaseEntity\r\n{\r\n    \r\n    category?:Category;\r\n    category_id?:any;\r\n    name?:string;\r\n    description?:string;\r\n    point:number = 1;\r\n    droppable?:boolean = true;\r\n}","import React, { ChangeEvent } from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport RulePoint from './../../../models/RulePoint';\r\nimport Filter from '../../../models/commons/Filter';\r\nimport Modal from './../../container/Modal';\r\nimport FormGroup from './../../form/FormGroup';\r\nimport WebRequest from '../../../models/commons/WebRequest';\r\nimport NavigationButtons from './../../navigation/NavigationButtons';\r\nimport EditDeleteButton from './EditDeleteButton';\r\nimport { tableHeader } from './../../../utils/CollectionUtil';\r\nimport BaseManagementPage from './BaseManagementPage';\r\nimport Category from './../../../models/Category';\r\nimport WebResponse from '../../../models/commons/WebResponse';\r\nimport AnchorWithIcon from './../../navigation/AnchorWithIcon';\r\nclass State {\r\n    items: RulePoint[] = [];\r\n    filter: Filter = new Filter();\r\n    totalData: number = 0;\r\n    record: RulePoint = new RulePoint();\r\n    categories: Category[] = [];\r\n    categoriesLoaded:boolean = false;\r\n\r\n}\r\nclass RulePointManagement extends BaseManagementPage\r\n{\r\n    state: State = new State();\r\n    \r\n    constructor(props) {\r\n        super(props, 'rulepoint');\r\n        this.state.filter.limit = 10;\r\n    }\r\n\r\n    onSubmit = () => {\r\n        // console.debug(\"RECORD: \", this.state.record);\r\n        this.showConfirmation(\"Submit Data?\")\r\n            .then(ok => {\r\n                if (!ok) return;\r\n\r\n                const request: WebRequest = {\r\n                    rulePoint: this.state.record,\r\n                    modelName: this.modelName\r\n                }\r\n                this.callApiSubmit(request);\r\n            })\r\n    }\r\n    componentDidMount() {\r\n        this.validateLoginStatus(()=>{\r\n            this.scrollTop();\r\n            this.loadCategories();\r\n        });\r\n    }\r\n    categoriesLoaded = (response: WebResponse) => {\r\n        this.setState({categories:response.items, categoriesLoaded: true}, ()=>{ this.resetForm(); this.loadItems() });\r\n    }\r\n    categoriesNotLoaded = (response: WebResponse) => {\r\n        this.setState({categories: [], categoriesLoaded: true}, this.resetForm);\r\n    }\r\n    loadCategories = () => {\r\n        const filter:Filter = new Filter();\r\n        filter.limit = 0;\r\n        const req:WebRequest = {\r\n            filter: filter,\r\n            modelName: 'category'\r\n        }\r\n        this.commonAjax(\r\n            this.masterDataService.list,\r\n            this.categoriesLoaded,\r\n            this.categoriesNotLoaded,\r\n            req\r\n        )\r\n    }\r\n    \r\n    emptyRecord = ():any => {\r\n        const record = new RulePoint();\r\n        if (this.state.categories.length > 0) {\r\n            record.category_id = this.state.categories[0].id;\r\n        }\r\n        return record;\r\n    }\r\n    \r\n    render() {\r\n        const filter: Filter = this.state.filter;\r\n        const categories: Category[] = this.state.categories;\r\n        if (this.state.categoriesLoaded && categories.length == 0) {\r\n            return (\r\n                <div className=\"container-fluid section-body\">\r\n                    <h2>Kategori pelanggaran belum ada</h2>\r\n                </div>\r\n            )\r\n        }\r\n        const selectedCategoryId = filter.fieldsFilter && filter.fieldsFilter['category_id'] ? filter.fieldsFilter['category_id'] : \"ALL\";\r\n        return (\r\n            <div className=\"container-fluid section-body\">\r\n                <h2>Poin Pelanggaran</h2>\r\n                <hr />\r\n                <RecordForm categories={categories} reloadCategories={this.loadCategories} formRef={this.formRef} resetForm={this.resetForm} onSubmit={this.onSubmit} record={this.state.record} updateRecordProp={this.updateRecordProp} />\r\n                <form onSubmit={this.reload}>\r\n                <FormGroup label=\"Cari\">\r\n                    <div className=\"input-group\">\r\n                        <input name=\"name\" placeholder=\"nama\" className=\"form-control-sm\" value={filter.fieldsFilter ? filter.fieldsFilter['name'] : \"\"} onChange={this.updateFieldsFilter} />\r\n                        <select value={selectedCategoryId} className=\"form-control-sm\" name=\"category_id\" onChange={this.updateFieldsFilter} >\r\n                            {[{id:\"\", name:\"Semua Kategori\"},...categories].map((c)=>{\r\n                                return <option key={\"filter-cat-\"+c.id} value={c.id}>{c.name}</option>\r\n                            })}\r\n                        </select>\r\n                        <div className=\"input-group-append\">\r\n                            <AnchorWithIcon className=\"btn btn-sm\" iconClassName=\"fas fa-redo\" onClick={this.loadCategories}>Reload</AnchorWithIcon>\r\n                        </div>\r\n                    </div>\r\n                </FormGroup>\r\n                    <FormGroup label=\"Jumlah Tampilan\">\r\n                        <input type=\"number\" name=\"limit\" className=\"form-control-sm\" value={filter.limit ?? 5} onChange={this.updateFilter} />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <input className=\"btn btn-primary btn-sm\" type=\"submit\" value=\"Submit\" />\r\n                    </FormGroup>\r\n                </form>\r\n                <NavigationButtons activePage={filter.page ?? 0} limit={filter.limit ?? 5} totalData={this.state.totalData}\r\n                    onClick={this.loadAtPage} />\r\n                <ItemsList \r\n                    recordLoaded={this.oneRecordLoaded}\r\n                    recordDeleted={this.loadItems}\r\n                    startingNumber={(filter.page??0)*(filter.limit??10)} items={this.state.items} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst ItemsList = (props: {startingNumber:number, items:RulePoint[], recordLoaded(item:any), recordDeleted()}) => {\r\n\r\n    return (\r\n        <div style={{overflow:'scroll'}}>\r\n        <table className=\"table table-striped\">\r\n            {tableHeader(\"No\", \"Nama\", \"Poin\", \"Deskripsi\", \"Kategori\", \"Pemutihan\", \"Opsi\")}\r\n            <tbody>\r\n                    {props.items.map((item, i)=>{\r\n                        return (\r\n                            <tr key={`RulePoint-${i}`}>\r\n                                <td>{i+1+props.startingNumber}</td>\r\n                                <td>{item.name}</td>\r\n                                <td>{item.point}</td>\r\n                                <td>{item.description}</td>\r\n                                <td>{item.category?.name}</td>\r\n                                <td>{item.droppable ? \"Ya\" : \"TIdak\"}</td>\r\n                                <td><EditDeleteButton \r\n                                    recordLoaded={props.recordLoaded}\r\n                                    recordDeleted={props.recordDeleted}\r\n                                    record={item} modelName={'rulepoint'}/></td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n        </table>\r\n        </div>\r\n    )\r\n}\r\nconst RecordForm = (props: { categories:Category[], formRef:React.RefObject<Modal>, \r\n    updateRecordProp(e: ChangeEvent): any, \r\n    resetForm():any, onSubmit(): any,\r\n    record: RulePoint, reloadCategories():any }) => {\r\n\r\n    return (\r\n        <form className=\"record-form mb-3\" onSubmit={(e) => { e.preventDefault(); props.onSubmit() }}>\r\n            <Modal show={false} ref={props.formRef} toggleable={true} title=\"Record Form\" >\r\n                <FormGroup label=\"Nama\"><input value={props.record.name ?? \"\"} onChange={props.updateRecordProp} className=\"form-control \" name=\"name\" required/></FormGroup>\r\n                <FormGroup label=\"Pengurangan Poin\"><input type=\"number\" min={0} value={props.record.point} onChange={props.updateRecordProp} className=\"form-control \" name=\"point\" required/></FormGroup>\r\n                <FormGroup label=\"Deskripsi\">\r\n                    <textarea className=\"form-control\" name=\"description\" onChange={props.updateRecordProp} value={props.record.description ?? \"\"}  />\r\n                </FormGroup>\r\n                <FormGroup label=\"Dapat diputihkan\">\r\n                    <select className=\"form-control-sm\" data-type=\"boolean\" name=\"droppable\" onChange={props.updateRecordProp} value={props.record.droppable == true ? \"true\":\"false\"} required>\r\n                        <option value={\"true\"} >Ya</option>\r\n                        <option value={\"false\"}>Tidak</option>\r\n                    </select>\r\n                </FormGroup>\r\n                <FormGroup label=\"Category\">\r\n                    <div className=\"input-group\">\r\n                        <select required value={props.record.category_id} className=\"form-control-sm\" name=\"category_id\" onChange={props.updateRecordProp} >\r\n                            {props.categories.map((c)=>{\r\n\r\n                                return <option key={\"cat-\"+c.id} value={c.id}>{c.name}</option>\r\n                            })}\r\n                        </select>\r\n                        <div className=\"input-group-append\">\r\n                        <AnchorWithIcon className=\"btn btn-sm\" iconClassName=\"fas fa-redo\" onClick={props.reloadCategories}>Reload</AnchorWithIcon>\r\n                        </div>\r\n                    </div>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-sm\" />\r\n                    &nbsp;\r\n                    <input value=\"Reset\" type=\"reset\" className=\"btn btn-secondary btn-sm\" onClick={(e)=>props.resetForm()} />\r\n                </FormGroup>\r\n            </Modal>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default withRouter(\r\n    connect(\r\n        mapCommonUserStateToProps\r\n    )(RulePointManagement)\r\n)","import { join } from \"path\";\r\nimport { twoDigits } from './StringUtil';\r\n\r\nexport const MONTHS = [\r\n    \"Januari\",\r\n    \"Februari\",\r\n    \"Maret\",\r\n    \"April\",\r\n    \"Mei\",\r\n    \"Juni\",\r\n    \"Juli\",\r\n    \"Agustus\",\r\n    \"September\",\r\n    \"Oktober\",\r\n    \"November\",\r\n    \"Desember\"\r\n]\r\n\r\nconst leapMonths = [ 31, (  29  ), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\r\nconst regularMonths = [ 31, (  28  ), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\r\n/**\r\n * \r\n * @param {Number} month starts at 0\r\n */\r\nexport const getMonthDays = (month:number, year:number = new Date().getFullYear()) : number=> {\r\n    if(year % 4 == 0){\r\n        return leapMonths[month];\r\n    }\r\n    return regularMonths[month];\r\n}\r\n\r\nexport const getInputReadableDate = (date:Date) :string => {\r\n    const year = date.getFullYear();\r\n\r\n    const arr = [year, twoDigits(date.getMonth()+1), twoDigits(date.getDate())];\r\n    return arr.join(\"-\");\r\n}\r\nexport function addDays(date:Date, days:number) :Date{\r\n    const result:Date = new Date(date);\r\n    result.setDate(result.getDate() + days);\r\n    return result;\r\n  }\r\n  export const getDiffDays = (a:Date, b:Date) : number => {\r\n    // Discard the time and time-zone information.\r\n\r\n    console.debug(\"DIFF DATE \",a,\" vs \", b);\r\n    const _MS_PER_DAY = 1000 * 60 * 60 * 24;\r\n    const utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());\r\n    const utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate()); \r\n    return Math.floor((utc2 - utc1) / _MS_PER_DAY);\r\n}\r\n\r\nexport const parseDate = (s:string) :Date => {\r\n    var b:string[] = s.split(/\\D/);\r\n    var m = parseInt(b[1]);\r\n    return new Date(parseInt(b[0]), --m, parseInt(b[2]));\r\n  }\r\nexport const timerString = (inputSeconds:number ) => {\r\n    let hour = 0;\r\n    let minutes:number = 0;\r\n    let seconds = 0;\r\n    let totalSeconds = inputSeconds;\r\n    if (totalSeconds >= 3600) {\r\n        hour = totalSeconds/ 3600;\r\n        totalSeconds = totalSeconds % 3600;\r\n    }\r\n    if (totalSeconds >= 60) {\r\n        minutes = totalSeconds/60;\r\n        totalSeconds = totalSeconds%60;\r\n    }\r\n    seconds = totalSeconds; \r\n\r\n    return  twoDigits(hour)+\":\"+twoDigits(Math.floor(minutes))+\":\"+twoDigits(seconds);\r\n}\r\n\r\n\r\n\r\n","import React, { ChangeEvent } from 'react';\nimport Filter from '../../models/commons/Filter';\nimport { MONTHS } from './../../utils/DateUtil';\n\nconst days = (): number[] => {\n    const arr: number[] = [];\n    for (let i = 1; i <= 31; i++) {\n        arr.push(i);\n    }\n    return arr;\n}\nconst  FilterPeriod = (props: { showlabel?:boolean, hideDay?:boolean, mode?: string, filter: Filter, onChange(e: ChangeEvent): any, }) => {\n    const filter: Filter = props.filter;\n    if (props.mode == \"to\") {\n        return (\n            <React.Fragment>\n                {props.showlabel === true? <input className=\"form-control-sm\" value=\"Sampai tanggal\" disabled /> :null}\n                {props.hideDay != true?\n                <select data-type=\"number\" className=\"form-control-sm\" name=\"dayTo\" value={filter.dayTo ?? 0} onChange={props.onChange}>\n                    {days().map((d) => {\n                        return <option key={\"f-d-\" + d} value={d}>{d == 0 ? 'day' : d}</option>\n                    })}\n                </select> :null}\n                <select data-type=\"number\" className=\"form-control-sm\" name=\"monthTo\" value={filter.monthTo ?? 0} onChange={props.onChange}>\n                    {MONTHS.map((m, i) => {\n                        return <option key={\"f-m-\" + i} value={(i + 1)}>{m}</option>\n                    })}\n                </select>\n                <input name=\"yearTo\" placeholder=\"year\" className=\"form-control-sm\" value={filter.yearTo ?? \"\"} onChange={props.onChange} />\n            </React.Fragment>\n\n        )\n    }\n    return (\n        <React.Fragment>\n            {props.showlabel === true?<input className=\"form-control-sm\" value=\"Dari tanggal\" disabled /> :null}\n            {props.hideDay != true?<select data-type=\"number\" className=\"form-control-sm\" name=\"day\" value={filter.day ?? 0} onChange={props.onChange}>\n                {days().map((d) => {\n                    return <option key={\"f-d-\" + d} value={d}>{d == 0 ? 'day' : d}</option>\n                })}\n            </select>: null}\n            <select data-type=\"number\" className=\"form-control-sm\" name=\"month\" value={filter.month ?? 0} onChange={props.onChange}>\n                {MONTHS.map((m, i) => {\n                    return <option key={\"f-m-\" + i} value={(i + 1)}>{m}</option>\n                })}\n            </select>\n            <input name=\"year\" placeholder=\"year\" className=\"form-control-sm\" value={filter.year?? \"\"} onChange={props.onChange} />\n        </React.Fragment>\n    )\n}\n\nexport default  FilterPeriod;","import React, { ChangeEvent } from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport Student from '../../../models/Student';\r\nimport StudentService from '../../../services/StudentService';\r\nimport Filter from '../../../models/commons/Filter';\r\nimport WebResponse from '../../../models/commons/WebResponse';\r\nimport Class from '../../../models/Class';\r\nimport FormGroup from '../../form/FormGroup';\r\nimport NavigationButtons from '../../navigation/NavigationButtons';\r\nimport { tableHeader } from '../../../utils/CollectionUtil';\r\nimport AnchorWithIcon from '../../navigation/AnchorWithIcon';\r\nimport MasterDataService from '../../../services/MasterDataService';\r\nimport BaseManagementPage from '../management/BaseManagementPage';\r\nimport Spinner from '../../loader/Spinner';\r\nimport FilterPeriod from '../../form/FilterPeriod';\r\nimport { MONTHS } from '../../../utils/DateUtil';\r\nimport ToggleButton from '../../navigation/ToggleButton';\r\nclass State {\r\n    items: Student[] = [];\r\n    classes: Class[] = [];\r\n    totalData: number = 0;\r\n    filter: Filter = new Filter();\r\n    loading: boolean = false;\r\n}\r\nclass StudentList extends BaseManagementPage {\r\n    state: State = new State();\r\n    studentService: StudentService;\r\n    masterDataService: MasterDataService;\r\n    constructor(props) {\r\n        super(props, 'student');\r\n        this.studentService = this.getServices().studentService;\r\n        this.masterDataService = this.getServices().masterDataService;\r\n        this.state.filter.limit = 10;\r\n        this.state.filter.day = this.state.filter.dayTo = new Date().getDate();\r\n        this.state.filter.month = this.state.filter.monthTo = new Date().getMonth() + 1;\r\n        this.state.filter.year = this.state.filter.yearTo = new Date().getFullYear();\r\n        this.state.filter.fieldsFilter = {\r\n            'class_id': '',\r\n            'with_point_record': false\r\n        }\r\n    } \r\n    itemsLoaded = (response: WebResponse) => {\r\n        this.setState({ items: response.items, totalData: response.totalData });\r\n    }\r\n    classesLoaded = (response: WebResponse) => {\r\n        this.setState({ classes: response.items }, this.loadItems);\r\n    }\r\n    loadItems = () => {\r\n        this.commonAjax(\r\n            this.masterDataService.list,\r\n            this.itemsLoaded,\r\n            this.showCommonErrorAlert,\r\n            { modelName: 'student', filter: this.state.filter }\r\n        )\r\n    }\r\n    loadAtPage = (page: number) => {\r\n        const filter = this.state.filter;\r\n        filter.page = page;\r\n        this.setState({ filter: filter }, this.loadItems);\r\n    }\r\n    loadClasses = () => {\r\n        this.commonAjax(\r\n            this.studentService.getClasses,\r\n            this.classesLoaded,\r\n            this.showCommonErrorAlert,\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.validateLoginStatus(() => {\r\n            this.scrollTop();\r\n            this.loadClasses();\r\n        })\r\n    }\r\n    updateSelectedClass = (e: ChangeEvent) => {\r\n        const target = e.target as HTMLSelectElement;\r\n        const filter = this.state.filter;\r\n        if (!filter.fieldsFilter) {\r\n            filter.fieldsFilter = {};\r\n        }\r\n        filter.fieldsFilter['class_id'] = target.value;\r\n        this.setState({ filter: filter });\r\n    }\r\n    inputPage = (type: string, s: Student) => {\r\n        switch (type) {\r\n            case 'pointrecord':\r\n                this.inputPoint(s);\r\n                break;\r\n            case 'medicalrecord':\r\n                this.inputMedicalRecord(s);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    inputPoint = (student: Student) => {\r\n        this.props.history.push({\r\n            pathname: \"/asrama/inputpoint\",\r\n            state: { student: student }\r\n        })\r\n    }\r\n    inputMedicalRecord = (student: Student) => {\r\n        this.props.history.push({\r\n            pathname: \"/asrama/medicalrecord\",\r\n            state: { student: student }\r\n        })\r\n    }\r\n    updateWithPointRecord = (val: boolean) => {\r\n        const filter = this.state.filter;\r\n        if (filter.fieldsFilter) {\r\n            filter.fieldsFilter['with_point_record'] = val;\r\n        }\r\n        this.setState({ filter: filter });\r\n    }\r\n    onSubmit = (e) => { e.preventDefault(); this.loadAtPage(0) }\r\n    render() {\r\n\r\n        const filter = this.state.filter;\r\n        const classes = this.state.classes;\r\n        const defaultClass: Class = { id: \"\", level: \"Semua Kelas\", sekolah: {} };\r\n        const selectedClassId = filter.fieldsFilter && filter.fieldsFilter['class_id'] ? filter.fieldsFilter['class_id'] : \"\";\r\n        const showPointRecord = filter.fieldsFilter && filter.fieldsFilter['with_point_record'] && filter.fieldsFilter['with_point_record'] == true;\r\n        return (\r\n            <div className=\"container-fluid section-body\">\r\n                <h2>Siswa</h2>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                    <FormGroup label=\"Cari\">\r\n                        <div className=\"input-group\">\r\n                            <input name=\"name\" placeholder=\"Nama\" className=\"form-control-sm\" value={filter.fieldsFilter ? filter.fieldsFilter['name'] : \"\"} onChange={this.updateFieldsFilter} />\r\n                            <select value={selectedClassId} onChange={this.updateFieldsFilter} className=\"form-control-sm\" name=\"class_id\">\r\n                                {[defaultClass, ...classes].map((c) => {\r\n                                    return <option key={'class_' + c.id} value={c.id}>{c.level}{c.rombel} - {c.sekolah?.nama}</option>\r\n                                })}\r\n                            </select>\r\n                        </div>\r\n                    </FormGroup>\r\n                    <FormGroup label=\"Jumlah Tampilan\">\r\n                        <input name=\"limit\" type=\"number\" className=\"form-control-sm\" value={filter.limit ?? 5} onChange={this.updateFilter} />\r\n                    </FormGroup>\r\n                    <FormGroup label=\"Periode\">\r\n                        <ToggleButton active={showPointRecord}\r\n                            yesLabel={\"tampilkan poin\"} noLabel=\"tanpa poin\"\r\n                            onClick={this.updateWithPointRecord}\r\n                        />\r\n                        {showPointRecord ?\r\n                            <React.Fragment>\r\n                                <div className=\"input-group\">\r\n                                    <FilterPeriod filter={filter} onChange={this.updateFilter} />\r\n                                </div>\r\n                                <div className=\"input-group\">\r\n                                    <FilterPeriod mode={\"to\"} filter={filter} onChange={this.updateFilter} />\r\n                                </div>\r\n                            </React.Fragment> : null}\r\n                    </FormGroup>\r\n                    {showPointRecord ?\r\n                        <FormGroup>\r\n                            {filter.day} {MONTHS[(filter.month ?? 1) - 1]} {filter.year} - {filter.dayTo} {MONTHS[(filter.monthTo ?? 1) - 1]} {filter.yearTo}\r\n                        </FormGroup>\r\n                        : null}\r\n                    <FormGroup>\r\n                        <input type=\"submit\" className=\"btn btn-primary btn-sm\" value=\"Submit\" />\r\n                    </FormGroup>\r\n\r\n                </form>\r\n                <p />\r\n                <NavigationButtons onClick={this.loadAtPage} activePage={filter.page ?? 0} limit={filter.limit ?? 10} totalData={this.state.totalData} />\r\n                <ItemsList showPointRecord={showPointRecord} loading={this.state.loading} inputPage={this.inputPage} startingNumber={(filter.page ?? 0) * (filter.limit ?? 10)} items={this.state.items} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst ItemsList = (props: { showPointRecord: boolean, loading: boolean, startingNumber: number, inputPage(type: string, s: Student): any, items: Student[] }) => {\r\n\r\n    return (\r\n        <div style={{ overflow: 'scroll' }}>\r\n            <table className=\"table table-striped\">\r\n                {props.showPointRecord ? tableHeader(\"No\", \"\", \"Name\", \"Kelas\", \"Point\") : tableHeader(\"No\", \"\", \"Name\", \"Kelas\")}\r\n                <tbody>\r\n                    {props.loading ?\r\n                        <tr><td colSpan={5}><Spinner /></td></tr>\r\n\r\n                        : props.items.map((student, i) => {\r\n\r\n                            return (\r\n                                <tr key={\"student-\" + i}>\r\n                                    <td>{i + 1 + props.startingNumber}</td>\r\n                                    <td>\r\n                                        <div style={{ width: '100px' }}>\r\n                                            <AnchorWithIcon className=\"btn\" onClick={(e) => props.inputPage('pointrecord', student)} iconClassName=\"far fa-edit\" />\r\n                                            <AnchorWithIcon className=\"btn\" onClick={(e) => props.inputPage('medicalrecord', student)} iconClassName=\"fas fa-notes-medical\" />\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        {student.user?.name}</td>\r\n                                    <td>{student.kelas?.level} {student.kelas?.rombel} {student.kelas?.sekolah?.nama}</td>\r\n                                    {props.showPointRecord ? <td>{student.point}</td> : null}\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps\r\n)(StudentList))","\r\nimport BaseEntity from './BaseEntity';\r\nimport User from './User';\r\nimport Class from './Class';\r\nexport default class Student extends BaseEntity\r\n{\r\n    nis?:string;\r\n    kelas?:Class;\r\n    user?:User;\r\n\r\n    point?:number;\r\n}","\nimport BaseEntity from './BaseEntity';\nimport { parseDate } from './../utils/DateUtil';\nimport { twoDigits as td } from './../utils/StringUtil';\nimport RulePoint from './RulePoint';\nimport Student from './Student';\nimport Pictures from './Pictures';\nimport { contextPath } from './../constant/Url';\nexport default class PointRecord extends BaseEntity\n{\n    setTime(h: number, m: number, s: number) {\n        this.time = [td(h), td(m), td(s)].join(\":\");\n    }\n    setDate = (d: Date) => {\n        this.day = d.getDate();\n        this.month = d.getMonth() + 1;\n        this.year = d.getFullYear();\n    }\n    dateString = () :string=>{\n        return `${this.year}-${td(this.month)}-${td(this.day)}`;\n    }\n    location?:string;\n    day:number = new Date().getDate();\n    month:number = new Date().getMonth()+1;\n    year:number = new Date().getFullYear();\n    time:string;\n    description?:string;\n    student_id?:string;\n    point_id?:number;\n\n    rule_point?:RulePoint;\n    student?:Student;\n    dropped_at?:Date;\n\n    pictures:Pictures[] = [];\n\n    constructor() {\n        super();\n        const d = new Date();\n        this.time =  [td(d.getHours()), td(d.getMinutes()), td(d.getSeconds())].join(\":\");\n    }\n\n    /**\n     * get picture URL\n     */\n    getPicture = () :string|null => {\n        if (this.pictures.length == 0) {\n            return null;\n        }\n        return  contextPath()+'upload/POINT_RECORD/'+this.pictures[0].name;\n    }\n\n    getDate = ():Date => {\n        return parseDate(this.dateString());\n    }\n\n    getTimestamp = () :string => {\n\n        const d = this.getDate();\n        const day = DAYS[d.getDay()];\n        return day+\", \"+[\n            td(d.getDate()), td(d.getMonth()+1), d.getFullYear()\n        ].join(\"/\")+\" \"+this.time;\n    }\n\n    public static clone = (object:PointRecord) => {\n        return Object.assign(new PointRecord(), object);\n    }\n}\n\nconst DAYS = [\n    \"Ahad\", \"Senin\", \"Selasa\", \"Rabu\", \"Kamis\", \"Jumat\", \"Sabtu\"\n]","import React from 'react';\nimport { Component, ChangeEvent } from 'react';\nimport { twoDigits } from './../../utils/StringUtil';\ninterface Props{\n    onChange(h:number,m:number,s:number):any,\n    value:string,\n}\nclass State {\n    hour:number = new Date().getHours();\n    minute:number = new Date().getMinutes();\n    second:number = new Date().getSeconds();\n}\nconst hours:number[] = [\n    0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,\n];\nconst minutesOrSeconds = ()  : number[]=> {\n    const arr:number[]=  [];\n    for (let i = 1; i < 60; i++) {\n        arr.push(i);   \n    }\n    return arr; \n}\nexport default class InputTime extends Component<Props, any> {\n    state:State = new State();\n    minutes:number[];\n    seconds:number[] ;\n    constructor (props) {\n        super(props);\n        this.minutes = minutesOrSeconds();\n        this.seconds = minutesOrSeconds();\n    }\n    componentDidMount() {\n        this.updateFromProps();\n    }\n    updateFromProps = () => {\n        try {\n            const val = this.props.value.split(\":\");\n            this.setState({hour: parseInt(val[0]), minute: parseInt(val[1]), second: parseInt(val[2])});\n        } catch (error) {\n            \n        }\n    }\n    updateValue = (e:ChangeEvent) => {\n        const target = e.target as HTMLSelectElement;\n        if (target) {\n            const name = target.name;\n            this.setState({[name]: target.value}, this.onChange);\n        }\n        \n    }\n    setNow = () => {\n        const date = new Date();\n        this.setState({\n            hour: date.getHours(),\n            minute: date.getMinutes(),\n            second: date.getSeconds()\n        }, this.onChange)\n    }\n    onChange = () => {\n        this.props.onChange(this.state.hour, this.state.minute, this.state.second)\n    }\n    render() {\n         \n        return (<div className=\"form-control bg-light\">\n            <select name=\"hour\" style={{border:'none'}} value={this.state.hour} onChange={this.updateValue} >\n                {hours.map((hour)=>{\n                    return <option key={\"HOUR-\"+hour} value={hour} >{twoDigits(hour)}</option>\n                })}\n            </select>\n            <select name=\"minute\" style={{border:'none'}}  value={this.state.minute} onChange={this.updateValue}>\n                {this.minutes.map((min)=>{\n                    return <option key={\"MIN-\"+min} value={min} >{twoDigits(min)}</option>\n                })}\n            </select>\n            <select name=\"second\" style={{border:'none'}}  value={this.state.second} onChange={this.updateValue}>\n                {this.seconds.map((sec)=>{\n                    return <option key={\"SEC-\"+sec} value={sec} >{twoDigits(sec)}</option>\n                })}\n            </select>\n            <a style={{marginLeft: 5}}  onClick={this.setNow} ><i className=\"fas fa-history\"/></a>\n        </div>)\n    }\n}","import React, { ChangeEvent } from 'react'\nimport BaseComponent from '../../../BaseComponent';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\nimport RulePoint from '../../../../models/RulePoint';\nimport FormGroup from '../../../form/FormGroup';\nimport PointRecord from '../../../../models/PointRecord';\nimport { parseDate } from '../../../../utils/DateUtil';\nimport InputTime from '../../../form/InputTime';\nimport { getAttachmentInfoFromFile } from '../../../../utils/ComponentUtil';\nimport AttachmentInfo from '../../../../models/settings/AttachmentInfo';\nclass State {\n    pointRecord: PointRecord = new PointRecord();\n}\nclass FormStepThree extends BaseComponent {\n    state: State = new State();\n    constructor(props) {\n        super(props, true);\n    }\n\n    onSubmit = () => {\n        this.showConfirmation(\"Submit Data?\")\n            .then(ok => {\n                if (ok) {  \n                    this.props.submit(this.state.pointRecord);\n                }\n            })\n    }\n    get rulePoint (): RulePoint  {\n        return this.props.rulePoint;\n    }\n    updatePointRecord = (e: ChangeEvent) => {\n        const target = e.target as any;\n        const pointRecord = this.state.pointRecord;\n        pointRecord[target.name] = target.value;\n        this.setState({ pointRecord: pointRecord });\n\n    }\n    updateDate = (e: ChangeEvent) => {\n        const date: Date = parseDate((e.target as HTMLInputElement).value);\n        const pointRecord = this.state.pointRecord;\n        pointRecord.setDate(date);\n        this.setState({ pointRecord: pointRecord });\n    }\n    updateTime = (h: number, m: number, s: number) => {\n        const pointRecord = this.state.pointRecord;\n        pointRecord.setTime(h, m, s);\n        this.setState({ pointRecord: pointRecord });\n    }\n    setAttachment = (e: ChangeEvent) => {\n        const target = e.target as HTMLInputElement;\n        getAttachmentInfoFromFile(target).then((attachment: AttachmentInfo) => {\n            this.props.setAttachment(attachment);\n        });\n    }\n    removeAttachment = () => {\n        this.props.removeAttachment();\n    }\n    getAttachment = (): AttachmentInfo | undefined => {\n        return this.props.attachmentInfo;\n    }\n    render() {\n        const rulePoint: RulePoint = this.rulePoint;\n        const pointRecord: PointRecord = this.state.pointRecord;\n        const attachment = this.getAttachment();\n        return (\n            <form onSubmit={(e) => { e.preventDefault(); this.onSubmit() }}>\n                <FormGroup label=\"Category\">{rulePoint.category?.name} - {rulePoint.name} <span className=\"badge badge-dark\">{rulePoint.point}</span></FormGroup>\n                <FormGroup label=\"Date\">\n                    <input type=\"date\" className=\"form-control\" onChange={this.updateDate} name=\"date\" value={pointRecord.dateString()} />\n                </FormGroup>\n                <FormGroup label=\"Time\">\n                    <InputTime onChange={this.updateTime} value={pointRecord.time} />\n                </FormGroup>\n                <FormGroup label=\"Location\">\n                    <input className=\"form-control\" onChange={this.updatePointRecord} name=\"location\" value={pointRecord.location ?? \"\"} />\n                </FormGroup>\n                <FormGroup label=\"Picture\">\n                    {attachment ?\n                        <>\n                            <img style={{marginRight:10}} className=\"border border-dark\" src={attachment.url} width={100} height={100} />\n                            <AnchorWithIcon iconClassName=\"fas fa-times\" className=\"btn btn-danger\" onClick={this.removeAttachment}></AnchorWithIcon>\n                        </>\n                        : <input type=\"file\" accept={\"image/*\"} className=\"form-control\" onChange={this.setAttachment} name=\"attachment\" />\n                    }\n                </FormGroup>\n                <FormGroup label=\"Description\">\n                    <textarea value={pointRecord.description ?? \"\"} onChange={this.updatePointRecord} name=\"description\" className=\"form-control\"></textarea>\n                </FormGroup>\n                <AnchorWithIcon className=\"btn btn-secondary float-left\" iconClassName=\"fas fa-arrow-left\" onClick={this.props.onBack} >Back</AnchorWithIcon>\n                <button className=\"btn btn-success float-right\" >Submit</button>\n            </form>\n        )\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(FormStepThree)\n)","\r\nimport React, { Component } from 'react';\r\nexport default class SimpleError extends Component<any, any>\r\n{\r\n\r\n    render() {\r\n        if (this.props.show == false) return null;\r\n        return (\r\n            <div style={ this.props.style} className=\"alert alert-danger\">\r\n                {this.props.children??\"Error Occured\"}\r\n            </div>\r\n        )\r\n    }\r\n}","\nimport React, { ChangeEvent } from 'react'\nimport BaseComponent from '../../../BaseComponent';\nimport MasterDataService from '../../../../services/MasterDataService';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\nimport FormGroup from '../../../form/FormGroup';\nimport Category from '../../../../models/Category';\nimport RulePoint from '../../../../models/RulePoint';\nimport WebRequest from '../../../../models/commons/WebRequest';\nimport WebResponse from '../../../../models/commons/WebResponse';\nimport Spinner from '../../../loader/Spinner';\nimport SimpleError from '../../../alert/SimpleError';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\nclass State { \n    rulePoints: RulePoint[]  = []; \n    loading:boolean = false;\n}\nclass FormStepTwo extends BaseComponent {\n    masterDataService: MasterDataService;\n    state:State = new State();\n    constructor(props) {\n        super(props, true);\n        this.masterDataService = this.getServices().masterDataService;\n    }\n    startLoading = () => this.setState({loading:true});\n    endLoading = () => this.setState({loading:false});\n    rulePointsLoaded = (response: WebResponse) => {\n        this.setState({ rulePoints: response.items }, () => {\n            if (response.items.length > 0) {\n                if (!this.props.rulePoint) {\n                    this.setRulePoint(response.items[0]);\n                }\n            }\n        });\n    }\n    \n    loadRulePoints = () => {\n        if (null == this.getCategory()) return;\n        const req: WebRequest = {\n            filter: {limit:0, fieldsFilter:{category_id:this.getCategory().id}},\n            modelName: 'rulepoint',\n        }\n        this.commonAjax(\n            this.masterDataService.list,\n            this.rulePointsLoaded,\n            this.showCommonErrorAlert,\n            req\n        )\n    }\n    getCategory = ()  : Category => {\n        return this.props.category;\n    }\n    componentDidMount() {\n        super.componentDidMount();\n        this.loadRulePoints();\n    }\n    onSubmit = () => {\n        this.props.onSubmit();\n    }\n    setRulePoint = (r:RulePoint) => {\n        this.props.setRulePoint(r);\n    }\n    updateRulePoint = (e:ChangeEvent) => {\n        const select = (e.target as HTMLSelectElement);\n        const filteredItems = this.state.rulePoints.filter((r:RulePoint)=>{\n            return r.id.toString() == select.value;\n        })\n        if (filteredItems.length == 0) return;\n\n        this.setRulePoint(filteredItems[0]);\n    }\n    render() {\n        const category = this.getCategory();\n\n        if (null == category) {\n            return <SimpleError>Category not found</SimpleError>\n        }\n        if (this.state.loading) {\n            return <Spinner/>\n        }\n        if (this.state.rulePoints.length == 0) {\n            return <SimpleError>Rule Points for {category.name} not found</SimpleError>\n        }\n\n        const rulePoints =this.state.rulePoints;\n        return (\n            <form onSubmit={e => { e.preventDefault(); this.onSubmit() }} >\n                <FormGroup label=\"Category\" children={category.name}/>\n                <FormGroup label=\"Name\">\n                <select className=\"form-control\" onChange={this.updateRulePoint} value={this.props.rulePoint ? this.props.rulePoint.id : null} >\n                    {rulePoints.map((r:RulePoint) => {\n                        return <option key={`select-rulePoint-${r.id}`} value={r.id}>{r.name}</option>\n                    })}\n                </select>\n                </FormGroup>\n                <FormGroup label=\"Point\" children={this.props.rulePoint?.point}/>\n                <hr/>\n                <AnchorWithIcon className=\"btn btn-secondary float-left\"  iconClassName=\"fas fa-arrow-left\" onClick={this.props.onBack} >Back</AnchorWithIcon>\n                <AnchorWithIcon className=\"btn btn-info float-right\" iconClassName=\"fas fa-arrow-right\" onClick={this.onSubmit} >Next</AnchorWithIcon>\n            </form>\n        );\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(FormStepTwo)\n)","\nimport React, { ChangeEvent } from 'react'\nimport BaseComponent from '../../../BaseComponent';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\nimport WebResponse from '../../../../models/commons/WebResponse';\nimport WebRequest from '../../../../models/commons/WebRequest';\nimport Category from '../../../../models/Category';\nimport MasterDataService from '../../../../services/MasterDataService';\nimport FormGroup from '../../../form/FormGroup';\nimport SimpleError from '../../../alert/SimpleError';\nimport Spinner from '../../../loader/Spinner';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\nimport Filter from '../../../../models/commons/Filter';\nclass State {\n    categories: Category[] = [];\n    loading: boolean = false;\n}\nclass FormStepOne extends BaseComponent {\n    state: State = new State();\n    masterDataService: MasterDataService;\n    constructor(props) {\n        super(props, true);\n        this.masterDataService = this.getServices().masterDataService;\n    }\n    categoriesLoaded = (response: WebResponse) => {\n        this.setState({ categories: response.items, categoriesLoaded: true }, () => {\n            if (response.items.length > 0) {\n                if (!this.props.category) {\n                    this.setCategory(response.items[0]);\n                }\n            }\n        });\n    }\n    startLoading = () => this.setState({ loading: true });\n    endLoading = () => this.setState({ loading: false });\n    setCategory = (c: Category) => {\n        this.props.setSelectedCategory(c);  \n    }\n    loadCategories = () => {\n        const req: WebRequest = {\n            filter: Filter.withLimit(0),\n            modelName: 'category'\n        }\n        this.commonAjax(\n            this.masterDataService.list,\n            this.categoriesLoaded,\n            this.showCommonErrorAlert,\n            req\n        )\n    }\n    componentDidMount() {\n        super.componentDidMount();\n        this.loadCategories();\n    }\n    onSubmit = () => {\n        this.props.onSubmit();\n    }\n    updateCategory = (e:ChangeEvent) => {\n        const select = (e.target as HTMLSelectElement);\n        const filteredItems = this.state.categories.filter((c:Category)=>{\n            return c.id.toString() == select.value;\n        })\n        if (filteredItems.length == 0) return;\n\n        this.setCategory(filteredItems[0]);\n    }\n    render() {\n        const categories = this.state.categories;\n        const category = this.props.category;\n        if (this.state.loading) {\n            return <Spinner />\n        }\n        if (categories.length == 0) {\n            return <SimpleError>Categories not found</SimpleError>\n        }\n        return (\n            <form onSubmit={(e) => { e.preventDefault(); this.onSubmit() }}>\n                <FormGroup label=\"Category\">\n                    <select className=\"form-control\" onChange={this.updateCategory} value={category ? category.id??\"\" : \"\"} >\n                        {categories.map((c) => {\n                            return <option key={`select-cat-${c.id}`} value={c.id}>{c.name}</option>\n                        })}\n                    </select>\n                </FormGroup>\n                <hr/>\n                <AnchorWithIcon className=\"btn btn-secondary float-left\" iconClassName=\"fas fa-arrow-left\" onClick={this.props.onBack} >Back</AnchorWithIcon>\n                \n                <AnchorWithIcon className=\"btn btn-info float-right\" iconClassName=\"fas fa-arrow-right\" onClick={this.onSubmit}>Next</AnchorWithIcon>\n            </form >\n\n\n        )\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(FormStepOne)\n)","\nimport React from 'react'\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\nimport Student from '../../../models/Student';\nimport AnchorWithIcon from '../../navigation/AnchorWithIcon';\nimport Modal from '../../container/Modal';\nimport FormStepThree from './form/FormStepThree';\nimport FormStepTwo from './form/FormStepTwo';\nimport FormStepOne from './form/FormStepOne';\nimport Category from '../../../models/Category';\nimport RulePoint from '../../../models/RulePoint';\nimport SimpleError from '../../alert/SimpleError';\nimport PointRecord from '../../../models/PointRecord';\nimport StudentService from '../../../services/StudentService';\nimport WebResponse from '../../../models/commons/WebResponse';\nimport FormGroup from '../../form/FormGroup';\nimport { doItLater } from '../../../utils/EventUtil';\nimport AttachmentInfo from '../../../models/settings/AttachmentInfo';\nimport BasePage from '../BasePage';\n\nclass State {\n    student?: Student\n    category?: Category;\n    rulePoint?: RulePoint;\n    formStep: number = 0;\n    savedRecord?: PointRecord;\n    attachmentInfo?:AttachmentInfo;\n}\nclass InputPointForm extends BasePage {\n    state: State = new State();\n    studentService: StudentService;\n    totalStep: number = 4;\n    constructor(props) {\n        super(props, \"Input Point Record\", true);\n        this.studentService = this.getServices().studentService;\n    }\n    validateStudentData = () => {\n        if (!this.props.location.state) {\n            return;\n        }\n        const student = this.props.location.state.student;\n        if (student) {\n            this.setState({ student: Object.assign(new Student(), student) });\n        }\n    }\n    componentDidMount() {\n        super.componentDidMount();\n        this.validateStudentData();\n        this.scrollTop();\n        doItLater(()=>{\n            this.nextStep(1);\n        }, 200);\n        \n    }\n    setAttachment = (attachmentInfo:AttachmentInfo|undefined) => {\n        this.setState({attachmentInfo:attachmentInfo});\n    }\n    removeStudent = () => {\n       this.setState({formStep: 0}, ()=>{\n           doItLater(()=>{\n               this.setState({student:undefined})\n           }, 500); \n       })\n    }\n    removeAttachment = () => {\n        this.setAttachment(undefined);\n    }\n    setCategory = (c: Category) => {\n        this.setState({ category: c });\n    }\n    setRulePoint = (r: RulePoint) => {\n        this.setState({ rulePoint: r });\n    }\n    nextStep = (step: number) => {\n        this.setState({ formStep: step });\n    }\n    submitRecord = (record: PointRecord) => {\n        \n        if (!this.state.student || !this.state.rulePoint) {\n            alert(\"ERROR: student or rulePoint missing!\");\n            return;\n        }\n        record.student_id = this.state.student?.id;\n        record.point_id = this.state.rulePoint?.id;\n        this.commonAjax(\n            this.studentService.submitPointRecord,\n            this.recordSubmitted,\n            this.showCommonErrorAlert,\n            record, this.state.attachmentInfo\n        )\n    }\n    recordSubmitted = (response: WebResponse) => {\n        this.setState({ savedRecord: response.item, formStep: 4 }, this.scrollTop);\n    }\n    render() {\n        const student: Student | undefined = this.state.student;\n        if (!student) {\n            return <Warning />\n        }\n\n        return (\n            <div className=\"container-fluid section-body\">\n                <h2>Form Input Pelanggaran</h2>\n                <Modal title={student.user?.name + \" - \" + student.kelas?.level + student.kelas?.rombel + \" \" + student.kelas?.sekolah?.nama}>\n\n                    <Progress step={this.state.formStep} totalStep={this.totalStep} />\n                    {this.state.formStep == 1 ?\n                         <FormStepOne category={this.state.category} \n                            onBack={this.removeStudent}\n                            setSelectedCategory={this.setCategory}\n                            onSubmit={() => { this.nextStep(2) }} />\n                        : null}\n                    {this.state.formStep == 2 && this.state.category ?\n                        <FormStepTwo\n                            rulePoint={this.state.rulePoint}\n                            \n                            setRulePoint={this.setRulePoint}\n                            category={this.state.category} onBack={() => this.nextStep(1)} onSubmit={() => { this.nextStep(3) }}\n                        /> : null}\n                    {this.state.formStep == 3 && this.state.category && this.state.rulePoint ?\n                        <FormStepThree submit={this.submitRecord}\n                            attachmentInfo={this.state.attachmentInfo}\n                            setAttachment={this.setAttachment}\n                            removeAttachment={this.removeAttachment} \n                            rulePoint={this.state.rulePoint}\n                            onBack={() => this.nextStep(2)}\n                        /> : null}\n                    {this.state.formStep == 4 && this.state.savedRecord ?\n                        <Detail back={() => this.setState({ student: null })} record={this.state.savedRecord} />\n                        : null\n                    }\n                    \n                </Modal>\n            </div>\n        )\n    }\n}\n\nconst Progress = (props: { step: number, totalStep: number }) => {\n    return (\n        <div className=\"progress\" style={{ height:'5px', marginBottom: 15}}>\n            <div className=\"bg-info\" style={{transitionDuration: '500ms', width: (props.step / props.totalStep * 100) + '%' }}  ></div>\n        </div>\n    )\n}\n\nconst Detail = (props: { record: PointRecord, back(): any }) => {\n    const record = PointRecord.clone(props.record);\n    const date = record.getDate();\n    return (\n        <div>\n            <h4 className=\"text-center text-success\"><i className=\"fas fa-check\" style={{ marginRight: 5 }} />Record saved</h4>\n            <p />\n            <FormGroup label=\"Date\">{date.toDateString()} {record.time}</FormGroup>\n            <FormGroup label=\"Category\">{record.rule_point?.category?.name}</FormGroup>\n            <FormGroup label=\"Name\">{record.rule_point?.name}</FormGroup>\n            <FormGroup label=\"Point\">{record.rule_point?.point}</FormGroup>\n            <FormGroup label=\"Location\">{record.location}</FormGroup>\n            {record.getPicture()?\n            <FormGroup label=\"Picture\">\n                <img src={record.getPicture()??\"\"} width={200} height={200} />\n            </FormGroup>\n            :null}\n            <hr />\n            <FormGroup><a onClick={props.back} className=\"btn btn-dark\">Ok</a></FormGroup>\n        </div>\n    )\n}\n\nconst Warning = () => {\n    return (\n        <div className=\"container-fluid section-body\">\n            <h2>Form Input Pelanggaran</h2>\n            <SimpleError>\n                <i className=\"fas fa-exclamation-circle\" />&nbsp;Please select student <hr />\n                <AnchorWithIcon to={\"/asrama/studentlist\"} iconClassName=\"fas fa-list\">Student List</AnchorWithIcon>\n            </SimpleError>\n        </div>\n    )\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(InputPointForm)\n)","\r\nimport React, { Component } from 'react';\r\nexport default class Card extends Component<any, any> {\r\n    constructor(props: any) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div {...this.props.attributes} className={\"card \" + this.props.className}>\r\n                {this.props.title ? <div className=\"card-header\">\r\n                    {this.props.title}\r\n                </div> : null}\r\n                <div className=\"card-body\">\r\n                    {this.props.children}\r\n                </div>\r\n                {this.props.footerContent != undefined ?\r\n                    <div className=\"card-footer\">\r\n                        {this.props.footerContent}\r\n                    </div>\r\n                    : null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","\r\nimport School from './School';\r\nimport Student from './Student';\r\n\r\nexport default class Class {\r\n    static studentClassString(student: Student| undefined): string {\r\n        return (student?.kelas?.level??\"\") +(student?.kelas?.rombel??\"\") + \" \" + (student?.kelas?.sekolah?.nama??\"\");\r\n    }\r\n    id?:string;\r\n    name?:string;\r\n    level?:string;\r\n    rombel?:string;\r\n    sekolah?:School;\r\n}","\nimport React, { Component } from 'react'\nimport PointRecord from '../../../../models/PointRecord';\nimport Card from '../../../container/Card';\nimport FormGroup from '../../../form/FormGroup';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\nimport Class from '../../../../models/Class';\nimport { doItLater } from '../../../../utils/EventUtil';\n\ninterface IProps {\n    record:PointRecord;\n    close():any;\n}\nexport default class PointRecordDetail extends Component<IProps, any> {\n\n    componentDidMount() {\n        const opt:ScrollToOptions = { top:0,  behavior: 'smooth' };\n        doItLater(()=>{\n            window.scrollTo(opt);\n        }, 100);\n    }\n\n    render() {\n        const record = PointRecord.clone(this.props.record);\n        const pictureUrl = record.getPicture();\n        const timeStamp = record.getTimestamp();\n        return <Card title={\"Detail Pelanggaran\"} footerContent={<AnchorWithIcon className=\"btn btn-dark\" onClick={this.props.close} >Ok</AnchorWithIcon>}>\n            <FormGroup label=\"Nama\">{record.student?.user?.name} - {Class.studentClassString(record.student)}</FormGroup>\n            <FormGroup label=\"Pelanggaran\">\n                <strong>{record.rule_point?.category?.name}</strong> - {record.rule_point?.name} <span className=\"badge badge-dark\">{record.rule_point?.point}</span>\n            </FormGroup>\n            <FormGroup label=\"Waktu\" children={timeStamp} />\n            <FormGroup label=\"Lokasi\" children={record.location??\"-\"} />\n            <FormGroup label=\"Deskripsi\" children={record.description??\"-\"} />\n            <FormGroup label=\"Diputihkan\" children={record.dropped_at??\"-\"} />\n            \n            <FormGroup label=\"Gambar\">\n                {pictureUrl?\n                <img src={pictureUrl} width={200} height={200} className=\"border border-dark\" />:null}\n            </FormGroup>\n        </Card>\n    }\n}","import React from 'react'\nimport BaseComponent from '../../BaseComponent';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\nimport PointRecord from '../../../models/PointRecord';\nimport AnchorWithIcon from '../../navigation/AnchorWithIcon';\nimport StudentService from '../../../services/StudentService';\n\nclass State {\n    loading: boolean = false;\n}\nclass DropPointButtons extends BaseComponent {\n    studentService: StudentService;\n    state: State = new State();\n    constructor(props) {\n        super(props, true);\n        this.studentService = this.getServices().studentService;\n    }\n    startLoading = () => { this.setState({ loading: true }); }\n    endLoading = () => { this.setState({ loading: false }); }\n    getRecord = (): PointRecord => {\n        return this.props.record;\n    }\n\n    setDropped = (isDropped: boolean) => {\n        const item = this.getRecord();\n        this.commonAjax(this.studentService.setPointDropped,\n            this.props.onUpdated,\n            this.showCommonErrorAlert,\n            item.id, isDropped);\n    }\n    render() {\n        const item = this.getRecord();\n        if (this.state.loading) {\n\n            return <button className=\"btn btn-info btn-sm\">\n                <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n            </button>\n        }\n        return (\n            item.dropped_at ?\n                <AnchorWithIcon onClick={(e) => this.setDropped(false)} className=\"btn btn-secondary btn-sm\" iconClassName=\"fas fa-arrow-up\">\n                    Reset\n                </AnchorWithIcon> :\n                <AnchorWithIcon onClick={(e) => this.setDropped(true)} className=\"btn btn-success btn-sm\" iconClassName=\"fas fa-arrow-down\">\n                    Putihkan\n                </AnchorWithIcon>\n        )\n    }\n}\n\nexport default withRouter(connect(\n    mapCommonUserStateToProps\n)(DropPointButtons))","import React  from 'react'\nimport BaseManagementPage from './BaseManagementPage';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\nimport EditDeleteButton from './EditDeleteButton'\nimport PointRecord from '../../../models/PointRecord';\nimport Filter from '../../../models/commons/Filter';\nimport FormGroup from '../../form/FormGroup';\nimport NavigationButtons from '../../navigation/NavigationButtons';\nimport { tableHeader } from '../../../utils/CollectionUtil';\nimport FilterPeriod from '../../form/FilterPeriod';\nimport PointRecordDetail from '../asrama/point-record/PointRecordDetail';\nimport StudentService from '../../../services/StudentService';\nimport WebResponse from '../../../models/commons/WebResponse';\nimport Category from '../../../models/Category';\nimport Class from '../../../models/Class';\nimport { MONTHS } from './../../../utils/DateUtil';\nimport DropPointButtons from '../asrama/DropPointButtons';\nclass State {\n    items: PointRecord[] = [];\n    filter: Filter = new Filter();\n    totalData: number = 0;\n    record?: PointRecord;\n    loading: boolean = false;\n    categories: Category[] = [];\n    classes: Class[] = [];\n    selectedCategory:Category| undefined;\n    showFilterDetail:boolean = false;\n}\nconst defaultFieldsFilter = {name:'', dropped : '',  class_id : '', point_name : '', category_name:'',location: ''  }\n\nclass PointRecordSummary extends BaseManagementPage {\n    state: State = new State();\n    private studentService:StudentService;\n    constructor(props) {\n        super(props, 'pointrecord', false);\n         \n        this.studentService = this.getServices().studentService;\n\n        const f = new Filter();\n        const d = new Date();\n        \n        f.limit = 10;\n        f.day = f.dayTo = d.getDate();\n        f.month = 1; //January\n        f.monthTo = d.getMonth() + 1;\n        f.year = f.yearTo = d.getFullYear();\n        f.fieldsFilter =  defaultFieldsFilter;\n\n        this.state.filter = f;  \n    }\n \n    componentDidMount() {\n        super.componentDidMount();\n        this.loadCategories();\n        this.loadClasses();\n    }\n    loadClasses = () => {\n        this.commonAjax(this.studentService.getClasses,\n            this.classessLoaded, console.error)\n    }\n    loadCategories = () => {\n        this.commonAjax(this.studentService.getCategories,\n            this.categoriesLoaded, console.error);\n    }\n    categoriesLoaded = (response:WebResponse) => this.setState({categories: response.items}); \n    classessLoaded = (response:WebResponse) =>  this.setState({classes: response.items}); \n\n    setSelectedCategory = (cat:Category) => {\n        const filter = this.state.filter;\n        if (cat.id == \"\") {\n            filter.fieldsFilter['point_name'] = '';\n        }\n        this.setState({filter: filter, selectedCategory:cat});\n    }\n\n    showDetail = (item:PointRecord) => this.setState({record: item}); \n    hideDetail = () => this.setState({record: undefined}, this.scrollTop);\n    showFilterDetail = () =>  this.setState({showFilterDetail: true}); \n    hideFilterDetail = () =>  this.setState({showFilterDetail: false}); \n    \n    openEditPage = (p:PointRecord) => {\n        this.props.history.push({\n            pathname: '/asrama/pointrecordedit',\n              state: {record: p }\n         })\n    }\n\n    resetFilter = () => {\n        const f = this.state.filter;\n        this.setState({filter: Filter.resetFieldsFilter(f)});\n    }\n    followUp = (p:PointRecord) => {\n        this.commonAjax(\n            this.studentService.followUp,\n            this.showCommonSuccessAlert,\n            this.showCommonErrorAlert,\n            p.id\n        )\n    }\n    dropAll = (e) => {\n        this.showConfirmation(\"Putihkan \"+this.state.items.length+\" data?\")\n        .then(ok=>{\n            if (ok) {\n                this.commonAjax(\n                    this.studentService.dropAll,\n                    this.reload,\n                    this.showCommonErrorAlert,\n                    this.itemIdArray\n                )\n            }\n        })\n    }\n    undropAll = (e) => {\n        this.showConfirmation(\"Reset pemutihan \"+this.state.items.length+\" data?\")\n        .then(ok=>{\n            if (ok) {\n                this.commonAjax(\n                    this.studentService.undropAll,\n                    this.reload,\n                    this.showCommonErrorAlert,\n                    this.itemIdArray\n                )\n            }\n        })\n    }\n    \n    get itemIdArray() {\n        const arr:any[] = [];\n        this.state.items.forEach((item:PointRecord)=>{\n            if (item.id)\n                arr.push(item.id);\n        })\n        return arr;\n    }\n\n    render() {\n        const filter = this.state.filter;\n        const fieldsFilter = filter.fieldsFilter;\n        \n        const title = \"Rekap Pelanggaran\";\n        if (this.state.record) {\n            return (\n                <div className=\"container-fluid section-body\">\n                    <h2>{title}</h2>\n                    <PointRecordDetail record={this.state.record} close={this.hideDetail} />\n                </div>\n            )\n        }\n        const defaultClass: Class = { id: \"\", level: \"Semua Kelas\", sekolah: {} };\n        const selectedClassId =  filter.fieldsFilter['class_id'] ? filter.fieldsFilter['class_id'] : \"\";\n\n        return (\n            <div className=\"container-fluid section-body\">\n                <h2>{title}</h2>\n                <hr />\n                <form className=\"form-filter\" onSubmit={this.reload}>\n                    <FormGroup label=\"Cari\">\n                        <div className=\"input-group\">\n                            <input autoComplete=\"off\" name=\"name\" placeholder=\"Nama siswa\" className=\"form-control-sm\" value={fieldsFilter['name'] ?? \"\"} onChange={this.updateFieldsFilter} />\n                            <select  autoComplete=\"off\" value={selectedClassId} onChange={this.updateFieldsFilter} className=\"form-control-sm\" name=\"class_id\">\n                                {[defaultClass, ...this.state.classes].map((c) => {\n                                    return <option key={`class_${c.id}`} value={c.id}>{c.level}{c.rombel} - {c.sekolah?.nama}</option>\n                                })}\n                            </select>  \n                        </div>\n                    </FormGroup>\n                    {this.state.showFilterDetail?\n                    <><div  className=\"filter-sticky bg-white border border-gray pt-3 pb-3 pl-3 pr-3\">\n                        <FormGroup label=\"Kategori\"> \n                                <select value={fieldsFilter['category_name']} onChange={this.updateFieldsFilter} className=\"form-control-sm\" name=\"category_name\">\n                                    {[Category.clone({id:\"\", name:\"Semua\"}), ...this.state.categories].map((c) => {\n                                        return <option onClick={()=> this.setSelectedCategory(c)}  key={`cat_${c.id}`} value={c.id == \"\" ? c.id :c.name}>{c.name}</option>\n                                    })}\n                                </select> \n                        </FormGroup>\n                        {this.state.selectedCategory && this.state.selectedCategory.points?\n                            <FormGroup label=\"Pelanggaran\">\n                                <select value={fieldsFilter['point_name']} onChange={this.updateFieldsFilter} className=\"form-control-sm\" name=\"point_name\">\n                                    {[{id:\"\", name:\"Semua\"}, ...this.state.selectedCategory.points].map((c) => {\n                                        return <option key={`rp_${c.id}`} value={c.id == \"\" ? c.id :c.name}>{c.name}</option>\n                                    })}\n                                </select>\n                            </FormGroup>:\n                        null}\n                        <FormGroup label=\"Periode\">\n                            <div className=\"input-group\">\n                                <FilterPeriod filter={filter} onChange={this.updateFilter} />\n                            </div>\n                            <div className=\"input-group\">\n                                <FilterPeriod mode={\"to\"} filter={filter} onChange={this.updateFilter} />\n                            </div> \n                        </FormGroup>\n                        <FormGroup label=\"Pemutihan\">\n                            <select name=\"dropped\" className=\"form-control-sm\" value={fieldsFilter['dropped']?? ''} onChange={this.updateFieldsFilter}>\n                                <option value=\"\">Semua</option>\n                                <option value=\"false\">Belum</option>\n                                <option value=\"true\">Sudah</option>\n                            </select>\n                        </FormGroup>\n                        <FormGroup label=\"Lokasi\">\n                            <input name=\"location\" placeholder=\"Lokasi\" className=\"form-control-sm\" value={fieldsFilter['location']??\"\"} onChange={this.updateFieldsFilter} />\n                        </FormGroup>\n                        <FormGroup label=\"Jumlah Tampilan\">\n                            <input type=\"number\" name=\"limit\" className=\"form-control-sm\" value={filter.limit ?? 5} onChange={this.updateFilter} />\n                        </FormGroup>\n                        <FormGroup label=\"\">\n                            <a className=\"btn btn-dark btn-sm\" onClick={this.hideFilterDetail}>Tutup</a>\n                            <input className=\"ml-3 btn btn-primary btn-sm\" type=\"submit\" value=\"Cari\" />\n                        </FormGroup>\n                    </div>\n                    <FormGroup label=\"\">\n                        <a className=\"btn btn-dark btn-sm\" onClick={this.hideFilterDetail}>Tutup Detail Filter</a>\n                    </FormGroup>\n                    </>\n                    :<FormGroup label=\"\">\n                        <a className=\"btn btn-dark btn-sm\" onClick={this.showFilterDetail}>Tampil Detail Filter</a>\n                    </FormGroup> }\n                    <FormGroup label=\"Periode\">\n                        {filter.day} {MONTHS[(filter.month ?? 1) - 1]} {filter.year} - {filter.dayTo} {MONTHS[(filter.monthTo ?? 1) - 1]} {filter.yearTo}\n                    </FormGroup>\n                    <FormGroup>\n                        <input className=\"btn btn-primary btn-sm\" type=\"submit\" value=\"Submit\" />\n                        <a className=\"btn btn-secondary btn-sm ml-2\" onClick={this.resetFilter}>Reset</a>\n                        <a onClick={this.dropAll} className=\"ml-2 btn btn-info btn-sm\" >Putihkan Semua</a>\n                        <a onClick={this.undropAll} className=\"ml-2 btn btn-warning btn-sm\" >Reset Pemutihan Semua</a>\n                    </FormGroup>\n                </form>\n                <NavigationButtons activePage={filter.page ?? 0} limit={filter.limit ?? 10} totalData={this.state.totalData}\n                    onClick={this.loadAtPage} />\n                <ItemsList isAdmin={this.isAdmin()} startingNumber={(filter.page ?? 0) * (filter.limit ?? 10)}  \n                    recordLoadedForDetail={this.showDetail}\n                    recordLoadedForEdit={this.openEditPage}\n                    recordUpdated={this.loadItems} followUp={this.followUp}\n                    items={this.state.items} />\n            </div>\n        )\n    }\n}\ninterface ItemProps { \n    isAdmin:boolean,  startingNumber: number, \n    items: PointRecord[], recordLoadedForDetail(p: PointRecord):any,\n    recordLoadedForEdit(p: PointRecord):any, recordUpdated():any, followUp(p:PointRecord):any\n}\nconst ItemsList = (props: ItemProps) => {\n\n    return (\n        <div style={{ overflow: 'scroll' }}>\n            <table className=\"table \">\n                {tableHeader(\"No\", \"Siswa\", \"Kelas\", \"Tanggal\", \"Pelanggaran\", \"Poin\", \"Lokasi\", \"Gambar\", \"Pemutihan\", \"Opsi\")}\n                <tbody>\n                    {props.items.map((item, i) => {\n                            item = PointRecord.clone(item);\n                            const student = item.student;\n                            const optionTypes = props.isAdmin?\n                                                    ['detail', 'delete'] :\n                                                    [ (item.dropped_at?null:'edit'),'detail'];\n                            return (\n                                <tr key={\"PointRecord-\" + i}  className={item.dropped_at?\"alert alert-success\":\"\" }>\n                                    <td>{i + 1 + props.startingNumber}</td>\n                                    <td>{student?.user?.name}</td>\n                                    <td>{Class.studentClassString(student)}</td>\n                                    <td>{item.getTimestamp()}</td>\n                                    <td>{item.rule_point?.name} ({item.rule_point?.category?.name})</td>\n                                    <td>{item.rule_point?.point}</td>\n                                    <td>{item.location}</td>\n                                    <td>{item.getPicture() ?\n                                        <img src={item.getPicture() ?? \"\"} width={50} height={50} />: null}</td>\n                                    <td>{item.dropped_at ? <i className=\"fas fa-check\"/>  : \"-\"} </td>\n                                    <td>\n                                        <div style={{width:'max-content'}}>\n                                            {item.rule_point?.droppable == true ?\n                                            <><DropPointButtons record={item} onUpdated={props.recordUpdated} /><p/></>\n                                            :\n                                            <p><i>Tidak ada pemutihan</i></p>\n                                            }\n                                            {/* {props.isAdmin? <><DropPointButtons record={item} onUpdated={props.recordUpdated} /><p/></> : \n                                            <a className=\"btn btn-dark btn-sm\" onClick={()=>props.followUp(item)}>Follow Up</a>} */}\n                                            <EditDeleteButton record={item} \n                                                types={optionTypes}\n                                                recordLoadedForDetail={props.recordLoadedForDetail}\n                                                recordLoaded={props.recordLoadedForEdit} \n                                                modelName={'pointrecord'} />\n                                        </div>\n                                       \n                                    </td>\n                                </tr>\n                            )\n                        })}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(PointRecordSummary)\n)","import React, { FormEvent } from 'react'\nimport BaseComponent from '../../../BaseComponent';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\nimport Card from '../../../container/Card';\nimport FormGroup from '../../../form/FormGroup';\nimport Student from '../../../../models/Student';\nimport MasterDataService from '../../../../services/MasterDataService';\nimport WebRequest from '../../../../models/commons/WebRequest';\nimport WebResponse from '../../../../models/commons/WebResponse';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\nimport Class from '../../../../models/Class';\nclass State {\n    studentName?:string;\n    items:Student[] = [];\n    item?:Student;\n}\nclass StudentForm extends BaseComponent{\n\n    state:State = new State();\n    masterDataService:MasterDataService;\n    constructor(props) {\n        super(props, true);\n        this.masterDataService = this.getServices().masterDataService;\n    }\n\n    submit = (e:FormEvent) => {\n        e.preventDefault();\n        this.loadStudent();\n    }\n    itemsLoaded = (response: WebResponse) => {\n        this.setState({items: response.items});\n    }\n    loadStudent = () => {\n        const request:WebRequest = {\n            modelName:'student',\n            filter:{\n                limit: 15,\n                fieldsFilter: {  name:this.state.studentName  }\n            }\n        }\n        this.commonAjax(\n            this.masterDataService.list,\n            this.itemsLoaded,\n            this.showCommonErrorAlert,\n            request\n        )\n    }\n    setSelectedItem = (item:Student) => {\n        this.setState({item:item,  items:[], studentName:undefined}, ()=> {\n            if (this.props.setItem) {\n                this.props.setItem(item);\n            }\n        });\n    }\n    reset = () => {\n        this.setState({item:undefined, items:[], studentName:undefined}, () => {\n            if (this.props.setItem) {\n                this.props.setItem(undefined);\n            }\n        });\n    }\n    render() {\n        const items:Student[] = this.state.items;\n        const selectedItem:Student | undefined = this.state.item;\n        return (\n            <form onReset={this.reset} onSubmit={this.submit}>\n                <Card title=\"Select Student\">\n                    <FormGroup label=\"Search\">\n                        <input placeholder=\"Name\" value={this.state.studentName??\"\"} className=\"form-control\" onChange={this.handleInputChange} name=\"studentName\" />\n                        {items.length > 0?<div style={{position:'absolute', zIndex: 200}} className=\"container-fluid bg-light rounded-sm border border-dark\">\n                                {items.map(item=>{\n                                    return (\n                                        <div className=\"option-item\"onClick={()=>{\n                                            this.setSelectedItem(item);\n                                        }} style={{cursor: 'pointer'}} key={\"Student-\"+item.id} >{item.user?.name}</div>\n                                    )\n                                })}\n                                <a onClick={this.reset} className=\"option-item\"><i className=\"fas fa-times\"/>&nbsp;close</a>\n                            </div>:null}\n                    </FormGroup>\n                    {selectedItem?\n                    <ItemDetail item={selectedItem} />\n                    :null}\n                    <hr/>\n                    <div className=\"btn-group float-right\">\n                        <input type=\"submit\" className=\"btn btn-dark\" value=\"Search\" />\n                        <input type=\"reset\" className=\"btn btn-secondary\" value=\"Reset\" />\n                        <AnchorWithIcon to={\"/asrama/studentlist\"} iconClassName=\"fas fa-list\">Student List</AnchorWithIcon>\n                    </div>\n                </Card>\n            </form>\n        )\n    }\n}\n\nconst ItemDetail = (props:{item:Student}) => {\n\n    return (\n        <>\n            <FormGroup label=\"Name\">{props.item.user?.name}</FormGroup>\n            <FormGroup label=\"Kelas\">{Class.studentClassString(props.item)}</FormGroup>\n            \n        </>\n    )\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(StudentForm)\n)","\nimport BaseEntity from './BaseEntity';\nimport Student from './Student';\nexport default class MedicalRecord extends BaseEntity {\n      day: number = new Date().getDate();\n      month: number = new Date().getMonth();\n      year: number = new Date().getFullYear();\n      temperature_morning?: number;\n      temperature_afternoon?: number;\n      breakfast?: boolean;\n      lunch?: boolean;\n      dinner?: boolean;\n      medicine_consumption: boolean = false;\n      genose_test?: boolean;\n      antigen_test?: boolean;\n      pcr_test?: boolean;\n      description?: string\n      student_id;\n      student?: Student;\n\n      public static clone = (obj:MedicalRecord) : MedicalRecord => {\n            return Object.assign(new MedicalRecord(), obj);\n      }\n      public static instance = (student_id:string, d: number, m: number, y: number): MedicalRecord => {\n            const obj = new MedicalRecord();\n            obj.day = d;\n            obj.month = m;\n            obj.year = y;\n            obj.student_id = student_id;\n            return obj;\n      }\n}","import React, { ChangeEvent, Component, FormEvent } from 'react'\nimport BaseComponent from '../../../BaseComponent';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\nimport MedicalRecord from '../../../../models/MedicalRecord';\nimport StudentService from '../../../../services/StudentService';\nimport WebResponse from '../../../../models/commons/WebResponse';\nimport { twoDigits, monthName } from '../../../../utils/StringUtil';\n\nclass State {\n    record: MedicalRecord = new MedicalRecord();\n}\nclass MedicalRecordDailyInput extends BaseComponent {\n    state: State = new State();\n    studentService: StudentService;\n    constructor(props) {\n        super(props, true);\n        this.studentService = this.getServices().studentService;\n        this.state.record = MedicalRecord.instance(props.student.id, props.day, props.month, props.year);\n    }\n    reset = () => {\n        const props = this.props;\n        this.setState({ record: MedicalRecord.instance(props.student.id, props.day, props.month, props.year) });\n    }\n    setRecord = (record: MedicalRecord) => {\n        this.setState({ record: MedicalRecord.clone(record) });\n    }\n\n    onChange = (e: ChangeEvent) => {\n        const record = this.state.record;\n        const target = e.target as HTMLInputElement;\n        record[target.name] = target.type == 'checkbox' ? target.checked : target.value;\n        this.setState({ record: MedicalRecord.clone(record) });\n    }\n\n    recordSubmitted = (response: WebResponse) => {\n        this.showInfo(\"Data has been submitted\");\n    }\n\n    onSubmit = (e: FormEvent) => {\n        e.preventDefault();\n        const record: MedicalRecord = this.state.record;\n        record.student_id = this.props.student.id;\n        this.commonAjax(\n            this.studentService.submitMedicalRecord,\n            this.recordSubmitted,\n            this.showCommonErrorAlert,\n            record\n        )\n    }\n\n    render() {\n        const record = this.state.record;\n        const period = twoDigits(record.day) + \" \" + monthName(record.month - 1);\n        return (\n            <form onSubmit={this.onSubmit}>\n                <table className=\"table table-bordered table-striped\" style={{ fontSize: '0.8em' }}>\n                    <tbody>\n                        <SingleRow><h5 className='text-center'> {period}</h5></SingleRow>\n                        <SingleRow>\n                            <input type='number' onChange={this.onChange} placeholder=\"Suhu Pagi\" className=\"form-control\" name=\"temperature_morning\" value={record.temperature_morning ?? \"\"} />\n                        </SingleRow>\n                        <SingleRow>\n                            <input type='number' onChange={this.onChange} placeholder=\"Suhu Sore\" className=\"form-control\" name=\"temperature_afternoon\" value={record.temperature_afternoon ?? \"\"} />\n                        </SingleRow>\n                        <SingleRow>\n                            <Checkbox label=\"Sarapan\" onChange={this.onChange} name=\"breakfast\" checked={record.breakfast ?? false} />\n                        </SingleRow>\n                        <SingleRow>\n                            <Checkbox label=\"Makan Siang\" onChange={this.onChange} name=\"lunch\" checked={record.lunch ?? false} />\n                        </SingleRow>\n                        <SingleRow>\n                            <Checkbox label=\"Makan Malam\" onChange={this.onChange} name=\"dinner\" checked={record.dinner ?? false} />\n                        </SingleRow>\n                        <SingleRow>\n                            <Checkbox label=\"Konsumsi Obat\" onChange={this.onChange} name=\"medicine_consumption\" checked={record.medicine_consumption ?? false} />\n                        </SingleRow>\n                        <SingleRow>\n                            <Checkbox label=\"Tes Genose\" onChange={this.onChange} name=\"genose_test\" checked={record.genose_test ?? false} />\n                        </SingleRow>\n                        <SingleRow>\n                            <Checkbox label=\"Tes Antigen\" onChange={this.onChange} name=\"antigen_test\" checked={record.antigen_test ?? false} />\n                        </SingleRow>\n                        <SingleRow>\n                            <Checkbox label=\"Tes PCR\" onChange={this.onChange} name=\"pcr_test\" checked={record.pcr_test ?? false} />\n                        </SingleRow>\n                        <SingleRow>\n                            <textarea placeholder=\"Catatan\" onChange={this.onChange} style={{ fontSize: '0.9em' }} name=\"description\" value={record.description ?? \"\"}\n                                className=\"form-control\" rows={3} />\n                        </SingleRow>\n                        <SingleRow>\n                            <button className=\"btn btn-success\" type=\"submit\">\n                                <i className=\"fas fa-save\" /> {period}\n                            </button>\n                        </SingleRow>\n                    </tbody>\n                </table>\n            </form>\n        )\n    }\n}\n\nconst Checkbox = (props: { onChange(e: ChangeEvent): any, label: string, name: string, checked: boolean }) => {\n\n    return (\n        <>{props.label}\n            <input type=\"checkbox\" style={{ marginRight: 5 }} className=\"form-control\"\n                onChange={props.onChange}\n                name={props.name}\n                checked={props.checked} />\n        </>\n    )\n}\nconst SingleRow = (props: { children: any }) => {\n    return (\n        <tr><td>\n            <div className=\"text-center\" style={{ minHeight: 40 }}>{props.children}</div></td></tr>\n    )\n}\n\nexport default\n    connect(\n        mapCommonUserStateToProps, null, null, { forwardRef: true }\n    )(MedicalRecordDailyInput)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\nimport StudentForm from './StudentForm';\nimport Student from '../../../../models/Student';\nimport FilterPeriod from '../../../form/FilterPeriod';\nimport Filter from '../../../../models/commons/Filter';\nimport { getMonthDays } from '../../../../utils/DateUtil';\nimport Card from '../../../container/Card';\nimport MedicalRecord from '../../../../models/MedicalRecord';\nimport MedicalRecordDailyInput from './MedicalRecordDailyInput';\nimport StudentService from '../../../../services/StudentService';\nimport WebResponse from '../../../../models/commons/WebResponse';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\nimport { doItLater } from '../../../../utils/EventUtil';\nimport BasePage from '../../BasePage';\nimport SimpleError from '../../../alert/SimpleError';\nclass State {\n    student?: Student;\n    month: number = new Date().getMonth() + 1;\n    year: number = new Date().getFullYear();\n    mappedItems: Map<number, MedicalRecord> = new Map()\n}\nclass MedicalRecordForm extends BasePage {\n    state: State = new State();\n    studentService: StudentService;\n    inputRefs: Map<number, any> = new Map();\n    constructor(props) {\n        super(props, \"Medical Record\", true);\n        this.studentService = this.getServices().studentService;\n    }\n    setStudent = (student: Student | undefined) => {\n        if (student) {\n            student = Object.assign(new Student(), student);\n        }\n        this.setState({ student: student }, this.loadMonthlyRecord);\n    }\n    validateStudentData = () => {\n        const student = this.props.location.state?this.props.location.state.student : undefined;\n        if (student) {\n            this.setStudent(student);\n        }\n    }\n    \n    reset = () => {\n        doItLater(() => {\n            if (this.state.student)\n            this.inputRefs.forEach((ref: any, day: number) => {\n                if (ref) { ref.reset(); }\n            })\n        }, 100);\n    }\n    recordsLoaded = (response: WebResponse) => {\n\n        const mappedItems:Map<String, MedicalRecord> = this.toMap(response.items);\n        \n        this.setState({ mappedItems: mappedItems }, () => {\n            doItLater(() => {\n                this.inputRefs.forEach((ref: any, day: number) => {\n                    let record = mappedItems.get(day.toString());\n                    if (!record) {\n                        record = MedicalRecord.instance(this.state.student?.id, day, this.state.month, this.state.year);\n                    } else {\n                        record = MedicalRecord.clone(record);\n                    }\n                    if (ref) {\n                        ref.setRecord(record);\n                    }\n                })\n            }, 100);\n        });\n    }\n\n\n    toMap = (items: MedicalRecord[]): Map<String, MedicalRecord> => {\n        const map: Map<String, MedicalRecord> = new Map();\n        for (let i = 0; i < items.length; i++) {\n            const item = items[i];\n            map.set(item.day.toString(), item);\n        }\n        return map;\n    }\n\n    loadMonthlyRecord = () => {\n        this.commonAjax(\n            this.studentService.loadMonthlyMedicalRecord,\n            this.recordsLoaded, this.showCommonErrorAlert,\n            this.state.student?.id, this.state.month, this.state.year\n        )\n    }\n\n    getFilter = (): Filter => {\n        const f = new Filter();\n        f.month = this.state.month;\n        f.year = this.state.year;\n        return f;\n    }\n\n    componentDidMount() {\n        this.validateLoginStatus(()=>{\n            this.scrollTop();\n            this.validateStudentData();\n        });\n    }\n    dayCount = () => {\n        return getMonthDays(this.state.month, this.state.year);\n    }\n    render() {\n        const student = this.state.student;\n        const filter = this.getFilter();\n        const dayCount = this.dayCount();\n        const days: number[] = [];\n        for (let i = 1; i <= dayCount; i++) {\n            days.push(i);\n        }\n        const gridTemplateColumns = ('150px ').repeat(dayCount);\n\n        return (\n            <div className=\"container-fluid section-body\">\n                <h2> {student ? student.user?.name: this.title}</h2> \n                <hr/>\n                <StudentForm setItem={this.setStudent} />\n                <p />\n                {student ?\n                    <Card>\n                        <div className=\"input-group\">\n                            <FilterPeriod filter={filter} hideDay onChange={this.handleInputChange} />\n                            <div className=\"input-group-append\">\n                            <AnchorWithIcon iconClassName=\"fas fa-redo\" onClick={this.loadMonthlyRecord}>Load Data</AnchorWithIcon>\n                            </div>\n                        </div>\n                        <hr/>\n                        <div className=\"container-fluid  row\"> \n                            <div className=\"col-12\" style={{ overflow: 'scroll' }}>\n                                <div style={{ display: 'grid', gridTemplateColumns: gridTemplateColumns }}>\n\n                                    {days.map(day =>\n                                        <MedicalRecordDailyInput key={\"record-input-\" + day} student={student}\n                                            ref={ref => {this.inputRefs.set(day, ref)}}\n                                            year={this.state.year}\n                                            month={this.state.month} day={day} />)}\n                                </div>\n                            </div>\n                        </div>\n                    </Card>\n                    : <Warning/>}\n            </div>\n        )\n    }\n\n}\n\n\nconst Warning = () => {\n    return (<SimpleError>\n                <i className=\"fas fa-exclamation-circle\" />&nbsp;Please select student <hr />\n                <AnchorWithIcon to={\"/asrama/studentlist\"} iconClassName=\"fas fa-list\">Student List</AnchorWithIcon>\n            </SimpleError> )\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(MedicalRecordForm)\n)","import React from 'react';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport Card from './../../container/Card';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport ApplicationProfile from './../../../models/ApplicationProfile';\r\nimport FormGroup from '../../form/FormGroup';\r\nclass AboutUs extends BaseComponent {\r\n    constructor(props) {\r\n        super(props, false);\r\n    }\r\n    componentDidMount() {\r\n        document.title = \"About Us\";\r\n    }\r\n    render() {\r\n        const appProfile:ApplicationProfile = this.getApplicationProfile();\r\n        return (<div className=\"section-body container-fluid\" style={{marginTop:'20px'}}>\r\n            <h2>About Us</h2>\r\n            <Card title=\"Application\">\r\n                <FormGroup label=\"Name\">{appProfile.name}</FormGroup>\r\n                <FormGroup  ><i>{appProfile.description}</i></FormGroup>\r\n                <FormGroup label=\"Contact\">{appProfile.contact}</FormGroup>\r\n                <FormGroup label=\"Address\">{appProfile.address}</FormGroup>\r\n            </Card>\r\n            <p/>\r\n            <Card title=\"Development Mode\">\r\n                {/* <FormGroup label=\"Repository\"><a target=\"_blank\" href=\"https://github.com/fajaralmu\">https://github.com/fajaralmu</a></FormGroup>\r\n                <FormGroup label=\"Front End\">React Js</FormGroup>\r\n                <FormGroup><a target=\"_blank\" href=\"https://github.com/fajaralmu/front-end-shopping-mart-v2\">https://github.com/fajaralmu/front-end-shopping-mart-v2</a></FormGroup>\r\n                <FormGroup label=\"Back End\">Java, Spring MVC</FormGroup>\r\n                <FormGroup><a target=\"_blank\" href=\"https://github.com/fajaralmu/universal-good-shop-v2\">https://github.com/fajaralmu/universal-good-shop-v2</a></FormGroup> */}\r\n            </Card>\r\n            <p/>\r\n        </div>);\r\n    }\r\n}\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps, \r\n)(AboutUs))","\r\n\r\nimport React, { FormEvent, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from '../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport './Login.css';\r\nimport Spinner from '../../loader/Spinner';\r\nimport UserService from './../../../services/UserService';\r\nimport UserModel from './../../../models/User';\r\nimport WebResponse from '../../../models/commons/WebResponse'; \r\nclass IState {\r\n    loading: boolean = false; displayName: string = \"\";\r\n    username: string = \"\";\r\n    editPassword: string = \"\";\r\n    editPasswordRepeat: string = \"\";\r\n}\r\nclass Register extends BaseComponent {\r\n    state: IState = new IState();\r\n    userService: UserService;\r\n    constructor(props: any) {\r\n        super(props, false);\r\n        this.userService = this.getServices().userService;\r\n    }\r\n    startLoading = () => this.setState({ loading: true });\r\n    endLoading = () => this.setState({ loading: false });\r\n    register(e: FormEvent) {\r\n        e.preventDefault();\r\n        if (this.fieldComplete()) {\r\n            if (this.passwordMatch() == false) {\r\n                this.showCommonErrorAlert(\"Password mismatch\");\r\n                return;\r\n            }\r\n            this.saveUser();\r\n        } else {\r\n            this.showCommonErrorAlert(\"Field is not complete\");\r\n        }\r\n    }\r\n    saveUser = () => {\r\n        const user = new UserModel();\r\n        user.password = this.state.editPassword.trim();\r\n        user.nickname = this.state.username.trim();\r\n        user.name = this.state.displayName.trim();\r\n        this.commonAjax(\r\n            this.userService.saveUser,\r\n            this.userSaved,\r\n            this.showCommonErrorAlert,\r\n            user\r\n        );\r\n    }\r\n    userSaved = (response: WebResponse) => {\r\n        this.showConfirmation(\"Success\")\r\n            .then((ok) => {\r\n                this.backToLogin();\r\n            })\r\n    }\r\n    passwordMatch = () => {\r\n        return this.state.editPassword.trim() != \"\" && this.state.editPassword.trim() == this.state.editPasswordRepeat.trim();\r\n    }\r\n    fieldComplete = () => {\r\n        return this.state.displayName.trim() != \"\"\r\n            && this.state.username.trim() != \"\"\r\n            && this.state.editPassword.trim() != \"\"\r\n            && this.state.editPasswordRepeat.trim() != \"\";\r\n    }\r\n    componentDidMount() {\r\n        document.title = \"Register\";\r\n        if (this.isUserLoggedIn()) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.isUserLoggedIn()) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"RegisterForm\" className=\"Register-wrapper\" style={{ margin: 0, padding: 0 }}>\r\n                <div className=\"text-center\" style={{ marginTop: '25px' }}>\r\n                    <h1>Register</h1>\r\n                </div>\r\n                <form name='Register' onSubmit={(e) => { this.register(e) }}\r\n                    method='POST' className=\"form-signin text-center\">\r\n                    <CommonField name=\"username\" value={this.state.username} onChange={this.handleInputChange} />\r\n                    <CommonField name=\"displayName\" value={this.state.displayName} onChange={this.handleInputChange} />\r\n\r\n                    <PasswordField name=\"editPassword\" value={this.state.editPassword} onChange={this.handleInputChange} />\r\n                    <PasswordField name=\"editPasswordRepeat\" value={this.state.editPasswordRepeat} onChange={this.handleInputChange} />\r\n\r\n                    {this.state.loading ? <Spinner /> :\r\n                        <button className=\"btn text-light\" style={{ backgroundColor: 'rgb(9,26,78)' }} type=\"submit\">\r\n                            Register\r\n                        </button>}\r\n                    <p />\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst PasswordField = ({ name, value, onChange }) => {\r\n    return <Fragment>\r\n        <label className=\"sr-only\">Password</label>\r\n        <input style={{ borderColor: 'rgb(9,26,78)' }} name={name} value={value} onChange={onChange} type=\"password\" id=\"inputPassword\" className=\"form-control\"\r\n            placeholder={name} required />\r\n        <p />\r\n    </Fragment>\r\n}\r\nconst CommonField = ({ name, value, onChange }) => {\r\n    return (<Fragment>\r\n        <label className=\"sr-only\">Username</label>\r\n        <input style={{ borderColor: 'rgb(9,26,78)' }} name={name} value={value} onChange={onChange} type=\"text\" id=\"username\" className=\"form-control\"\r\n            placeholder={name} required autoFocus />\r\n        <p />\r\n    </Fragment>)\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    //  performRegister: (username: string, password: string, app: any) => dispatch(performRegister(username, password, app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(Register))","import React, { FormEvent } from 'react'\nimport BaseComponent from './../../BaseComponent';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\nimport MasterDataService from './../../../services/MasterDataService';\nimport Student from './../../../models/Student';\nimport WebRequest from './../../../models/commons/WebRequest';\nimport Filter from '../../../models/commons/Filter';\nimport WebResponse from './../../../models/commons/WebResponse';\nimport AnchorWithIcon from './../../navigation/AnchorWithIcon';\nimport './style.css'\nimport Class from './../../../models/Class';\n\nclass State {\n    items:Student[] = [];\n    keyword:string = \"\";\n}\nclass StudentSearchForm extends BaseComponent\n{\n\n    state:State = new State();\n    private masterDataService:MasterDataService;\n    constructor(props) {\n        super(props, true);\n        this.masterDataService = this.getServices().masterDataService;\n    }\n    itemsLoaded = (response: WebResponse) => {\n        this.setState({items: response.items});\n    }\n    \n    loadItems = (e:FormEvent) => {\n        e.preventDefault();\n        if (\"\" == this.state.keyword) return;\n        const req:WebRequest = {\n            filter:new Filter(),\n            modelName:'student',\n        }\n        if (req.filter)\n            req.filter.fieldsFilter = {\n                'name':this.state.keyword\n            }\n        this.commonAjax(\n            this.masterDataService.list,\n            this.itemsLoaded,  this.showCommonErrorAlert,\n            req\n        )\n    }\n    select = (s:Student) => {\n        this.props.selectItem(s);\n        this.setState({items: [], keyword: \"\"});\n    }\n    reset = () => this.setState({items: []});\n\n    render() {\n\n        return (\n            <form id=\"form-search-student\" onSubmit={this.loadItems}>\n            <div className=\"mb-3\" style={{position:'absolute'}}>\n                <div className=\"input-group\">\n                    <input name=\"keyword\" className=\"form-control\" onChange={this.handleInputChange} value={this.state.keyword}\n                        placeholder=\"Cari Nama\" />\n                    <input type=\"submit\" value=\"Cari\" className=\"btn btn-secondary\" />\n                </div>\n                {this.state.items.length > 0?\n                <div className=\"bg-light border rounded border-secondary\" style={{position:'relative', zIndex: 10, padding: 3}}>\n                    {this.state.items.map(s=>{\n                        return (\n                            <div onClick={()=> this.select(s)} className=\"option-item\" key={`s_form_${s.id}`}>\n                                {s.user?.name} {Class.studentClassString(s)}\n                            </div>\n                        )\n                    })}\n                    <AnchorWithIcon iconClassName=\"fas fa-times\" className=\"btn btn-dark w-100\" onClick={this.reset} >Tutup</AnchorWithIcon>\n                </div>\n                :null}\n            </div>\n            </form>\n        )\n    }\n\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(StudentSearchForm)\n)","import React, { ChangeEvent, FormEvent } from 'react'\nimport BasePage from '../../BasePage';\nimport { withRouter, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\nimport PointRecord from '../../../../models/PointRecord';\nimport FormGroup from '../../../form/FormGroup';\nimport Class from '../../../../models/Class';\nimport StudentService from '../../../../services/StudentService';\nimport WebResponse from '../../../../models/commons/WebResponse';\nimport Category from '../../../../models/Category';\nimport WebRequest from '../../../../models/commons/WebRequest';\nimport RulePoint from '../../../../models/RulePoint';\nimport MasterDataService from '../../../../services/MasterDataService';\nimport InputTime from '../../../form/InputTime';\nimport { parseDate } from '../../../../utils/DateUtil';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\nimport AttachmentInfo from '../../../../models/settings/AttachmentInfo';\nimport { getAttachmentInfoFromFile } from '../../../../utils/ComponentUtil';\nimport Student from '../../../../models/Student'; \nimport StudentSearchForm from '../../shared/StudentSearchForm';\n\nclass State {\n    record : PointRecord  = new PointRecord();\n    categories:Category[] = [];\n    pointsMap:Record<string, RulePoint[]> = {}; \n\n    selectedCategoryId:string = \"\";\n    selectedPointId:string = \"\";\n\n    attachment:AttachmentInfo|undefined;\n}\nclass PointRecordEdit extends BasePage{\n    \n    state:State = new State();\n    studentService:StudentService;\n    masterDataService:MasterDataService;\n    inputTimeRef:React.RefObject<InputTime> = React.createRef();\n    constructor(props) {\n        super(props, \"Edit Pelanggaran\", true);\n        this.studentService = this.getServices().studentService;\n        this.masterDataService = this.getServices().masterDataService;\n    }\n\n    componentReady() {\n        this.checkPassedData();\n        this.loadCategories();\n    }\n\n    categoriesLoaded = (response: WebResponse) => {\n        this.setState({categories: response.items});\n    }\n    \n    loadCategories = () => {\n        this.commonAjax(\n            this.studentService.getCategories,\n            this.categoriesLoaded,  this.showCommonErrorAlert\n        )\n    }\n     \n    rulePointsLoaded = (categoryId:string, response:WebResponse) => {\n        const pointsMap = this.state.pointsMap;\n        pointsMap[categoryId.toString()] = response.items;\n        this.setState({pointsMap: pointsMap});\n    }\n    loadRulePoints = (catId:string) => { \n        if (catId === \"\" || this.state.pointsMap[catId] != undefined) {\n            return;\n        }\n        const req: WebRequest = {\n            filter: {limit:0, fieldsFilter:{category_id: catId}},\n            modelName: 'rulepoint',\n        }\n        this.commonAjax(\n            this.masterDataService.list,\n            (resp) => this.rulePointsLoaded(catId, resp),\n            this.showCommonErrorAlert,\n            req\n        )\n    }\n\n    checkPassedData = () => {\n        if (this.props.location &&  this.props.location.state) { \n            this.setState({\n                record: PointRecord.clone(this.props.location.state.record),\n                attachment: this.props.location.state.attachment\n             }, this.updateInput);\n        }\n    }\n    updateInput = () => {\n        /**\n         * time\n         */\n        if (this.inputTimeRef.current) {\n            this.inputTimeRef.current.updateFromProps();\n        }\n        /**\n         * etc\n         */\n    }\n\n    updateRecordField =(e:ChangeEvent) => {\n        const record = this.state.record;\n        const el = e.target as HTMLElement;\n        const name = el['name'];\n        const value = el['value']\n        record[name] =  value;\n        this.setState({record: record});\n    }\n    setSelectedRulePoint = (p:RulePoint) => {\n        const record = this.state.record;\n        record.rule_point = p;\n        record.point_id = p.id;\n        this.setState({record: record});\n    }\n\n    updateTime = (h: number, m: number, s: number) => {\n        const record = this.state.record;\n        record.setTime(h, m, s);\n        this.setState({ record: record });\n    }\n    updateDate = (e: ChangeEvent) => {\n        const date: Date = parseDate((e.target as HTMLInputElement).value);\n        const record = this.state.record;\n        record.setDate(date);\n        this.setState({ pointRecord: record });\n    }\n    submit = () => {\n        this.commonAjax(\n            this.studentService.submitPointRecord,\n            this.recordSubmitted,\n            this.showCommonErrorAlert,\n            this.state.record, this.state.attachment\n        )\n    }\n    recordSubmitted = (r:WebResponse) => {\n        this.setState({record : new PointRecord(), attachment: undefined, selectedCategoryId: \"\"}, ()=> {\n            this.showInfo(\"Data berhasil disimpan\");\n            this.scrollTop();\n        })\n    }\n\n    validateInput = () => {\n        const rec = this.state.record;\n        return ( rec.student_id && rec.point_id  )\n    }\n\n    onSubmit = (e:FormEvent) => {\n        e.preventDefault();\n        if (!this.validateInput()) {\n            this.showError(\"Input tidak lengkap\");\n            return;\n        }\n        this.showConfirmation(\"Simpan data?\")\n        .then(ok=>{\n            if (ok) {  this.submit();  }\n        })\n    }\n    removeImage = () => {\n        this.showConfirmationDanger(\"Hapus gambar?\")\n        .then(ok=>{\n            if (ok) {\n                const record = this.state.record;\n                record.pictures = [];\n                this.setState({record: record, attachment: undefined});\n            }\n        })\n    }\n    updatePicture = (e:ChangeEvent) => {\n        getAttachmentInfoFromFile(e.target as HTMLInputElement)\n        .then(attachment=>{ \n            this.setState({attachment:attachment});\n        }).catch(console.error)\n    }\n    setStudent = (s:Student) => {\n        const record = this.state.record;\n        record.student = s;\n        record.student_id = s.id;\n        this.setState({record: record, });\n    }\n\n    updateCategory = (e:ChangeEvent) => {\n        this.handleInputChange(e);\n        this.loadRulePoints((e.target as HTMLSelectElement).value);\n    }\n\n    updateRulePoint = (e:ChangeEvent) => {\n        const catId =  this.state.selectedCategoryId;\n        const p = this.state.pointsMap[catId].filter((r:RulePoint)=>{\n            return r.id.toString() == (e.target as HTMLSelectElement).value;\n        })\n        if (p.length == 0) return;\n        this.setSelectedRulePoint(p[0]);\n    }\n    \n    render() {\n\n        const record = this.state.record;\n        const categoryID = this.state.selectedCategoryId;\n        const pointsMap = this.state.pointsMap;\n        const pictureUrl = this.state.attachment?this.state.attachment.url : record.getPicture();\n\n        return (\n            <div className=\"section-body container-fluid\">\n                <h2>Form Input Pelanggaran</h2>\n                <hr/>\n                <FormGroup  label=\"Siswa\" >\n                    <StudentSearchForm selectItem={this.setStudent} />\n                </FormGroup>\n                {record.student? <FormGroup>\n                    <div  >{record.student.user?.name ?? \"\"} {Class.studentClassString(record.student)}\n                    </div> \n                </FormGroup>\n                : null}\n                 \n                <form onSubmit={this.onSubmit}>\n                    <FormGroup label=\"Pelanggaran\">\n                        <p>{record.rule_point?.name??\"-\"} {record.rule_point? `(${record.rule_point.point})` :\"\"}</p>\n                        <p/>\n                        <select value={categoryID} name=\"selectedCategoryId\" onChange={this.updateCategory} className=\"form-control\">\n                             <option value=\"\">Pilih Kategori</option>\n                             {this.state.categories.map((cat:Category)=>{\n                                 return (\n                                    <option key={`cat_ed_opt_${cat.id}`} value={cat.id}>\n                                        {cat.name}\n                                    </option>\n                                 )\n                             })}\n                         </select>\n                         <p/>\n                         <select className=\"form-control\" onChange={this.updateRulePoint} >\n                             <option value=\"\">Pilih Pelanggaran</option>\n                             {pointsMap[categoryID]?\n                                pointsMap[categoryID].map(p=>{\n                                 return (\n                                    <option  key={`rp_ed_opt_${p.id}`} value={p.id}>\n                                        {p.name} ({p.point})\n                                    </option>\n                                 )\n                             }) : null}\n                         </select>\n                    </FormGroup>\n                    <FormGroup label=\"Tanggal\">\n                        <input type=\"date\" className=\"form-control\" onChange={this.updateDate} name=\"date\" value={record.dateString()} />\n                    </FormGroup>\n                    <FormGroup label=\"Waktu\">\n                        <InputTime ref={this.inputTimeRef} onChange={this.updateTime} value={record.time} />\n                    </FormGroup>\n                    <FormGroup label=\"Lokasi\">\n                        <input type=\"text\" name=\"location\" onChange={this.updateRecordField} className=\"form-control\" value={record.location??\"\"} />\n                    </FormGroup>\n                    <FormGroup label=\"Deskripsi\">\n                        <textarea className=\"form-control\" name=\"description\" onChange={this.updateRecordField} value={record.description??\"\"} />\n                    </FormGroup>\n                    <FormGroup label=\"Gambar\">\n                        {pictureUrl?\n                            <>\n                                <img src={pictureUrl} width={200} height={200} className=\"border border-dark\" />\n                                <p/> \n                                <AnchorWithIcon className=\"btn btn-danger btn-sm\"  onClick={this.removeImage} iconClassName=\"fas fa-times\"  >Hapus Gambar</AnchorWithIcon>\n                            </>:\n                            <div>\n                                <input onChange={this.updatePicture} type=\"file\" accept=\"image/*\" className=\"form-control\" />\n                            </div>\n                        }\n                    </FormGroup>\n                    <FormGroup>\n                        <Link className=\"btn btn-dark\" to=\"/asrama/pointsummary\">Kembali</Link>\n                        <input type=\"submit\" className=\"btn btn-primary ml-3\" value=\"Submit\" />\n                    </FormGroup>\n                    {/* <FormGroup label=\"Siswa\">\n                        <input type=\"text\" className=\"form-control\" value={record.student?.user?.name} />\n                    </FormGroup> */}\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    \n)(PointRecordEdit))\n","import React from 'react' \nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from './../../../../constant/stores';\nimport BasePage from './../../BasePage';\nimport StudentService from './../../../../services/StudentService';\nimport Student from './../../../../models/Student';\nimport { tableHeader } from './../../../../utils/CollectionUtil';\nimport WebResponse from './../../../../models/commons/WebResponse';\nimport Class from './../../../../models/Class';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\ninterface FollowUpInfo {\n    student:Student,\n    TOTAL_POINT:any,\n    FOLLOW_UP_COUNT:number,\n}\nclass State {\n    followUpInfos:FollowUpInfo[] = [];\n}\nclass FollowUpReminder extends BasePage\n{\n    state:State = new State();\n    private studentService:StudentService;\n    constructor(props) {\n        super(props, \"Follow Up Pelanggaran\",true);\n        this.studentService = this.getServices().studentService;\n    }\n    componentReady(){\n        // if (this.isAdmin()) return;\n        this.loadReminder();\n    }\n    loadReminder = () => {\n        this.commonAjax(\n            this.studentService.getFollowUpReminders,\n            this.recordsLoaded,\n            console.error\n        )\n    }\n    recordsLoaded = (r:WebResponse) => {\n        this.setState({followUpInfos:r.items});\n    }\n\n    render(){\n\n        return (\n            <div className=\"section-body container-fluid\">\n                <h2>Follow Up Pelanggaran</h2>\n                <p>Pelanggaran dengan poin di bawah {this.getApplicationProfile().warning_point}</p>\n                <AnchorWithIcon iconClassName=\"fas fa-redo\" onClick={this.loadReminder} children=\"Reload\"/>\n                <table className=\"table\">\n                    {tableHeader(\"No\", \"Siswa\", \"Kelas\", \"Poin\", \"Penanganan\", \"Opsi\")}\n                    <tbody>\n                        {this.state.followUpInfos.map((info, i)=>{\n                            return (\n                                <tr key={`f-i-${i}`}>\n                                    <td>{i+1}</td>\n                                    <td>{info.student.user?.name}</td>\n                                    <td>{Class.studentClassString(info.student)}</td>\n                                    <td>{info.TOTAL_POINT}</td>\n                                    <td>{info.FOLLOW_UP_COUNT}</td>\n                                    <td>\n                                        <a className=\"btn btn-info btn-sm\" >\n                                            Follow Up\n                                        </a>\n                                    </td>\n                                </tr>\n                            )\n                        })}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(FollowUpReminder)\n)","\nimport BaseEntity from './BaseEntity';\nimport Student from './Student';\nexport default class WarningAction extends BaseEntity\n{\n    name:string = \"SP1\";\n    description:string|undefined;\n    student:Student|undefined;\n    student_id:string| undefined;\n    \n}","import React, { ChangeEvent } from 'react'\nimport BaseManagementPage from './BaseManagementPage';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\nimport WarningAction from '../../../models/WarningAction';\nimport Filter from './../../../models/commons/Filter';\nimport WebRequest from './../../../models/commons/WebRequest';\nimport FormGroup from './../../form/FormGroup';\nimport NavigationButtons from './../../navigation/NavigationButtons';\nimport { tableHeader } from './../../../utils/CollectionUtil';\nimport EditDeleteButton from './EditDeleteButton';\nimport Class from './../../../models/Class';\nimport Modal from './../../container/Modal';\nimport StudentSearchForm from '../shared/StudentSearchForm';\nimport Student from './../../../models/Student';\nimport BaseEntity from './../../../models/BaseEntity';\nclass State {\n    items: WarningAction[] = [];\n    filter: Filter = new Filter();\n    totalData: number = 0;\n    record: WarningAction = new WarningAction();\n\n}\nclass WarningActionManagement extends BaseManagementPage {\n\n    state:State = new State();\n    constructor(props) {\n        super(props, 'warningaction');\n    }\n    setStudent = (s:Student) => {\n        const record = this.state.record;\n        record.student = s;\n        record.student_id = s.id;\n        this.setState({record: record});\n    }\n    emptyRecord = (): BaseEntity => {\n        return new WarningAction();\n    }\n    onSubmit = () => {\n        if (!this.state.record.student_id) {\n            this.showError(\"Input tidak lengkap\");\n            return;\n        }\n        this.showConfirmation(\"Submit Data?\")\n            .then(ok => {\n                if (!ok) return;\n                this.callApiSubmit({\n                    warningAction: this.state.record,\n                    modelName: this.modelName\n                });\n            })\n    }\n    render() {\n        const filter: Filter = this.state.filter;\n        return (\n            <div className=\"container-fluid section-body\">\n                <h2>Peringatan</h2>\n                <hr />\n                {this.isAdmin()?\n                <RecordForm formRef={this.formRef} setStudent={this.setStudent} resetForm={this.resetForm} onSubmit={this.onSubmit} record={this.state.record} updateRecordProp={this.updateRecordProp} />\n                :null}\n                <form onSubmit={this.reload}>\n                    <FormGroup label=\"Cari\">\n                        <select name=\"name\"   className=\"form-control-sm\" value={filter.fieldsFilter['name']?? \"\"} onChange={this.updateFieldsFilter}>\n                            <option value=\"\">Semua</option>\n                            <option>SP1</option>\n                            <option>SP2</option>\n                            <option>SP3</option>\n                        </select>\n                        <input name=\"student_name\" placeholder=\"nama siswa\" className=\"form-control-sm\" value={filter.fieldsFilter['student_name']?? \"\"} onChange={this.updateFieldsFilter} />\n                    </FormGroup>\n                    <FormGroup label=\"Jumlah Tampilan\">\n                        <input name=\"limit\" type=\"number\" className=\"form-control-sm\" value={filter.limit ?? 5} onChange={this.updateFilter} />\n                    </FormGroup>\n                    <FormGroup>\n                        <input className=\"btn btn-primary btn-sm\" type=\"submit\" value=\"Submit\" />\n                    </FormGroup>\n                </form>\n                <NavigationButtons activePage={filter.page ?? 0} limit={filter.limit ?? 10} totalData={this.state.totalData}\n                    onClick={this.loadAtPage} />\n                <ItemsList  items={this.state.items}  isAdmin={this.isAdmin()}\n                    recordLoaded={this.oneRecordLoaded} recordDeleted={this.loadItems}\n                    startingNumber={(filter.page??0)*(filter.limit ?? 10)} />\n            </div>\n        )\n    }\n\n}\ninterface ItemProps {isAdmin:boolean ,startingNumber:number, items:WarningAction[], recordLoaded(item:any), recordDeleted()}\nconst ItemsList = (props: ItemProps) => {\n\n    return (\n        <div style={{overflow:'scroll'}}>\n        <table className=\"table table-striped\">\n            {tableHeader(\"No\", \"Siswa\", \"Kelas\", \"Nama\", \"Deskripsi\", \"Tgl Simpan\", \"Opsi\")}\n            <tbody>\n                    {props.items.map((item:WarningAction, i)=>{\n\n                        return (\n                            <tr key={\"category-\"+i}>\n                                <td>{i+1+props.startingNumber}</td>\n                                <td>{item.student?.user?.name}</td>\n                                <td>{Class.studentClassString(item.student)}</td>\n                                <td>{item.name}</td>\n                                <td>{item.description}</td>\n                                <td>{item.created_at}</td>\n                                <td>{props.isAdmin?\n                                    <EditDeleteButton \n                                        recordLoaded={props.recordLoaded}\n                                        recordDeleted={props.recordDeleted}\n                                        record={item} modelName={'warningaction'}/>:null}\n                                </td>\n                            </tr>\n                        )\n                    })}\n                </tbody>\n        </table>\n        </div>\n    )\n}\nconst RecordForm = (props: { formRef:React.RefObject<Modal>, setStudent(s:Student), updateRecordProp(e: ChangeEvent): any, resetForm():any, onSubmit(): any, record: WarningAction }) => {\n    const record = props.record;\n    return (\n        <div className=\"record-form mb-3\" >\n            <Modal show={false} ref={props.formRef} toggleable={true} title=\"Record Form\" >\n                <FormGroup label=\"Siswa\">\n                    <StudentSearchForm selectItem={props.setStudent} />\n                    \n                </FormGroup>\n                {record.student?\n                        <FormGroup children={record.student.user?.name+ \" \" +Class.studentClassString(record.student)} />:null\n                    }\n                <form onSubmit={(e) => { e.preventDefault(); props.onSubmit() }}>\n                <FormGroup label=\"Nama\">\n                    <select required value={record.name  } onChange={props.updateRecordProp} className=\"form-control\" name=\"name\" >\n                        <option>SP1</option>\n                        <option>SP2</option>\n                        <option>SP3</option>\n                    </select>\n                </FormGroup>\n                <FormGroup label=\"Deskripsi\">\n                    <textarea required className=\"form-control\" name=\"description\" onChange={props.updateRecordProp} value={record.description ?? \"\"} />\n                </FormGroup>\n                <FormGroup>\n                    <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-sm\" />\n                    &nbsp;\n                    <input type=\"reset\"   className=\"btn btn-secondary btn-sm\" onClick={(e)=>props.resetForm()} />\n                </FormGroup>\n                </form>\n            </Modal>\n        </div>\n    )\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(WarningActionManagement)\n)","import React, { FormEvent } from 'react'\nimport BaseComponent from '../../BaseComponent';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\nimport MasterDataService from '../../../services/MasterDataService';\nimport WebRequest from '../../../models/commons/WebRequest';\nimport Filter from '../../../models/commons/Filter';\nimport WebResponse from '../../../models/commons/WebResponse';\nimport AnchorWithIcon from '../../navigation/AnchorWithIcon';\nimport './style.css'\nimport Employee from './../../../models/Employee';\n\nclass State {\n    items:Employee[] = [];\n    keyword:string = \"\";\n}\nclass EmployeeSearchForm extends BaseComponent\n{\n\n    state:State = new State();\n    private masterDataService:MasterDataService;\n    constructor(props) {\n        super(props, true);\n        this.masterDataService = this.getServices().masterDataService;\n    }\n    itemsLoaded = (response: WebResponse) => {\n        this.setState({items: response.items});\n    }\n    \n    loadItems = (e:FormEvent) => {\n        e.preventDefault();\n        if (\"\" == this.state.keyword) return;\n        const req:WebRequest = {\n            filter:new Filter(),\n            modelName:'employee',\n        }\n        if (req.filter)\n            req.filter.fieldsFilter = {\n                'name':this.state.keyword\n            }\n        this.commonAjax(\n            this.masterDataService.list,\n            this.itemsLoaded,  this.showCommonErrorAlert,\n            req\n        )\n    }\n    select = (s:Employee) => {\n        this.props.selectItem(s);\n        this.setState({items: [], keyword: \"\"});\n    }\n    reset = () => this.setState({items: []});\n\n    render() {\n\n        return (\n            <form id=\"form-search-employee\" onSubmit={this.loadItems}>\n            <div className=\"mb-3\" style={{position:'absolute'}}>\n                <div className=\"input-group\">\n                    <input name=\"keyword\" className=\"form-control\" onChange={this.handleInputChange} value={this.state.keyword}\n                        placeholder=\"Cari Nama\" />\n                    <input type=\"submit\" value=\"Cari\" className=\"btn btn-secondary\" />\n                </div>\n                {this.state.items.length > 0?\n                <div className=\"bg-light border rounded border-secondary\" style={{position:'relative', zIndex: 10, padding: 3}}>\n                    {this.state.items.map(s=>{\n                        return (\n                            <div onClick={()=> this.select(s)} className=\"option-item\" key={`s_form_${s.id}`}>\n                                {s.user?.name} \n                            </div>\n                        )\n                    })}\n                    <AnchorWithIcon iconClassName=\"fas fa-times\" className=\"btn btn-dark w-100\" onClick={this.reset} >Tutup</AnchorWithIcon>\n                </div>\n                :null}\n            </div>\n            </form>\n        )\n    }\n\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(EmployeeSearchForm)\n)","import React, { ChangeEvent, FormEvent } from 'react'\nimport BasePage from './../BasePage';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\nimport ApplicationProfile from './../../../models/ApplicationProfile';\nimport FormGroup from '../../form/FormGroup';\nimport ConfigurationService from './../../../services/ConfigurationService';\nimport WebResponse from './../../../models/commons/WebResponse';\nimport EmployeeSearchForm from '../shared/EmployeeSearchForm';\nimport { getAttachmentInfoFromFile } from './../../../utils/ComponentUtil';\nimport AttachmentInfo from './../../../models/settings/AttachmentInfo';\n\nclass State {\n    applicationProfile:ApplicationProfile = new ApplicationProfile();\n}\nclass ConfigSettingPage extends BasePage\n{\n    state:State = new State();\n    configService:ConfigurationService;\n    constructor(props) {\n        super(props, \"Konfigurasi\", true);\n        this.configService = this.getServices().configurationService;\n    }\n\n    componentReady() {\n        this.setState({\n            applicationProfile: Object.assign(new ApplicationProfile(), this.getApplicationProfile())\n        });\n    }\n\n    submit = (e:FormEvent) => {\n        e.preventDefault();\n        console.debug(this.state.applicationProfile)\n        this.commonAjax(\n            this.configService.update,\n            this.configUpdated,\n            this.showCommonErrorAlert,\n            this.state.applicationProfile\n        )\n    }\n    updateField = (fieldName:string, value:any) => {\n        const profile = this.state.applicationProfile;\n        profile[fieldName] = value;\n        this.setState({applicationProfile: profile});\n    }\n    configUpdated = (response: WebResponse) => {\n        this.showInfo(\"Sukses, silakan muat ulang halaman\");\n    }\n    \n    updateAttachment = (e:ChangeEvent) => {\n        const name = (e.target as HTMLInputElement).name;\n        getAttachmentInfoFromFile(e.target as HTMLInputElement)\n        .then((attachment:AttachmentInfo)=>{\n            this.updateField(name, attachment);\n        })\n    }\n    render() {\n        const profile = this.state.applicationProfile;\n        return (\n            <div className=\"container-fluid section-body\" >\n                <h2>Konfigurasi</h2>\n                <hr/>\n                <div style={{padding:5}} className=\"border border-secondary rounded \">\n                    <form onSubmit={this.submit}  >\n                        <FormGroup>\n                            <input type=\"submit\" value=\"Simpan\" className=\"btn btn-primary\" />\n                        </FormGroup>\n                        <FormGroup label=\"Nama Aplikasi\">\n                            <input name='name' onChange={(e)=>this.handleInputChange(e, 'applicationProfile')} className=\"form-control\" value={profile.name??\"\"} />\n                        </FormGroup>\n                        <FormGroup label=\"Deskripsi Aplikasi\">\n                            <input name='description' onChange={(e)=>this.handleInputChange(e, 'applicationProfile')} className=\"form-control\" value={profile.description??\"\"} />\n                        </FormGroup>\n                        <FormGroup label=\"Batas Poin Peringatan\">\n                            <input name='warning_point' onChange={(e)=>this.handleInputChange(e, 'applicationProfile')} className=\"form-control\" type=\"number\" value={profile.warning_point??-30} />\n                        </FormGroup>\n                        <FormGroup label=\"Tanggal Rapor\">\n                            <input name='report_date' onChange={(e)=>this.handleInputChange(e, 'applicationProfile')} className=\"form-control\" value={profile.report_date??\"\"} />\n                        </FormGroup>\n                        <FormGroup label=\"TTD Kepala Asrama\">\n                            <img width={60} height={60}\n                                src={profile.divisionHeadSignatureURL} />\n                            <input accept=\"image/*\" onChange={this.updateAttachment} type=\"file\" className=\"form-control\"\n                                name=\"divisionHeadSignatureAttachment\" />\n                        </FormGroup>\n                        <FormGroup label=\"TTD Direktur\">\n                            <img width={60} height={60}\n                                    src={profile.directorSignatureURL} />\n                            <input accept=\"image/*\" onChange={this.updateAttachment} type=\"file\" className=\"form-control\"\n                                    name=\"directorSignatureAttachment\" />\n                        </FormGroup>\n                        <FormGroup label=\"Stempel\">\n                            <img width={60} height={60}\n                                    src={profile.stampURL} />\n                            <input accept=\"image/*\" onChange={this.updateAttachment} type=\"file\" className=\"form-control\"\n                                    name=\"stampAttachment\" />\n                        </FormGroup>\n                        <FormGroup label=\"Stempel Asrama\">\n                            <img width={60} height={60}\n                                    src={profile.dormitoryStampURL} />\n                            <input accept=\"image/*\" onChange={this.updateAttachment} type=\"file\" className=\"form-control\"\n                                    name=\"dormitoryStampAttachment\" />\n                        </FormGroup>\n                    </form>\n                    <FormGroup label=\"Kepala Asrama\">\n                        <div style={{height: '80px'}}>\n                            <b>{profile.division_head?.user?.name}</b>\n                            <EmployeeSearchForm selectItem={(e)=>this.updateField('division_head', e)}/>\n                        </div>\n                    </FormGroup>\n                    <FormGroup label=\"Direktur\">\n                        <div style={{height: '80px'}}>\n                            <b>{profile.school_director?.user?.name}</b>\n                            <EmployeeSearchForm selectItem={(e)=>this.updateField('school_director', e)}/>\n                        </div>\n                    </FormGroup>\n                   \n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(ConfigSettingPage)\n)","import React from 'react'\nimport BasePage from './../BasePage';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\nimport StudentService from './../../../services/StudentService';\nimport Class from './../../../models/Class';\nimport WebResponse from './../../../models/commons/WebResponse';\nimport FormGroup from '../../form/FormGroup';\nimport AttachmentInfo from './../../../models/settings/AttachmentInfo';\nimport { tableHeader } from './../../../utils/CollectionUtil';\nimport { contextPath } from './../../../constant/Url';\n\nclass State {\n    classes:Class [] = [];\n    items:ReportItem[] = [];\n}\ninterface ReportItem {\n    name:string, class:string,\n    categories:CategoryResult[]\n}\ninterface CategoryResult {\n    name:string, total_point:number, predicate_letter:string, predicate_desc:string\n}\nclass StudentSemesterReport extends BasePage\n{\n    state:State = new State();\n    private studentService:StudentService;\n    selectClassRef:React.RefObject<HTMLSelectElement> = React.createRef();\n    constructor(props) {\n        super(props, \"Rapor Semester\", true);\n        this.studentService = this.getServices().studentService;\n    }\n\n    componentReady() {\n        this.commonAjax(\n            this.studentService.getClasses,\n            this.classesLoaded,\n            this.showCommonErrorAlert\n        );\n    }\n\n    loadRaporData = (e:any) => {\n        if (e && e.preventDefault) {\n            e.preventDefault();\n        }\n        if (!this.selectClassRef.current) {\n            return;\n        }\n        const classId = this.selectClassRef.current.value;\n        this.commonAjax(\n            this.studentService.getRaporData,\n            this.raporDataLoaded,\n            this.showCommonErrorAlert,\n            classId\n        )\n    }\n    downloadData = () => {\n        if (!this.selectClassRef.current) {\n            return;\n        }\n        const classId = this.selectClassRef.current.value;\n        this.commonAjax(\n            this.studentService.downloadRaporData,\n            this.reportCreated,\n            this.showCommonErrorAlert,\n            classId\n        )\n    }\n    downloadRapor = () => {\n        if (!this.selectClassRef.current) {\n            return;\n        }\n        const classId = this.selectClassRef.current.value;\n        window.open(contextPath()+'rapor/'+classId);\n    }\n\n    reportCreated = (attachment: AttachmentInfo) => {\n        this.showConfirmation(\"Save File \" + attachment.name + \" ?\")\n            .then((ok) => {\n                if (!ok) return;\n                Object.assign(document.createElement('a'), {\n                    target: '_blank',\n                    download: attachment.name,\n                    style: { display: 'none' },\n                    href: attachment.url,\n                }).click();\n            })\n\n    }\n\n    classesLoaded = (response:WebResponse) => {\n        this.setState({classes: response.items});\n    }\n    raporDataLoaded = (response:WebResponse) => {\n        this.setState({items: response.items});\n    }\n    get reportHeader() {\n        const headers = ['No', 'Siswa', 'Kelas']\n        const items = this.state.items;\n        if (items.length == 0) return [];\n\n        items[0].categories.forEach((cat)=>{\n            headers.push(cat.name);\n            headers.push(\"Predikat\");\n            headers.push(\"Keterangan\");\n        });\n        return headers;\n    }\n    render() {\n        const classes = this.state.classes;\n\n        return (\n            <div className=\"container-fluid section-body\">\n                <h2>{this.title}</h2>\n                <form onSubmit={this.loadRaporData} className=\"mt-5\">\n                    <FormGroup label=\"Kelas\">\n                        <select ref={this.selectClassRef} className=\"form-control\">\n                            {classes.map((c:Class)=>{\n                                return <option key={`rapor_class_${c.id}`} value={c.id}>{c.level}{c.rombel} {c.sekolah?.nama}</option>\n                            })}\n                        </select>\n                    </FormGroup>\n                    <FormGroup>\n                        <input type=\"submit\" className=\"btn btn-success\" value=\"Load Data\" />\n                        <a className=\"btn btn-link ml-2\" onClick={this.downloadData} >Download Detail Data</a>\n                        <a className=\"btn btn-link ml-2\" onClick={this.downloadRapor} >Download Rapor</a>\n                    </FormGroup>\n                </form>\n                {this.state.items.length == 0?\n                <div className=\"alert alert-warning\">Tidak ada data</div>:\n                <div className=\"mt-5 bg-white border border-secondary\" style={{overflow: 'scroll'}}>\n                    <table className=\"table table-striped\">\n                        {tableHeader(...this.reportHeader)}\n                        <tbody>\n                            {this.state.items.map((item:ReportItem, i:number) => {\n\n                                return (\n                                    <tr key={`r_i_${item.name}`} >\n                                        <td>{i+1}</td>\n                                        <td>{item.name}</td>\n                                        <td>{item.class}</td>\n                                        {item.categories.map((c:CategoryResult, ci:number)=>{\n                                            return (\n                                                <React.Fragment key={\"F\"+ci+i}>\n                                                    <td>{c.total_point}</td>\n                                                    <td children={c.predicate_letter}/>\n                                                    <td children={c.predicate_desc} />\n                                                </React.Fragment>\n                                            )\n                                        })}\n                                    </tr>\n                                )\n                            })}\n                        </tbody>\n                    </table>\n                </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(StudentSemesterReport)\n)","\nimport BaseEntity from './BaseEntity';\nimport Category from './Category';\nexport default class CategoryPredicate extends BaseEntity\n{\n    name:string | undefined;\n    code:string | undefined;\n    description:string | undefined;\n    category:Category | undefined;\n    category_id: number | undefined;\n}","import React, { ChangeEvent } from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport RulePoint from '../../../models/RulePoint';\r\nimport Filter from '../../../models/commons/Filter';\r\nimport Modal from '../../container/Modal';\r\nimport FormGroup from '../../form/FormGroup';\r\nimport WebRequest from '../../../models/commons/WebRequest';\r\nimport NavigationButtons from '../../navigation/NavigationButtons';\r\nimport EditDeleteButton from './EditDeleteButton';\r\nimport { tableHeader } from '../../../utils/CollectionUtil';\r\nimport BaseManagementPage from './BaseManagementPage';\r\nimport Category from '../../../models/Category';\r\nimport WebResponse from '../../../models/commons/WebResponse';\r\nimport AnchorWithIcon from '../../navigation/AnchorWithIcon';\r\nimport CategoryPredicate from './../../../models/CategoryPredicate';\r\nclass State {\r\n    items: CategoryPredicate[] = [];\r\n    filter: Filter = new Filter();\r\n    totalData: number = 0;\r\n    record: CategoryPredicate = new CategoryPredicate();\r\n    categories: Category[] = [];\r\n    categoriesLoaded:boolean = false;\r\n\r\n}\r\nclass CategoryPredicateManagement extends BaseManagementPage\r\n{\r\n    state: State = new State();\r\n    \r\n    constructor(props) {\r\n        super(props, 'categorypredicate');\r\n        this.state.filter.limit = 10;\r\n    }\r\n\r\n    onSubmit = () => {\r\n        // console.debug(\"RECORD: \", this.state.record);\r\n        this.showConfirmation(\"Submit Data?\")\r\n            .then(ok => {\r\n                if (!ok) return;\r\n\r\n                const request: WebRequest = {\r\n                    categoryPredicate: this.state.record,\r\n                    modelName: this.modelName\r\n                }\r\n                this.callApiSubmit(request);\r\n            })\r\n    }\r\n    componentDidMount() {\r\n        this.validateLoginStatus(()=>{\r\n            this.scrollTop();\r\n            this.loadCategories();\r\n        });\r\n    }\r\n    categoriesLoaded = (response: WebResponse) => {\r\n        this.setState({categories:response.items, categoriesLoaded: true}, ()=>{ this.resetForm(); this.loadItems() });\r\n    }\r\n    categoriesNotLoaded = (response: WebResponse) => {\r\n        this.setState({categories: [], categoriesLoaded: true}, this.resetForm);\r\n    }\r\n    loadCategories = () => {\r\n        const filter:Filter = new Filter();\r\n        filter.limit = 0;\r\n        const req:WebRequest = {\r\n            filter: filter,\r\n            modelName: 'category'\r\n        }\r\n        this.commonAjax(\r\n            this.masterDataService.list,\r\n            this.categoriesLoaded,\r\n            this.categoriesNotLoaded,\r\n            req\r\n        )\r\n    }\r\n    \r\n    emptyRecord = ():any => {\r\n        const record = new CategoryPredicate();\r\n        if (this.state.categories.length > 0) {\r\n            record.category_id = this.state.categories[0].id;\r\n        }\r\n        return record;\r\n    }\r\n    \r\n    render() {\r\n        const filter: Filter = this.state.filter;\r\n        const categories: Category[] = this.state.categories;\r\n        if (this.state.categoriesLoaded && categories.length == 0) {\r\n            return (\r\n                <div className=\"container-fluid section-body\">\r\n                    <h2>Kategori belum ada</h2>\r\n                </div>\r\n            )\r\n        }\r\n        const selectedCategoryId = filter.fieldsFilter && filter.fieldsFilter['category_id'] ? filter.fieldsFilter['category_id'] : \"ALL\";\r\n        return (\r\n            <div className=\"container-fluid section-body\">\r\n                <h2>Predikat Rapor</h2>\r\n                <hr />\r\n                <RecordForm categories={categories} reloadCategories={this.loadCategories} formRef={this.formRef} resetForm={this.resetForm} onSubmit={this.onSubmit} \r\n                    record={this.state.record} updateRecordProp={this.updateRecordProp} />\r\n                <form onSubmit={this.reload}>\r\n                <FormGroup label=\"Cari\">\r\n                    <div className=\"input-group\">\r\n                        <input name=\"name\" placeholder=\"nama\" className=\"form-control-sm\" value={filter.fieldsFilter ? filter.fieldsFilter['name'] : \"\"} onChange={this.updateFieldsFilter} />\r\n                        <input name=\"code\" placeholder=\"kode\" className=\"form-control-sm\" value={filter.fieldsFilter ? filter.fieldsFilter['kode'] : \"\"} onChange={this.updateFieldsFilter} />\r\n                        <select value={selectedCategoryId} className=\"form-control-sm\" name=\"category_id\" onChange={this.updateFieldsFilter} >\r\n                            {[{id:\"\", name:\"Semua Kategori\"},...categories].map((c)=>{\r\n                                return <option key={\"filter-cat-\"+c.id} value={c.id}>{c.name}</option>\r\n                            })}\r\n                        </select>\r\n                        <div className=\"input-group-append\">\r\n                            <AnchorWithIcon className=\"btn btn-sm\" iconClassName=\"fas fa-redo\" onClick={this.loadCategories}>Reload</AnchorWithIcon>\r\n                        </div>\r\n                    </div>\r\n                </FormGroup>\r\n                    <FormGroup label=\"Jumlah Tampilan\">\r\n                        <input type=\"number\" name=\"limit\" className=\"form-control-sm\" value={filter.limit ?? 5} onChange={this.updateFilter} />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <input className=\"btn btn-primary btn-sm\" type=\"submit\" value=\"Submit\" />\r\n                    </FormGroup>\r\n                </form>\r\n                <NavigationButtons activePage={filter.page ?? 0} limit={filter.limit ?? 5} totalData={this.state.totalData}\r\n                    onClick={this.loadAtPage} />\r\n                <ItemsList \r\n                    recordLoaded={this.oneRecordLoaded}\r\n                    recordDeleted={this.loadItems}\r\n                    startingNumber={(filter.page??0)*(filter.limit??10)} items={this.state.items} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst ItemsList = (props: {startingNumber:number, items:CategoryPredicate[], recordLoaded(item:any), recordDeleted()}) => {\r\n\r\n    return (\r\n        <div style={{overflow:'scroll'}}>\r\n        <table className=\"table table-striped\">\r\n            {tableHeader(\"No\", \"Kode\", \"Nama\",  \"Deskripsi\", \"Kategori\", \"Opsi\")}\r\n            <tbody>\r\n                    {props.items.map((item, i)=>{\r\n                        return (\r\n                            <tr key={`RulePoint-${i}`}>\r\n                                <td>{i+1+props.startingNumber}</td>\r\n                                <td>{item.code}</td>\r\n                                <td>{item.name}</td> \r\n                                <td>{item.description}</td>\r\n                                <td>{item.category?.name}</td> \r\n                                <td><EditDeleteButton \r\n                                    recordLoaded={props.recordLoaded}\r\n                                    recordDeleted={props.recordDeleted}\r\n                                    record={item} modelName={'categorypredicate'}/></td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n        </table>\r\n        </div>\r\n    )\r\n}\r\nconst RecordForm = (props: { categories:Category[], formRef:React.RefObject<Modal>, \r\n    updateRecordProp(e: ChangeEvent): any, \r\n    resetForm():any, onSubmit(): any,\r\n    record: CategoryPredicate, reloadCategories():any }) => {\r\n\r\n    return (\r\n        <form className=\"record-form mb-3\" onSubmit={(e) => { e.preventDefault(); props.onSubmit() }}>\r\n            <Modal show={false} ref={props.formRef} toggleable={true} title=\"Record Form\" >\r\n                <FormGroup label=\"Kode\">\r\n                    <select required value={props.record.code} className=\"form-control-sm\" name=\"code\" onChange={props.updateRecordProp} >\r\n                        <option>A</option>\r\n                        <option>B</option>\r\n                        <option>C</option>\r\n                        <option>D</option>\r\n                    </select>\r\n                </FormGroup>\r\n                <FormGroup label=\"Nama\">\r\n                <textarea className=\"form-control\" name=\"name\" onChange={props.updateRecordProp} value={props.record.name ?? \"\"}  />\r\n                </FormGroup>\r\n                <FormGroup label=\"Deskripsi\">\r\n                    <textarea className=\"form-control\" name=\"description\" onChange={props.updateRecordProp} value={props.record.description ?? \"\"}  />\r\n                </FormGroup>\r\n                <FormGroup label=\"Category\">\r\n                    <div className=\"input-group\">\r\n                        <select required value={props.record.category_id} className=\"form-control-sm\" name=\"category_id\" onChange={props.updateRecordProp} >\r\n                            {props.categories.map((c)=>{\r\n\r\n                                return <option key={\"cat-\"+c.id} value={c.id}>{c.name}</option>\r\n                            })}\r\n                        </select>\r\n                        <div className=\"input-group-append\">\r\n                        <AnchorWithIcon className=\"btn btn-sm\" iconClassName=\"fas fa-redo\" onClick={props.reloadCategories}>Reload</AnchorWithIcon>\r\n                        </div>\r\n                    </div>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-sm\" />\r\n                    &nbsp;\r\n                    <input value=\"Reset\" type=\"reset\" className=\"btn btn-secondary btn-sm\" onClick={(e)=>props.resetForm()} />\r\n                </FormGroup>\r\n            </Modal>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default withRouter(\r\n    connect(\r\n        mapCommonUserStateToProps\r\n    )(CategoryPredicateManagement)\r\n)","\nimport BaseEntity from './BaseEntity';\nimport Student from './Student';\nexport default class RuleViolation extends BaseEntity\n{\n    name:string = \"\";\n    description:string|undefined;\n    student:Student|undefined;\n    student_id:string| undefined;\n    semester:number|undefined;\n    tahun_ajaran:string|undefined;\n\n    point:number = 0;\n    \n}","import React, { ChangeEvent } from 'react'\nimport BaseManagementPage from './BaseManagementPage';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\nimport RuleViolation from '../../../models/RuleViolation';\nimport Filter from './../../../models/commons/Filter';\nimport WebRequest from './../../../models/commons/WebRequest';\nimport FormGroup from './../../form/FormGroup';\nimport NavigationButtons from './../../navigation/NavigationButtons';\nimport { tableHeader } from './../../../utils/CollectionUtil';\nimport EditDeleteButton from './EditDeleteButton';\nimport Class from './../../../models/Class';\nimport Modal from './../../container/Modal';\nimport StudentSearchForm from '../shared/StudentSearchForm';\nimport Student from './../../../models/Student';\nimport BaseEntity from './../../../models/BaseEntity';\nclass State {\n    items: RuleViolation[] = [];\n    filter: Filter = new Filter();\n    totalData: number = 0;\n    record: RuleViolation = new RuleViolation();\n\n}\nclass RuleViolationManagement extends BaseManagementPage {\n\n    state:State = new State();\n    constructor(props) {\n        super(props, 'ruleviolation');\n        const appProfile = this.getApplicationProfile();\n        this.state.filter.fieldsFilter['semester'] = appProfile.semester;\n        this.state.filter.fieldsFilter['tahun_ajaran'] = appProfile.tahun_ajaran;\n        this.state.record.tahun_ajaran = appProfile.tahun_ajaran;\n        this.state.record.semester = appProfile.semester;\n    }\n    setStudent = (s:Student) => {\n        const record = this.state.record;\n        record.student = s;\n        record.student_id = s.id;\n        this.setState({record: record});\n    }\n    emptyRecord = (): BaseEntity => {\n        return new RuleViolation();\n    }\n    onSubmit = () => {\n        if (!this.state.record.student_id) {\n            this.showError(\"Input tidak lengkap\");\n            return;\n        }\n        this.showConfirmation(\"Submit Data?\")\n            .then(ok => {\n                if (!ok) return;\n                this.callApiSubmit({\n                    ruleViolation: this.state.record,\n                    modelName: this.modelName\n                });\n            })\n    }\n    render() {\n        const filter: Filter = this.state.filter;\n        return (\n            <div className=\"container-fluid section-body\">\n                <h2>Pelanggaran Umum</h2>\n                <hr /> \n                <RecordForm formRef={this.formRef} setStudent={this.setStudent} resetForm={this.resetForm} onSubmit={this.onSubmit} record={this.state.record} updateRecordProp={this.updateRecordProp} />\n                 \n                <form onSubmit={this.reload}>\n                    <FormGroup label=\"Cari\">\n                        <input name=\"name\" placeholder=\"nama pelanggaran\"  className=\"form-control-sm\" value={filter.fieldsFilter['name']?? \"\"} onChange={this.updateFieldsFilter} />\n                        <input name=\"student_name\" placeholder=\"nama siswa\" className=\"form-control-sm\" value={filter.fieldsFilter['student_name']?? \"\"} onChange={this.updateFieldsFilter} />\n                    </FormGroup>\n                    <FormGroup label=\"Semester/TA\">\n                    <select name=\"semester\"   className=\"form-control-sm\" value={filter.fieldsFilter['semester']?? \"\"} onChange={this.updateFieldsFilter}>\n                            <option value=\"\">Semua Semester</option>\n                            <option value={1}>Semester 1</option>\n                            <option value={2}>Semester 2</option>\n                        </select>\n                        <input name=\"tahun_ajaran\" placeholder=\"tahun ajaran\" className=\"form-control-sm\" value={filter.fieldsFilter['tahun_ajaran']?? \"\"} onChange={this.updateFieldsFilter} />\n                        \n                    </FormGroup>\n                    <FormGroup label=\"Jumlah Tampilan\">\n                        <input name=\"limit\" type=\"number\" className=\"form-control-sm\" value={filter.limit ?? 5} onChange={this.updateFilter} />\n                    </FormGroup>\n                    <FormGroup>\n                        <input className=\"btn btn-primary btn-sm\" type=\"submit\" value=\"Submit\" />\n                    </FormGroup>\n                </form>\n                <NavigationButtons activePage={filter.page ?? 0} limit={filter.limit ?? 10} totalData={this.state.totalData}\n                    onClick={this.loadAtPage} />\n                <ItemsList  items={this.state.items}  isAdmin={this.isAdmin()}\n                    recordLoaded={this.oneRecordLoaded} recordDeleted={this.loadItems}\n                    startingNumber={(filter.page??0)*(filter.limit ?? 10)} />\n            </div>\n        )\n    }\n\n}\ninterface ItemProps {isAdmin:boolean ,startingNumber:number, items:RuleViolation[], recordLoaded(item:any), recordDeleted()}\nconst ItemsList = (props: ItemProps) => {\n\n    return (\n        <div style={{overflow:'scroll'}}>\n        <table className=\"table table-striped\">\n            {tableHeader(\"No\", \"Siswa\", \"Kelas\", \"Nama\", \"Deskripsi\", \"Poin\", \"Semester\", \"Tahun Ajaran\", \"Opsi\")}\n            <tbody>\n                    {props.items.map((item:RuleViolation, i)=>{\n\n                        return (\n                            <tr key={\"category-\"+i}>\n                                <td>{i+1+props.startingNumber}</td>\n                                <td>{item.student?.user?.name}</td>\n                                <td>{Class.studentClassString(item.student)}</td>\n                                <td>{item.name}</td>\n                                <td>{item.description}</td>\n                                <td>{item.point}</td>\n                                <td>{item.semester}</td>\n                                <td>{item.tahun_ajaran}</td>\n                                <td> \n                                    <EditDeleteButton \n                                        recordLoaded={props.recordLoaded}\n                                        recordDeleted={props.recordDeleted}\n                                        record={item} modelName={'ruleviolation'}/> \n                                </td>\n                            </tr>\n                        )\n                    })}\n                </tbody>\n        </table>\n        </div>\n    )\n}\nconst RecordForm = (props: { formRef:React.RefObject<Modal>, setStudent(s:Student), updateRecordProp(e: ChangeEvent): any, resetForm():any, onSubmit(): any, record: RuleViolation }) => {\n    const record = props.record;\n    return (\n        <div className=\"record-form mb-3\" >\n            <Modal show={false} ref={props.formRef} toggleable={true} title=\"Record Form\" >\n                <FormGroup label=\"Siswa\">\n                    <StudentSearchForm selectItem={props.setStudent} />\n                    \n                </FormGroup>\n                {record.student?\n                        <FormGroup children={record.student.user?.name+ \" \" +Class.studentClassString(record.student)} />:null\n                    }\n                <form onSubmit={(e) => { e.preventDefault(); props.onSubmit() }}>\n                <FormGroup label=\"Pelanggaran\">\n                    <input required value={record.name  } onChange={props.updateRecordProp} className=\"form-control\" name=\"name\" />\n                </FormGroup>\n                <FormGroup label=\"Deskripsi\">\n                    <textarea required className=\"form-control\" name=\"description\" onChange={props.updateRecordProp} value={record.description ?? \"\"} />\n                </FormGroup>\n                <FormGroup label=\"Poin\">\n                    <input required className=\"form-control\" name=\"point\" onChange={props.updateRecordProp} value={record.point  } />\n                </FormGroup>\n                <FormGroup label=\"Semester\">\n                    <select required value={record.semester  } onChange={props.updateRecordProp} className=\"form-control\" name=\"semester\" >\n                        <option>1</option>\n                        <option>2</option> \n                    </select>\n                </FormGroup>\n                <FormGroup label=\"Tahun Ajaran\">\n                    <input required className=\"form-control\" name=\"tahun_ajaran\" onChange={props.updateRecordProp} value={record.tahun_ajaran  } />\n                </FormGroup>\n                <FormGroup>\n                    <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-sm\" />\n                    &nbsp;\n                    <input type=\"reset\"   className=\"btn btn-secondary btn-sm\" onClick={(e)=>props.resetForm()} />\n                </FormGroup>\n                </form>\n            </Modal>\n        </div>\n    )\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(RuleViolationManagement)\n)","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../constant/stores';\r\nimport { withRouter, Switch, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Login from '../pages/login/Login';\r\nimport DashboardMain from '../pages/dashboard/main/DashboardMain';\r\nimport HomeMain from '../pages/home/HomeMain';\r\nimport Menu from '../../models/settings/Menu'; \r\nimport MusyrifManagement from '../pages/management/MusyrifManagement';\r\nimport ManagementMain from '../pages/management/ManagementMain';\r\nimport CategoryManagement from '../pages/management/CategoryManagement';\r\nimport RulePointManagement from '../pages/management/RulePointManagement';\r\nimport StudentList from '../pages/asrama/StudentList';\r\nimport InputPointForm from '../pages/asrama/InputPointForm';\r\nimport PointRecordsManagement from '../pages/management/PointRecordsSummary';\r\nimport MedicalRecordForm from '../pages/asrama/medicalrecord/MedicalRecordForm';\r\nimport AboutUs from './../pages/home/AboutUs';\r\nimport Register from '../pages/login/Register'; \r\nimport PointRecordEdit from '../pages/asrama/point-record/PointRecordEdit';\r\nimport FollowUpReminder from '../pages/dashboard/main/FollowUpReminder';\r\nimport WarningActionManagement from '../pages/management/WarningActionManagement';\r\nimport ConfigSettingPage from '../pages/settings/ConfigSettingPage';\r\nimport StudentSemesterReport from '../pages/report/StudentSemesterReport';\r\nimport CategoryPredicateManagement from '../pages/management/CategoryPredicateManagement';\r\nimport RuleViolationManagement from '../pages/management/RuleViolationManagement';\r\n\r\nclass ApplicationContent extends BaseComponent {\r\n \r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    setSidebarMenus = (menus: Menu[]) => {\r\n        this.props.setSidebarMenus(menus);\r\n    }\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Switch>\r\n                   \r\n                    {/* -------- home -------- */}\r\n                    <Route exact path=\"/home\" render={\r\n                        (props: any) => {\r\n                            return <HomeMain />\r\n                        }\r\n                    } />\r\n                    <Route exact path=\"/\" render={\r\n                        (props: any) =>\r\n                            <HomeMain />\r\n                    } />\r\n                    <Route exact path=\"/about\" render={\r\n                        (props: any) =>\r\n                            <AboutUs />\r\n                    } />\r\n                     \r\n{/* \r\n                     \r\n                    <Route exact path=\"/management\" render={\r\n                        (props: any) => {\r\n                            console.debug(\"MANAGEMENTS path\")\r\n                            return <MasterDataMain setSidebarMenus={this.setSidebarMenus} />\r\n                        }\r\n                    } />\r\n                    <Route exact path=\"/management/:code\" render={\r\n                        (props: any) =>\r\n                            <MasterDataMain setSidebarMenus={this.setSidebarMenus} />\r\n                    } /> */}\r\n\r\n\r\n                    {/* ///////// PUBLIC ///////// */}\r\n\r\n                </Switch>\r\n                <LoginRoute />\r\n                <Asrama     />\r\n                <Management />\r\n                <Dashboard  />\r\n                <Setting    />\r\n                <Report     />\r\n            </Fragment>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        // document.title = \"Login\";\r\n    }\r\n\r\n}\r\n\r\nconst Setting  = (props) => {\r\n\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/settings/config\" render={\r\n                (props:any) => <ConfigSettingPage />\r\n            } />\r\n        </Switch>\r\n    )\r\n}\r\nconst Report  = (props) => {\r\n\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/report/studentreport\" render={\r\n                (props:any) => <StudentSemesterReport />\r\n            } />\r\n        </Switch>\r\n    )\r\n}\r\nconst Management  = (props) => {\r\n\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/management\" render={\r\n                (props:any) => <ManagementMain />\r\n            } />\r\n            <Route exact path=\"/management/musyrifmanagement\" render={\r\n                (props:any) => <MusyrifManagement />\r\n            } />\r\n            <Route exact path=\"/management/rule_category\" render={\r\n                (props:any) => <CategoryManagement />\r\n            } />\r\n            <Route exact path=\"/management/rule_point\" render={\r\n                (props:any) => <RulePointManagement />\r\n            } />\r\n            <Route exact path=\"/management/warning_action\" render={\r\n                (props:any) => <WarningActionManagement />\r\n            } />\r\n            <Route exact path=\"/management/category_predicate\" render={\r\n                (props:any) => <CategoryPredicateManagement />\r\n            } />\r\n            <Route exact path=\"/management/rule_violation\" render={\r\n                (props:any) => <RuleViolationManagement />\r\n            } />\r\n        </Switch>\r\n    )\r\n}\r\n\r\nconst Asrama = (proos) => {\r\n\r\n    return (\r\n        <Switch>\r\n             <Route exact path=\"/asrama/studentlist\" render={\r\n                (props:any) => <StudentList />\r\n            } />\r\n             <Route exact path=\"/asrama/inputpoint\" render={\r\n                (props:any) => <InputPointForm/>\r\n            } />\r\n             <Route exact path=\"/asrama/pointsummary\" render={\r\n                (props:any) => <PointRecordsManagement/>\r\n            } />\r\n             <Route exact path=\"/asrama/pointrecordedit\" render={\r\n                (props:any) => <PointRecordEdit/>\r\n            } />\r\n             <Route exact path=\"/asrama/medicalrecord\" render={\r\n                (props:any) => <MedicalRecordForm/>\r\n            } />\r\n            \r\n        </Switch>\r\n    )\r\n}\r\nconst LoginRoute = (props) => {\r\n\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/login\" render={\r\n                (props: any) =>\r\n                    <Login />\r\n            } />\r\n            <Route exact path=\"/register\" render={\r\n                (props: any) =>\r\n                    <Register />\r\n            } />\r\n        </Switch>\r\n    )\r\n}\r\n\r\n\r\nconst Dashboard = (props) => {\r\n    return (\r\n        <Switch>\r\n            {/* -------- dashboard -------- */}\r\n            <Route exact path=\"/dashboard\" render={\r\n                (props: any) => {\r\n                   \r\n                        console.debug(\"dashboard path\")   \r\n                       return  <DashboardMain />\r\n                }\r\n                   \r\n            } />\r\n              <Route exact path=\"/dashboard/followup\" render={\r\n                (props: any) =>\r\n                    <FollowUpReminder />\r\n            } /> \r\n        </Switch>\r\n    )\r\n}\r\n \r\n\r\nconst mapDispatchToProps = (dispatch: Function) => ({})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(ApplicationContent))","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../constant/stores';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { performLogout } from './../../redux/actionCreators';\r\nimport Menu from '../../models/settings/Menu';\r\nimport './SideBar.css'\r\n\r\nclass SideBar extends BaseComponent {\r\n    constructor(props: { sidebarMenus?: Menu[] }) {\r\n        super(props, false);\r\n    }\r\n    isSidebarActive = (menu: Menu) => {\r\n        const parentMenu: Menu = this.props.parentMenu;\r\n        if (null == parentMenu) { return false; }\r\n        const pathName = this.props.location.pathname;\r\n        return parentMenu.url + \"/\" + menu.url == pathName;\r\n    }\r\n    componentDidMount() {\r\n        window.addEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    handleScroll(event) {\r\n        let scrollTop = event.srcElement.body.scrollTop,\r\n            itemTranslate = Math.min(0, scrollTop / 3 - 60);\r\n        // console.debug(\"scrollTop: \", scrollTop);\r\n\r\n    }\r\n    render() {\r\n        const parentMenu: Menu = this.props.parentMenu;\r\n        if (null == parentMenu) { return null }\r\n        const menus: Menu[] = this.props.sidebarMenus == null ? [] : this.props.sidebarMenus;\r\n        const user = this.getLoggedUser();\r\n        return (\r\n            <ul id=\"sidebar\" className=\"sidebar-nav bg-light\">\r\n                <Brand show={parentMenu != null} brand={parentMenu} />\r\n\r\n                {menus.map(menu => {\r\n                    if (menu.userAuthorized && !menu.userAuthorized(user)) return null;\r\n                    const isActive: boolean = this.isSidebarActive(menu);\r\n                    const menuClassName = isActive ? 'menu-active' : 'regular-menu';\r\n                    return (\r\n                        <li className={\"sidebar-item \" + menuClassName} key={\"SIDEBAR_\" + menu.code}><Link to={parentMenu.url + \"/\" + menu.url}>\r\n                            <span className=\"sidebar-icon\"><i className={Menu.getIconClassName(menu)}></i></span>\r\n                            <span className={'menu-label'} >{menu.name}</span>\r\n                        </Link></li>\r\n                    )\r\n                })\r\n                }\r\n            </ul >\r\n        )\r\n    }\r\n\r\n}\r\nconst Brand = (props) => {\r\n    if (props.show == false) return null;\r\n    return (\r\n        <Fragment>\r\n            <li id=\"sidebar-brand\" className=\"sidebar-brand\" style={{ marginBottom: '20px' }}>\r\n                <div style={{\r\n                    textAlign: 'center', paddingTop: '10px',\r\n                    paddingBottom: '10px'\r\n                }}>\r\n                    <h3 className=\"text-dark\">\r\n                        <i className={Menu.getIconClassName(props.brand)}></i>\r\n                    </h3>\r\n                    <Link to={props.brand.url} style={{ textDecoration: 'none' }}><h4 className=\"text-dark\">{props.brand.name}</h4></Link>\r\n                </div>\r\n            </li>\r\n            <li className={\"sidebar-item-brand \"} >\r\n                <Link to={props.brand.url}>\r\n                    <span className=\"sidebar-icon\"><i className={Menu.getIconClassName(props.brand)}></i></span>\r\n                </Link>\r\n            </li>\r\n        </Fragment>\r\n    )\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    performLogout: (app: any) => dispatch(performLogout(app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(SideBar))","import React, { Fragment } from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../constant/stores';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { performLogout } from './../../redux/actionCreators';\r\nimport Header from '../navigation/Header';\r\nimport ApplicationContent from './ApplicationContent';\r\nimport SideBar from '../navigation/SideBar';\r\nimport './Layout.css';\r\nimport Menu from '../../models/settings/Menu';\r\nimport { getMenuByMenuPath, extractMenuPath } from './../../constant/Menus';\r\nclass IState {\r\n    showSidebar: boolean = false;\r\n    activeMenuCode: any = null;\r\n    menu?: Menu;\r\n    sidebarMenus?: Menu[]\r\n};\r\nclass MainLayout extends BaseComponent {\r\n    state: IState = new IState();\r\n    currentPathName: string = \"\";\r\n    constructor(props: any) {\r\n        super(props, false);\r\n        this.state = {\r\n            ...this.state,\r\n        }\r\n    }\r\n    setMenuNull = () => {\r\n        this.setState({ menu: undefined, showSidebar: false, activeMenuCode: null, sidebarMenus: null });\r\n    }\r\n    setMenu = (menu: Menu) => {\r\n        if (menu == null) {\r\n            return;\r\n        }\r\n        this.setState({ menu: menu, sidebarMenus: null, showSidebar: menu.showSidebar, activeMenuCode: menu.code });\r\n    }\r\n    setSidebarMenus = (menus: Menu[]) => {\r\n        // console.debug(\"Set sidebar menus: \", menus);\r\n        this.setState({ sidebarMenus: menus });\r\n    }\r\n    componentDidMount() {\r\n        this.setCurrentMenu();\r\n    }\r\n    componentDidUpdate() {\r\n        this.setCurrentMenu();\r\n    }\r\n    setCurrentMenu = () => {\r\n        const pathName = extractMenuPath(this.props.location.pathname);\r\n\r\n        if (pathName == this.currentPathName) {\r\n            return;\r\n        }\r\n        this.currentPathName = pathName;\r\n        const menu = getMenuByMenuPath(pathName);\r\n        if (menu == null) {\r\n            this.setMenuNull();\r\n        } else {\r\n            this.setMenu(menu);\r\n        }\r\n    }\r\n    getSubMenus = () :Menu[]|null => {\r\n        const menuState:Menu|undefined = this.state.menu;\r\n        if (menuState && menuState.subMenus != null && menuState.subMenus?.length > 0) {\r\n            return menuState.subMenus;\r\n        }\r\n        if (this.state.sidebarMenus) {\r\n            return this.state.sidebarMenus;\r\n        }\r\n        return null;\r\n    }\r\n    render() {\r\n        const showSidebar: boolean = this.state.showSidebar == true;\r\n        const className = showSidebar ? \"app-content\" : \"content\";\r\n        return (\r\n            <Fragment>\r\n                <Header setMenuNull={this.setMenuNull} activeMenuCode={this.state.activeMenuCode} setMenu={this.setMenu} />\r\n                <div id=\"content-wrapper\" className={\"container-fluid  \" + className}>\r\n                    <ApplicationContent setSidebarMenus={this.setSidebarMenus} />\r\n                </div>\r\n                {showSidebar ?\r\n                    <SideBar sidebarMenus={this.getSubMenus()} parentMenu={this.state.menu} />\r\n                    : null}\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    performLogout: (app: any) => dispatch(performLogout(app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(MainLayout))","\nimport React, { Component, Fragment, RefObject } from 'react';\nimport './App.css';\nimport { withRouter } from 'react-router-dom'\nimport * as actions from './redux/actionCreators'\nimport { connect } from 'react-redux'\nimport SockJsClient from 'react-stomp';\nimport * as url from './constant/Url';\nimport { mapCommonUserStateToProps } from './constant/stores';\nimport Loader from './component/loader/Loader';\nimport Alert from './component/alert/Alert';\nimport MainLayout from './component/layout/MainLayout';\nimport WebResponse from './models/commons/WebResponse';\nimport Spinner from './component/loader/Spinner';\nimport { performWebsocketConnection, setWebSocketUrl, registerWebSocketCallbacks } from './utils/websockets';\nimport UserService from './services/UserService';\nimport AnchorWithIcon from './component/navigation/AnchorWithIcon';\nimport { time } from 'console';\nimport { doItLater, updateFavicon } from './utils/EventUtil';\n\nclass IState {\n  loading: boolean = false;\n  loadingPercentage: number = 0;\n  requestId?: string;\n  mainAppUpdated: Date = new Date();\n  showAlert: boolean = false;\n  realtime: boolean = false;\n  appIdStatus: string = \"Loading App Id\";\n  errorAuthenticatingApp: boolean = false;\n}\nclass App extends Component<any, IState> {\n  wsConnected: boolean = false;\n  loadings: number = 0;\n  alertTitle: String = \"Info\";\n  alertBody: any = null;\n  alertIsYesOnly: boolean = true;\n  alertIsError: boolean = false;\n  alertOnYesCallback: Function = function (e) { };\n  alertOnCancelCallback: Function = function (e) { };\n  wsUpdateHandler: Function | undefined = undefined;\n  clientRef: RefObject<SockJsClient> = React.createRef();\n  userService: UserService;\n  // alertRef: RefObject<Alert> = React.createRef();\n  alertCallback = {\n    title: \"Info\", message: \"Info\", yesOnly: false,\n    onOk: () => { }, onNo: () => { }\n  }\n\n  constructor(props: any) {\n    super(props);\n    this.state = new IState();\n    this.userService = this.props.services.userService;\n\n    this.props.setMainApp(this);\n  }\n  refresh = () => { this.setState({ mainAppUpdated: new Date() }); }\n\n  requestAppId = () => {\n    this.setState({ appIdStatus: \"Authenticating application\", errorAuthenticatingApp: false });\n    this.userService.requestApplicationId((response) => {\n      this.props.setRequestId(response, this);\n      this.refresh();\n      this.setState({ errorAuthenticatingApp: false });\n    }, this.retryRequestAppId)\n\n  }\n  retryRequestAppId = () => {\n    this.setState({ appIdStatus: \"Authenticating application (Retrying)\", errorAuthenticatingApp: false });\n    this.userService.requestApplicationIdNoAuth((response) => {\n      this.props.setRequestId(response, this);\n      this.setState({ errorAuthenticatingApp: false });\n    },\n      () =>\n        this.setState({ errorAuthenticatingApp: true }))\n\n  }\n  incrementLoadings() {\n    this.loadings++;\n  }\n\n  decrementLoadings() {\n    this.loadings--;\n    if (this.loadings < 0) {\n      this.loadings = 0;\n    }\n  }\n\n  startLoading(realtime: boolean = false) {\n    this.incrementLoadings();\n    this.setState({ loading: true, realtime: realtime });\n  }\n\n  endLoading() {\n    this.decrementLoadings();\n    if (this.loadings == 0) {\n      if (this.state.realtime) {\n        this.setState({ loadingPercentage: 100 }, this.smoothEndLoading);\n      } else {\n        this.setState({ loading: false, loadingPercentage: 0 });\n      }\n    }\n  }\n\n  smoothEndLoading = () => {\n    doItLater(() => {\n      this.setState({ loading: false, loadingPercentage: 0 });\n    }, 100);\n  }\n\n  handleProgress = (msg: WebResponse) => {\n    const percentageFloat: number = msg.percentage ?? 0;\n    let percentage = Math.floor(percentageFloat);\n    if (percentageFloat < 0 || percentageFloat > 100) {\n      this.endLoading();\n    }\n    this.setState({ loadingPercentage: percentage });\n  }\n\n  showAlert(title: string, body: any, yesOnly: boolean, yesCallback: Function, noCallback?: Function) {\n    this.alertTitle = title;\n    this.alertBody = body;\n    this.alertIsYesOnly = yesOnly;\n    const app = this;\n    this.alertOnYesCallback = function (e) {\n      app.dismissAlert();\n      yesCallback(e);\n    }\n    if (!yesOnly) {\n      this.alertOnCancelCallback = function (e) {\n        app.dismissAlert();\n        if (noCallback != null) {\n          noCallback(e);\n        }\n      };\n    }\n    this.setState({ showAlert: true });\n  }\n\n  dismissAlert() {\n    this.alertIsError = false;\n    this.setState({ showAlert: false })\n  }\n  showAlertError(title: string, body: any, yesOnly: boolean, yesCallback: Function, noCallback?: Function) {\n    this.alertIsError = true;\n    this.showAlert(title, body, yesOnly, yesCallback, noCallback)\n  }\n\n  componentDidUpdate() {\n    // console.debug(\"APP UPDATED\");\n    if (this.props.applicationProfile) {\n      updateFavicon(this.props.applicationProfile);\n    }\n    if (this.props.requestId && !this.wsConnected) {\n      this.initWebsocket();\n    }\n  }\n\n  componentDidMount() {\n    this.requestAppId();\n    this.setState({ loadingPercentage: 0 });\n  }\n\n  initWebsocket = () => {\n    setWebSocketUrl(url.contextPath() + 'realtime-app');\n    registerWebSocketCallbacks({\n      subscribeUrl: \"/wsResp/progress/\" + this.props.requestId,\n      callback: this.handleProgress  //must use lambda\n    },\n      {\n        subscribeUrl: \"/wsResp/\" + this.props.requestId + \"/update\",\n        callback: (response) => this.handleWsUpdate(response)\n      });\n    performWebsocketConnection();\n    this.wsConnected = true;\n  }\n\n  private handleWsUpdate = (response: any) => {\n\n    if (this.wsUpdateHandler) {\n      this.wsUpdateHandler(response);\n    }\n  }\n\n  setWsUpdateHandler = (handler: Function | undefined) => {\n    this.wsUpdateHandler = handler;\n  }\n  resetWsUpdateHandler = () => {\n    this.setWsUpdateHandler(undefined);\n  }\n\n  render() {\n    if (!this.props.requestId) {\n      return (\n        <div className=\"text-center\" style={{ paddingTop: '10%' }}>\n          <h2>{this.state.appIdStatus}</h2>\n          {this.state.errorAuthenticatingApp ?\n            <AnchorWithIcon iconClassName=\"fas fa-redo\" onClick={this.retryRequestAppId} children=\"Retry\" /> :\n            <Spinner />}\n        </div>\n      )\n    }\n    return (\n      <Fragment>\n        <Loading realtime={this.state.realtime} loading={this.state.loading} loadingPercentage={this.state.loadingPercentage} />\n        {this.state.showAlert ?\n          <Alert title={this.alertTitle}\n            isError={this.alertIsError}\n            onClose={(e) => this.setState({ showAlert: false })}\n            yesOnly={this.alertIsYesOnly}\n            onYes={this.alertOnYesCallback} onNo={this.alertOnCancelCallback}\n          >{this.alertBody}</Alert> :\n          null}\n        <MainLayout />\n        {/* <SockJsClient url={usedHost + 'realtime-app'} topics={['/wsResp/progress/' + this.props.requestId]}\n\n          onMessage={(msg: WebResponse) => { this.handleMessage(msg) }}\n          ref={this.clientRef} /> */}\n      </Fragment>\n    )\n  }\n}\n\nfunction Loading(props) {\n  if (props.loading == true) {\n    return (\n      <Loader realtime={props.realtime} progress={props.loadingPercentage} text=\"Please wait...\" type=\"loading\" />\n    );\n  }\n  return null;\n}\n\n\nconst mapDispatchToProps = (dispatch: Function) => ({\n  setMainApp: (app: App) => dispatch(actions.setMainApp(app)),\n  setRequestId: (response: WebResponse, app: App) => dispatch(actions.setRequestId(response, app)),\n})\n\nexport default withRouter(connect(\n  mapCommonUserStateToProps,\n  mapDispatchToProps\n)(App))\n","import * as types from './types'\r\n\r\nexport const initState = { \r\n    mainApp: undefined\r\n\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case types.SET_MAIN_APP:\r\n              \r\n            return { ...state, mainApp: action.payload }; \r\n       \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import {  getStore } from '../redux/configureStore';\r\nexport const commonAuthorizedHeader = () => {\r\n    return {\r\n        'Content-Type': 'application/json',\r\n        'requestId': getRequestId(),//'localStorage.getItem(\"requestId\")',\r\n        'Authorization': 'Bearer '+getLoginKey()\r\n    }\r\n};\r\nexport const commonHeader = () => {\r\n    return {\r\n        'Content-Type': 'application/json',\r\n        'requestId': getRequestId(), \r\n    }\r\n};\r\n\r\nconst LOGIN_KEY:string = \"dormitory-app-login-key-2\";\r\n  \r\nexport const getRequestId = () :string => {\r\n    const store = getStore();\r\n    if (null == store) return \"\";\r\n    const state = store.getState();\r\n    return state.userState.requestId;\r\n}\r\nexport const getLoginKey = () => {\r\n    return getCookie(LOGIN_KEY);\r\n}\r\n\r\nexport const updateAccessToken = (axiosResponse) => {\r\n    if (axiosResponse && axiosResponse.headers && axiosResponse.headers['api_token']) {\r\n        const accessToken = axiosResponse.headers['api_token'];\r\n        // console.debug(\"update access token: \", accessToken);\r\n        setCookie(LOGIN_KEY, accessToken);\r\n    }\r\n} \r\nexport const setLoginKeyCookie = (cookieValue:any) => {\r\n    setCookie(LOGIN_KEY, cookieValue);\r\n}\r\nexport const setCookie = function (cname, cvalue, exdays=1) {\r\n    var d = new Date();\r\n    d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\r\n    var expires = \"expires=\" + d.toUTCString();\r\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n}\r\nexport const getCookie = function (cname) {\r\n    var name = cname + \"=\";\r\n    var decodedCookie = decodeURIComponent(document.cookie);\r\n    var ca = decodedCookie.split(';');\r\n    for (var i = 0; i < ca.length; i++) {\r\n        var c = ca[i];\r\n        while (c.charAt(0) == ' ') {\r\n            c = c.substring(1);\r\n        }\r\n        if (c.indexOf(name) == 0) {\r\n            return c.substring(name.length, c.length);\r\n        }\r\n    }\r\n    return \"\";\r\n}","import * as types from './types'\r\nimport * as menuData from '../constant/Menus' \r\nimport { setLoginKeyCookie } from './../middlewares/Common';\r\n\r\nexport const initState = {\r\n    loginKey: null,\r\n    loginStatus: false,\r\n    loginFailed: false,\r\n    menus: menuData.getMenus(),\r\n    loggedUser: null,\r\n    loginAttempt: false,\r\n    requestId: null,\r\n    applicationProfile: {},\r\n    assetsPath: \"\"\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    \r\n    let result = {};\r\n    switch (action.type) { \r\n        case types.SET_REQUEST_ID:\r\n            \r\n            result = {\r\n                ...state, requestId: action.payload.message,\r\n                applicationProfile: action.payload.profile ?? {},\r\n                assetsPath: action.payload.profile.assetsPath\r\n            };\r\n            \r\n            if (action.payload.loginStatus == true) {\r\n                result.loggedUser = action.payload.user;\r\n                result.loginStatus = true;\r\n            } else {\r\n                result.loginStatus = false;\r\n                result.loggedUser = null;\r\n            }\r\n            // console.debug(\"result\");\r\n            // console.debug(\"action.payload.requestId: \",action.payload.message); \r\n            // console.debug(\"REQUEST_ID result.loginStatus:\", result.loginStatus)\r\n            action.payload.referer.refresh();\r\n\r\n            return result;\r\n        case types.DO_LOGIN:\r\n            result = {\r\n                ...state,\r\n                loginAttempt: true,\r\n                loginStatus: action.payload.loginStatus,\r\n                loginKey: action.payload.loginKey,\r\n                loginFailed: action.payload.loginStatus == false,\r\n                loggedUser: action.payload.loggedUser\r\n            };\r\n            return result;\r\n        case types.DO_LOGOUT:\r\n            result = {\r\n                ...state,\r\n                loginStatus: false,\r\n                loggedUser: null\r\n            };\r\n            setLoginKeyCookie(null);\r\n            return result;\r\n        case types.REFRESH_LOGIN:\r\n            result = {\r\n                ...state,\r\n                loginStatus: action.payload.loginStatus,\r\n                loggedUser: action.payload.loggedUser,\r\n                requestId: action.payload.requestId,\r\n            };\r\n            return result;\r\n        case types.GET_LOGGED_USER:\r\n            result = {\r\n                ...state, loggedUser: action.payload.data\r\n            };\r\n            return result;\r\n        case types.SET_LOGGED_USER:\r\n            result = {\r\n                ...state, loggedUser: action.payload.user\r\n            };\r\n            return result;\r\n        case types.SET_APPLICATION_PROFILE:\r\n            result = {\r\n                ...state, applicationProfile: action.payload.applicationProfile\r\n            };\r\n            return result;\r\n        default:\r\n            return { ...state };\r\n\r\n    }\r\n}\r\n\r\nexport default reducer;","\r\nimport { commonAuthorizedHeader, commonHeader } from '../middlewares/Common';\r\nimport WebResponse from '../models/commons/WebResponse';\r\nimport { updateAccessToken } from './../middlewares/Common';\r\nimport AttachmentInfo from '../models/settings/AttachmentInfo';\r\n\r\nconst axios = require('axios');\r\n\r\nexport const rejectedPromise = (message: any) => {\r\n    return new Promise((res, rej) => {\r\n        rej(message);\r\n    });\r\n}\r\n\r\nexport const emptyPromise = (defaultResponse: any) => new Promise(function (res, rej) {\r\n    res(defaultResponse);\r\n});\r\n\r\nexport const commonAjaxPostCalls = (endpoint: string, payload?: any) => {\r\n    const request = payload == null ? {} : payload;\r\n    return new Promise<WebResponse>(function (resolve, reject) {\r\n        axios.post(endpoint, request, {\r\n            headers: commonAuthorizedHeader()\r\n        })\r\n            .then(axiosResponse => {\r\n                updateAccessToken(axiosResponse);\r\n                const response: WebResponse = axiosResponse.data;\r\n                response.rawAxiosResponse = axiosResponse;\r\n                if (response.code == \"00\") {\r\n\r\n                    resolve(response);\r\n                }\r\n                else { reject(response); }\r\n            })\r\n            .catch((e: any) => { \r\n                \r\n                console.error(e); \r\n                reject(e); \r\n            });\r\n    })\r\n}\r\n\r\n\r\nexport const commonAjaxPublicPostCalls = (endpoint: string, payload?: any) => {\r\n    const request = payload == null ? {} : payload;\r\n    return new Promise<WebResponse>(function (resolve, reject) {\r\n        axios.post(endpoint, request, {\r\n            headers: commonHeader()\r\n        })\r\n            .then(axiosResponse => {\r\n                \r\n                const response: WebResponse = axiosResponse.data;\r\n                response.rawAxiosResponse = axiosResponse;\r\n                if (response.code == \"00\") {\r\n                    resolve(response);\r\n                }\r\n                else { reject(response); }\r\n            })\r\n            .catch((e: any) => { \r\n                \r\n                console.error(e); \r\n                reject(e); \r\n            });\r\n    })\r\n}\r\n\r\nexport const commonAjaxPostCallsWithBlob = (endpoint: string, payload?: any) => {\r\n    const request = payload == null ? {} : payload;\r\n    return new Promise<AttachmentInfo>(function (resolve, reject) {\r\n        axios.post(endpoint, request, {\r\n            responseType: 'blob' ,\r\n            headers: commonAuthorizedHeader()\r\n        })\r\n            .then(axiosResponse => {\r\n                updateAccessToken(axiosResponse);\r\n                \r\n                const response: any = axiosResponse.data;\r\n                response.rawAxiosResponse = axiosResponse;\r\n                console.debug(\"axiosResponse.headers: \", axiosResponse.headers);\r\n                let contentDisposition = axiosResponse.headers[\"content-disposition\"];\r\n                let fileName = contentDisposition.split(\"filename=\")[1];\r\n                let rawSplit = fileName.split(\".\");\r\n                let extension = rawSplit[rawSplit.length - 1];\r\n                let blob = new Blob([response], { type: extension });\r\n                let url = window.URL.createObjectURL(blob);\r\n                // let a = document.createElement(\"a\");\r\n\r\n                // document.body.appendChild(a);\r\n\r\n                // a.href = url;\r\n                // a.style.display = 'none';\r\n                // a.download = fileName;\r\n                // a.click();\r\n\r\n                // window.URL.revokeObjectURL(url);\r\n                const attachmentInfo:AttachmentInfo = new AttachmentInfo();\r\n                attachmentInfo.name = fileName;\r\n                attachmentInfo.blob = blob;\r\n                attachmentInfo.url = url;\r\n                resolve(attachmentInfo);\r\n                \r\n            })\r\n            .catch((e: any) => { console.error(e); reject(e); });\r\n    })\r\n}","\r\nimport Filter from '../models/commons/Filter';\r\nimport WebRequest from '../models/commons/WebRequest';\r\nimport { contextPath } from './../constant/Url';\r\nimport { commonAjaxPostCalls, commonAjaxPostCallsWithBlob } from './Promises';\r\nimport ApplicationProfile from './../models/ApplicationProfile';\r\n\r\nexport default class MasterDataService { \r\n    private static instance?: MasterDataService;\r\n\r\n    static getInstance(): MasterDataService {\r\n        if (this.instance == null) {\r\n            this.instance = new MasterDataService();\r\n        }\r\n        return this.instance;\r\n    }\r\n    /**\r\n     * Get one by ID\r\n     * @param request \r\n     */\r\n    getOne = (request:WebRequest) => {\r\n        const endpoint: string = contextPath().concat(\"api/masterdata/getbyid\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    delete = (request:WebRequest) => {\r\n        const endpoint: string = contextPath().concat(\"api/masterdata/delete\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    list = (request: WebRequest)  => {\r\n        const endpoint: string = contextPath().concat(\"api/masterdata/list\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n\r\n    }\r\n\r\n    update = (request: WebRequest) => {\r\n        const endpoint: string = contextPath().concat(\"api/masterdata/update\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    generateReport(request: WebRequest) {\r\n        const endpoint: string = contextPath().concat(\"api/app/report/records\");\r\n        return commonAjaxPostCallsWithBlob(endpoint, request);\r\n\r\n    }\r\n}","\r\nimport User from './../models/User';\r\nimport WebRequest from '../models/commons/WebRequest';\r\nimport { contextPath } from './../constant/Url';\r\nimport { commonAjaxPostCalls, commonAjaxPublicPostCalls } from './Promises';\r\nimport WebResponse from '../models/commons/WebResponse';\r\nimport { updateAccessToken } from './../middlewares/Common';\r\nexport default class UserService {\r\n    private static instance?: UserService;\r\n\r\n    static getInstance(): UserService {\r\n        if (this.instance == null) {\r\n            this.instance = new UserService();\r\n        }\r\n        return this.instance;\r\n    }\r\n    updateProfile = (user: User) => {\r\n\r\n        const request: WebRequest = {\r\n            user: user\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/member/account/updateprofile\")\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    saveUser = (user: User) => {\r\n\r\n        const request: WebRequest = {\r\n            user: user\r\n        } \r\n        const endpoint = contextPath().concat(\"api/public/register\")\r\n        return commonAjaxPublicPostCalls(endpoint, request);\r\n    }\r\n    requestApplicationId = (callbackSuccess: (response: WebResponse) => any, callbackError: ()=>any) => {\r\n        const url = contextPath() + \"api/accountdashboard/requestid\";\r\n        commonAjaxPostCalls(url, {}).then(data => {\r\n            if (data.code != \"00\") {\r\n                alert(\"Error requesting app ID\");\r\n                return;\r\n            }\r\n            const response = data.rawAxiosResponse;\r\n            updateAccessToken(response);\r\n            console.debug(\"response header:\", response.headers['api_token']);\r\n            callbackSuccess(data);\r\n        }).catch(e => {\r\n            console.error(\"ERROR requestApplicationId: \", e);\r\n            callbackError();\r\n        })\r\n\r\n    }\r\n    requestApplicationIdNoAuth = (callbackSuccess: (response:WebResponse)=>any, callbackError: ()=>any) => {\r\n        const url =   contextPath() + \"api/account/requestid\";\r\n        commonAjaxPublicPostCalls(url, {}).then(data => {\r\n          if (data.code != \"00\") {\r\n              alert(\"Error requesting app ID\");\r\n              return;\r\n          } \r\n          callbackSuccess(data);\r\n      }).catch(e=>{\r\n          console.error(\"ERROR requestApplicationId No Auth: \", e);\r\n        //   alert(\"Error, please reload OR try again\");\r\n            callbackError();\r\n      })\r\n          \r\n      }\r\n\r\n}","\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport { contextPath } from './../constant/Url';\r\nimport Filter from '../models/commons/Filter';\r\nimport Employee from '../models/Employee';\r\nimport WebRequest from '../models/commons/WebRequest';\r\nexport default class MusyrifManagementService {\r\n\r\n    private static instance?: MusyrifManagementService;\r\n\r\n    static getInstance(): MusyrifManagementService {\r\n        if (this.instance == null) {\r\n            this.instance = new MusyrifManagementService();\r\n        }\r\n        return this.instance;\r\n    }\r\n    public employeeList(filter: Filter) {\r\n        return commonAjaxPostCalls(contextPath() + \"/api/musyrifmanagement/employees\", {\r\n            filter: filter\r\n        });\r\n    }\r\n    activate(emp: Employee, active: boolean) {\r\n        const request:WebRequest = {\r\n            employee_id : emp.id,\r\n            active : active,\r\n        }\r\n        return commonAjaxPostCalls(contextPath() + \"/api/musyrifmanagement/activate\", request);\r\n    }\r\n}","import { commonAjaxPostCalls, commonAjaxPostCallsWithBlob } from './Promises';\r\nimport { contextPath } from '../constant/Url';\r\nimport PointRecord from './../models/PointRecord';\r\nimport AttachmentInfo from './../models/settings/AttachmentInfo';\r\nimport WebRequest from './../models/commons/WebRequest';\r\nimport MedicalRecord from './../models/MedicalRecord';\r\nimport WebResponse from '../models/commons/WebResponse';\r\nexport default class StudentService {\r\n    \r\n   \r\n\r\n    private static instance?: StudentService;\r\n\r\n    static getInstance(): StudentService {\r\n        if (this.instance == null) {\r\n            this.instance = new StudentService();\r\n        }\r\n        return this.instance;\r\n    }\r\n    public submitPointRecord(pointRecord: PointRecord, attachmentInfo?:AttachmentInfo|undefined) {\r\n        if (attachmentInfo) {\r\n            attachmentInfo.data = \"\";\r\n        }\r\n        const req:WebRequest = {\r\n            pointRecord: pointRecord,\r\n            attachmentInfo: attachmentInfo\r\n        }\r\n        return commonAjaxPostCalls(contextPath() + \"api/dormitorymanagement/submitpointrecord\", req);\r\n    }\r\n    public getClasses() :Promise<WebResponse> {\r\n        return commonAjaxPostCalls(contextPath() + \"api/dormitorymanagement/classes\", {});\r\n    }\r\n    public getCategories() :Promise<WebResponse> {\r\n        return commonAjaxPostCalls(contextPath() + \"api/dormitorymanagement/rulecategories\", {});\r\n    }\r\n    public followUp = (pointRecordId:number):Promise<WebResponse> => {\r\n        return commonAjaxPostCalls(contextPath() + \"api/dormitorymanagement/followup\", {\r\n            record_id:pointRecordId\r\n        });\r\n    }\r\n    public getFollowUpReminders = ():Promise<WebResponse> => {\r\n        return commonAjaxPostCalls(contextPath() + \"api/dormitorymanagement/followupreminders\", {});\r\n    }\r\n    public getRaporData = (classId: string) :Promise<WebResponse> => {\r\n        return commonAjaxPostCalls(contextPath() + `api/report/studentdata/${classId}`, {});\r\n    }\r\n    public downloadRaporData = (classId: string) :Promise<any> => {\r\n        // return commonAjaxPostCallsWithBlob(endpoint, request);\r\n        return commonAjaxPostCallsWithBlob(contextPath() + `api/report/downloaddata/${classId}`, {});\r\n    }\r\n    \r\n\r\n    public submitMedicalRecord = (record:MedicalRecord) => {\r\n        const req:WebRequest = {\r\n            medicalRecord: record\r\n        }\r\n        return commonAjaxPostCalls(contextPath() + \"api/dormitorymanagement/submitmedicalrecord\", req)\r\n    }\r\n    public loadMonthlyMedicalRecord = (studentId:number, month:number, year:number) => {\r\n        const req:WebRequest = {\r\n            filter: {\r\n                year:year, month:month,\r\n                fieldsFilter: {student_id:studentId}\r\n            }\r\n        }\r\n        return commonAjaxPostCalls(contextPath() + \"api/dormitorymanagement/monthlymedicalrecord\", req)\r\n    }\r\n\r\n    public setPointDropped = (id: number, dropped: boolean) => {\r\n        return commonAjaxPostCalls(contextPath() + \"api/dormitorymanagement/droppoint\", { \r\n            pointRecord : {\r\n                id: id,\r\n                dropped_at: dropped?new Date():null\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * pemutihan\r\n     * @param recordIdArray \r\n     */\r\n    public dropAll = (recordIdArray: any[]) => {\r\n        return commonAjaxPostCalls(contextPath() + \"api/dormitorymanagement/droppointall\", { \r\n            items : recordIdArray});\r\n    }\r\n    /**\r\n     * reset pemutihan\r\n     * @param recordIdArray \r\n     */\r\n    public undropAll = (recordIdArray: any[]) => {\r\n        return commonAjaxPostCalls(contextPath() + \"api/dormitorymanagement/undroppointall\", { \r\n            items : recordIdArray});\r\n    }\r\n     \r\n}"," \nimport User from '../User';\nimport ApplicationProfile from '../ApplicationProfile';\nimport Filter from './Filter';\nimport Category from '../Category';\nimport RulePoint from '../RulePoint';\nimport PointRecord from '../PointRecord';\nimport AttachmentInfo from './../settings/AttachmentInfo';\nimport MedicalRecord from './../MedicalRecord';\nimport WarningAction from '../WarningAction';\nimport CategoryPredicate from './../CategoryPredicate';\nimport RuleViolation from './../RuleViolation';\n\nexport default class WebRequest{\n\t employee_id?:any;\n\t active?:boolean;\n\t user?:User;\n\t applicationProfile?:ApplicationProfile;\n\t filter?:Filter;\n\n\t category?:Category;\n\t rulePoint?:RulePoint;\n\t pointRecord?:PointRecord;\n\t modelName?:string;\n\t record_id?:any;\n\t medicalRecord?:MedicalRecord;\n\t warningAction?:WarningAction;\n\t categoryPredicate?:CategoryPredicate;\n\t ruleViolation?:RuleViolation;\n\n\t attachmentInfo?:AttachmentInfo;\n\t attachmentInfo2?:AttachmentInfo;\n\t attachmentInfo3?:AttachmentInfo;\n\t attachmentInfo4?:AttachmentInfo;\n\n\n\t items?:any[]\n}\n","\nimport { contextPath } from './../constant/Url';\nimport { commonAjaxPostCalls } from './Promises';\nimport ApplicationProfile from './../models/ApplicationProfile';\nimport WebRequest from './../models/commons/WebRequest';\nexport default class ConfigurationService { \n    private static instance?: ConfigurationService;\n    static getInstance(): ConfigurationService {\n        if (this.instance == null) {\n            this.instance = new ConfigurationService();\n        }\n        return this.instance;\n    }\n    update = (appProfile:ApplicationProfile) => {\n        appProfile.validateField();\n        const endpoint: string = contextPath().concat(\"api/setting/updateconfig\");\n        const req:WebRequest = new WebRequest();\n        req.applicationProfile = appProfile;\n        req.attachmentInfo = appProfile.stampAttachment;\n        req.attachmentInfo2 = appProfile.directorSignatureAttachment;\n        req.attachmentInfo3 = appProfile.divisionHeadSignatureAttachment;\n        req.attachmentInfo4 = appProfile.dormitoryStampAttachment;\n        return commonAjaxPostCalls(endpoint, req);\n    }\n}","\r\nimport MasterDataService from '../services/MasterDataService';\r\nimport UserService from '../services/UserService';\r\n\r\nimport Services from './../services/Services';\r\nimport MusyrifManagementService from './../services/MusyrifManagementService';\r\nimport StudentService from '../services/StudentService';\r\nimport ConfigurationService from '../services/ConfigurationService';\r\n\r\nexport const initState: { services: Services } = {\r\n    services: {\r\n        userService: UserService.getInstance(), \r\n        masterDataService: MasterDataService.getInstance(),\r\n        musyrifManagementService: MusyrifManagementService.getInstance(),\r\n        studentService: StudentService.getInstance(),\r\n        configurationService: ConfigurationService.getInstance()\r\n    }\r\n\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default reducer;","import * as appReducer from \"./appReducer\"\r\nimport * as userReducer from \"./userReducer\" \r\nimport  * as servicesReducers from './servicesReducer';\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport const rootReducer = combineReducers(\r\n    {\r\n        appState: appReducer.reducer,\r\n        userState: userReducer.reducer, \r\n        servicesState: servicesReducers.reducer\r\n    }\r\n);\r\n\r\nexport const initialState = {\r\n    appState: appReducer.initState,\r\n    userState: userReducer.initState, \r\n    servicesState: servicesReducers.initState\r\n}\r\n\r\nexport default rootReducer;","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\nconst axios = require('axios');\r\nexport const performLoginMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGIN) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n    axios.post(action.meta.url, 'email='+action.meta.email+ '&password='+action.meta.password, {\r\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\r\n    }).then(axiosResponse => {\r\n        const responseJson = axiosResponse.data;\r\n        let loginKey: string = \"\";\r\n        let loginSuccess: boolean = false;\r\n       \r\n        if (responseJson.code != null && responseJson.code == \"00\") {\r\n            loginKey = axiosResponse.headers['api_token'];\r\n            // console.log(\"api_token: \", loginKey);\r\n            loginSuccess = true;\r\n        } else {\r\n        }\r\n        let newAction = Object.assign({}, action, {\r\n            payload: {\r\n                loginStatus: loginSuccess,\r\n                loginKey: loginKey,\r\n                loggedUser: responseJson.user\r\n            }\r\n        });\r\n        common.updateAccessToken(axiosResponse);\r\n        delete newAction.meta;\r\n        store.dispatch(newAction);\r\n    })\r\n        .catch(console.log)\r\n        .finally(() => { app.endLoading(); });\r\n\r\n}\r\n \r\n\r\nexport const getLoggedUserMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_LOGGED_USER) { return next(action); }\r\n\r\n    let headers = common.commonAuthorizedHeader();\r\n\r\n    axios.post(action.meta.url, (action.payload), {\r\n        headers: headers\r\n    }).then(response => {\r\n        const data = response.data;\r\n\r\n        if (!data) {\r\n            alert(\"Error performing request\");\r\n            return;\r\n        }\r\n\r\n        let newAction = Object.assign({}, action, { payload: { data } });\r\n        delete newAction.meta;\r\n        store.dispatch(newAction);\r\n    })\r\n        .catch(console.log).finally(param => {\r\n            action.meta.app.endLoading();\r\n            action.meta.app.refresh();\r\n        });\r\n}\r\n\r\n\r\nexport const performLogoutMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGOUT) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n\r\n    axios.post(action.meta.url, (action.payload), {\r\n        headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => {\r\n            const responseJson = response.data;\r\n            let logoutSuccess = false;\r\n            if (responseJson.code == \"00\") {\r\n                logoutSuccess = true;\r\n            } else {\r\n                alert(\"Logout Failed\");\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    loginStatus: !logoutSuccess\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(console.log).finally(param => app.endLoading());\r\n}\r\n\r\nexport const setLoggedUserMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.SET_LOGGED_USER) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\n\r\nconst POST_METHOD = \"post\"; \r\n\r\nexport const getMessagesMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_MESSAGE) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: common.commonAuthorizedHeader()\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"sendChatMessageMiddleware Response:\", data);\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n \r\nexport const storeChatMessageLocallyMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.STORE_MESSAGE) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n} \r\n\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport { initialState, rootReducer } from './reducers' \r\nimport * as userMiddleware from '../middlewares/UserMiddleware' \r\nimport * as realtimeChatMiddleware from '../middlewares/RealtimeChatMiddleware' \r\n \r\nlet store = null;\r\nexport const getStore = () => {\r\n    return store;\r\n}\r\nexport const configureStore = () => {\r\n    store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        applyMiddleware(   \r\n\r\n            //user related\r\n            userMiddleware.performLoginMiddleware,\r\n            userMiddleware.performLogoutMiddleware,  \r\n            userMiddleware.getLoggedUserMiddleware, \r\n            userMiddleware.setLoggedUserMiddleware,\r\n \r\n\r\n            /*realtime chat*/\r\n            realtimeChatMiddleware.storeChatMessageLocallyMiddleware,\r\n            realtimeChatMiddleware.getMessagesMiddleware,\r\n\r\n        )\r\n    );\r\n\r\n    return store;\r\n}\r\n   \r\n\r\nexport default configureStore;","import React from 'react'\r\nimport App from './App'\r\nimport configureStore from './redux/configureStore'\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n \r\nconst Root = (props:any)  => {\r\n\r\n    const store = configureStore();\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <App/>\r\n            </HashRouter>\r\n        </Provider>  \r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Root;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './Root.tsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}