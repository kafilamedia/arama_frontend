{"version":3,"sources":["models/AuthorityType.ts","redux/appReducer.js","redux/types.js","models/BaseEntity.ts","utils/StringUtil.ts","models/User.ts","models/settings/Menu.ts","constant/Menus.ts","redux/userReducer.js","models/settings/AttachmentInfo.ts","services/Promises.ts","services/MasterDataService.ts","services/UserService.ts","services/MusyrifManagementService.ts","services/StudentService.ts","redux/servicesReducer.ts","redux/reducers.js","middlewares/UserMiddleware.ts","middlewares/RealtimeChatMiddleware.js","redux/configureStore.js","middlewares/Common.ts","constant/Url.js","redux/actionCreators.ts","constant/stores.js","component/loader/Loader.js","component/alert/Alert.js","models/ApplicationProfile.ts","utils/EventUtil.ts","utils/websockets.js","component/BaseComponent.tsx","component/navigation/Header.tsx","component/loader/Spinner.tsx","component/pages/login/Login.tsx","component/pages/BasePage.tsx","component/pages/dashboard/main/DashboardMain.tsx","component/pages/home/HomeMain.tsx","component/pages/settings/SettingsMain.tsx","component/container/Card.tsx","component/form/FormGroup.tsx","utils/ComponentUtil.ts","component/navigation/AnchorButton.tsx","component/pages/settings/settingHelper.tsx","component/pages/settings/UserProfile.tsx","utils/CollectionUtil.tsx","models/commons/Filter.ts","component/navigation/NavigationButtons.tsx","component/navigation/AnchorWithIcon.tsx","component/pages/management/EmployeeRow.tsx","component/navigation/ToggleButton.tsx","component/pages/management/BaseManagementPage.tsx","component/pages/management/MusyrifManagement.tsx","component/pages/management/ManagementMain.tsx","models/Category.ts","component/container/Modal.tsx","component/pages/management/EditDeleteButton.tsx","component/pages/management/CategoryManagement.tsx","models/RulePoint.ts","component/pages/management/RulePointManagement.tsx","utils/DateUtil.ts","component/form/FilterPeriod.tsx","component/pages/dormitoryactivity/StudentList.tsx","models/Student.ts","models/PointRecord.ts","component/form/InputTime.tsx","component/pages/dormitoryactivity/form/FormStepThree.tsx","component/alert/SimpleError.tsx","component/pages/dormitoryactivity/form/FormStepTwo.tsx","component/pages/dormitoryactivity/form/FormStepOne.tsx","component/pages/dormitoryactivity/InputPointForm.tsx","component/pages/dormitoryactivity/DropPointButtons.tsx","component/pages/dormitoryactivity/PointRecordDetail.tsx","component/pages/dormitoryactivity/PointRecordsManagement.tsx","component/pages/dormitoryactivity/medicalrecord/StudentForm.tsx","models/MedicalRecord.ts","component/pages/dormitoryactivity/medicalrecord/MedicalRecordDailyInput.tsx","component/pages/dormitoryactivity/medicalrecord/MedicalRecordForm.tsx","component/pages/settings/EditApplicationProfile.tsx","component/pages/home/AboutUs.tsx","component/pages/login/Register.tsx","component/layout/ApplicationContent.tsx","component/navigation/SideBar.tsx","component/layout/MainLayout.tsx","App.tsx","Root.tsx","serviceWorker.js","index.js"],"names":["AuthorityType","initState","mainApp","undefined","reducer","state","action","type","payload","BaseEntity","id","index","uniqueId","string","String","Date","getUTCMilliseconds","toString","twoDigits","value","User","nickname","name","email","password","profileImage","roles","user","requestId","nip","role","i","this","length","Object","assign","Menu","code","description","url","pathVariables","iconUrl","color","fontColor","active","menuClass","authenticated","showSidebar","subMenus","userAuthorized","clone","element","hasRole","defaultMenuIconClassName","getIconClassName","menu","getMenus","menuSet","_menus","subMenu","push","admin_asrama","musyrif_asrama","loginKey","loginStatus","loginFailed","menus","menuData","loggedUser","loginAttempt","applicationProfile","assetsPath","result","console","debug","message","profile","referer","refresh","setLoginKeyCookie","data","AttachmentInfo","blob","Blob","arg0","split","info","axios","require","commonAjaxPostCalls","endpoint","request","Promise","resolve","reject","post","headers","commonAuthorizedHeader","then","axiosResponse","updateAccessToken","response","rawAxiosResponse","catch","e","error","commonAjaxPublicPostCalls","commonHeader","MasterDataService","getById","contextPath","concat","delete","list","update","updateApplicationProfile","responseType","fileName","rawSplit","extension","window","URL","createObjectURL","attachmentInfo","commonAjaxPostCallsWithBlob","instance","UserService","updateProfile","saveUser","requestApplicationId","callbackSuccess","callbackError","alert","requestApplicationIdNoAuth","MusyrifManagementService","filter","emp","employee_id","StudentService","submitMedicalRecord","record","req","medicalRecord","loadMonthlyMedicalRecord","studentId","month","year","fieldsFilter","student_id","setPointDropped","dropped","pointRecord","dropped_at","services","userService","getInstance","masterDataService","musyrifManagementService","studentService","rootReducer","combineReducers","appState","appReducer","userState","userReducer","servicesState","servicesReducers","initialState","performLoginMiddleware","store","next","meta","app","responseJson","loginSuccess","log","newAction","common","dispatch","finally","endLoading","getLoggedUserMiddleware","param","performLogoutMiddleware","logoutSuccess","setLoggedUserMiddleware","getMessagesMiddleware","fetch","method","body","JSON","stringify","json","err","storeChatMessageLocallyMiddleware","getStore","configureStore","createStore","applyMiddleware","userMiddleware","realtimeChatMiddleware","getRequestId","getLoginKey","LOGIN_KEY","getAssetsPath","getState","getCookie","accessToken","setCookie","cookieValue","cname","cvalue","exdays","d","setTime","getTime","expires","toUTCString","document","cookie","ca","decodeURIComponent","c","charAt","substring","indexOf","devMode","getElementById","rootValue","baseImageUrl","usedHost","apiAccount","performLogout","startLoading","mapCommonUserStateToProps","LoaderContent","props","realtime","className","style","margin","position","zIndex","marginBottom","aria-hidden","padding","marginTop","height","width","progress","transitionDuration","disabled","Loader","timer","intervalId","clearInterval","setState","endMessage","withTimer","setInterval","Component","Backdrop","backgroundColor","Footer","ref","yesButtonRef","onClick","onYes","yesOnly","noButtonRef","onNo","Header","fontClassName","title","onClose","Alert","React","createRef","isError","current","focus","headerClassName","display","tabIndex","aria-labelledby","children","ApplicationProfile","about","welcoming_message","pageIcon","backgroundUrl","contact","address","doItLater","callback","intervalMs","timeout","setTimeout","clearTimeout","stompClient","wsConnected","subscriptionCallbacks","Array","sendToWebsocket","requestObject","send","BaseComponent","parentApp","updated","validateLoginStatus","isUserLoggedIn","backToLogin","sendWebSocket","setWsUpdateHandler","handler","resetWsUpdateHandler","getApplicationProfile","handleInputChange","event","target","checked","doAjax","withProgress","successCallback","errorCallback","params","commonAjax","commonAjaxWithProgress","getLoggedUser","isAdmin","scrollTop","opt","top","behavior","scrollTo","loggedIn","showConfirmation","showAlert","showConfirmationDanger","showAlertError","showInfo","showError","showCommonErrorAlert","getServices","history","IState","showNavLinks","buttonToggleNavRef","toggleNavLinks","onLogout","ok","setMenu","click","label","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","map","isActive","activeMenuCode","key","to","setMenuNull","NavBarTop","paddingLeft","fontSize","UserIcon","marginRight","src","withRouter","connect","Spinner","innerDivs","visibility","show","loading","editPassword","Login","updateCredentialProperty","getAttribute","preventDefault","performLogin","onSubmit","login","onChange","PasswordField","placeholder","required","EmailField","autoFocus","username","BasePage","DashboardMain","join","HomeMain","imageUrl","backgroundImage","backgroundSize","SettingsMain","Card","attributes","footerContent","FormGroup","orientation","toBase64v2","fileInput","reader","FileReader","readAsDataURL","files","onload","onerror","AnchorButton","btnClassName","iconClassName","EditField","edit","toggleInput","updateProperty","PropertyInput","PropertyLabel","EditImage","accept","editFields","displayName","fieldChanged","UserProfile","updateProfileProperty","updateProfleImage","imageData","setProfileImage","actualLoggedUser","propertyName","enabled","saveRecord","doSaveRecord","getUserEditedData","profileSaved","editedUser","startsWith","setLoggedUser","tableHeader","values","Filter","limit","page","orderType","orderBy","contains","exacts","day","module","dayTo","monthTo","yearTo","maxValue","availabilityCheck","useExistingFilterPage","NavigationButtons","buttonIndexes","generateButtonValues","totalData","activePage","lastIndex","nextPage","previusPage","currentPage","displayed_buttons","buttonCount","Math","ceil","min","max","AnchorWithIcon","tyle","EmployeeRow","getEmployee","employee","activeStatusUpdate","onUpdated","activateMusyrif","activate","isMusyrif","startingNumber","ToggleButton","yesLabel","noLabel","BaseManagementPage","modelName","overrideLoading","formRef","loadItems","itemsLoaded","items","emptyRecord","Error","updateFilter","dataset","parseInt","updateFieldsFilter","loadAtPage","updateRecordProp","resetForm","oneRecordLoaded","item","showModal","recordUpdated","hideModal","callApiSubmit","State","MusyrifManagement","setMusyrifOnly","musyrifOnly","onEmployeeStatusUpdate","EmployeeList","overflow","ManagementMain","Category","Modal","toggleable","showFooter","EditDeleteButton","getModelName","getRecord","rec","recordLoaded","recordDeleted","loadRecord","record_id","deleteRecord","hideEdit","CategoryManagement","category","ItemsList","RecordForm","RulePoint","category_id","point","droppable","categories","categoriesLoaded","RulePointManagement","rulePoint","categoriesNotLoaded","loadCategories","selectedCategoryId","reloadCategories","data-type","MONTHS","leapMonths","regularMonths","parseDate","s","b","m","days","arr","FilterPeriod","mode","Fragment","hideDay","classes","StudentList","classesLoaded","loadClasses","getClasses","updateSelectedClass","inputPage","inputPoint","inputMedicalRecord","student","pathname","updateWithPointRecord","val","getDate","getMonth","getFullYear","selectedClassId","showPointRecord","level","sekolah","_class","rombel","nama","colSpan","kelas","Student","nis","PointRecord","setDate","date","dateString","location","time","getHours","getMinutes","getSeconds","point_id","rule_point","pictures","getPicture","getTimestamp","DAYS","getDay","h","object","hour","minute","second","hours","minutesOrSeconds","InputTime","minutes","seconds","setDefaultValue","updateValue","setNow","border","sec","marginLeft","FormStepThree","submit","updatePointRecord","updateDate","updateTime","setAttachment","file","setUrl","attachment","removeAttachment","getAttachment","onBack","SimpleError","rulePoints","FormStepTwo","rulePointsLoaded","setRulePoint","loadRulePoints","getCategory","r","FormStepOne","setCategory","setSelectedCategory","formStep","savedRecord","InputPointForm","totalStep","validateStudentData","removeStudent","nextStep","step","submitRecord","submitPointRecord","recordSubmitted","back","Progress","Detail","toDateString","Warning","DropPointButtons","setDropped","isDropped","PointRecordDetail","pictureUrl","timeStamp","close","PointRecordManagement","studentName","StudentForm","loadStudent","setSelectedItem","setItem","reset","selectedItem","onReset","cursor","ItemDetail","MedicalRecord","temperature_morning","temperature_afternoon","breakfast","lunch","dinner","medicine_consumption","genose_test","antigen_test","pcr_test","obj","y","MedicalRecordDailyInput","setRecord","SingleRow","minHeight","forwardRef","mappedItems","Map","MedicalRecordForm","inputRefs","setStudent","forEach","recordsLoaded","toMap","get","set","loadMonthlyRecord","getFilter","dayCount","getMonthDays","gridTemplateColumns","repeat","LeftLabel","EditFields","welcomingMessage","shortDescription","EditApplicationProfile","updateImageField","fieldName","setAppProfileField","appProfile","actualAppProfile","getApplicationEditedData","editedApplication","setApplicationProfile","bgUrl","AboutUs","editPasswordRepeat","Register","UserModel","trim","userSaved","passwordMatch","fieldComplete","register","borderColor","CommonField","ApplicationContent","setSidebarMenus","exact","path","render","MusyrifManagementRoute","StudentsRoute","proos","PointRecordsManagement","LoginRoute","Dashboard","Settings","SideBar","isSidebarActive","parentMenu","pathName","addEventListener","handleScroll","removeEventListener","srcElement","sidebarMenus","brand","menuClassName","Brand","textAlign","paddingTop","paddingBottom","textDecoration","MainLayout","currentPathName","warn","setCurrentMenu","pathRaw","firstPath","extractMenuPath","getMenuByMenuPath","getSubMenus","menuState","loadingPercentage","mainAppUpdated","appIdStatus","errorAuthenticatingApp","App","loadings","alertTitle","alertBody","alertIsYesOnly","alertIsError","alertOnYesCallback","alertOnCancelCallback","wsUpdateHandler","clientRef","alertCallback","onOk","requestAppId","setRequestId","retryRequestAppId","smoothEndLoading","handleProgress","msg","percentageFloat","percentage","floor","initWebsocket","callBackObjects","registerWebSocketCallbacks","subscribeUrl","handleWsUpdate","setMainApp","incrementLoadings","decrementLoadings","yesCallback","noCallback","dismissAlert","link","querySelector","createElement","setAttribute","head","appendChild","updateFavicon","Loading","text","actions","Root","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.da38b99e.chunk.js","sourcesContent":["\nexport   enum AuthorityType{\n    \n    admin_asrama = \"admin_asrama\",\n    musyrif_asrama = \"musyrif_asrama\",\n    user = \"user\"\n}\n","import * as types from './types'\r\n\r\nexport const initState = { \r\n    mainApp: undefined\r\n\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case types.SET_MAIN_APP:\r\n              \r\n            return { ...state, mainApp: action.payload }; \r\n       \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","/**\r\n * \r\n */\r\n \r\nexport const REMOVE_SHOP_ENTITY= \"remove_shop_entity\"; \r\nexport const FETCH_PRODUCT_CATEGORIES_ALL = \"all_product_categories\";\r\nexport const DO_LOGIN = \"do_login\";\r\nexport const DO_LOGOUT = \"do_logout\";    \r\nexport const SET_REQUEST_ID = \"SET_REQUEST_ID\"; \r\nexport const STORE_MESSAGE = \"store_message\";\r\nexport const GET_ENTITY_PROPERTY = \"get_entity_config\";\r\nexport const GET_MANAGEMENT_MENUS = \"GET_MANAGEMENT_MENUS\";\r\nexport const GET_MESSAGE = \"GET_MESSAGE\";\r\nexport const SET_MAIN_APP = \"SET_MAIN_APP\"; \r\nexport const GET_ENTITY_BY_ID = \"get_entity_by_id\";\r\nexport const UPDATE_ENTITY = \"update_entity\"; \r\nexport const REFRESH_LOGIN = \"refresh_login\";\r\nexport const GET_LOGGED_USER = \"get_logged_user\";\r\nexport const SET_LOGGED_USER = \"set_logged_user\";\r\nexport const SET_APPLICATION_PROFILE = \"SET_APPLICATION_PROFILE\";","\nexport default class BaseEntity{\n\tid?:any; \n\t \n\n}\n","let index = 1;\r\nexport const uniqueId = function () {\r\n\tlet string = new String(new Date().getUTCMilliseconds()).toString();\r\n\tindex++;\r\n\treturn index + \"-\" + string;\r\n}\r\n\r\nexport function beautifyNominal(val:any) {\r\n\tif (val == \"\" || val == null) return \"0\";\r\n\tconst isDecimal:boolean = new String(val).includes(\".\");\r\n\tconst isNegative:boolean = new String(val).startsWith(\"-\");\r\n\tif (isNegative) {\r\n\t\tval = new String(val).replace(\"-\",\"\");\r\n\t}\r\n\tconst rawVal = isDecimal? parseInt( new String(val).split(\".\")[0]) : parseInt(val);\r\n\tlet nominal = Math.abs(rawVal).toString();\r\n\tlet result = \"\";\r\n\tif (nominal.length > 3) { \r\n\t\tlet zeroIndex: number = 0;\r\n\t\tfor (let i = nominal.length - 1; i > 0; i--) {\r\n\t\t\tzeroIndex++; \r\n\t\t\tresult = nominal[i] + result;\r\n\t\t\tif (zeroIndex == 3 ) {\r\n\t\t\t\tresult = \".\" + result;\r\n\t\t\t\tzeroIndex = 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tresult = nominal[0] + result;\r\n\t} else {\r\n\t\tresult = val;\r\n\t}\r\n\tif (rawVal < 0) {\r\n\t\treturn rawVal;\r\n\t}\r\n\tif (isDecimal) {\r\n\t\tresult+= \",\"+ new String(val).split(\".\")[1];\r\n\t}\r\n\tif (isNegative) {\r\n\t\tresult = \"-\"+result;\r\n\t}\r\n\treturn result;\r\n}\r\n \r\n\r\nconst months = [\r\n\t\"January\", \"Ferbuary\", \"March\", \"April\", \"May\", \"June\",\r\n\t\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n]\r\n\r\nexport const monthYearString = function (m, y) {\r\n\tif (m == null || y == null) {\r\n\t\treturn \"-\";\r\n\t}\r\n\treturn months[m - 1] + \" \" + y;\r\n}\r\nexport const twoDigits = (value:number) :string => {\r\n    if (value >= 10) {\r\n        return   value.toString();\r\n    }\r\n    return \"0\"+value;\r\n}","import { AuthorityType } from './AuthorityType';\nimport BaseEntity from './BaseEntity';\n\nexport default class User extends BaseEntity{\n\tstatic clone(user: User): User {\n\t\t return Object.assign(new User(), user);\n\t}\n    hasRole(role: AuthorityType): boolean {\n        for (let i = 0; i < this.roles.length; i++) {\n\t\t\tconst element = this.roles[i];\n\t\t\tif (element == role) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n    }\n\tnickname?:string;\n\tname?:string;\n\temail?:string;\n\tpassword?:string;\n\tprofileImage?:string;\n\troles:AuthorityType[] = [AuthorityType.user];\n\trequestId?:string; \n\tnip?:string;\n\n}\n","import BaseEntity from '../BaseEntity'; \nimport { uniqueId } from '../../utils/StringUtil';\nimport { AuthorityType } from '../AuthorityType';\nimport User from './../User';\n\nexport default class Menu extends BaseEntity{\n\tstatic defaultMenuIconClassName:string = \"fas fa-folder\";\n\n\tcode:string = uniqueId();\n\tname?:string;\n\tdescription?:string;\n\turl?:string;\n\tpathVariables?:string; \n\ticonUrl?:string;\n\tcolor?:string;\n\tfontColor?:string;\n\trole:AuthorityType[] = [];\n\n\t//\n\tactive?:boolean = false;\n\tmenuClass?:string = \"fas fa-folder\";\n\tauthenticated?:boolean = false;\n\tshowSidebar?:boolean  = false;\n\tsubMenus?:Menu[] = undefined;\n\n\tstatic getIconClassName = (menu:Menu) => {\n\t\tif (undefined == menu.menuClass) {\n\t\t\treturn Menu.defaultMenuIconClassName;\n\t\t}\n\t\treturn menu.menuClass;\n\t}\n\n\tuserAuthorized? = (user?:User) : boolean => {\n\t\tif (this.role.length == 0) return true;\n\t\tif (!user) return false;\n\t\tuser = User.clone(user);\n\t\tfor (let i = 0; i < this.role.length; i++) {\n\t\t\tconst element = this.role[i];\n\t\t\tif (user.hasRole(element)){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n","\r\nimport { AuthorityType } from '../models/AuthorityType';\r\nimport Menu from '../models/settings/Menu';\r\n \r\n\r\nexport const getMenus = () => {\r\n    let menuSet: Menu[] = [];\r\n    for (let i = 0; i < _menus.length; i++) {\r\n        const element: Menu = _menus[i];\r\n        const menu:Menu = Object.assign(new Menu, element);\r\n        const subMenus:Menu[] = [];\r\n        if (element.subMenus) {\r\n            for (let i = 0; i < element.subMenus.length; i++) {\r\n                const subMenu = element.subMenus[i];\r\n                subMenus.push(Object.assign(new Menu, subMenu));\r\n            }\r\n            menu.subMenus = subMenus;\r\n        }\r\n        menuSet.push(menu);\r\n    }\r\n    \r\n    return menuSet;\r\n}\r\nexport const extractMenuPath = (pathName: string) => {\r\n    const pathRaw = pathName.split('/');\r\n   \r\n    let firstPath = pathRaw[0];\r\n    if (firstPath.trim() == \"\") {\r\n        firstPath = pathRaw[1];\r\n    }\r\n    return firstPath;\r\n}\r\nexport const getMenuByMenuPath = (pathName: string): Menu | null => {\r\n    const menus = getMenus();\r\n    try {\r\n        for (let i = 0; i < menus.length; i++) {\r\n            const menu: Menu = menus[i];\r\n            if (menu.url == \"/\" + pathName) {\r\n                return menu;\r\n            }\r\n        }\r\n        return null;\r\n    } catch (error) {\r\n        return null;\r\n    }\r\n}\r\n\r\nconst _menus: Menu[] = [\r\n    {\r\n        code: 'home',\r\n        name: \"Home\",\r\n        url: \"/home\",\r\n        menuClass: \"fa fa-home\",\r\n        active: false,\r\n        authenticated: false,\r\n        showSidebar: false,\r\n        role : []\r\n    },\r\n    \r\n    {\r\n        code: 'dashboard',\r\n        name: \"Dashboard\",\r\n        url: \"/dashboard\",\r\n        menuClass: \"fas fa-tachometer-alt\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true,\r\n        role: [AuthorityType.admin_asrama, AuthorityType.musyrif_asrama],\r\n        subMenus: [\r\n            {\r\n                code: 'menu1',\r\n                name: 'Menu #1',\r\n                url: 'menu1',\r\n                menuClass: 'fas fa-history',\r\n                role: [AuthorityType.admin_asrama, AuthorityType.musyrif_asrama],\r\n            },\r\n            // {\r\n            //     code: 'dashboard_productsales',\r\n            //     name: 'Product Sales',\r\n            //     url: 'productsales',\r\n            //     menuClass: 'fas fa-chart-line',\r\n            //     role: [],\r\n            // }\r\n        ]\r\n    }, \r\n    {\r\n        code: 'management',\r\n        name: \"Management\",\r\n        url: \"/management\",\r\n        menuClass: \"fas fa-mail-bulk\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true,\r\n        role: [AuthorityType.admin_asrama],\r\n        subMenus: [\r\n            {\r\n                code: 'musyrifmanagement',\r\n                name: 'Musyrif Management',\r\n                url: 'musyrifmanagement',\r\n                menuClass: 'fas fa-users',\r\n                role: [AuthorityType.admin_asrama],\r\n            },\r\n            {\r\n                code: 'rule_category',\r\n                name: 'Rule Category',\r\n                url: 'rule_category',\r\n                menuClass: 'fas fa-tags',\r\n                role: [AuthorityType.admin_asrama],\r\n            },\r\n            {\r\n                code: 'rule_point',\r\n                name: 'Rule Point',\r\n                url: 'rule_point',\r\n                menuClass: 'fas fa-puzzle-piece',\r\n                role: [AuthorityType.admin_asrama],\r\n            },\r\n            // {\r\n            //     code: 'dashboard_productsales',\r\n            //     name: 'Product Sales',\r\n            //     url: 'productsales',\r\n            //     menuClass: 'fas fa-chart-line',\r\n            //     role: [],\r\n            // }\r\n        ]\r\n    }, \r\n    {\r\n        code: 'dormitoryactivity',\r\n        name: \"Dormitory\",\r\n        url: \"/dormitoryactivity\",\r\n        menuClass: \"fas fa-school\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true,\r\n        role: [  AuthorityType.musyrif_asrama],\r\n        subMenus: [\r\n            {\r\n                code: 'studentlist',\r\n                name: 'Student List',\r\n                url: 'studentlist',\r\n                menuClass: 'fas fa-users',\r\n                role: [ AuthorityType.musyrif_asrama],\r\n            },\r\n            {\r\n                code: 'input_point',\r\n                name: 'Input Point',\r\n                url: 'inputpoint',\r\n                menuClass: 'fas fa-pen-square',\r\n                role: [ AuthorityType.musyrif_asrama],\r\n            },\r\n            {\r\n                code: 'medicalrecord',\r\n                name: 'Medical Record',\r\n                url: 'medicalrecord',\r\n                menuClass: 'fas fa-briefcase-medical',\r\n                role: [ AuthorityType.musyrif_asrama],\r\n            },\r\n            {\r\n                code: 'pointsummary',\r\n                name: 'Summary Point',\r\n                url: 'pointsummary',\r\n                menuClass: 'fas fa-clipboard',\r\n                role: [ AuthorityType.musyrif_asrama],\r\n            },\r\n           \r\n            // {\r\n            //     code: 'dashboard_productsales',\r\n            //     name: 'Product Sales',\r\n            //     url: 'productsales',\r\n            //     menuClass: 'fas fa-chart-line',\r\n            //     role: [],\r\n            // }\r\n        ]\r\n    }, \r\n    {\r\n        code: 'settings',\r\n        name: \"Setting\",\r\n        url: \"/settings\",\r\n        menuClass: \"fas fa-cogs\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true,\r\n        role: [AuthorityType.admin_asrama ,AuthorityType.musyrif_asrama],\r\n        subMenus: [\r\n            {\r\n                code: 'user_profile',\r\n                name: 'Profile',\r\n                menuClass: 'fas fa-user-cog',\r\n                url: 'user-profile',\r\n                role: [AuthorityType.admin_asrama, AuthorityType.musyrif_asrama],\r\n            },\r\n            {\r\n                code: 'app_profile',\r\n                name: 'Application Setting',\r\n                menuClass: 'fas fa-cog',\r\n                url: 'app-profile',\r\n                role: [AuthorityType.admin_asrama ],\r\n            },\r\n            \r\n        ]\r\n    },\r\n];\r\n","import * as types from './types'\r\nimport * as menuData from '../constant/Menus' \r\nimport { setLoginKeyCookie } from './../middlewares/Common';\r\n\r\nexport const initState = {\r\n    loginKey: null,\r\n    loginStatus: false,\r\n    loginFailed: false,\r\n    menus: menuData.getMenus(),\r\n    loggedUser: null,\r\n    loginAttempt: false,\r\n    requestId: null,\r\n    applicationProfile: {},\r\n    assetsPath: \"\"\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    \r\n    let result = {};\r\n    switch (action.type) { \r\n        case types.SET_REQUEST_ID:\r\n            \r\n            console.debug(\"USER REDUCER:REQUEST_ID\", action.payload.message);\r\n            result = {\r\n                ...state, requestId: action.payload.message,\r\n                applicationProfile: action.payload.profile ?? {},\r\n                assetsPath: action.payload.profile.assetsPath\r\n            };\r\n            \r\n            if (action.payload.loginStatus == true) {\r\n                result.loggedUser = action.payload.user;\r\n                result.loginStatus = true;\r\n            } else {\r\n                result.loginStatus = false;\r\n                result.loggedUser = null;\r\n            }\r\n            console.debug(\"result\");\r\n            console.debug(\"action.payload.requestId: \",action.payload.message); \r\n            console.debug(\"REQUEST_ID result.loginStatus:\", result.loginStatus)\r\n            action.payload.referer.refresh();\r\n\r\n            return result;\r\n        case types.DO_LOGIN:\r\n            result = {\r\n                ...state,\r\n                loginAttempt: true,\r\n                loginStatus: action.payload.loginStatus,\r\n                loginKey: action.payload.loginKey,\r\n                loginFailed: action.payload.loginStatus == false,\r\n                loggedUser: action.payload.loggedUser\r\n            };\r\n            return result;\r\n        case types.DO_LOGOUT:\r\n            result = {\r\n                ...state,\r\n                loginStatus: false,\r\n                loggedUser: null\r\n            };\r\n            setLoginKeyCookie(null);\r\n            return result;\r\n        case types.REFRESH_LOGIN:\r\n            result = {\r\n                ...state,\r\n                loginStatus: action.payload.loginStatus,\r\n                loggedUser: action.payload.loggedUser,\r\n                requestId: action.payload.requestId,\r\n            };\r\n            return result;\r\n        case types.GET_LOGGED_USER:\r\n            result = {\r\n                ...state, loggedUser: action.payload.data\r\n            };\r\n            return result;\r\n        case types.SET_LOGGED_USER:\r\n            result = {\r\n                ...state, loggedUser: action.payload.user\r\n            };\r\n            return result;\r\n        case types.SET_APPLICATION_PROFILE:\r\n            result = {\r\n                ...state, applicationProfile: action.payload.applicationProfile\r\n            };\r\n            return result;\r\n        default:\r\n            return { ...state };\r\n\r\n    }\r\n}\r\n\r\nexport default reducer;","export default class AttachmentInfo {\r\n    setUrl(arg0: string) {\r\n        this.url = arg0;\r\n        this.data = arg0.split(\",\")[1];\r\n    }\r\n    static nameOnly(name: any): AttachmentInfo {\r\n        const info = new AttachmentInfo();\r\n        info.name = name;\r\n        return info;\r\n    }\r\n    static instance(name: any, url:string): AttachmentInfo {\r\n        const info = new AttachmentInfo();\r\n        info.name = name;\r\n        info.url = url;\r\n        return info;\r\n    }\r\n    name: string = \"\";\r\n    blob: Blob = new Blob();\r\n    url: string = \"\";\r\n    data: string = \"\";\r\n}","\r\nimport { commonAuthorizedHeader, commonHeader } from '../middlewares/Common';\r\nimport WebResponse from '../models/commons/WebResponse';\r\nimport { updateAccessToken } from './../middlewares/Common';\r\nimport AttachmentInfo from '../models/settings/AttachmentInfo';\r\n\r\nconst axios = require('axios');\r\n\r\nexport const rejectedPromise = (message: any) => {\r\n    return new Promise((res, rej) => {\r\n        rej(message);\r\n    });\r\n}\r\n\r\nexport const emptyPromise = (defaultResponse: any) => new Promise(function (res, rej) {\r\n    res(defaultResponse);\r\n});\r\n\r\nexport const commonAjaxPostCalls = (endpoint: string, payload?: any) => {\r\n    const request = payload == null ? {} : payload;\r\n    return new Promise<WebResponse>(function (resolve, reject) {\r\n        axios.post(endpoint, request, {\r\n            headers: commonAuthorizedHeader()\r\n        })\r\n            .then(axiosResponse => {\r\n                updateAccessToken(axiosResponse);\r\n                const response: WebResponse = axiosResponse.data;\r\n                response.rawAxiosResponse = axiosResponse;\r\n                if (response.code == \"00\") {\r\n\r\n                    resolve(response);\r\n                }\r\n                else { reject(response); }\r\n            })\r\n            .catch((e: any) => { \r\n                \r\n                console.error(e); \r\n                reject(e); \r\n            });\r\n    })\r\n}\r\n\r\n\r\nexport const commonAjaxPublicPostCalls = (endpoint: string, payload?: any) => {\r\n    const request = payload == null ? {} : payload;\r\n    return new Promise<WebResponse>(function (resolve, reject) {\r\n        axios.post(endpoint, request, {\r\n            headers: commonHeader()\r\n        })\r\n            .then(axiosResponse => {\r\n                \r\n                const response: WebResponse = axiosResponse.data;\r\n                response.rawAxiosResponse = axiosResponse;\r\n                if (response.code == \"00\") {\r\n                    resolve(response);\r\n                }\r\n                else { reject(response); }\r\n            })\r\n            .catch((e: any) => { \r\n                \r\n                console.error(e); \r\n                reject(e); \r\n            });\r\n    })\r\n}\r\n\r\nexport const commonAjaxPostCallsWithBlob = (endpoint: string, payload?: any) => {\r\n    const request = payload == null ? {} : payload;\r\n    return new Promise<AttachmentInfo>(function (resolve, reject) {\r\n        axios.post(endpoint, request, {\r\n            responseType: 'blob' ,\r\n            headers: commonAuthorizedHeader()\r\n        })\r\n            .then(axiosResponse => {\r\n                updateAccessToken(axiosResponse);\r\n                \r\n                const response: any = axiosResponse.data;\r\n                response.rawAxiosResponse = axiosResponse;\r\n                console.debug(\"axiosResponse.headers: \", axiosResponse.headers);\r\n                let contentDisposition = axiosResponse.headers[\"content-disposition\"];\r\n                let fileName = contentDisposition.split(\"filename=\")[1];\r\n                let rawSplit = fileName.split(\".\");\r\n                let extension = rawSplit[rawSplit.length - 1];\r\n                let blob = new Blob([response], { type: extension });\r\n                let url = window.URL.createObjectURL(blob);\r\n                // let a = document.createElement(\"a\");\r\n\r\n                // document.body.appendChild(a);\r\n\r\n                // a.href = url;\r\n                // a.style.display = 'none';\r\n                // a.download = fileName;\r\n                // a.click();\r\n\r\n                // window.URL.revokeObjectURL(url);\r\n                const attachmentInfo:AttachmentInfo = new AttachmentInfo();\r\n                attachmentInfo.name = fileName;\r\n                attachmentInfo.blob = blob;\r\n                attachmentInfo.url = url;\r\n                resolve(attachmentInfo);\r\n                \r\n            })\r\n            .catch((e: any) => { console.error(e); reject(e); });\r\n    })\r\n}","\r\nimport Filter from '../models/commons/Filter';\r\nimport WebRequest from '../models/commons/WebRequest';\r\nimport { contextPath } from './../constant/Url';\r\nimport { commonAjaxPostCalls, commonAjaxPostCallsWithBlob } from './Promises';\r\nimport ApplicationProfile from './../models/ApplicationProfile';\r\n\r\nexport default class MasterDataService { \r\n    private static instance?: MasterDataService;\r\n\r\n    static getInstance(): MasterDataService {\r\n        if (this.instance == null) {\r\n            this.instance = new MasterDataService();\r\n        }\r\n        return this.instance;\r\n    }\r\n    getById = (request:WebRequest) => {\r\n        const endpoint: string = contextPath().concat(\"api/masterdata/getbyid\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    delete = (request:WebRequest) => {\r\n        const endpoint: string = contextPath().concat(\"api/masterdata/delete\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    list = (request: WebRequest)  => {\r\n        const endpoint: string = contextPath().concat(\"api/masterdata/list\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n\r\n    }\r\n\r\n    update = (request: WebRequest) => {\r\n        const endpoint: string = contextPath().concat(\"api/masterdata/update\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n   \r\n    updateApplicationProfile = (applicationProfile: ApplicationProfile) => {\r\n        const request: WebRequest = {\r\n            profile: applicationProfile\r\n        }\r\n        const endpoint = contextPath().concat(\"api/app/setting/updateprofile\");\r\n        return commonAjaxPostCalls(endpoint, request)\r\n    }\r\n\r\n    generateReport(request: WebRequest) {\r\n        const endpoint: string = contextPath().concat(\"api/app/report/records\");\r\n        return commonAjaxPostCallsWithBlob(endpoint, request);\r\n\r\n    }\r\n}","\r\nimport User from './../models/User';\r\nimport WebRequest from '../models/commons/WebRequest';\r\nimport { contextPath } from './../constant/Url';\r\nimport { commonAjaxPostCalls, commonAjaxPublicPostCalls } from './Promises';\r\nimport WebResponse from '../models/commons/WebResponse';\r\nimport { updateAccessToken } from './../middlewares/Common';\r\nexport default class UserService {\r\n    private static instance?: UserService;\r\n\r\n    static getInstance(): UserService {\r\n        if (this.instance == null) {\r\n            this.instance = new UserService();\r\n        }\r\n        return this.instance;\r\n    }\r\n    updateProfile = (user: User) => {\r\n\r\n        const request: WebRequest = {\r\n            user: user\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/member/account/updateprofile\")\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    saveUser = (user: User) => {\r\n\r\n        const request: WebRequest = {\r\n            user: user\r\n        } \r\n        const endpoint = contextPath().concat(\"api/public/register\")\r\n        return commonAjaxPublicPostCalls(endpoint, request);\r\n    }\r\n    requestApplicationId = (callbackSuccess: (response: WebResponse) => any, callbackError: ()=>any) => {\r\n        const url = contextPath() + \"api/accountdashboard/requestid\";\r\n        commonAjaxPostCalls(url, {}).then(data => {\r\n            if (data.code != \"00\") {\r\n                alert(\"Error requesting app ID\");\r\n                return;\r\n            }\r\n            const response = data.rawAxiosResponse;\r\n            updateAccessToken(response);\r\n            console.debug(\"response header:\", response.headers['api_token']);\r\n            callbackSuccess(data);\r\n        }).catch(e => {\r\n            console.error(\"ERROR requestApplicationId: \", e);\r\n            callbackError();\r\n        })\r\n\r\n    }\r\n    requestApplicationIdNoAuth = (callbackSuccess: (response:WebResponse)=>any, callbackError: ()=>any) => {\r\n        const url =   contextPath() + \"api/account/requestid\";\r\n        commonAjaxPublicPostCalls(url, {}).then(data => {\r\n          if (data.code != \"00\") {\r\n              alert(\"Error requesting app ID\");\r\n              return;\r\n          } \r\n          callbackSuccess(data);\r\n      }).catch(e=>{\r\n          console.error(\"ERROR requestApplicationId No Auth: \", e);\r\n        //   alert(\"Error, please reload OR try again\");\r\n            callbackError();\r\n      })\r\n          \r\n      }\r\n\r\n}","\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport { contextPath } from './../constant/Url';\r\nimport Filter from '../models/commons/Filter';\r\nimport Employee from '../models/Employee';\r\nimport WebRequest from '../models/commons/WebRequest';\r\nexport default class MusyrifManagementService {\r\n\r\n    private static instance?: MusyrifManagementService;\r\n\r\n    static getInstance(): MusyrifManagementService {\r\n        if (this.instance == null) {\r\n            this.instance = new MusyrifManagementService();\r\n        }\r\n        return this.instance;\r\n    }\r\n    public employeeList(filter: Filter) {\r\n        return commonAjaxPostCalls(contextPath() + \"/api/musyrifmanagement/employees\", {\r\n            filter: filter\r\n        });\r\n    }\r\n    activate(emp: Employee, active: boolean) {\r\n        const request:WebRequest = {\r\n            employee_id : emp.id,\r\n            active : active,\r\n        }\r\n        return commonAjaxPostCalls(contextPath() + \"/api/musyrifmanagement/activate\", request);\r\n    }\r\n}","\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport { contextPath } from '../constant/Url';\r\nimport Filter from '../models/commons/Filter';\r\nimport PointRecord from './../models/PointRecord';\r\nimport AttachmentInfo from './../models/settings/AttachmentInfo';\r\nimport WebRequest from './../models/commons/WebRequest';\r\nimport MedicalRecord from './../models/MedicalRecord';\r\nexport default class StudentService {\r\n    \r\n\r\n    private static instance?: StudentService;\r\n\r\n    static getInstance(): StudentService {\r\n        if (this.instance == null) {\r\n            this.instance = new StudentService();\r\n        }\r\n        return this.instance;\r\n    }\r\n    public submitPointRecord(pointRecord: PointRecord, attachmentInfo?:AttachmentInfo) {\r\n        if (attachmentInfo) {\r\n            attachmentInfo.data = \"\";\r\n        }\r\n        const req:WebRequest = {\r\n            pointRecord: pointRecord,\r\n            attachmentInfo: attachmentInfo\r\n        }\r\n        return commonAjaxPostCalls(contextPath() + \"/api/dormitorymanagement/submitpointrecord\", req);\r\n    }\r\n    public getClasses(filter: Filter) {\r\n        return commonAjaxPostCalls(contextPath() + \"/api/dormitorymanagement/classes\", {});\r\n    }\r\n\r\n    public submitMedicalRecord = (record:MedicalRecord) => {\r\n        const req:WebRequest = {\r\n            medicalRecord: record\r\n        }\r\n        return commonAjaxPostCalls(contextPath() + \"/api/dormitorymanagement/submitmedicalrecord\", req)\r\n    }\r\n    public loadMonthlyMedicalRecord = (studentId:number, month:number, year:number) => {\r\n        const req:WebRequest = {\r\n            filter: {\r\n                year:year, month:month,\r\n                fieldsFilter: {student_id:studentId}\r\n            }\r\n        }\r\n        return commonAjaxPostCalls(contextPath() + \"/api/dormitorymanagement/monthlymedicalrecord\", req)\r\n    }\r\n\r\n    public setPointDropped = (id: number, dropped: boolean) => {\r\n        return commonAjaxPostCalls(contextPath() + \"/api/dormitorymanagement/droppoint\", { \r\n            pointRecord : {\r\n                id: id,\r\n                dropped_at: dropped?new Date():null\r\n            }\r\n        });\r\n    }\r\n     \r\n}","\r\nimport MasterDataService from '../services/MasterDataService';\r\nimport UserService from '../services/UserService';\r\n\r\nimport Services from './../services/Services';\r\nimport MusyrifManagementService from './../services/MusyrifManagementService';\r\nimport StudentService from '../services/StudentService';\r\n\r\nexport const initState: { services: Services } = {\r\n    services: {\r\n        userService: UserService.getInstance(), \r\n        masterDataService: MasterDataService.getInstance(),\r\n        musyrifManagementService: MusyrifManagementService.getInstance(),\r\n        studentService: StudentService.getInstance(),\r\n    }\r\n\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default reducer;","import * as appReducer from \"./appReducer\"\r\nimport * as userReducer from \"./userReducer\" \r\nimport  * as servicesReducers from './servicesReducer';\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport const rootReducer = combineReducers(\r\n    {\r\n        appState: appReducer.reducer,\r\n        userState: userReducer.reducer, \r\n        servicesState: servicesReducers.reducer\r\n    }\r\n);\r\n\r\nexport const initialState = {\r\n    appState: appReducer.initState,\r\n    userState: userReducer.initState, \r\n    servicesState: servicesReducers.initState\r\n}\r\n\r\nexport default rootReducer;","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\nconst axios = require('axios');\r\nexport const performLoginMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGIN) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n    axios.post(action.meta.url, 'email='+action.meta.email+ '&password='+action.meta.password, {\r\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\r\n    }).then(axiosResponse => {\r\n        const responseJson = axiosResponse.data;\r\n        let loginKey: string = \"\";\r\n        let loginSuccess: boolean = false;\r\n       \r\n        if (responseJson.code != null && responseJson.code == \"00\") {\r\n            loginKey = axiosResponse.headers['api_token'];\r\n            console.log(\"api_token: \", loginKey);\r\n            loginSuccess = true;\r\n        } else {\r\n        }\r\n        let newAction = Object.assign({}, action, {\r\n            payload: {\r\n                loginStatus: loginSuccess,\r\n                loginKey: loginKey,\r\n                loggedUser: responseJson.user\r\n            }\r\n        });\r\n        common.updateAccessToken(axiosResponse);\r\n        delete newAction.meta;\r\n        store.dispatch(newAction);\r\n    })\r\n        .catch(console.log)\r\n        .finally(() => { app.endLoading(); });\r\n\r\n}\r\n \r\n\r\nexport const getLoggedUserMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_LOGGED_USER) { return next(action); }\r\n\r\n    let headers = common.commonAuthorizedHeader();\r\n\r\n    axios.post(action.meta.url, (action.payload), {\r\n        headers: headers\r\n    }).then(response => {\r\n        const data = response.data;\r\n\r\n        if (!data) {\r\n            alert(\"Error performing request\");\r\n            return;\r\n        }\r\n\r\n        let newAction = Object.assign({}, action, { payload: { data } });\r\n        delete newAction.meta;\r\n        store.dispatch(newAction);\r\n    })\r\n        .catch(console.log).finally(param => {\r\n            action.meta.app.endLoading();\r\n            action.meta.app.refresh();\r\n        });\r\n}\r\n\r\n\r\nexport const performLogoutMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGOUT) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n\r\n    axios.post(action.meta.url, (action.payload), {\r\n        headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => {\r\n            const responseJson = response.data;\r\n            let logoutSuccess = false;\r\n            if (responseJson.code == \"00\") {\r\n                logoutSuccess = true;\r\n            } else {\r\n                alert(\"Logout Failed\");\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    loginStatus: !logoutSuccess\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(console.log).finally(param => app.endLoading());\r\n}\r\n\r\nexport const setLoggedUserMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.SET_LOGGED_USER) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\n\r\nconst POST_METHOD = \"post\"; \r\n\r\nexport const getMessagesMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_MESSAGE) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: common.commonAuthorizedHeader()\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"sendChatMessageMiddleware Response:\", data);\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n \r\nexport const storeChatMessageLocallyMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.STORE_MESSAGE) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n} \r\n\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport { initialState, rootReducer } from './reducers' \r\nimport * as userMiddleware from '../middlewares/UserMiddleware' \r\nimport * as realtimeChatMiddleware from '../middlewares/RealtimeChatMiddleware' \r\n \r\nlet store = null;\r\nexport const getStore = () => {\r\n    return store;\r\n}\r\nexport const configureStore = () => {\r\n    store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        applyMiddleware(   \r\n\r\n            //user related\r\n            userMiddleware.performLoginMiddleware,\r\n            userMiddleware.performLogoutMiddleware,  \r\n            userMiddleware.getLoggedUserMiddleware, \r\n            userMiddleware.setLoggedUserMiddleware,\r\n \r\n\r\n            /*realtime chat*/\r\n            realtimeChatMiddleware.storeChatMessageLocallyMiddleware,\r\n            realtimeChatMiddleware.getMessagesMiddleware,\r\n\r\n        )\r\n    );\r\n\r\n    return store;\r\n}\r\n   \r\n\r\nexport default configureStore;","import {  getStore } from '../redux/configureStore';\r\nexport const commonAuthorizedHeader = () => {\r\n    return {\r\n        'Content-Type': 'application/json',\r\n        'requestId': getRequestId(),//'localStorage.getItem(\"requestId\")',\r\n        'Authorization': 'Bearer '+getLoginKey()\r\n    }\r\n};\r\nexport const commonHeader = () => {\r\n    return {\r\n        'Content-Type': 'application/json',\r\n        'requestId': getRequestId(), \r\n    }\r\n};\r\n\r\nconst LOGIN_KEY:string = \"dormitory-app-login-key-2\";\r\n \r\nexport const getAssetsPath = () :string => {\r\n    const store = getStore(); \r\n    if (null == store) return \"\";\r\n    const state = store.getState();\r\n    return state.userState.assetsPath;\r\n}\r\n\r\nexport const getRequestId = () :string => {\r\n    const store = getStore();\r\n    if (null == store) return \"\";\r\n    const state = store.getState();\r\n    return state.userState.requestId;\r\n}\r\nexport const getLoginKey = () => {\r\n    return getCookie(LOGIN_KEY);\r\n}\r\n\r\nexport const updateAccessToken = (axiosResponse) => {\r\n    if (axiosResponse && axiosResponse.headers && axiosResponse.headers['api_token']) {\r\n        const accessToken = axiosResponse.headers['api_token'];\r\n        // console.debug(\"update access token: \", accessToken);\r\n        setCookie(LOGIN_KEY, accessToken);\r\n    }\r\n} \r\nexport const setLoginKeyCookie = (cookieValue:any) => {\r\n    setCookie(LOGIN_KEY, cookieValue);\r\n}\r\nexport const setCookie = function (cname, cvalue, exdays=1) {\r\n    var d = new Date();\r\n    d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\r\n    var expires = \"expires=\" + d.toUTCString();\r\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n}\r\nexport const getCookie = function (cname) {\r\n    var name = cname + \"=\";\r\n    var decodedCookie = decodeURIComponent(document.cookie);\r\n    var ca = decodedCookie.split(';');\r\n    for (var i = 0; i < ca.length; i++) {\r\n        var c = ca[i];\r\n        while (c.charAt(0) == ' ') {\r\n            c = c.substring(1);\r\n        }\r\n        if (c.indexOf(name) == 0) {\r\n            return c.substring(name.length, c.length);\r\n        }\r\n    }\r\n    return \"\";\r\n}","import { getAssetsPath } from \"../middlewares/Common\";\r\n\r\nconst devMode = \r\n    document.getElementById(\"rootPath\").value == \"${contextPath}\" || \r\n    document.getElementById(\"rootPath\").value == \"\";\r\nconst rootValue = devMode ?\r\n     \"/universal-good-shop/\" : document.getElementById(\"rootPath\").value+\"/\";\r\n\r\nexport const contextPath = function(){\r\n    const contextPath = devMode? \"http://localhost:8080\".concat(rootValue):rootValue;\r\n    //console.debug(\"contextPath: \",contextPath,document.getElementById(\"rootPath\").value);\r\n    return contextPath;\r\n}\r\n\r\n// export const baseImageUrl() = contextPath()+\"assets/images/\"; \r\n// export const baseImageUrl() = \"https://developmentmode.000webhostapp.com/uploaded_storage/\"; \r\n// export const baseImageUrl() = \"http://localhost/storage/images/\"; \r\nexport const baseImageUrl = () => getAssetsPath()+ \"images/\"; \r\nexport const baseDocumentUrl = () => getAssetsPath()+ \"documents/\"; \r\n// export const baseImageUrl() = contextPath()+\"WebAsset/Shop1/Images/\"; \r\n\r\nexport const POST = \"post\";\r\n","import * as types from './types'\r\nimport * as url from '../constant/Url'\r\nimport { contextPath } from '../constant/Url'; \r\nimport User from './../models/User';\r\nimport ApplicationProfile from './../models/ApplicationProfile';\r\nimport WebResponse from '../models/commons/WebResponse';\r\n\r\nconst usedHost = url.contextPath();\r\nconst apiBaseUrl = usedHost + \"api/public/\"\r\nconst apiEntityBaseUrl = usedHost + \"api/app/entity/\"\r\nconst apiAccount = usedHost + \"api/accountdashboard/\"\r\nconst apiAdmin = usedHost + \"api/app/admin/\"    \r\n\r\nexport const getEntityProperty = (entityName, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_PROPERTY,\r\n        payload: {\r\n            entity: entityName\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_PROPERTY,\r\n            url: apiEntityBaseUrl.concat(\"config\"),\r\n            app: app,\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\n\r\nexport const getManagementMenus = (app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_MANAGEMENT_MENUS,\r\n        payload: {},\r\n        meta: {\r\n            type: types.GET_MANAGEMENT_MENUS,\r\n            url: apiEntityBaseUrl.concat(\"managementpages\"),\r\n            app: app,\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n \r\n\r\nexport const setRequestId = (data:WebResponse, app) => {\r\n   \r\n    const ret= {\r\n        type: types.SET_REQUEST_ID,\r\n        payload: { loginStatus: data.loggedIn, referer:app, ...data },\r\n        meta: {\r\n            type: types.SET_REQUEST_ID, \r\n        }\r\n    };\r\n    // console.debug(\"setRequestId: \", ret);\r\n    return ret;\r\n}\r\n\r\nexport const getMessageList = (app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.GET_MESSAGE,\r\n        payload: {},\r\n        meta: {\r\n            type: types.GET_MESSAGE, app: app,\r\n            url: apiAdmin.concat(\"getmessages\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const storeMessageLocally = (messages) => {\r\n\r\n    return {\r\n        type: types.STORE_MESSAGE,\r\n        payload: {\r\n            entities: messages\r\n        },\r\n        meta: {\r\n            type: types.STORE_MESSAGE,\r\n        }\r\n    };\r\n}\r\n    \r\n\r\nexport const performLogout = (app) => {\r\n    app.startLoading();\r\n    let loginRequest = {\r\n        type: types.DO_LOGOUT,\r\n        payload: {},\r\n        meta: { app: app, type: types.DO_LOGOUT, url: apiAccount.concat(\"logout\") }\r\n    };\r\n    return loginRequest;\r\n}\r\n\r\nexport const performLogin = (email, password, app) => {\r\n    app.startLoading();\r\n    let loginRequest = {\r\n        type: types.DO_LOGIN,\r\n        payload: {},\r\n        meta: {\r\n            type: types.DO_LOGIN, \r\n            url: contextPath().concat(\"api/account/login\"),\r\n                email: email, password: password,\r\n                app: app\r\n        }\r\n    };\r\n    return loginRequest;\r\n}\r\n\r\nexport const getLoggedUser = (app) => {\r\n    app.startLoading();\r\n    let request = {\r\n        type: types.GET_LOGGED_USER,\r\n        payload: {},\r\n        meta: { type: types.GET_LOGGED_USER, url: apiAccount.concat(\"user\"), app: app }\r\n    };\r\n    return request;\r\n}\r\n\r\nexport const setLoggedUser = (user: User) => {\r\n\r\n    let request = {\r\n        type: types.SET_LOGGED_USER,\r\n        payload: { user: Object.assign(new User(), user) },\r\n        meta: { type: types.SET_LOGGED_USER }\r\n    };\r\n    return request;\r\n}\r\n\r\nexport const setApplicationProfile = (applicationProfile: ApplicationProfile) => {\r\n\r\n    let request = {\r\n        type: types.SET_APPLICATION_PROFILE,\r\n        payload: { applicationProfile: applicationProfile },\r\n        meta: { type: types.SET_APPLICATION_PROFILE }\r\n    };\r\n    return request;\r\n}\r\n\r\nexport const removeEntity = () => ({\r\n    type: types.REMOVE_SHOP_ENTITY,\r\n    payload: {},\r\n    meta: { type: types.REMOVE_SHOP_ENTITY }\r\n})\r\n\r\n\r\nexport const  setMainApp = (mainApp:any) => ({\r\n    type: types.SET_MAIN_APP,\r\n    payload: mainApp,\r\n    meta: { type: types.SET_MAIN_APP }\r\n})\r\n\r\n","\r\nexport const mapCommonUserStateToProps = (state) => {\r\n    return {\r\n        applicationProfile: state.userState.applicationProfile,\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n        requestId: state.userState.requestId, \r\n        services: state.servicesState.services,\r\n        mainApp: state.appState.mainApp\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport './Loader.css'\r\n\r\nclass Loader extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            timer: 130,\r\n            intervalId: 0\r\n        }\r\n        this.update = () => {\r\n            if (this.state.timer < 0) {\r\n                clearInterval(this.state.intervalId);\r\n            }\r\n            console.log(\"tick\")\r\n            this.setState({ timer: this.state.timer - 1 })\r\n            if (this.state.timer < 0 && this.props.endMessage) {\r\n                this.props.endMessage();\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.withTimer == true) {\r\n            let intervalId = setInterval(this.update, 1, null);\r\n            this.setState({ intervalId: intervalId });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let className = \"message message-\" + this.props.type;\r\n\r\n        if (this.props.realtime == true) {\r\n            return <LoaderContent progress={this.props.progress} realtime={this.props.realtime} />\r\n        }\r\n\r\n        return (\r\n            <div className={className} >\r\n                <LoaderContent progress={this.props.progress} realtime={this.props.realtime} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nfunction LoaderContent(props) {\r\n    if (props.realtime) {\r\n        return (\r\n            <div className=\"row container-fluid bg-light\" style={{margin:0, position: 'fixed', zIndex: 100 }}>\r\n                <div className=\"col-1\">\r\n                <span style={{marginBottom:'3px'}} className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                </div>\r\n                <div className=\"col-11 progress\" style={{padding:0, marginTop: '7px', height:'10px'}}  >\r\n                    <div className=\"bg-primary\" style={{\r\n                        width: props.progress + \"%\",\r\n                        transitionDuration: '50ms',\r\n                        margin: 0,\r\n                    }}>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <button className=\"btn btn-dark \" type=\"button\" disabled>\r\n            <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n            <span className=\" \">Loading...</span>\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Loader;","import React, { Component } from 'react'\r\n\r\nclass Alert extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.yesButtonRef = React.createRef();\r\n        this.noButtonRef = React.createRef();\r\n\r\n        this.onYes = (e) => {\r\n             \r\n            if (this.props.onYes) {\r\n                this.props.onYes(e);\r\n            }\r\n        }\r\n        this.onNo = (e) => {\r\n            \r\n            if (this.props.onNo) {\r\n                this.props.onNo(e);\r\n            }\r\n        }\r\n        this.onClose = (e) => {\r\n            if (this.props.onClose) {\r\n                this.props.onClose(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        const isError = this.props.isError == true;\r\n        if (!isError && this.yesButtonRef.current) {\r\n            this.yesButtonRef.current.focus();\r\n        } else if (isError && this.noButtonRef.current) {\r\n            this.noButtonRef.current.focus();\r\n        } else if (isError && this.yesButtonRef.current) {\r\n            this.yesButtonRef.current.focus();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const title = this.props.title ? this.props.title : \"Info\";\r\n        const yesOnly = this.props.yesOnly == true;\r\n        const isError = this.props.isError == true;\r\n        const headerClassName = isError ? 'bg-danger':'bg-info';\r\n        const headerFontClassName = 'text-light';\r\n        return (\r\n            <>\r\n                <Backdrop />\r\n                <div className=\"modal fade show\" style={{ display: 'block' }} id=\"exampleModalCenter\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            <Header fontClassName={headerFontClassName} className={headerClassName} title={title} onClose={this.onClose} />\r\n                            <div className=\"modal-body\"> {this.props.children}</div>\r\n                            <Footer noButtonRef={this.noButtonRef} yesButtonRef={this.yesButtonRef} yesOnly={yesOnly} onYes={this.onYes} onNo={this.onNo} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction Backdrop(props) {\r\n    return (\r\n        <div className=\"modal-backdrop\" style={{backgroundColor: 'rgba(100,100,100,0.7)'}} ></div>\r\n    );\r\n}\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <div className={\"modal-footer \"+props.className}>\r\n            <button ref={props.yesButtonRef} type=\"button\"\r\n                onClick={props.onYes} className=\"btn btn-outline-primary\">Yes</button>\r\n            {props.yesOnly ? null : <button ref={props.noButtonRef} type=\"button\"\r\n                onClick={props.onNo} className=\"btn btn-outline-secondary\">No</button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Header(props) {\r\n    return (<div className={\"modal-header \"+props.className}>\r\n        <h5 className={\"modal-title \"+props.fontClassName }id=\"exampleModalCenterTitle\">{props.title}</h5>\r\n        <button onClick={props.onClose} type=\"button\" className=\"close\">\r\n            <span aria-hidden=\"true\" className={props.fontClassName}><i className=\"fas fa-times\"/></span>\r\n        </button>\r\n    </div>)\r\n}\r\n\r\nexport default Alert;","import BaseEntity from './BaseEntity';\n\nexport default class ApplicationProfile extends BaseEntity{\n\tname?:string;\n\tcode?:string;\n\tdescription?:string;\n\tabout?:string;\n\twelcoming_message?:string;\n\ticonUrl?:string;\n\tpageIcon?:string;\n\tbackgroundUrl?:string;\n\tcolor?:string;\n\tfontColor?:string;\n\tcontact?:string;\n\taddress?:string;\n\n}\n","\r\nimport ApplicationProfile from './../models/ApplicationProfile';\r\nimport { baseImageUrl } from './../constant/Url';\r\nexport const doItLater = (callback:()=>any, intervalMs:number) => {\r\n    const timeout = setTimeout(()=>{\r\n       callback();\r\n        clearTimeout(timeout);\r\n      }, intervalMs)\r\n}\r\n\r\n\r\nexport const  updateFavicon = (profile: ApplicationProfile) => {\r\n    if (profile.pageIcon) {\r\n      let link = document.querySelector('link[rel=\"shortcut icon\"]') ||\r\n        document.querySelector('link[rel=\"icon\"]');\r\n      if (!link) {\r\n        link = document.createElement('link');\r\n        link.id = 'favicon';\r\n        link.setAttribute(\"rel\", 'shortcut icon');\r\n        document.head.appendChild(link);\r\n      }\r\n      link.setAttribute(\"href\", baseImageUrl() + profile.pageIcon);\r\n    }\r\n  }","import { doItLater } from './EventUtil';\r\nlet stompClient = undefined;\r\nlet wsConnected = false;\r\nlet websocketUrl = undefined;\r\nconst onConnectCallbacks = new Array();\r\nconst subscriptionCallbacks = new Array();\r\nexport const isWsConnected = () => {\r\n\treturn wsConnected == true;\r\n}\r\nexport const setWebSocketUrl = (url) => {\r\n\twebsocketUrl = url;\r\n}\r\nexport const sendToWebsocket = (url, requestObject) => {\r\n\tif (!wsConnected || !stompClient) {\r\n\t\tconsole.info(\"Connecting\");\r\n\t\treturn false;\r\n\t}\r\n\tconsole.debug(\"SEND WEBSOCKET\")\r\n\tstompClient.send(url, {}, JSON.stringify(requestObject));\r\n\treturn true;\r\n}\r\n\r\nexport const addOnWsConnectCallbacks = (...callbacks) => {\r\n\tfor (let i = 0; i < callbacks.length; i++) {\r\n\t\tconst element = callbacks[i];\r\n\t\tonConnectCallbacks.push(element);\r\n\t}\r\n}\r\n\r\nexport const performWebsocketConnection = () => {\r\n\r\n\treturn;\r\n\tvar socket = new window.SockJS(websocketUrl);\r\n\tstompClient  = window.Stomp.over(socket);\r\n\tstompClient .connect({}, function (frame) {\r\n\t\twsConnected = true;\r\n\t\t// setConnected(true);\r\n\t\tconsole.log('Websocket CONNECTED: ', websocketUrl, 'frame :', frame, stompClient.ws._transport.ws.url);\r\n\t\tconsole.debug(\"subscriptionCallbacks :\", subscriptionCallbacks.length);\r\n\t\t// document.getElementById(\"ws-info\").innerHTML =\r\n\t\t// stompClients.ws._transport.ws.url;\r\n\t\tfor (let i = 0; i < subscriptionCallbacks.length; i++) {\r\n\t\t\tconst callBackObject = subscriptionCallbacks[i];\r\n\r\n\t\t\tif (callBackObject) {\r\n\r\n\t\t\t\tstompClient.subscribe(callBackObject.subscribeUrl, (response) => {\r\n\t\t\t\t\tvar respObject = JSON.parse(response.body);\r\n\t\t\t\t\tcallBackObject.callback(respObject);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < onConnectCallbacks.length; i++) {\r\n\t\t\tconst callback = onConnectCallbacks[i];\r\n\t\t\tcallback(frame);\r\n\t\t}\r\n\r\n\t}, (e) => {\r\n\t\tconsole.warn(\"Error connection websocket, reconnect\");\r\n\t\tdoItLater(performWebsocketConnection, 2000);\r\n\t});\r\n\r\n\t \r\n}\r\n\r\n /**\r\n  * \r\n  * @param  {...WsCallback} callBackObjects \r\n  */\r\nexport const registerWebSocketCallbacks = (...callBackObjects) => {\r\n\r\n\tif (null == callBackObjects) {\r\n\t\treturn;\r\n\t}\r\n\tfor (var i = 0; i < callBackObjects.length; i++) {\r\n\t\tsubscriptionCallbacks.push(callBackObjects[i]);\r\n\t}\r\n}\r\n","import { Component } from 'react';\r\nimport WebResponse from '../models/commons/WebResponse';\r\nimport ApplicationProfile from './../models/ApplicationProfile';\r\nimport User from './../models/User';\r\nimport Services from './../services/Services';\r\nimport { AuthorityType } from '../models/AuthorityType';\r\nimport WebRequest from '../models/commons/WebRequest';\r\nimport { sendToWebsocket } from './../utils/websockets';\r\nimport { doItLater } from './../utils/EventUtil';\r\n\r\nexport default class BaseComponent extends Component<any, any> {\r\n    parentApp: any;\r\n    authenticated: boolean = true;\r\n    state: any = { updated: new Date() };\r\n    constructor(props: any, authenticated = false) {\r\n        super(props);\r\n\r\n        this.authenticated = authenticated\r\n        this.parentApp = props.mainApp;\r\n    }\r\n\r\n    validateLoginStatus = (callback ?:() => any) => {\r\n        if (this.authenticated == false) { \r\n            if (callback) {\r\n                callback();\r\n            }\r\n            return true; }\r\n        if (this.isUserLoggedIn() == false) {\r\n            this.backToLogin();\r\n            return false;\r\n        }\r\n        if (callback) {\r\n            callback();\r\n        }\r\n        return true;\r\n    }\r\n\r\n    protected sendWebSocket = (url: string, payload: WebRequest) => {\r\n        sendToWebsocket(url, payload);\r\n    }\r\n\r\n    protected setWsUpdateHandler = (handler: Function | undefined) => {\r\n        if (this.parentApp) {\r\n            this.parentApp.setWsUpdateHandler(handler);\r\n        }\r\n    }\r\n    protected resetWsUpdateHandler = () => {\r\n        if (this.parentApp) {\r\n            this.parentApp.resetWsUpdateHandler();\r\n        }\r\n    }\r\n\r\n    getApplicationProfile = (): ApplicationProfile => {\r\n        return this.props.applicationProfile == null ? new ApplicationProfile() : this.props.applicationProfile;\r\n    }\r\n\r\n    handleInputChange = (event: any) => {\r\n        const target = event.target;\r\n        const value = target.type == 'checkbox' ? target.checked : target.value;\r\n        this.setState({ [target.name]: value });\r\n        console.debug(\"input changed: \", target.name, value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n     * @param {boolean} withProgress \r\n     */\r\n    startLoading(withProgress: boolean) {\r\n        this.parentApp.startLoading(withProgress);\r\n    }\r\n\r\n    endLoading() {\r\n        this.parentApp.endLoading();\r\n    }\r\n    /**\r\n     * api response must be instance of WebResponse\r\n     * @param method \r\n     * @param withProgress \r\n     * @param successCallback \r\n     * @param errorCallback \r\n     * @param params \r\n     */\r\n    doAjax = (method: Function, withProgress: boolean, successCallback: Function, errorCallback?: Function, ...params: any) => {\r\n        this.startLoading(withProgress);\r\n\r\n        method(...params).then(function (response: WebResponse) {\r\n            if (successCallback) {\r\n                successCallback(response);\r\n            }\r\n        }).catch(function (e) {\r\n            if (errorCallback) {\r\n                errorCallback(e);\r\n            } else {\r\n                if (typeof (e) == 'string') {\r\n                    alert(\"Operation Failed: \" + e);\r\n                }\r\n                alert(\"resource not found\");\r\n            }\r\n        }).finally(() => {\r\n            this.endLoading();\r\n        })\r\n    }\r\n\r\n    commonAjax = (method: Function, successCallback: Function, errorCallback: Function, ...params: any) => {\r\n        this.doAjax(method, false, successCallback, errorCallback, ...params);\r\n    }\r\n    commonAjaxWithProgress = (method: Function, successCallback: Function, errorCallback: Function, ...params: any) => {\r\n        this.doAjax(method, true, successCallback, errorCallback, ...params);\r\n    }\r\n    getLoggedUser = (): User | undefined => {\r\n        const user: User | undefined = this.props.loggedUser;\r\n        if (!user) return undefined;\r\n        user.password = \"^_^\";\r\n        return Object.assign(new User(), user);\r\n    }\r\n    isAdmin = (): boolean => {\r\n        const user = this.getLoggedUser();\r\n        if (!user) return false;\r\n        return user.hasRole(AuthorityType.admin_asrama);\r\n    }\r\n    scrollTop = () => {\r\n        // console.info(\"SCROLL TOP\");\r\n        const opt:ScrollToOptions = { top:0,  behavior: 'smooth' };\r\n        doItLater(()=>{\r\n        window.scrollTo(opt);\r\n        }, 100);\r\n    }\r\n    isUserLoggedIn = (): boolean => {\r\n        const loggedIn = true == this.props.loginStatus && null != this.props.loggedUser;\r\n        console.debug(\"LOgged in: \", loggedIn);\r\n        return loggedIn;\r\n    }\r\n    showConfirmation = (body: any): Promise<boolean> => {\r\n        const app = this;\r\n        return new Promise(function (resolve, reject) {\r\n            const onYes = function (e) {\r\n                resolve(true);\r\n            }\r\n            const onNo = function (e) {\r\n                resolve(false);\r\n            }\r\n            app.parentApp.showAlert(\"Confirmation\", body, false, onYes, onNo);\r\n        });\r\n\r\n    }\r\n    showConfirmationDanger = (body: any): Promise<any> => {\r\n        const app = this;\r\n        return new Promise(function (resolve, reject) {\r\n            const onYes = function (e) {\r\n                resolve(true);\r\n            }\r\n            const onNo = function (e) {\r\n                resolve(false);\r\n            }\r\n            app.parentApp.showAlertError(\"Confirmation\", body, false, onYes, onNo);\r\n        });\r\n\r\n    }\r\n    showInfo = (body: any) => {\r\n        this.parentApp.showAlert(\"Info\", body, true, function () { });\r\n    }\r\n    showError = (body: any) => {\r\n\r\n        this.parentApp.showAlertError(\"Error\", body, true, function () { });\r\n    }\r\n\r\n    backToLogin() {\r\n        if (!this.authenticated || this.props.history == null) {\r\n            return;\r\n        }\r\n        this.props.history.push(\"/login\");\r\n    }\r\n    refresh() {\r\n        this.setState({ updated: new Date() });\r\n    }\r\n\r\n    showCommonErrorAlert = (e: any) => {\r\n        console.error(e);\r\n\r\n        let message;\r\n        if (e.response && e.response.data) {\r\n            message = e.response.data.message;\r\n        } else {\r\n            message = e;\r\n        }\r\n        this.showError(\"Operation Failed: \" + message);\r\n    }\r\n    componentDidMount() {\r\n        if (this.validateLoginStatus()) {\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.authenticated == true && this.isUserLoggedIn() == false) {\r\n            console.debug(typeof this, \"BACK TO LOGIN\");\r\n            this.validateLoginStatus();\r\n        }\r\n    }\r\n\r\n    getServices = (): Services => {\r\n        return this.props.services;\r\n    }\r\n}","\r\nimport React, { useRef, Fragment } from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../constant/stores';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { performLogout } from './../../redux/actionCreators';\r\nimport { getMenus } from '../../constant/Menus';\r\nimport './Header.css';\r\nimport User from './../../models/User';\r\nimport { baseImageUrl } from './../../constant/Url';\r\nimport Menu from './../../models/settings/Menu';\r\nclass IState {\r\n    showNavLinks: boolean = false;\r\n}\r\nclass Header extends BaseComponent {\r\n    state: IState = new IState();\r\n    buttonToggleNavRef: React.RefObject<HTMLButtonElement> = React.createRef();\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    toggleNavLinks = () => {\r\n        this.setState({ showNavLinks: !this.state.showNavLinks });\r\n    }\r\n    onLogout = (e: any) => {\r\n        const app = this;\r\n        app.showConfirmation(\"Logout?\").then(\r\n            function (ok) {\r\n                if (ok) {\r\n                    app.props.performLogout(app.parentApp);\r\n                }\r\n            }\r\n        )\r\n    }\r\n    setMenu = (menu: Menu) => {\r\n        if (this.state.showNavLinks && this.buttonToggleNavRef.current) {\r\n            this.buttonToggleNavRef.current.click();\r\n        }\r\n        this.props.setMenu(menu);\r\n\r\n    }\r\n    render() {\r\n        const showNavLinks: boolean = this.state.showNavLinks;\r\n        const menus = getMenus();\r\n        const user = this.getLoggedUser();\r\n        return (\r\n            <div className=\"bg-dark container-fluid\" style={{ position: 'fixed', zIndex: 55, padding: 0, margin: 0 }}>\r\n                <NavBarTop label={this.getApplicationProfile().name} />\r\n                <nav id=\"navbar\" className=\"navbar navbar-expand-lg navbar-dark bg-dark\" style={{ width: '100%' }}>\r\n                    {/* <div className=\"container-fluid\"></div> */}\r\n                    <a id=\"navbar-brand\" className=\"navbar-brand\" href=\"#\">{this.getApplicationProfile().name}</a>\r\n                    <button ref={this.buttonToggleNavRef} onClick={this.toggleNavLinks} className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target=\"#navbarToggler\" aria-controls=\"navbarToggler\"\r\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <i className={showNavLinks ? \"fas fa-times\" : \"fas fa-bars\"} />\r\n                    </button>\r\n                    <div className={\"collapse navbar-collapse\"} id=\"navbarToggler\">\r\n                        <ul id=\"navbar-top\" className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n                            {menus.map(menu => {\r\n                                if (menu == null || (menu.authenticated && !user)) return null;\r\n                                if (menu.userAuthorized && menu.userAuthorized(user) == false) return null;\r\n                                const isActive = this.props.activeMenuCode == menu.code;\r\n                                return (\r\n                                    <li key={\"header-menu-\" + new String(menu.code)} className={\"nav-item \" + (isActive ? \"active nav-active\" : \"nav-inactive\")}>\r\n                                        <Link onClick={() => this.setMenu(menu)} className={\"nav-link  \"}\r\n                                            to={menu.url}><span>{menu.name}</span>\r\n                                        </Link></li>\r\n                                )\r\n                            })}\r\n                        </ul >\r\n                        <form className=\"form-inline my-2 my-lg-0\">\r\n                            <UserIcon setMenuNull={this.props.setMenuNull}\r\n                                onLogout={this.onLogout} user={user} />\r\n                        </form >\r\n                    </div >\r\n                </nav >\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst NavBarTop = (props) => {\r\n    return (\r\n        <div id=\"navbar-brand-top\" style={{ paddingLeft: '0.5rem' }} className=\"container-fluid\">\r\n            <a style={{ fontSize: '15px' }} className=\"text-white navbar-brand\" href=\"#\">\r\n                <strong>{props.label}</strong>\r\n            </a>\r\n        </div>\r\n    );\r\n}\r\nconst UserIcon = (props: { user: User | undefined, setMenuNull(): any, onLogout(e): any }) => {\r\n    if (props.user) {\r\n        return (\r\n            <Fragment>\r\n                <Link onClick={props.setMenuNull} style={{ marginRight: \"5px\" }} className=\"btn btn-light btn-sm my-2 my-sm-0\"\r\n                    to='/settings/user-profile'>\r\n                    <img width=\"20\" src={baseImageUrl() + props.user.profileImage} className=\"rounded rounded-circle\" />\r\n                        &nbsp;{props.user.name}\r\n                </Link>\r\n                <a style={{ marginRight: '5px' }} className=\"btn btn-danger btn-sm  my-2 my-sm-0\"\r\n                    onClick={props.onLogout}><i className=\"fas fa-sign-out-alt\"></i>&nbsp;Logout\r\n\t\t\t\t</a>\r\n            </Fragment>);\r\n    }\r\n    return (\r\n\r\n        <Link style={{ marginRight: '5px' }} onClick={props.setMenuNull} className=\"btn btn-sm btn-info my-2 my-sm-0\"\r\n            to='/login'> <i className=\"fas fa-sign-in-alt\"></i>&nbsp;Login\r\n        </Link>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    performLogout: (app: any) => dispatch(performLogout(app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(Header))","\r\nimport React, { Component } from 'react';\r\nimport './Spinner.css';\r\nexport default class Spinner extends Component<any, any>{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const innerDivs:JSX.Element[] = new Array<JSX.Element>();\r\n        for (let i = 0; i <= 11; i++) {\r\n            innerDivs.push(<div key={\"spinner-item-\"+i}></div>);\r\n        }\r\n        return (\r\n            <div style={{width:'85px', height:'85px', display:'block'}} className=\"container-fluid text-center\" >\r\n                 <div style={{visibility:this.props.show == false?'hidden':'visible'}} className=\"lds-spinner\">\r\n                  {innerDivs}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","\r\n\r\nimport React, { RefObject, Component, FormEvent, Fragment, ChangeEvent } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport './Login.css';\r\nimport { performLogin } from '../../../redux/actionCreators';\r\nimport Spinner from './../../loader/Spinner';\r\nimport AnchorWithIcon from './../../navigation/AnchorWithIcon';\r\nclass IState {\r\n    loading: boolean = false; email: string = \"\"; editPassword: string = \"\";\r\n}\r\nclass Login extends BaseComponent {\r\n    state: IState = new IState();\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    startLoading = () => this.setState({ loading: true });\r\n    endLoading = () => this.setState({ loading: false });\r\n    login(e: FormEvent) {\r\n        e.preventDefault();\r\n        this.props.performLogin(this.state.email, this.state.editPassword, this);\r\n    }\r\n    componentDidMount() {\r\n        document.title = \"Login\";\r\n        if (this.isUserLoggedIn()) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n\r\n        if (this.isUserLoggedIn()) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n    updateCredentialProperty = (e: ChangeEvent) => {\r\n        const target = e.target as HTMLInputElement;\r\n        const name: string | null = target.getAttribute(\"name\");\r\n        if (null == name) return;\r\n        this.setState({ [name]: target.value });\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"Login\" style={{ marginTop: '20px' }} >\r\n                <form name='login' onSubmit={(e) => { this.login(e) }}\r\n                    method='POST' className=\"form-signin\">\r\n                    <div className=\"text-center\">\r\n                        <h2><i className=\"fas fa-user-circle\"></i></h2>\r\n                        <h1 className=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\r\n                    </div>\r\n                    <EmailField value={this.state.email} onChange={this.updateCredentialProperty} />\r\n                    <PasswordField value={this.state.editPassword} onChange={this.updateCredentialProperty} />\r\n                    {this.state.loading ? <Spinner /> :\r\n\r\n                        <Fragment>\r\n                            <button className=\"btn text-light\" style={{ marginRight: '5px', backgroundColor: 'rgb(9,26,78)' }} type=\"submit\">\r\n                                Sign in\r\n                            </button>\r\n                            {/* <AnchorWithIcon className=\"btn btn-light border border-dark \" to=\"register\" children=\"Register\" /> */}\r\n                        </Fragment>}\r\n                    <input name=\"transport_type\" type=\"hidden\" value=\"rest\" />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst PasswordField = ({ value, onChange }) => {\r\n    return <Fragment>\r\n        <label className=\"sr-only\">Password</label>\r\n        <input name=\"editPassword\" value={value} onChange={onChange} type=\"password\" id=\"inputPassword\" className=\"form-control\"\r\n            placeholder=\"Password\" required />\r\n    </Fragment>\r\n}\r\nconst EmailField = ({ value, onChange }) => {\r\n    return (<Fragment>\r\n        <label className=\"sr-only\">Email</label>\r\n        <input name=\"email\" value={value} onChange={onChange} type=\"text\"  className=\"form-control\"\r\n            placeholder=\"Email\" required autoFocus />\r\n    </Fragment>)\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    performLogin: (username: string, password: string, app: any) => dispatch(performLogin(username, password, app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(Login))","\nimport BaseComponent from './../BaseComponent';\nexport default class BasePage extends BaseComponent{\n    constructor(props, title:string | undefined|null= undefined, authenticated:boolean = false) {\n        super(props, authenticated);\n        if (title !== undefined && title !== null) {\n            document.title = title;\n        } else {\n            document.title = \"Asrama KIIS\";\n        }\n    }\n\n    componentDidMount() {\n        this.validateLoginStatus(()=>{\n            this.scrollTop();\n        })\n    }\n    // componentWillUnmount() {\n    //     document.title = \"Asrama KIIS\";\n    // }\n}","\r\n\r\nimport React, { ChangeEvent } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../../constant/stores'; \r\nimport User from './../../../../models/User';\r\nimport BasePage from './../../BasePage';\r\n\r\n\r\nclass DashboardMain extends BasePage {\r\n    constructor(props: any) {\r\n        super(props, \"Dashboard\", true);\r\n    }\r\n\r\n    render() {\r\n        const user: User | undefined = this.getLoggedUser();\r\n        if (!user) return null;\r\n        return (\r\n            <div  className=\" section-body container-fluid\">\r\n                <h2>Dashboard</h2>\r\n                <div className=\"alert alert-info\">\r\n                    Welcome, <strong>{user.name}  </strong>\r\n                    <hr/>\r\n                    <p className=\"badge badge-dark\">{(user.roles).join(\", \")}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps\r\n)(DashboardMain))","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from '../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport ApplicationProfile from '../../../models/ApplicationProfile';\r\nimport { baseImageUrl } from '../../../constant/Url';\r\n\r\nclass HomeMain extends BaseComponent {\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Home\";\r\n    }\r\n    render() {\r\n        const applicationProfile: ApplicationProfile = this.getApplicationProfile();\r\n        const imageUrl: string = baseImageUrl() + applicationProfile.backgroundUrl;\r\n        console.debug(\"applicationProfile: \", applicationProfile)\r\n        return (\r\n            <div className=\"section-body container-fluid\" style={{padding:0}}>\r\n                <div className=\"jumbotron\"\r\n                    style={{\r\n                        margin:'0px',\r\n                        marginTop: '20px',\r\n                        backgroundImage: 'url(\"' + imageUrl + '\")',\r\n                        backgroundSize: 'cover',\r\n                        color: applicationProfile.fontColor\r\n                    }}\r\n                >\r\n                    <h1 className=\"display-4\">{applicationProfile.name}</h1>\r\n                    <p className=\"lead\">{applicationProfile.description}</p>\r\n                    <hr className=\"my-4\" />\r\n                    <p>{applicationProfile.welcoming_message}</p>\r\n                    <Link className=\"btn btn-primary btn-lg\" to=\"/about\" role=\"button\">About Us</Link>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n} \r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps, \r\n)(HomeMain))","\r\n\r\nimport  React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux'; \r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport BasePage from './../BasePage';\r\n\r\nclass SettingsMain extends BasePage \r\n{\r\n    constructor(props:any){\r\n        super(props, \"Settings\", true);\r\n    }\r\n    render(){\r\n        return (\r\n            <div id=\"SettingsMain\" className=\"section-body container-fluid\">\r\n                <h2>Settings</h2>\r\n                <div className=\"alert alert-info\">\r\n                    Welcome, <strong>{this.getLoggedUser()?.name}</strong>\r\n                    <hr/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n  })\r\n  \r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n  )(SettingsMain))","\r\nimport React, { Component } from 'react';\r\nexport default class Card extends Component<any, any> {\r\n    constructor(props: any) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div {...this.props.attributes} className={\"card \" + this.props.className}>\r\n                {this.props.title ? <div className=\"card-header\">\r\n                    {this.props.title}\r\n                </div> : null}\r\n                <div className=\"card-body\">\r\n                    {this.props.children}\r\n                </div>\r\n                {this.props.footerContent != undefined ?\r\n                    <div className=\"card-footer\">\r\n                        {this.props.footerContent}\r\n                    </div>\r\n                    : null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","\r\nimport React, { Component } from 'react';\r\ninterface Props {\r\n    orientation?:string,\r\n    show?:boolean,\r\n    children:any,\r\n    label?:any,\r\n    className?:string,\r\n}\r\nexport default class FormGroup extends Component<Props, any>\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        if (false == this.props.show) return null;\r\n        const orientation = this.props.orientation == 'vertical' ? 'vertical' : 'horizontal';\r\n        return (\r\n            <div className={\"form-group \"+ this.props.className+ \" \" + (orientation == 'vertical' ? '' : 'row')}>\r\n                <label className={(orientation == 'vertical' ? '' : 'col-sm-3')}><strong>{this.props.label ? this.props.label : null}</strong></label>\r\n                <div className={(orientation == 'vertical' ? '' : 'col-sm-9')}>\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import AttachmentInfo from '../models/settings/AttachmentInfo';\r\n \r\nexport function toBase64(file, referer, callback) {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file.files[0]);\r\n    reader.onload = () => callback(reader.result, referer);\r\n    reader.onerror = error => {\r\n        alert(\"Error Loading File\");\r\n    }\r\n}\r\n  \r\nexport const getAttachmentInfo = (fileInput:HTMLInputElement): Promise<AttachmentInfo> => {\r\n    return new Promise<AttachmentInfo>((resolve, reject) =>{\r\n        if (null == fileInput.files || !fileInput.files[0]) {\r\n            reject(new Error(\"No file\"));\r\n            return;\r\n        }\r\n        try { \r\n            const file:File = fileInput.files[0]; \r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            console.debug(\"fileInput.files[0]: \", file);\r\n            reader.onload = function () { \r\n                const info:AttachmentInfo = new AttachmentInfo();\r\n                info.setUrl(new String(reader.result).toString());\r\n                // info.\r\n                info.name = file.name;\r\n                resolve(info);\r\n             }\r\n            reader.onerror = function (error) {\r\n                reject(error);\r\n            }\r\n        } catch (e) {\r\n            reject(e);\r\n        }\r\n    });\r\n\r\n}\r\n\r\nexport const toBase64v2 = (fileInput): Promise<string> => {\r\n    return new Promise<string>((resolve, reject) =>{\r\n        try {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(fileInput.files[0]);\r\n            console.debug(\"fileInput.files[0]: \", fileInput.files[0]);\r\n            reader.onload = function () { resolve(new String(reader.result).toString()); }\r\n            reader.onerror = function (error) {\r\n                reject(error);\r\n            }\r\n        } catch (e) {\r\n            reject(e);\r\n        }\r\n    });\r\n\r\n}\r\n \r\n\r\nexport function toBase64FromFile(file) {\r\n    return new Promise(function (resolve, reject) {\r\n        try {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = function () { resolve(reader.result); }\r\n            reader.onerror = function (error) {\r\n                reject(error);\r\n            }\r\n        } catch (e) {\r\n            reject(e);\r\n        }\r\n    });\r\n\r\n} \r\n\r\n/**\r\n * \r\n * @param {Number} totalButton \r\n * @param {Number} currentPage \r\n */\r\nexport const createNavButtons = (totalButton, currentPage) => {\r\n    totalButton = Math.ceil(totalButton);\r\n    if (!currentPage) { currentPage = 0 }\r\n    let buttonData = new Array();\r\n    let min = currentPage - 3 < 0 ? 0 : currentPage - 3;\r\n    let max = currentPage + 3 > totalButton ? totalButton : currentPage + 3;\r\n\r\n    if (min != 0) {\r\n        buttonData.push({\r\n            text: 1,\r\n            value: 0\r\n        });\r\n    }\r\n\r\n    for (let index = min; index < max; index++) {\r\n        buttonData.push({\r\n            text: index + 1,\r\n            value: index\r\n        });\r\n    }\r\n\r\n    if (max != totalButton) {\r\n        buttonData.push({\r\n            text: totalButton,\r\n            value: totalButton - 1\r\n        });\r\n    }\r\n\r\n\r\n    return buttonData;\r\n}\r\n\r\n ","\r\nimport React, { Component } from 'react';\r\ninterface IProps {\r\n    show?:boolean;\r\n    className?:string;\r\n    style?:any;\r\n    onClick?:any;\r\n    iconClassName?:string;\r\n    attributes?:any;\r\n}\r\nexport default class AnchorButton extends Component<IProps, any>\r\n{\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        if (this.props.show == false) return null;\r\n        const btnClassName = this.props.className??\"btn btn-outline-secondary\";\r\n        return (\r\n            <a style={this.props.style} {...this.props.attributes} onClick={this.props.onClick} className={btnClassName} >\r\n                {this.props.iconClassName?\r\n                <span style={this.props.children?{marginRight:'5px'}:{}}><i className={this.props.iconClassName}/></span>\r\n                :\r\n                null}\r\n                {this.props.children}\r\n            </a>\r\n        )\r\n    }\r\n}","import React, { Fragment } from 'react'\r\nimport AnchorButton from '../../navigation/AnchorButton';\r\nexport const EditField = ({ edit, name, toggleInput, value, updateProperty, ...props }) => {\r\n    return (edit == true ?\r\n        <PropertyInput updateProperty={updateProperty} name={name} toggleInput={toggleInput} value={value} type={props.type} />\r\n        :\r\n        <PropertyLabel name={name} toggleInput={toggleInput} value={value} type={props.type} />\r\n    )\r\n}\r\nconst PropertyInput = ({ name, toggleInput, value, updateProperty, type }) => {\r\n    return (<div className=\"row\">\r\n        <p className=\"col-md-10\"><input type={type ?? 'text'} name={name} onChange={updateProperty} value={value} className=\"form-control\" /></p>\r\n        <div className=\"col-md-2\">\r\n            <AnchorButton attributes={{\r\n                'data-name': name, 'data-enabled': 'false'\r\n            }}\r\n                onClick={toggleInput} className=\"btn btn-secondary btn-sm\">cancel</AnchorButton>\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nconst PropertyLabel = ({ name, toggleInput, value, type }) => {\r\n\r\n    return (<div className=\"row\" >\r\n        <div className=\"col-md-10\">\r\n            <p style={{ backgroundColor: type == 'color' ? value : '#fff' }} >{type == 'color' ? 'Sample Color' : value}</p>\r\n            {type == 'color' ? <p>{value}</p> : null}\r\n        </div>\r\n        <div className=\"col-md-2\">\r\n            <AnchorButton attributes={{\r\n                'data-name': name, 'data-enabled': 'true'\r\n            }} onClick={toggleInput} className=\" btn btn-info btn-sm\">edit</AnchorButton>\r\n        </div>\r\n    </div>)\r\n}\r\n\r\n\r\nexport const EditImage = ({ name, edit, toggleInput, updateProperty }) => {\r\n    if (edit) {\r\n        return (\r\n            <Fragment>\r\n                <div>\r\n                    <AnchorButton attributes={{\r\n                        'data-name': name, 'data-enabled': 'false'\r\n                    }} onClick={toggleInput} className=\" btn btn-secondary btn-sm\">cancel</AnchorButton>\r\n                </div>\r\n                <input onChange={updateProperty} className=\"form control\" accept=\"image/*\" type=\"file\" name={name} />\r\n            </Fragment>);\r\n    }\r\n    return (\r\n        <div>\r\n            <AnchorButton attributes={{\r\n                'data-name': name, 'data-enabled': 'true'\r\n            }} onClick={toggleInput} className=\" btn btn-info btn-sm\">edit image</AnchorButton>\r\n        </div>\r\n    )\r\n}","import React, { ChangeEvent, Component, FormEvent, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport User from './../../../models/User';\r\nimport Card from '../../container/Card';\r\nimport FormGroup from '../../form/FormGroup';\r\nimport { baseImageUrl } from '../../../constant/Url';\r\nimport { setLoggedUser } from './../../../redux/actionCreators';\r\nimport UserService from './../../../services/UserService';\r\nimport WebResponse from '../../../models/commons/WebResponse';\r\nimport { toBase64v2 } from '../../../utils/ComponentUtil';\r\nimport { EditField, EditImage } from './settingHelper'; \r\nimport BasePage from './../BasePage';\r\ninterface EditField { username: boolean, displayName: boolean, editPassword: boolean, profileImage: boolean }\r\nclass IState {\r\n    user?: User = undefined;\r\n    editFields: EditField = {\r\n        username: false,\r\n        displayName: false,\r\n        editPassword: false,\r\n        profileImage: false\r\n    };\r\n    fieldChanged = (): boolean => {\r\n        for (const key in this.editFields) {\r\n            if (this.editFields[key] == true) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\nclass UserProfile extends BasePage {\r\n\r\n    userService: UserService;\r\n    state: IState = new IState();\r\n    constructor(props: any) {\r\n        super(props, \"Edit User Profile\", true);\r\n        this.userService = this.getServices().userService;\r\n        this.state.user = Object.assign(new User(), this.getLoggedUser());\r\n    }\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        document.title = \"User Profile\";\r\n    }\r\n    updateProfileProperty = (e: ChangeEvent) => {\r\n        const target: HTMLInputElement | null = e.target as HTMLInputElement;\r\n        if (null == target) return;\r\n        const user: User | undefined = this.state.user;\r\n        if (!user) return;\r\n\r\n        user[target.name] = target.value;\r\n        this.setState({ user: user });\r\n    }\r\n    updateProfleImage = (e:ChangeEvent) => {\r\n        const target: HTMLInputElement | null = e.target as HTMLInputElement;\r\n        if (null == target) return;\r\n        const app = this;\r\n        const fileName:string|undefined = target.files ? target.files[0].name : undefined;\r\n        if (!fileName) return;\r\n        toBase64v2(target).then(function(imageData) {\r\n           app.setProfileImage(imageData);\r\n        }).catch(console.error);\r\n    }\r\n    setProfileImage = (imageData:string) => {\r\n        const user:User|undefined = this.state.user;\r\n        if (!user) return;\r\n        user.profileImage = imageData;\r\n        this.setState({user:user});\r\n    }\r\n    toggleInput = (e: MouseEvent) => {\r\n        const target: HTMLAnchorElement | null = e.target as HTMLAnchorElement;\r\n        const user: User | undefined = this.state.user;\r\n        const actualLoggedUser: User | undefined = this.getLoggedUser();\r\n        if (null == target || !user || !actualLoggedUser) {\r\n            return;\r\n        }\r\n\r\n        const propertyName: string | null = target.getAttribute(\"data-name\");\r\n        if (null == propertyName) {\r\n            return;\r\n        }\r\n        const enabled: boolean = target.getAttribute('data-enabled') == 'true';\r\n        const editFields = this.state.editFields;\r\n        editFields[propertyName] = enabled;\r\n        if (!enabled) {\r\n            user[propertyName] = actualLoggedUser[propertyName];\r\n        }\r\n        this.setState({ user: user, editFields: editFields });\r\n    }\r\n    saveRecord = (e: FormEvent) => {\r\n        e.preventDefault();\r\n        if (this.state.fieldChanged() == false) {\r\n            return;\r\n        }\r\n        const app = this;\r\n        this.showConfirmation(\"Save Data?\")\r\n            .then(function (ok) {\r\n                if (ok) { app.doSaveRecord(); }\r\n            })\r\n    }\r\n    doSaveRecord = () => {\r\n        const user: User | undefined = this.getUserEditedData();\r\n        if (!user) return;\r\n        if (user.profileImage) {\r\n            this.commonAjaxWithProgress(\r\n                this.userService.updateProfile,\r\n                this.profileSaved, this.showCommonErrorAlert,\r\n                user\r\n            )\r\n        } else {\r\n            this.commonAjax(\r\n                this.userService.updateProfile,\r\n                this.profileSaved, this.showCommonErrorAlert,\r\n                user\r\n            )\r\n        }\r\n    }\r\n    getUserEditedData = (): User | undefined => {\r\n        const user: User | undefined = this.state.user;\r\n        const editFields: EditField = this.state.editFields;\r\n        if (!user) return undefined;\r\n        const editedUser: User = new User();\r\n        for (const key in editFields) {\r\n            const element:boolean = editFields[key];\r\n            if (element && key != 'profileImage') {\r\n                editedUser[key] = user[key];\r\n            }\r\n        }\r\n        if (editFields.profileImage && user.profileImage?.startsWith(\"data:image\")) {\r\n            editedUser.profileImage = user.profileImage;\r\n        }\r\n        return editedUser;\r\n    }\r\n    profileSaved = (response: WebResponse) => {\r\n        this.showInfo(\"Success\");\r\n        this.props.setLoggedUser(response.user);\r\n        const editFields = this.state.editFields;\r\n        for (const key in editFields) {\r\n            editFields[key] = false;\r\n        }\r\n        this.setState({editFields:editFields});\r\n    }\r\n\r\n    render() {\r\n        const user: User | undefined = this.state.user;\r\n        if (!user) return null;\r\n        const editFields: EditField = this.state.editFields;\r\n        return (\r\n            <div  className=\"section-body container-fluid\">\r\n                <h2>User Profile</h2>\r\n                <Card title=\"Profile Data\">\r\n                    <form onSubmit={this.saveRecord}>\r\n                        <div className=\"container-fluid text-center\" style={{marginBottom:'10px'}}>\r\n                            <img style={{marginBottom:'10px'}} width=\"100\" height=\"100\" className=\"rounded-circle border border-primary\" src={user.profileImage?.startsWith(\"data:image\")?user.profileImage:baseImageUrl() + user.profileImage} />\r\n                            <EditImage name=\"profileImage\" edit={editFields.profileImage} updateProperty={this.updateProfleImage} toggleInput={this.toggleInput} />\r\n                        </div>\r\n                        <FormGroup label=\"User Name\">\r\n                            <EditField edit={editFields.username} updateProperty={this.updateProfileProperty} name=\"username\" toggleInput={this.toggleInput} value={user.nickname} />\r\n                        </FormGroup>\r\n                        <FormGroup label=\"Name\">\r\n                            <EditField edit={editFields.displayName} updateProperty={this.updateProfileProperty} name=\"displayName\" toggleInput={this.toggleInput} value={user.name} />\r\n                        </FormGroup>\r\n                        <FormGroup label=\"Password\">\r\n                            <EditField edit={editFields.editPassword} updateProperty={this.updateProfileProperty} name=\"editPassword\" toggleInput={this.toggleInput} value={user.password} />\r\n                        </FormGroup>\r\n                        <FormGroup  >\r\n                           {this.state.fieldChanged()? <input type=\"submit\" className=\"btn btn-primary\" value=\"Save\" />:null}\r\n                        </FormGroup>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n\r\n} \r\n\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    setLoggedUser: (user: User) => dispatch(setLoggedUser(user)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(UserProfile))","import React from 'react'\r\nimport { uniqueId } from './StringUtil';\r\nexport const tableHeader = (...values:string[]) => {\r\n   \r\n    return (<thead>\r\n        <tr>\r\n            {values.map((value)=>{\r\n\r\n                return <th key={uniqueId()}>{value}</th>\r\n            })}\r\n        </tr>\r\n    </thead>)\r\n}\r\nexport const groupArray = function (array, division) {\r\n    if (null == array || array.length == 0) { return [] }\r\n    const groupedArray = new Array();\r\n    const itemPerDivision = Math.ceil(array.length / division)\r\n\r\n    if (itemPerDivision == 1) {\r\n        groupedArray.push(array);\r\n        return groupedArray;\r\n    }\r\n\r\n    for (let i = 0; i < division; i++) {\r\n        groupedArray.push(new Array());\r\n    }\r\n\r\n    let index = 1;\r\n    let divisionIndex = 0;\r\n    for (let i = 0; i < array.length; i++) {\r\n        const element = array[i];\r\n        groupedArray[divisionIndex].push(element);\r\n\r\n        index++;\r\n        if (index > itemPerDivision) {\r\n            divisionIndex++;\r\n            index = 1;\r\n        }\r\n    }\r\n\r\n    return groupedArray;\r\n}\r\n","\nexport default class Filter{\n\tlimit? :number = 5; \n\tpage? :number = 0;\n\torderType?:string;\n\torderBy?:string;\n\tcontains?:boolean; \n\texacts?:boolean;\n\tday?:number;\n\tyear?:number;\n\tmonth?:number;\n\tmodule?:string;\n\tfieldsFilter?:{};\n\tdayTo?:number;\n\tmonthTo?:number;\n\tyearTo?:number;\n\tmaxValue?:number;\n\tavailabilityCheck?:boolean;\n\t\n\t//\n\tuseExistingFilterPage?:boolean = false; \n\n}\n","\r\nimport React, { Component } from 'react';\r\nimport { uniqueId } from './../../utils/StringUtil';\r\ninterface IProps {\r\n    limit: number,\r\n    totalData: number,\r\n    activePage: number,\r\n    onClick: any\r\n}\r\nexport default class NavigationButtons extends Component<IProps, any> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        const buttonIndexes = generateButtonValues(this.props.limit, this.props.totalData, this.props.activePage);\r\n        if (buttonIndexes.length == 0) { return null }\r\n        const lastIndex = buttonIndexes[buttonIndexes.length - 1];\r\n        const nextPage = this.props.activePage + 1 >= lastIndex  ? 0 : this.props.activePage + 1;\r\n        const previusPage = this.props.activePage - 1 < 0? lastIndex-1 : this.props.activePage - 1;\r\n        return (<div>\r\n            <nav aria-label=\"Page navigation example\">\r\n                <ul className=\"pagination\">\r\n                    <li className=\"page-item\"><a className=\"page-link\" onClick={(e) => this.props.onClick(previusPage)}>Previous</a></li>\r\n                    {buttonIndexes.map((page, i) => {\r\n                        return <li key={\"NAV-\"+uniqueId()} className={\"page-item \"+(page-1 == this.props.activePage?\"active\":\"\")}><a className=\"page-link \" onClick={(e) => this.props.onClick(page - 1)} >{page}</a></li>\r\n                    })}\r\n                    <li className=\"page-item\"><a className=\"page-link\" onClick={(e) => this.props.onClick(nextPage)}>Next</a></li>\r\n                </ul>\r\n            </nav>\r\n        </div>)\r\n    }\r\n}\r\n\r\nconst generateButtonValues = (limit: number, totalData: number, currentPage: number) => {\r\n\r\n    /* DISPLAYED BUTTONS */\r\n    const displayed_buttons: number[] = [];\r\n    const buttonCount = Math.ceil(totalData / limit);\r\n\r\n    // console.debug(\"current page:\", currentPage);\r\n    const min = (currentPage) - 1;\r\n    const max = (currentPage) + 3;\r\n    // const min = (currentPage) - 2;\r\n    // const max = (currentPage) + 2;\r\n\r\n    // console.debug(\"min\", min, \"current page:\", currentPage, \"max\", max);\r\n    if (buttonCount > 1) {\r\n        displayed_buttons.push(1);\r\n    }\r\n    for (let i = min; i <= max; i++) {\r\n        if (i > 1 && i <= buttonCount) {\r\n            (displayed_buttons.push(i));\r\n        }\r\n    }\r\n    if (max < buttonCount) {\r\n        displayed_buttons.push(buttonCount);\r\n    }\r\n    return displayed_buttons;\r\n}\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\ninterface IProps{\r\n    show?:boolean, attributes?:any, iconClassName?:string, to?:string, className?:string,\r\n    style?:any, onClick?(e:any):any, children?:any\r\n}\r\nexport default class AnchorWithIcon extends Component<IProps, any>\r\n{\r\n    constructor(props: any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        if (this.props.show == false) return null;\r\n        const btnClassName = this.props.className ?? \"btn btn-outline-secondary\";\r\n        if (this.props.to) {\r\n            return <Link {...this.props.attributes} to={this.props.to} style={this.props.style} onClick={this.props.onClick} className={btnClassName} >\r\n                {this.props.iconClassName ?\r\n                    <span style={{ marginRight: this.props.children?'5px':'0px' }}><i className={this.props.iconClassName} /></span>\r\n                    :\r\n                    null}\r\n                {this.props.children}\r\n            </Link>\r\n        }\r\n        return (\r\n            <a {...this.props.attributes} tyle={this.props.style} onClick={this.props.onClick} className={btnClassName} >\r\n                {this.props.iconClassName ?\r\n                    <span style={{ marginRight: this.props.children?'5px':'0px' }}><i className={this.props.iconClassName} /></span>\r\n                    :\r\n                    null}\r\n                {this.props.children}\r\n            </a>\r\n        )\r\n    }\r\n}","\r\nimport BaseComponent from './../../BaseComponent';\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport Employee from './../../../models/Employee';\r\nimport { AuthorityType } from '../../../models/AuthorityType';\r\nimport MusyrifManagementService from './../../../services/MusyrifManagementService';\r\nimport ToggleButton from './../../navigation/ToggleButton';\r\nimport WebResponse from '../../../models/commons/WebResponse';\r\nimport AnchorWithIcon from './../../navigation/AnchorWithIcon';\r\nclass EmployeeRow extends BaseComponent {\r\n    musyrifManagementService: MusyrifManagementService;\r\n    constructor(props) {\r\n        super(props, true);\r\n        this.musyrifManagementService = this.getServices().musyrifManagementService;\r\n    }\r\n\r\n    getEmployee = (): Employee => {\r\n        return this.props.employee;\r\n    }\r\n    activeStatusUpdate = (response: WebResponse) => {\r\n        // this.showInfo(\"Success\");\r\n        if (this.props.onUpdated) {\r\n            this.props.onUpdated();\r\n        }\r\n    }\r\n    activateMusyrif = (active: boolean) => {\r\n        const emp = this.getEmployee();\r\n        this.commonAjax(\r\n            this.musyrifManagementService.activate,\r\n            this.activeStatusUpdate,\r\n            this.showCommonErrorAlert,\r\n            emp, active);\r\n\r\n    }\r\n    render() {\r\n        const props = this.props;\r\n        const emp = this.getEmployee();\r\n        const isMusyrif = emp.user?.hasRole(AuthorityType.musyrif_asrama);\r\n        return (\r\n            <tr key={emp.id} >\r\n                <td>{props.startingNumber + 1}</td>\r\n                <td>{emp.user?.name}</td>\r\n                <td>{emp.user?.email}</td>\r\n                <td>{emp.user?.nip}</td>\r\n                <td><i className={isMusyrif ? \"fas fa-check text-success\" : \"fas fa-times\"} /></td>\r\n                <td> {isMusyrif == true ?\r\n                    <AnchorWithIcon className=\"btn btn-danger btn-sm\" onClick={(e) => this.activateMusyrif(false)} >\r\n                        Deactivate\r\n                    </AnchorWithIcon> :\r\n                    <AnchorWithIcon className=\"btn btn-success btn-sm\" onClick={(e) => this.activateMusyrif(true)} >\r\n                        Activate\r\n                    </AnchorWithIcon>\r\n                }\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps\r\n)(EmployeeRow))","import React, { Component } from 'react'\r\nimport AnchorButton from './AnchorButton';\r\ninterface Props {\r\n    onClick(val:boolean):void,\r\n    active:boolean,\r\n    yesLabel?:string,\r\n    noLabel?:string\r\n}\r\nexport default class ToggleButton extends Component<Props, any>{\r\n    \r\n    render() {\r\n        const props = this.props;\r\n        const active = this.props.active;\r\n        return (\r\n            <div className=\"btn-group\">\r\n                <AnchorButton className={\"btn  btn-sm \" + (active ? \"btn-dark\" : \"btn-outline-dark\")} onClick={(e) => this.props.onClick(true)} >\r\n                    {props.yesLabel??\"Yes\"}</AnchorButton>\r\n                <AnchorButton className={\"btn  btn-sm \" + (active == false ? \"btn-dark\" : \"btn-outline-dark\")} onClick={(e) => this.props.onClick(false)}  >\r\n                    {props.noLabel??\"No\"}</AnchorButton>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}","import React, { ChangeEvent } from 'react'\r\nimport BaseComponent from './../../BaseComponent';\r\nimport Modal from './../../container/Modal';\r\nimport MasterDataService from './../../../services/MasterDataService';\r\nimport WebResponse from '../../../models/commons/WebResponse';\r\nimport WebRequest from '../../../models/commons/WebRequest';\r\nimport BasePage from './../BasePage';\r\n\r\nexport default class BaseManagementPage extends BasePage {\r\n    protected masterDataService: MasterDataService;\r\n    protected modelName: string = \"undefined\";\r\n    protected formRef: React.RefObject<Modal> = React.createRef();\r\n    protected overrideLoading: boolean;\r\n    constructor(props, modelName?: string, overrideLoading: boolean = false) {\r\n        super(props, \"Asrama KIIS\", true);\r\n        if (modelName) {\r\n            this.modelName = modelName;\r\n        }\r\n        this.overrideLoading = overrideLoading;\r\n        this.masterDataService = this.getServices().masterDataService;\r\n         \r\n    }\r\n    startLoading = (withProgress: boolean = false) => {\r\n        if (this.overrideLoading) {\r\n            this.setState({ loading: true });\r\n        } else {\r\n            super.startLoading(withProgress);\r\n        }\r\n    }\r\n    endLoading = () => {\r\n        if (this.overrideLoading) {\r\n            this.setState({ loading: false });\r\n        } else {\r\n            super.endLoading();\r\n        }\r\n    }\r\n    loadItems = () => {\r\n        const request: WebRequest = {\r\n            filter: this.state.filter,\r\n            modelName: this.modelName\r\n        }\r\n        this.commonAjax(\r\n            this.masterDataService.list,\r\n            this.itemsLoaded,\r\n            this.showCommonErrorAlert,\r\n            request\r\n        )\r\n    }\r\n    itemsLoaded = (response: WebResponse) => {\r\n        this.setState({ items: response.items, totalData: response.totalData });\r\n    }\r\n    emptyRecord = (): any => {\r\n        throw new Error(\"Not Implemented\");\r\n    }\r\n    updateFilter = (e: ChangeEvent) => {\r\n        const filter = this.state.filter;\r\n        const target = (e.target as any);\r\n\r\n        if (!target.value || target.value == \"\") {\r\n            return;\r\n        }\r\n\r\n        let value:any;\r\n        if (target.type == 'number' || (target.dataset && target.dataset['type'] == 'number')) {\r\n            value = parseInt(target.value);\r\n        } else {\r\n            value = target.value;\r\n        }\r\n        filter[target.name] = value;\r\n        this.setState({ filter: filter })\r\n    }\r\n    updateFieldsFilter = (e: ChangeEvent) => {\r\n        const filter = this.state.filter;\r\n        const target = (e.target as any);\r\n        if (!filter.fieldsFilter) {\r\n            filter.fieldsFilter = {};\r\n        }\r\n        filter.fieldsFilter[target.name] = target.value;\r\n        this.setState({ filter: filter })\r\n    }\r\n    loadAtPage = (page: number) => {\r\n        const filter = this.state.filter;\r\n        filter.page = page;\r\n        this.setState({ filter: filter }, this.loadItems);\r\n    }\r\n    updateRecordProp = (e: ChangeEvent) => {\r\n        const target = e.target as any;\r\n        const dataset = target.dataset;\r\n        let value:any;\r\n        if (dataset['type'] && dataset['type'] == 'boolean') {\r\n            value = target.value == \"true\" ? true : false;\r\n        } else {\r\n            value =  target.value;\r\n        }\r\n        const record = this.state.record;\r\n        record[target.name] = value;\r\n        this.setState({ record: record });\r\n    }\r\n    resetForm = (callback?: () => any) => {\r\n        this.setState({ record: this.emptyRecord() }, callback);\r\n    }\r\n    oneRecordLoaded =  (item: any) => {\r\n        this.setState({ record: item }, () => {\r\n            if (this.formRef.current) {\r\n                this.formRef.current.showModal();\r\n            }\r\n            this.scrollTop();\r\n        });\r\n    }\r\n    componentDidMount() {\r\n        super.componentDidMount();\r\n        this.scrollTop();\r\n        this.loadItems();\r\n    }\r\n    recordUpdated = (response: WebResponse) => {\r\n        this.resetForm(() => {\r\n            if (this.formRef.current) {\r\n                this.formRef.current.hideModal();\r\n            }\r\n            this.showInfo(\"Success Update\");\r\n            this.loadItems();\r\n        });\r\n    }\r\n    protected callApiSubmit = (request: WebRequest) => {\r\n        this.commonAjax(\r\n            this.masterDataService.update,\r\n            this.recordUpdated,\r\n            this.showCommonErrorAlert,\r\n            request\r\n        )\r\n    }\r\n}","import React, { ChangeEvent } from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport Employee from './../../../models/Employee';\r\nimport { tableHeader } from './../../../utils/CollectionUtil';\r\nimport Filter from '../../../models/commons/Filter'; \r\nimport FormGroup from './../../form/FormGroup';\r\nimport NavigationButtons from './../../navigation/NavigationButtons';\r\nimport EmployeeRow from './EmployeeRow';\r\nimport User from '../../../models/User';\r\nimport ToggleButton from './../../navigation/ToggleButton';\r\nimport BaseManagementPage from './BaseManagementPage';\r\nclass State {\r\n    items:Employee[] = [];\r\n    filter:Filter = new Filter();\r\n    totalData:number = 0;\r\n}\r\nclass MusyrifManagement extends BaseManagementPage{\r\n    state:State = new State();\r\n    constructor(props) {\r\n        super(props, 'employee');\r\n        this.state.filter.limit = 10;\r\n        this.state.filter.fieldsFilter = {\r\n            'musyrif_only':true\r\n        }\r\n    }\r\n    setMusyrifOnly = (musyrifOnly:boolean) => {\r\n        const filter = this.state.filter;\r\n        if (!filter.fieldsFilter) {\r\n            filter.fieldsFilter = {};\r\n        }\r\n        filter.fieldsFilter['musyrif_only'] = musyrifOnly;\r\n        this.setState({filter: filter}, ()=> this.loadAtPage(0))\r\n    }\r\n    onEmployeeStatusUpdate = () => {\r\n        this.loadItems();\r\n    }\r\n    render() {\r\n        const filter = this.state.filter;\r\n        const musyrifOnly :boolean = filter.fieldsFilter && filter.fieldsFilter['musyrif_only']&&filter.fieldsFilter['musyrif_only'] == true;\r\n        return (\r\n            <div  className=\"section-body container-fluid\">\r\n                <h2>Musyrif Management</h2>\r\n                <hr/>\r\n               \r\n                <form onSubmit={(e)=>{e.preventDefault(); this.loadAtPage(0)}}>\r\n                    <FormGroup label=\"Search\">\r\n                        <input name=\"name\" placeholder=\"Search by name or email\" className=\"form-control\" value={filter.fieldsFilter?filter.fieldsFilter['name']:\"\"} onChange={this.updateFieldsFilter} />\r\n                    </FormGroup>\r\n                    <FormGroup label=\"Record Count\">\r\n                        <input name=\"limit\" className=\"form-control\" value={filter.limit??5} onChange={this.updateFilter} />\r\n                    </FormGroup>\r\n                    <FormGroup label=\"Show Option\">\r\n                        <ToggleButton active={musyrifOnly} onClick={this.setMusyrifOnly} noLabel=\"All Employee\" yesLabel=\"Musyrif Only\" />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <input className=\"btn btn-primary\" type=\"submit\" value=\"Submit\"/>\r\n                    </FormGroup>\r\n                </form>\r\n                <NavigationButtons activePage={filter.page??0} limit={filter.limit??5} totalData={this.state.totalData}\r\n                    onClick={this.loadAtPage} />\r\n                <EmployeeList onUpdated={this.onEmployeeStatusUpdate} startingNumber={(filter.page??0) *( filter.limit?? 5)} items={this.state.items} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst EmployeeList = (props:{onUpdated:()=>void,startingNumber:number, items:Employee[]}) => {\r\n    const items = props.items;\r\n    return (\r\n        <div className=\"container-fluid\" style={{overflow:'scroll'}}>\r\n        <table className=\"table table-striped\" >\r\n            {tableHeader(\"No\", \"Name\", \"Email\", \"NIP\", \"Role: Musyrif\", \"Opsi\")}\r\n            <tbody>\r\n                {items.map((emp,i)=>{\r\n                    if (emp.user) {\r\n                        emp.user = User.clone(emp.user);\r\n                    }\r\n                    return (\r\n                        <EmployeeRow onUpdated={props.onUpdated} employee={emp} startingNumber={props.startingNumber+i} key={emp.id} />\r\n                    )\r\n                })}\r\n            </tbody>\r\n        </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(\r\n    connect(\r\n        mapCommonUserStateToProps\r\n    )(MusyrifManagement)\r\n)","import React from 'react'\r\nimport BaseComponent from './../../BaseComponent';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport BasePage from './../BasePage';\r\nclass ManagementMain extends BasePage\r\n{\r\n    constructor(props) {\r\n        super(props, \"Management\", true);\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container-fluid section-body\">\r\n                <h2>Management Page</h2>\r\n                <div className=\"alert alert-info\">\r\n                    Welcome, <strong>{this.getLoggedUser()?.name}</strong>\r\n                    <hr/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(\r\n    connect(\r\n        mapCommonUserStateToProps\r\n    )(ManagementMain)\r\n)","\r\nimport BaseEntity from './BaseEntity';\r\nexport default class Category extends BaseEntity\r\n{\r\n    name?:string;\r\n    description?:string;\r\n}","\r\nimport React, { Component } from 'react';\r\nimport AnchorButton from '../navigation/AnchorButton';\r\nclass IState {\r\n    show:boolean = true\r\n}\r\ninterface IProps {\r\n    toggleable?:boolean, show?:boolean, title?:string, style?:any, footerContent?:any,showFooter?:boolean\r\n}\r\nexport default class Modal extends Component<IProps, IState> {\r\n    state:IState = new IState();\r\n    constructor(props: any) {\r\n        super(props);\r\n    }\r\n    hideModal = () => {\r\n        this.setState({show:false});\r\n    }\r\n    showModal = () => {\r\n        this.setState({show:true});\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.show == false) { this.setState({show:false}); }\r\n    }\r\n    render() {\r\n    //    if (this.props.show == false) { return null; }\r\n        const title = this.props.title?? \"Title\"; \r\n        if (this.props.toggleable == true && this.state.show == false) {\r\n            return (\r\n                <AnchorButton style={{marginBottom:'10px'}} onClick={this.showModal} iconClassName=\"fas fa-angle-down\" >Show {title}</AnchorButton>\r\n            )\r\n        }\r\n        const props = (({ style, show, footerContent, toggleable, ...props }) => props)(this.props) // remove b and c\r\n        return (\r\n            <div {...props} className=\"modal-content \" style={{...this.props.style, marginBottom:'10px'}}>\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">{title}</h5>\r\n                    {this.props.toggleable?\r\n                    <button type=\"button\" className=\"btn btn-sm\" onClick={this.hideModal} aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\">\r\n                            <i className='fas fa-times'/>\r\n                        </span>\r\n                    </button>\r\n                    :\r\n                    null}\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    {this.props.children}\r\n                </div>\r\n                {this.props.footerContent || this.props.showFooter == true?\r\n                <div className=\"modal-footer\">\r\n                    {this.props.footerContent}\r\n                </div>\r\n                :null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React from 'react'\r\nimport BaseComponent from './../../BaseComponent';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport AnchorWithIcon from './../../navigation/AnchorWithIcon';\r\nimport BaseEntity from './../../../models/BaseEntity';\r\nimport MasterDataService from './../../../services/MasterDataService';\r\nimport WebRequest from '../../../models/commons/WebRequest';\r\nimport WebResponse from '../../../models/commons/WebResponse';\r\nclass EditDeleteButton extends BaseComponent\r\n{\r\n    masterDataService:MasterDataService;\r\n    constructor(props) {\r\n        super(props, true);\r\n        this.masterDataService = this.getServices().masterDataService;\r\n    }\r\n\r\n    getModelName = () : string => {\r\n        return this.props.modelName;\r\n    }\r\n    getRecord = () : BaseEntity => {\r\n        const rec = this.props.record;\r\n        if (!rec) {\r\n            alert(\"this.props.record undefined\");\r\n            return {};\r\n        }\r\n        return rec;\r\n    }\r\n    recordLoaded = (response:WebResponse) => {\r\n        if (this.props.recordLoaded) {\r\n            this.props.recordLoaded(response.item);\r\n        }\r\n    }\r\n    recordDeleted = (response:WebResponse) => {\r\n        this.showInfo(\"Record has been deleted\");\r\n        if (this.props.recordDeleted) {\r\n            this.props.recordDeleted(response.item);\r\n        }\r\n    }\r\n    loadRecord = () => {\r\n        const req :WebRequest = {\r\n            record_id : this.getRecord().id,\r\n            modelName : this.getModelName()\r\n        }\r\n        this.commonAjax(\r\n            this.masterDataService.getById,\r\n            this.recordLoaded,\r\n            this.showCommonErrorAlert,\r\n            req\r\n        )\r\n    }\r\n    deleteRecord = () => {\r\n        const req :WebRequest = {\r\n            record_id : this.getRecord().id,\r\n            modelName : this.getModelName()\r\n        }\r\n        this.showConfirmationDanger(\"Delete record?\")\r\n        .then(ok=>{\r\n            if (!ok) return;\r\n            this.commonAjax(\r\n                this.masterDataService.delete,\r\n                this.recordDeleted,\r\n                this.showCommonErrorAlert,\r\n                req\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {this.props.hideEdit == true? null: <AnchorWithIcon onClick={this.loadRecord} iconClassName=\"fas fa-edit\" className=\"btn btn-warning btn-sm\"/>}\r\n                <AnchorWithIcon onClick={this.deleteRecord} iconClassName=\"fas fa-times\" className=\"btn btn-danger btn-sm\"/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(\r\n    connect(\r\n        mapCommonUserStateToProps\r\n    )(EditDeleteButton)\r\n)","\r\nimport React, { ChangeEvent } from 'react'\r\nimport BaseComponent from './../../BaseComponent';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport Filter from '../../../models/commons/Filter';\r\nimport Category from './../../../models/Category';\r\nimport WebRequest from '../../../models/commons/WebRequest';\r\nimport FormGroup from './../../form/FormGroup';\r\nimport NavigationButtons from './../../navigation/NavigationButtons';\r\nimport Modal from './../../container/Modal';\r\nimport EditDeleteButton from './EditDeleteButton'\r\nimport { tableHeader } from './../../../utils/CollectionUtil';\r\nimport BaseManagementPage from './BaseManagementPage';\r\nclass State {\r\n    items: Category[] = [];\r\n    filter: Filter = new Filter();\r\n    totalData: number = 0;\r\n    record: Category = new Category();\r\n\r\n}\r\nclass CategoryManagement extends BaseManagementPage {\r\n    state: State = new State();\r\n    constructor(props) {\r\n        super(props, 'category');\r\n        this.state.filter.limit = 10;\r\n    }\r\n    \r\n    onSubmit = () => {\r\n        console.debug(\"RECORD: \", this.state.record);\r\n        this.showConfirmation(\"Submit Data?\")\r\n            .then(ok => {\r\n                if (!ok) return;\r\n\r\n                const request: WebRequest = {\r\n                    category: this.state.record,\r\n                    modelName: this.modelName\r\n                }\r\n                this.callApiSubmit(request);\r\n            })\r\n    }\r\n    \r\n    emptyRecord = ():any => {\r\n        return new Category();\r\n    }\r\n    render() {\r\n        const filter: Filter = this.state.filter;\r\n        return (\r\n            <div className=\"container-fluid section-body\">\r\n                <h2>Category Management</h2>\r\n                <hr />\r\n                <RecordForm formRef={this.formRef} resetForm={this.resetForm} onSubmit={this.onSubmit} record={this.state.record} updateRecordProp={this.updateRecordProp} />\r\n                <form onSubmit={(e) => { e.preventDefault(); this.loadAtPage(0) }}>\r\n                    <FormGroup label=\"Search\">\r\n                        <input name=\"name\" placeholder=\"Search by name\" className=\"form-control\" value={filter.fieldsFilter ? filter.fieldsFilter['name'] : \"\"} onChange={this.updateFieldsFilter} />\r\n                    </FormGroup>\r\n                    <FormGroup label=\"Record Count\">\r\n                        <input name=\"limit\" className=\"form-control\" value={filter.limit ?? 5} onChange={this.updateFilter} />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <input className=\"btn btn-primary\" type=\"submit\" value=\"Submit\" />\r\n                    </FormGroup>\r\n                </form>\r\n                <NavigationButtons activePage={filter.page ?? 0} limit={filter.limit ?? 5} totalData={this.state.totalData}\r\n                    onClick={this.loadAtPage} />\r\n                <ItemsList \r\n                recordLoaded={this.oneRecordLoaded}\r\n                recordDeleted={this.loadItems}\r\n                startingNumber={(filter.page??0)*(filter.limit??10)} items={this.state.items} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst ItemsList = (props: {startingNumber:number, items:Category[], recordLoaded(item:any), recordDeleted()}) => {\r\n\r\n    return (\r\n        <div style={{overflow:'scroll'}}>\r\n        <table className=\"table table-striped\">\r\n            {tableHeader(\"No\", \"Name\", \"Description\", \"Option\")}\r\n            <tbody>\r\n                    {props.items.map((item, i)=>{\r\n\r\n                        return (\r\n                            <tr key={\"category-\"+i}>\r\n                                <td>{i+1+props.startingNumber}</td>\r\n                                <td>{item.name}</td>\r\n                                <td>{item.description}</td>\r\n                                <td><EditDeleteButton \r\n                                    recordLoaded={props.recordLoaded}\r\n                                    recordDeleted={props.recordDeleted}\r\n                                    record={item} modelName={'category'}/></td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n        </table>\r\n        </div>\r\n    )\r\n}\r\nconst RecordForm = (props: { formRef:React.RefObject<Modal>, updateRecordProp(e: ChangeEvent): any, resetForm():any, onSubmit(): any, record: Category }) => {\r\n\r\n    return (\r\n        <form onSubmit={(e) => { e.preventDefault(); props.onSubmit() }}>\r\n            <Modal show={false} ref={props.formRef} toggleable={true} title=\"Record Form\" >\r\n                <FormGroup label=\"Name\"><input value={props.record.name ?? \"\"} onChange={props.updateRecordProp} className=\"form-control\" name=\"name\" /></FormGroup>\r\n                <FormGroup label=\"Description\">\r\n                    <textarea className=\"form-control\" name=\"description\" onChange={props.updateRecordProp} value={props.record.description ?? \"\"} />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary\" />\r\n                    &nbsp;\r\n                    <input type=\"reset\"   className=\"btn btn-secondary\" onClick={(e)=>props.resetForm()} />\r\n                </FormGroup>\r\n            </Modal>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default withRouter(\r\n    connect(\r\n        mapCommonUserStateToProps\r\n    )(CategoryManagement)\r\n)","\r\nimport BaseEntity from './BaseEntity';\r\nimport Category from './Category';\r\nexport default class RulePoint extends BaseEntity\r\n{\r\n    \r\n    category?:Category;\r\n    category_id?:any;\r\n    name?:string;\r\n    description?:string;\r\n    point:number = 1;\r\n    droppable?:boolean = true;\r\n}","import React, { ChangeEvent } from 'react'\r\nimport BaseComponent from './../../BaseComponent';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport RulePoint from './../../../models/RulePoint';\r\nimport Filter from '../../../models/commons/Filter';\r\nimport MasterDataService from './../../../services/MasterDataService';\r\nimport Modal from './../../container/Modal';\r\nimport FormGroup from './../../form/FormGroup';\r\nimport WebRequest from '../../../models/commons/WebRequest';\r\nimport NavigationButtons from './../../navigation/NavigationButtons';\r\nimport EditDeleteButton from './EditDeleteButton';\r\nimport { tableHeader } from './../../../utils/CollectionUtil';\r\nimport BaseManagementPage from './BaseManagementPage';\r\nimport Category from './../../../models/Category';\r\nimport WebResponse from '../../../models/commons/WebResponse';\r\nimport AnchorWithIcon from './../../navigation/AnchorWithIcon';\r\nclass State {\r\n    items: RulePoint[] = [];\r\n    filter: Filter = new Filter();\r\n    totalData: number = 0;\r\n    record: RulePoint = new RulePoint();\r\n    categories: Category[] = [];\r\n    categoriesLoaded:boolean = false;\r\n\r\n}\r\nclass RulePointManagement extends BaseManagementPage\r\n{\r\n    state: State = new State();\r\n    \r\n    constructor(props) {\r\n        super(props, 'rulepoint');\r\n        this.state.filter.limit = 10;\r\n    }\r\n\r\n    onSubmit = () => {\r\n        console.debug(\"RECORD: \", this.state.record);\r\n        this.showConfirmation(\"Submit Data?\")\r\n            .then(ok => {\r\n                if (!ok) return;\r\n\r\n                const request: WebRequest = {\r\n                    rulePoint: this.state.record,\r\n                    modelName: this.modelName\r\n                }\r\n                this.callApiSubmit(request);\r\n            })\r\n    }\r\n    componentDidMount() {\r\n        this.validateLoginStatus(()=>{\r\n            this.scrollTop();\r\n            this.loadCategories();\r\n        });\r\n        \r\n        \r\n    }\r\n    categoriesLoaded = (response: WebResponse) => {\r\n        this.setState({categories:response.items, categoriesLoaded: true}, ()=>{ this.resetForm(); this.loadItems() });\r\n    }\r\n    categoriesNotLoaded = (response: WebResponse) => {\r\n        this.setState({categories: [], categoriesLoaded: true}, this.resetForm);\r\n    }\r\n    loadCategories = () => {\r\n        const filter:Filter = new Filter();\r\n        filter.limit = 0;\r\n        const req:WebRequest = {\r\n            filter: filter,\r\n            modelName: 'category'\r\n        }\r\n        this.commonAjax(\r\n            this.masterDataService.list,\r\n            this.categoriesLoaded,\r\n            this.categoriesNotLoaded,\r\n            req\r\n        )\r\n    }\r\n    \r\n    emptyRecord = ():any => {\r\n        const record = new RulePoint();\r\n        if (this.state.categories.length > 0) {\r\n            record.category_id = this.state.categories[0].id;\r\n        }\r\n        return record;\r\n    }\r\n    \r\n    render() {\r\n        const filter: Filter = this.state.filter;\r\n        const categories: Category[] = this.state.categories;\r\n        if (this.state.categoriesLoaded && categories.length == 0) {\r\n            return (\r\n                <div className=\"container-fluid section-body\">\r\n                    <h2>Please insert categories record</h2>\r\n                </div>\r\n            )\r\n        }\r\n        const selectedCategoryId = filter.fieldsFilter && filter.fieldsFilter['category_id'] ? filter.fieldsFilter['category_id'] : \"ALL\";\r\n        return (\r\n            <div className=\"container-fluid section-body\">\r\n                <h2>Rule Point Management</h2>\r\n                <hr />\r\n                <RecordForm categories={categories} reloadCategories={this.loadCategories} formRef={this.formRef} resetForm={this.resetForm} onSubmit={this.onSubmit} record={this.state.record} updateRecordProp={this.updateRecordProp} />\r\n                <form onSubmit={(e) => { e.preventDefault(); this.loadAtPage(0) }}>\r\n                    <FormGroup label=\"Search\">\r\n                        <input name=\"name\" placeholder=\"Search by name\" className=\"form-control\" value={filter.fieldsFilter ? filter.fieldsFilter['name'] : \"\"} onChange={this.updateFieldsFilter} />\r\n                    </FormGroup>\r\n                    <FormGroup label=\"Category\">\r\n                    <div className=\"input-group\">\r\n                        <select value={selectedCategoryId} className=\"form-control\" name=\"category_id\" onChange={this.updateFieldsFilter} >\r\n                            {[{id:\"ALL\", name:\"ALL\"},...categories].map((c)=>{\r\n\r\n                                return <option key={\"filter-cat-\"+c.id} value={c.id}>{c.name}</option>\r\n                            })}\r\n                        </select>\r\n                        <div className=\"input-group-append\">\r\n                        <AnchorWithIcon iconClassName=\"fas fa-redo\" onClick={this.loadCategories}>Reload</AnchorWithIcon>\r\n                        </div>\r\n                    </div>\r\n                </FormGroup>\r\n                    <FormGroup label=\"Record Count\">\r\n                        <input name=\"limit\" className=\"form-control\" value={filter.limit ?? 5} onChange={this.updateFilter} />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <input className=\"btn btn-primary\" type=\"submit\" value=\"Submit\" />\r\n                    </FormGroup>\r\n                </form>\r\n                <NavigationButtons activePage={filter.page ?? 0} limit={filter.limit ?? 5} totalData={this.state.totalData}\r\n                    onClick={this.loadAtPage} />\r\n                <ItemsList \r\n                    recordLoaded={this.oneRecordLoaded}\r\n                    recordDeleted={this.loadItems}\r\n                    startingNumber={(filter.page??0)*(filter.limit??10)} items={this.state.items} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst ItemsList = (props: {startingNumber:number, items:RulePoint[], recordLoaded(item:any), recordDeleted()}) => {\r\n\r\n    return (\r\n        <div style={{overflow:'scroll'}}>\r\n        <table className=\"table table-striped\">\r\n            {tableHeader(\"No\", \"Name\", \"Point\", \"Description\", \"Category\", \"Droppable\", \"Option\")}\r\n            <tbody>\r\n                    {props.items.map((item, i)=>{\r\n\r\n                        return (\r\n                            <tr key={\"RulePoint-\"+i}>\r\n                                <td>{i+1+props.startingNumber}</td>\r\n                                <td>{item.name}</td>\r\n                                <td>{item.point}</td>\r\n                                <td>{item.description}</td>\r\n                                <td>{item.category?.name}</td>\r\n                                <td>{item.droppable ? \"Yes\" : \"No\"}</td>\r\n                                <td><EditDeleteButton \r\n                                    recordLoaded={props.recordLoaded}\r\n                                    recordDeleted={props.recordDeleted}\r\n                                    record={item} modelName={'rulepoint'}/></td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n        </table>\r\n        </div>\r\n    )\r\n}\r\nconst RecordForm = (props: { categories:Category[], formRef:React.RefObject<Modal>, \r\n    updateRecordProp(e: ChangeEvent): any, \r\n    resetForm():any, \r\n    onSubmit(): any, record: RulePoint, reloadCategories():any }) => {\r\n\r\n    return (\r\n        <form onSubmit={(e) => { e.preventDefault(); props.onSubmit() }}>\r\n            <Modal show={false} ref={props.formRef} toggleable={true} title=\"Record Form\" >\r\n                <FormGroup label=\"Name\"><input value={props.record.name ?? \"\"} onChange={props.updateRecordProp} className=\"form-control\" name=\"name\" /></FormGroup>\r\n                <FormGroup label=\"Point\"><input type=\"number\" value={props.record.point} onChange={props.updateRecordProp} className=\"form-control\" name=\"point\" /></FormGroup>\r\n                <FormGroup label=\"Description\">\r\n                    <textarea className=\"form-control\" name=\"description\" onChange={props.updateRecordProp} value={props.record.description ?? \"\"} />\r\n                </FormGroup>\r\n                <FormGroup label=\"Droppable\">\r\n                    <select className=\"form-control\" data-type=\"boolean\" name=\"droppable\" onChange={props.updateRecordProp} value={props.record.droppable == true ? \"true\":\"false\"} >\r\n                        <option value={\"true\"} >Yes</option>\r\n                        <option value={\"false\"}>No</option>\r\n                    </select>\r\n                </FormGroup>\r\n                <FormGroup label=\"Category\">\r\n                    <div className=\"input-group\">\r\n                        <select value={props.record.category_id} className=\"form-control\" name=\"category_id\" onChange={props.updateRecordProp} >\r\n                            {props.categories.map((c)=>{\r\n\r\n                                return <option key={\"cat-\"+c.id} value={c.id}>{c.name}</option>\r\n                            })}\r\n                        </select>\r\n                        <div className=\"input-group-append\">\r\n                        <AnchorWithIcon iconClassName=\"fas fa-redo\" onClick={props.reloadCategories}>Reload</AnchorWithIcon>\r\n                        </div>\r\n                    </div>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <input type=\"submit\" className=\"btn btn-primary\" />\r\n                    &nbsp;\r\n                    <input value=\"Reset\" type=\"reset\" className=\"btn btn-secondary\" onClick={(e)=>props.resetForm()} />\r\n                </FormGroup>\r\n            </Modal>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default withRouter(\r\n    connect(\r\n        mapCommonUserStateToProps\r\n    )(RulePointManagement)\r\n)","import { join } from \"path\";\r\nimport { twoDigits } from './StringUtil';\r\n\r\nexport const MONTHS = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\"\r\n]\r\n\r\nconst leapMonths = [ 31, (  29  ), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\r\nconst regularMonths = [ 31, (  28  ), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\r\n/**\r\n * \r\n * @param {Number} month starts at 0\r\n */\r\nexport const getMonthDays = (month:number, year:number = new Date().getFullYear()) : number=> {\r\n    if(year % 4 == 0){\r\n        return leapMonths[month];\r\n    }\r\n    return regularMonths[month];\r\n}\r\n\r\nexport const getInputReadableDate = (date:Date) :string => {\r\n    const year = date.getFullYear();\r\n\r\n    const arr = [year, twoDigits(date.getMonth()+1), twoDigits(date.getDate())];\r\n    return arr.join(\"-\");\r\n}\r\nexport function addDays(date:Date, days:number) :Date{\r\n    const result:Date = new Date(date);\r\n    result.setDate(result.getDate() + days);\r\n    return result;\r\n  }\r\n  export const getDiffDays = (a:Date, b:Date) : number => {\r\n    // Discard the time and time-zone information.\r\n\r\n    console.debug(\"DIFF DATE \",a,\" vs \", b);\r\n    const _MS_PER_DAY = 1000 * 60 * 60 * 24;\r\n    const utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());\r\n    const utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate()); \r\n    return Math.floor((utc2 - utc1) / _MS_PER_DAY);\r\n}\r\n\r\nexport const parseDate = (s:string) :Date => {\r\n    var b:string[] = s.split(/\\D/);\r\n    var m = parseInt(b[1]);\r\n    return new Date(parseInt(b[0]), --m, parseInt(b[2]));\r\n  }\r\nexport const timerString = (inputSeconds:number ) => {\r\n    let hour = 0;\r\n    let minutes:number = 0;\r\n    let seconds = 0;\r\n    let totalSeconds = inputSeconds;\r\n    if (totalSeconds >= 3600) {\r\n        hour = totalSeconds/ 3600;\r\n        totalSeconds = totalSeconds % 3600;\r\n    }\r\n    if (totalSeconds >= 60) {\r\n        minutes = totalSeconds/60;\r\n        totalSeconds = totalSeconds%60;\r\n    }\r\n    seconds = totalSeconds; \r\n\r\n    return  twoDigits(hour)+\":\"+twoDigits(Math.floor(minutes))+\":\"+twoDigits(seconds);\r\n}\r\n\r\n\r\n\r\n","import React, { ChangeEvent } from 'react';\nimport Filter from '../../models/commons/Filter';\nimport { MONTHS } from './../../utils/DateUtil';\n\nconst days = (): number[] => {\n    const arr: number[] = [];\n    for (let i = 1; i <= 31; i++) {\n        arr.push(i);\n    }\n    return arr;\n}\nconst  FilterPeriod = (props: { hideDay?:boolean, mode?: string, filter: Filter, onChange(e: ChangeEvent): any, }) => {\n    const filter: Filter = props.filter;\n    if (props.mode == \"to\") {\n        return (\n            <React.Fragment>\n                <input className=\"form-control\" value=\"Date To\" disabled />\n                {props.hideDay != true?\n                <select data-type=\"number\" className=\"form-control\" name=\"dayTo\" value={filter.dayTo ?? 0} onChange={props.onChange}>\n                    {days().map((d) => {\n                        return <option key={\"f-d-\" + d} value={d}>{d == 0 ? 'day' : d}</option>\n                    })}\n                </select> :null}\n                <select data-type=\"number\" className=\"form-control\" name=\"monthTo\" value={filter.monthTo ?? 0} onChange={props.onChange}>\n                    {MONTHS.map((m, i) => {\n                        return <option key={\"f-m-\" + i} value={(i + 1)}>{m}</option>\n                    })}\n                </select>\n                <input name=\"yearTo\" placeholder=\"year\" className=\"form-control\" value={filter.yearTo ?? \"\"} onChange={props.onChange} />\n            </React.Fragment>\n\n        )\n    }\n    return (\n        <React.Fragment>\n            <input className=\"form-control\" value=\"Date From\" disabled />\n            {props.hideDay != true?<select data-type=\"number\" className=\"form-control\" name=\"day\" value={filter.day ?? 0} onChange={props.onChange}>\n                {days().map((d) => {\n                    return <option key={\"f-d-\" + d} value={d}>{d == 0 ? 'day' : d}</option>\n                })}\n            </select>: null}\n            <select data-type=\"number\" className=\"form-control\" name=\"month\" value={filter.month ?? 0} onChange={props.onChange}>\n                {MONTHS.map((m, i) => {\n                    return <option key={\"f-m-\" + i} value={(i + 1)}>{m}</option>\n                })}\n            </select>\n            <input name=\"year\" placeholder=\"year\" className=\"form-control\" value={filter.year?? \"\"} onChange={props.onChange} />\n        </React.Fragment>\n    )\n}\n\nexport default  FilterPeriod;","import React, { ChangeEvent } from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport Student from '../../../models/Student';\r\nimport StudentService from '../../../services/StudentService';\r\nimport Filter from '../../../models/commons/Filter';\r\nimport WebResponse from '../../../models/commons/WebResponse';\r\nimport Class from '../../../models/Class';\r\nimport FormGroup from '../../form/FormGroup';\r\nimport NavigationButtons from '../../navigation/NavigationButtons';\r\nimport { tableHeader } from '../../../utils/CollectionUtil';\r\nimport AnchorWithIcon from '../../navigation/AnchorWithIcon';\r\nimport MasterDataService from '../../../services/MasterDataService';\r\nimport BaseManagementPage from '../management/BaseManagementPage';\r\nimport Spinner from '../../loader/Spinner';\r\nimport FilterPeriod from './../../form/FilterPeriod';\r\nimport { MONTHS } from './../../../utils/DateUtil';\r\nimport ToggleButton from './../../navigation/ToggleButton';\r\nclass State {\r\n    items: Student[] = [];\r\n    classes: Class[] = [];\r\n    totalData: number = 0;\r\n    filter: Filter = new Filter();\r\n    loading: boolean = false;\r\n}\r\nclass StudentList extends BaseManagementPage {\r\n    state: State = new State();\r\n    studentService: StudentService;\r\n    masterDataService: MasterDataService;\r\n    constructor(props) {\r\n        super(props, 'student');\r\n        this.studentService = this.getServices().studentService;\r\n        this.masterDataService = this.getServices().masterDataService;\r\n        this.state.filter.limit = 10;\r\n        this.state.filter.day = this.state.filter.dayTo = new Date().getDate();\r\n        this.state.filter.month = this.state.filter.monthTo = new Date().getMonth() + 1;\r\n        this.state.filter.year = this.state.filter.yearTo = new Date().getFullYear();\r\n        this.state.filter.fieldsFilter = {\r\n            'class_id': 'ALL',\r\n            'with_point_record': false\r\n        }\r\n    }\r\n\r\n    itemsLoaded = (response: WebResponse) => {\r\n        this.setState({ items: response.items, totalData: response.totalData });\r\n    }\r\n    classesLoaded = (response: WebResponse) => {\r\n        this.setState({ classes: response.items }, this.loadItems);\r\n    }\r\n    loadItems = () => {\r\n        this.commonAjax(\r\n            this.masterDataService.list,\r\n            this.itemsLoaded,\r\n            this.showCommonErrorAlert,\r\n            { modelName: 'student', filter: this.state.filter }\r\n        )\r\n    }\r\n    loadAtPage = (page: number) => {\r\n        const filter = this.state.filter;\r\n        filter.page = page;\r\n        this.setState({ filter: filter }, this.loadItems);\r\n    }\r\n    loadClasses = () => {\r\n        this.commonAjax(\r\n            this.studentService.getClasses,\r\n            this.classesLoaded,\r\n            this.showCommonErrorAlert,\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.validateLoginStatus(() => {\r\n            this.scrollTop();\r\n            this.loadClasses();\r\n        })\r\n    }\r\n    updateSelectedClass = (e: ChangeEvent) => {\r\n        const target = e.target as HTMLSelectElement;\r\n        const filter = this.state.filter;\r\n        if (!filter.fieldsFilter) {\r\n            filter.fieldsFilter = {};\r\n        }\r\n        filter.fieldsFilter['class_id'] = target.value;\r\n        this.setState({ filter: filter });\r\n    }\r\n    inputPage = (type: string, s: Student) => {\r\n        switch (type) {\r\n            case 'pointrecord':\r\n                this.inputPoint(s);\r\n                break;\r\n            case 'medicalrecord':\r\n                this.inputMedicalRecord(s);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    inputPoint = (student: Student) => {\r\n        this.props.history.push({\r\n            pathname: \"/dormitoryactivity/inputpoint\",\r\n            state: { student: student }\r\n        })\r\n    }\r\n    inputMedicalRecord = (student: Student) => {\r\n        this.props.history.push({\r\n            pathname: \"/dormitoryactivity/medicalrecord\",\r\n            state: { student: student }\r\n        })\r\n    }\r\n    updateWithPointRecord = (val: boolean) => {\r\n        const filter = this.state.filter;\r\n        if (filter.fieldsFilter) {\r\n            filter.fieldsFilter['with_point_record'] = val;\r\n        }\r\n        this.setState({ filter: filter });\r\n    }\r\n    render() {\r\n\r\n        const filter = this.state.filter;\r\n        const classes = this.state.classes;\r\n        const classAll: Class = { id: \"ALL\", level: \"ALL\", sekolah: {} };\r\n        const selectedClassId = filter.fieldsFilter && filter.fieldsFilter['class_id'] ? filter.fieldsFilter['class_id'] : \"ALL\";\r\n        const showPointRecord = filter.fieldsFilter && filter.fieldsFilter['with_point_record'] && filter.fieldsFilter['with_point_record'] == true;\r\n        return (\r\n            <div className=\"container-fluid section-body\">\r\n                <h2>Student List</h2>\r\n                <hr />\r\n                <form onSubmit={(e) => { e.preventDefault(); this.loadAtPage(0) }}>\r\n\r\n                    <FormGroup label=\"Search\">\r\n                        <input name=\"name\" placeholder=\"Search by name\" className=\"form-control\" value={filter.fieldsFilter ? filter.fieldsFilter['name'] : \"\"} onChange={this.updateFieldsFilter} />\r\n                    </FormGroup>\r\n                    <FormGroup label=\"Record Count\">\r\n                        <input name=\"limit\" className=\"form-control\" value={filter.limit ?? 5} onChange={this.updateFilter} />\r\n                    </FormGroup>\r\n                    <FormGroup label=\"Kelas\" >\r\n                        <select value={selectedClassId} onChange={this.updateFieldsFilter} className=\"form-control\" name=\"class_id\">\r\n                            {[classAll, ...classes].map((_class) => {\r\n                                return <option key={'class_' + _class.id} value={_class.id}>{_class.level}{_class.rombel} - {_class.sekolah?.nama}</option>\r\n                            })}\r\n                        </select>\r\n                    </FormGroup>\r\n                    <FormGroup label=\"Period\">\r\n                        <ToggleButton active={showPointRecord}\r\n                            yesLabel={\"Show Point Record\"} noLabel=\"Hide Point Record\"\r\n                            onClick={this.updateWithPointRecord}\r\n                        />\r\n                        {showPointRecord ?\r\n                            <React.Fragment>\r\n                                <div className=\"input-group\">\r\n                                    <FilterPeriod filter={filter} onChange={this.updateFilter} />\r\n                                </div>\r\n                                <div className=\"input-group\">\r\n                                    <FilterPeriod mode={\"to\"} filter={filter} onChange={this.updateFilter} />\r\n                                </div>\r\n                            </React.Fragment> : null}\r\n                    </FormGroup>\r\n                    {showPointRecord ?\r\n                        <FormGroup label=\"Period\">\r\n                            {filter.day} {MONTHS[(filter.month ?? 1) - 1]} {filter.year} - {filter.dayTo} {MONTHS[(filter.monthTo ?? 1) - 1]} {filter.yearTo}\r\n                        </FormGroup>\r\n                        : null}\r\n                    <FormGroup>\r\n                        <input type=\"submit\" className=\"btn btn-primary\" value=\"Submit\" />\r\n                    </FormGroup>\r\n\r\n                </form>\r\n                <p />\r\n                <NavigationButtons onClick={this.loadAtPage} activePage={filter.page ?? 0} limit={filter.limit ?? 10} totalData={this.state.totalData} />\r\n                <ItemsList showPointRecord={showPointRecord} loading={this.state.loading} inputPage={this.inputPage} startingNumber={(filter.page ?? 0) * (filter.limit ?? 10)} items={this.state.items} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst ItemsList = (props: { showPointRecord: boolean, loading: boolean, startingNumber: number, inputPage(type: string, s: Student): any, items: Student[] }) => {\r\n\r\n    return (\r\n        <div style={{ overflow: 'scroll' }}>\r\n            <table className=\"table table-striped\">\r\n                {props.showPointRecord ? tableHeader(\"No\", \"\", \"Name\", \"Kelas\", \"Point\") : tableHeader(\"No\", \"\", \"Name\", \"Kelas\")}\r\n                <tbody>\r\n                    {props.loading ?\r\n                        <tr><td colSpan={5}><Spinner /></td></tr>\r\n\r\n                        : props.items.map((student, i) => {\r\n\r\n                            return (\r\n                                <tr key={\"student-\" + i}>\r\n                                    <td>{i + 1 + props.startingNumber}</td>\r\n                                    <td>\r\n                                        <div style={{ width: '100px' }}>\r\n                                            <AnchorWithIcon className=\"btn\" onClick={(e) => props.inputPage('pointrecord', student)} iconClassName=\"far fa-edit\" />\r\n                                            <AnchorWithIcon className=\"btn\" onClick={(e) => props.inputPage('medicalrecord', student)} iconClassName=\"fas fa-notes-medical\" />\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        {student.user?.name}</td>\r\n                                    <td>{student.kelas?.level} {student.kelas?.rombel} {student.kelas?.sekolah?.nama}</td>\r\n                                    {props.showPointRecord ? <td>{student.point}</td> : null}\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps\r\n)(StudentList))","\r\nimport BaseEntity from './BaseEntity';\r\nimport User from './User';\r\nimport Class from './Class';\r\nexport default class Student extends BaseEntity\r\n{\r\n    nis?:string;\r\n    kelas?:Class;\r\n    user?:User;\r\n\r\n    point?:number;\r\n}","\nimport BaseEntity from './BaseEntity';\nimport { parseDate } from './../utils/DateUtil';\nimport { twoDigits } from './../utils/StringUtil';\nimport RulePoint from './RulePoint';\nimport Student from './Student';\nimport Pictures from './Pictures';\nimport { contextPath } from './../constant/Url';\nexport default class PointRecord extends BaseEntity\n{\n    setTime(h: number, m: number, s: number) {\n        this.time = [twoDigits(h), twoDigits(m), twoDigits(s)].join(\":\");\n    }\n    setDate = (date: Date) => {\n        this.day = date.getDate();\n        this.month = date.getMonth() + 1;\n        this.year = date.getFullYear();\n    }\n    dateString = () :string=>{\n        return this.year+\"-\"+ twoDigits(this.month )+\"-\"+twoDigits(this.day);\n    }\n    location?:string;\n    day:number = new Date().getDate();\n    month:number = new Date().getMonth()+1;\n    year:number = new Date().getFullYear();\n    time:string = [twoDigits(new Date().getHours()), twoDigits(new Date().getMinutes()), twoDigits(new Date().getSeconds())].join(\":\");\n    description?:string;\n    student_id?:string;\n    point_id?:number;\n\n    rule_point?:RulePoint;\n    student?:Student;\n    dropped_at?:Date;\n\n    pictures:Pictures[] = [];\n\n    /**\n     * get picture URL\n     */\n    getPicture = () :string|null => {\n        if (this.pictures.length == 0) {\n            return null;\n        }\n        return  contextPath()+'upload/POINT_RECORD/'+this.pictures[0].name;\n    }\n\n    getDate = ():Date => {\n        return parseDate(this.dateString());\n    }\n\n    getTimestamp = () :string => {\n\n        const date = this.getDate();\n        const day = DAYS[date.getDay()];\n        return day+\", \"+[\n            twoDigits(date.getDate()), twoDigits(date.getMonth()+1), date.getFullYear()\n        ].join(\"/\")+\" \"+this.time;\n    }\n\n    public static clone = (object:PointRecord) => {\n        return Object.assign(new PointRecord(), object);\n    }\n}\n\nconst DAYS = [\n    \"Ahad\", \"Senin\", \"Selasa\", \"Rabu\", \"Kamis\", \"Jumat\", \"Sabtu\"\n]","import React from 'react';\nimport { Component, ChangeEvent } from 'react';\nimport { twoDigits } from './../../utils/StringUtil';\ninterface Props{\n    onChange(h:number,m:number,s:number):any,\n    value:string,\n}\nclass State {\n    hour:number = new Date().getHours();\n    minute:number = new Date().getMinutes();\n    second:number = new Date().getSeconds();\n}\nconst hours:number[] = [\n    0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,\n];\nconst minutesOrSeconds = ()  : number[]=> {\n    const arr:number[]=  [];\n    for (let i = 1; i < 60; i++) {\n        arr.push(i);   \n    }\n    return arr; \n}\nexport default class InputTime extends Component<Props, any> {\n    state:State = new State();\n    minutes:number[];\n    seconds:number[] ;\n    constructor (props) {\n        super(props);\n        this.minutes = minutesOrSeconds();\n        this.seconds = minutesOrSeconds();\n    }\n    setDefaultValue = () => {\n        try {\n            const val = this.props.value.split(\":\");\n            this.setState({hour: parseInt(val[0]), minute: parseInt(val[1]), second: parseInt(val[2])});\n        } catch (error) {\n            \n        }\n    }\n    updateValue = (e:ChangeEvent) => {\n        const target = e.target as HTMLSelectElement;\n        if (target) {\n            const name = target.name;\n            this.setState({[name]: target.value}, this.onChange);\n        }\n        \n    }\n    setNow = () => {\n        const date = new Date();\n        this.setState({\n            hour: date.getHours(),\n            minute: date.getMinutes(),\n            second: date.getSeconds()\n        }, this.onChange)\n    }\n    onChange = () => {\n        this.props.onChange(this.state.hour, this.state.minute, this.state.second)\n    }\n    render() {\n         \n        return (<div className=\"form-control bg-light\">\n            <select name=\"hour\" style={{border:'none'}} value={this.state.hour} onChange={this.updateValue} >\n                {hours.map((hour)=>{\n                    return <option key={\"HOUR-\"+hour} value={hour} >{twoDigits(hour)}</option>\n                })}\n            </select>\n            <select name=\"minute\" style={{border:'none'}}  value={this.state.minute} onChange={this.updateValue}>\n                {this.minutes.map((min)=>{\n                    return <option key={\"MIN-\"+min} value={min} >{twoDigits(min)}</option>\n                })}\n            </select>\n            <select name=\"second\" style={{border:'none'}}  value={this.state.second} onChange={this.updateValue}>\n                {this.seconds.map((sec)=>{\n                    return <option key={\"SEC-\"+sec} value={sec} >{twoDigits(sec)}</option>\n                })}\n            </select>\n            <a style={{marginLeft: 5}}  onClick={this.setNow} ><i className=\"fas fa-history\"/></a>\n        </div>)\n    }\n}","import React, { ChangeEvent } from 'react'\nimport BaseComponent from '../../../BaseComponent';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\nimport RulePoint from '../../../../models/RulePoint';\nimport FormGroup from '../../../form/FormGroup';\nimport PointRecord from '../../../../models/PointRecord';\nimport { parseDate } from '../../../../utils/DateUtil';\nimport InputTime from '../../../form/InputTime';\nimport { getAttachmentInfo } from '../../../../utils/ComponentUtil';\nimport AttachmentInfo from '../../../../models/settings/AttachmentInfo';\nclass State {\n    pointRecord: PointRecord = new PointRecord();\n}\nclass FormStepThree extends BaseComponent {\n    state: State = new State();\n    constructor(props) {\n        super(props, true);\n    }\n\n    onSubmit = () => {\n        this.showConfirmation(\"Submit Data?\")\n            .then(ok => {\n                if (ok) {  \n                    this.props.submit(this.state.pointRecord);\n                }\n            })\n    }\n    rulePoint = (): RulePoint => {\n        return this.props.rulePoint;\n    }\n    updatePointRecord = (e: ChangeEvent) => {\n        const target = e.target as any;\n        const pointRecord = this.state.pointRecord;\n        pointRecord[target.name] = target.value;\n        this.setState({ pointRecord: pointRecord });\n\n    }\n    updateDate = (e: ChangeEvent) => {\n        const date: Date = parseDate((e.target as HTMLInputElement).value);\n        const pointRecord = this.state.pointRecord;\n        pointRecord.setDate(date);\n        this.setState({ pointRecord: pointRecord });\n    }\n    updateTime = (h: number, m: number, s: number) => {\n        const pointRecord = this.state.pointRecord;\n        pointRecord.setTime(h, m, s);\n        this.setState({ pointRecord: pointRecord });\n    }\n    setAttachment = (e: ChangeEvent) => {\n        const target = e.target as HTMLInputElement;\n        getAttachmentInfo(target).then((attachment: AttachmentInfo) => {\n            this.props.setAttachment(attachment);\n        });\n    }\n    removeAttachment = () => {\n        this.props.removeAttachment();\n    }\n    getAttachment = (): AttachmentInfo | undefined => {\n        return this.props.attachmentInfo;\n    }\n    render() {\n        const rulePoint: RulePoint = this.rulePoint();\n        const pointRecord: PointRecord = this.state.pointRecord;\n        const attachment = this.getAttachment();\n        return (\n            <form onSubmit={(e) => { e.preventDefault(); this.onSubmit() }}>\n                <FormGroup label=\"Category\">{rulePoint.category?.name} - {rulePoint.name} <span className=\"badge badge-dark\">{rulePoint.point}</span></FormGroup>\n                <FormGroup label=\"Date\">\n                    <input type=\"date\" className=\"form-control\" onChange={this.updateDate} name=\"date\" value={pointRecord.dateString()} />\n                </FormGroup>\n                <FormGroup label=\"Time\">\n                    <InputTime onChange={this.updateTime} value={pointRecord.time} />\n                </FormGroup>\n                <FormGroup label=\"Location\">\n                    <input className=\"form-control\" onChange={this.updatePointRecord} name=\"location\" value={pointRecord.location ?? \"\"} />\n                </FormGroup>\n                <FormGroup label=\"Picture\">\n                    {attachment ?\n                        <>\n                            <img style={{marginRight:10}} className=\"border border-dark\" src={attachment.url} width={100} height={100} />\n                            <AnchorWithIcon iconClassName=\"fas fa-times\" className=\"btn btn-danger\" onClick={this.removeAttachment}></AnchorWithIcon>\n                        </>\n                        : <input type=\"file\" accept={\"image/*\"} className=\"form-control\" onChange={this.setAttachment} name=\"attachment\" />\n                    }\n                </FormGroup>\n                <FormGroup label=\"Description\">\n                    <textarea value={pointRecord.description ?? \"\"} onChange={this.updatePointRecord} name=\"description\" className=\"form-control\"></textarea>\n                </FormGroup>\n                <AnchorWithIcon className=\"btn btn-secondary float-left\" iconClassName=\"fas fa-arrow-left\" onClick={this.props.onBack} >Back</AnchorWithIcon>\n                <button className=\"btn btn-success float-right\" >Submit</button>\n            </form>\n        )\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(FormStepThree)\n)","\r\nimport React, { Component } from 'react';\r\nexport default class SimpleError extends Component<any, any>\r\n{\r\n\r\n    render() {\r\n        if (this.props.show == false) return null;\r\n        return (\r\n            <div style={ this.props.style} className=\"alert alert-danger\">\r\n                {this.props.children??\"Error Occured\"}\r\n            </div>\r\n        )\r\n    }\r\n}","\nimport React from 'react'\nimport BaseComponent from '../../../BaseComponent';\nimport MasterDataService from '../../../../services/MasterDataService';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\nimport FormGroup from '../../../form/FormGroup';\nimport Category from '../../../../models/Category';\nimport RulePoint from '../../../../models/RulePoint';\nimport WebRequest from '../../../../models/commons/WebRequest';\nimport WebResponse from '../../../../models/commons/WebResponse';\nimport Spinner from '../../../loader/Spinner';\nimport SimpleError from '../../../alert/SimpleError';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\nclass State { \n    rulePoints: RulePoint[]  = []; \n    loading:boolean = false;\n}\nclass FormStepTwo extends BaseComponent {\n    masterDataService: MasterDataService;\n    state:State = new State();\n    constructor(props) {\n        super(props, true);\n        this.masterDataService = this.getServices().masterDataService;\n    }\n    startLoading = () => this.setState({loading:true});\n    endLoading = () => this.setState({loading:false});\n    rulePointsLoaded = (response: WebResponse) => {\n        this.setState({ rulePoints: response.items }, () => {\n            if (response.items && response.items?.length > 0) {\n                if (!this.props.rulePoint) {\n                    this.setRulePoint(response.items[0]);\n                }\n            }\n        });\n    }\n    \n    loadRulePoints = () => {\n        if (null == this.getCategory()) return;\n        const req: WebRequest = {\n            filter: {limit:0, fieldsFilter:{category_id:this.getCategory().id}},\n            modelName: 'rulepoint',\n        }\n        this.commonAjax(\n            this.masterDataService.list,\n            this.rulePointsLoaded,\n            this.showCommonErrorAlert,\n            req\n        )\n    }\n    getCategory = ()  : Category => {\n        return this.props.category;\n    }\n    componentDidMount() {\n        super.componentDidMount();\n        this.loadRulePoints();\n    }\n    onSubmit = () => {\n        this.props.onSubmit();\n    }\n    setRulePoint = (r:RulePoint) => {\n        this.props.setRulePoint(r);\n    }\n    render() {\n        const category = this.getCategory();\n\n        if (null == category) {\n            return <SimpleError>Category not found</SimpleError>\n        }\n        if (this.state.loading) {\n            return <Spinner/>\n        }\n        if (this.state.rulePoints.length == 0) {\n            return <SimpleError>Rule Points for {category.name} not found</SimpleError>\n        }\n\n        const rulePoints =this.state.rulePoints;\n        return (\n            <form onSubmit={e => { e.preventDefault(); this.onSubmit() }} >\n                <FormGroup label=\"Category\" children={category.name}/>\n                <FormGroup label=\"Name\">\n                <select className=\"form-control\" onChange={(e)=>e.preventDefault()} value={this.props.rulePoint ? this.props.rulePoint.id : null} >\n                    {rulePoints.map((rulePoint) => {\n                        return <option key={\"select-rulePoint-\" + rulePoint.id}\n                            onClick={(e) => { this.setRulePoint(rulePoint) }}\n                            value={rulePoint.id}>{rulePoint.name}</option>\n                    })}\n                </select>\n                </FormGroup>\n                <FormGroup label=\"Point\" children={this.props.rulePoint?.point}/>\n                <hr/>\n                <AnchorWithIcon className=\"btn btn-secondary float-left\"  iconClassName=\"fas fa-arrow-left\" onClick={this.props.onBack} >Back</AnchorWithIcon>\n                <AnchorWithIcon className=\"btn btn-info float-right\" iconClassName=\"fas fa-arrow-right\" onClick={this.onSubmit} >Next</AnchorWithIcon>\n            </form>\n        );\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(FormStepTwo)\n)","\nimport React from 'react'\nimport BaseComponent from '../../../BaseComponent';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\nimport WebResponse from '../../../../models/commons/WebResponse';\nimport WebRequest from '../../../../models/commons/WebRequest';\nimport Category from '../../../../models/Category';\nimport MasterDataService from '../../../../services/MasterDataService';\nimport FormGroup from '../../../form/FormGroup';\nimport SimpleError from '../../../alert/SimpleError';\nimport Spinner from '../../../loader/Spinner';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\nclass State {\n    categories: Category[] = [];\n    loading: boolean = false;\n}\nclass FormStepOne extends BaseComponent {\n    state: State = new State();\n    masterDataService: MasterDataService;\n    constructor(props) {\n        super(props, true);\n        this.masterDataService = this.getServices().masterDataService;\n    }\n    categoriesLoaded = (response: WebResponse) => {\n        this.setState({ categories: response.items, categoriesLoaded: true }, () => {\n            if (response.items && response.items?.length > 0) {\n                if (!this.props.category) {\n                    this.setCategory(response.items[0]);\n                }\n            }\n        });\n    }\n    startLoading = () => this.setState({ loading: true });\n    endLoading = () => this.setState({ loading: false });\n    setCategory = (c: Category) => {\n        this.props.setSelectedCategory(c);  \n    }\n    loadCategories = () => {\n        const req: WebRequest = {\n            filter: { limit: 0 },\n            modelName: 'category'\n        }\n        this.commonAjax(\n            this.masterDataService.list,\n            this.categoriesLoaded,\n            this.showCommonErrorAlert,\n            req\n        )\n    }\n    componentDidMount() {\n        super.componentDidMount();\n        this.loadCategories();\n    }\n    onSubmit = () => {\n        this.props.onSubmit();\n    }\n    render() {\n        const categories = this.state.categories;\n        const category = this.props.category;\n        if (this.state.loading) {\n            return <Spinner />\n        }\n        if (categories.length == 0) {\n            return <SimpleError>Categories not found</SimpleError>\n        }\n        return (\n            <form onSubmit={(e) => { e.preventDefault(); this.onSubmit() }}>\n                <FormGroup label=\"Category\">\n                    <select className=\"form-control\" onChange={(e)=>e.preventDefault()} value={category ? category.id??\"\" : \"\"} >\n                        {categories.map((c) => {\n                            return <option key={\"select-cat-\" + c.id}\n                                onClick={(e) => { this.setCategory(c) }}\n                                value={c.id}>{c.name}</option>\n                        })}\n                    </select>\n\n                </FormGroup>\n                <hr/>\n                <AnchorWithIcon className=\"btn btn-secondary float-left\" iconClassName=\"fas fa-arrow-left\" onClick={this.props.onBack} >Back</AnchorWithIcon>\n                \n                <AnchorWithIcon className=\"btn btn-info float-right\" iconClassName=\"fas fa-arrow-right\" onClick={this.onSubmit}>Next</AnchorWithIcon>\n            </form >\n\n\n        )\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(FormStepOne)\n)","\nimport React from 'react'\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\nimport Student from '../../../models/Student';\nimport AnchorWithIcon from '../../navigation/AnchorWithIcon';\nimport Modal from '../../container/Modal';\nimport FormStepThree from './form/FormStepThree';\nimport FormStepTwo from './form/FormStepTwo';\nimport FormStepOne from './form/FormStepOne';\nimport Category from '../../../models/Category';\nimport RulePoint from '../../../models/RulePoint';\nimport SimpleError from '../../alert/SimpleError';\nimport PointRecord from '../../../models/PointRecord';\nimport StudentService from '../../../services/StudentService';\nimport WebResponse from '../../../models/commons/WebResponse';\nimport FormGroup from '../../form/FormGroup';\nimport { doItLater } from '../../../utils/EventUtil';\nimport AttachmentInfo from './../../../models/settings/AttachmentInfo';\nimport BasePage from './../BasePage';\n\nclass State {\n    student?: Student\n    category?: Category;\n    rulePoint?: RulePoint;\n    formStep: number = 0;\n    savedRecord?: PointRecord;\n    attachmentInfo?:AttachmentInfo;\n}\nclass InputPointForm extends BasePage {\n    state: State = new State();\n    studentService: StudentService;\n    totalStep: number = 4;\n    constructor(props) {\n        super(props, \"Input Point Record\", true);\n        this.studentService = this.getServices().studentService;\n    }\n    validateStudentData = () => {\n        if (!this.props.location.state) {\n            return;\n        }\n        const student = this.props.location.state.student;\n        if (student) {\n            this.setState({ student: Object.assign(new Student(), student) });\n        }\n    }\n    componentDidMount() {\n        super.componentDidMount();\n        this.validateStudentData();\n        this.scrollTop();\n        doItLater(()=>{\n            this.nextStep(1);\n        }, 200);\n        \n    }\n    setAttachment = (attachmentInfo:AttachmentInfo|undefined) => {\n        this.setState({attachmentInfo:attachmentInfo});\n    }\n    removeStudent = () => {\n       this.setState({formStep: 0}, ()=>{\n           doItLater(()=>{\n               this.setState({student:undefined})\n           }, 500); \n       })\n    }\n    removeAttachment = () => {\n        this.setAttachment(undefined);\n    }\n    setCategory = (c: Category) => {\n        this.setState({ category: c });\n    }\n    setRulePoint = (r: RulePoint) => {\n        this.setState({ rulePoint: r });\n    }\n    nextStep = (step: number) => {\n        this.setState({ formStep: step });\n    }\n    submitRecord = (record: PointRecord) => {\n        \n        if (!this.state.student || !this.state.rulePoint) {\n            alert(\"ERROR: student or rulePoint missing!\");\n            return;\n        }\n        record.student_id = this.state.student?.id;\n        record.point_id = this.state.rulePoint?.id;\n        this.commonAjax(\n            this.studentService.submitPointRecord,\n            this.recordSubmitted,\n            this.showCommonErrorAlert,\n            record, this.state.attachmentInfo\n        )\n    }\n    recordSubmitted = (response: WebResponse) => {\n        this.setState({ savedRecord: response.item, formStep: 4 }, this.scrollTop);\n    }\n    render() {\n        const student: Student | undefined = this.state.student;\n        if (!student) {\n            return <Warning />\n        }\n\n        return (\n            <div className=\"container-fluid section-body\">\n                <h2>Input Point</h2>\n                <Modal title={student.user?.name + \" - \" + student.kelas?.level + student.kelas?.rombel + \" \" + student.kelas?.sekolah?.nama}>\n\n                    <Progress step={this.state.formStep} totalStep={this.totalStep} />\n                    {this.state.formStep == 1 ?\n                         <FormStepOne category={this.state.category} \n                            onBack={this.removeStudent}\n                            setSelectedCategory={this.setCategory}\n                            onSubmit={() => { this.nextStep(2) }} />\n                        : null}\n                    {this.state.formStep == 2 && this.state.category ?\n                        <FormStepTwo\n                            rulePoint={this.state.rulePoint}\n                            \n                            setRulePoint={this.setRulePoint}\n                            category={this.state.category} onBack={() => this.nextStep(1)} onSubmit={() => { this.nextStep(3) }}\n                        /> : null}\n                    {this.state.formStep == 3 && this.state.category && this.state.rulePoint ?\n                        <FormStepThree submit={this.submitRecord}\n                            attachmentInfo={this.state.attachmentInfo}\n                            setAttachment={this.setAttachment}\n                            removeAttachment={this.removeAttachment} \n                            rulePoint={this.state.rulePoint}\n                            onBack={() => this.nextStep(2)}\n                        /> : null}\n                    {this.state.formStep == 4 && this.state.savedRecord ?\n                        <Detail back={() => this.setState({ student: null })} record={this.state.savedRecord} />\n                        : null\n                    }\n                    \n                </Modal>\n            </div>\n        )\n    }\n}\n\nconst Progress = (props: { step: number, totalStep: number }) => {\n    return (\n        <div className=\"progress\" style={{ height:'5px', marginBottom: 15}}>\n            <div className=\"bg-info\" style={{transitionDuration: '500ms', width: (props.step / props.totalStep * 100) + '%' }}  ></div>\n        </div>\n    )\n}\n\nconst Detail = (props: { record: PointRecord, back(): any }) => {\n    const record = PointRecord.clone(props.record);\n    const date = record.getDate();\n    return (\n        <div>\n            <h4 className=\"text-center text-success\"><i className=\"fas fa-check\" style={{ marginRight: 5 }} />Record saved</h4>\n            <p />\n            <FormGroup label=\"Date\">{date.toDateString()} {record.time}</FormGroup>\n            <FormGroup label=\"Category\">{record.rule_point?.category?.name}</FormGroup>\n            <FormGroup label=\"Name\">{record.rule_point?.name}</FormGroup>\n            <FormGroup label=\"Point\">{record.rule_point?.point}</FormGroup>\n            <FormGroup label=\"Location\">{record.location}</FormGroup>\n            {record.getPicture()?\n            <FormGroup label=\"Picture\">\n                <img src={record.getPicture()??\"\"} width={200} height={200} />\n            </FormGroup>\n            :null}\n            <hr />\n            <FormGroup><a onClick={props.back} className=\"btn btn-dark\">Ok</a></FormGroup>\n        </div>\n    )\n}\n\nconst Warning = () => {\n    return (\n        <div className=\"container-fluid section-body\">\n            <h2>Input Point</h2>\n            <SimpleError>\n                <i className=\"fas fa-exclamation-circle\" />&nbsp;Please select student <hr />\n                <AnchorWithIcon to={\"/dormitoryactivity/studentlist\"} iconClassName=\"fas fa-list\">Student List</AnchorWithIcon>\n            </SimpleError>\n        </div>\n    )\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(InputPointForm)\n)","import React from 'react'\nimport BaseComponent from './../../BaseComponent';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\nimport PointRecord from './../../../models/PointRecord';\nimport AnchorWithIcon from './../../navigation/AnchorWithIcon';\nimport StudentService from './../../../services/StudentService';\n\nclass State {\n    loading: boolean = false;\n}\nclass DropPointButtons extends BaseComponent {\n    studentService: StudentService;\n    state: State = new State();\n    constructor(props) {\n        super(props, true);\n        this.studentService = this.getServices().studentService;\n    }\n    startLoading = () => { this.setState({ loading: true }); }\n    endLoading = () => { this.setState({ loading: false }); }\n    getRecord = (): PointRecord => {\n        return this.props.record;\n    }\n\n    setDropped = (isDropped: boolean) => {\n        const item = this.getRecord();\n        this.commonAjax(this.studentService.setPointDropped,\n            this.props.onUpdated,\n            this.showCommonErrorAlert,\n            item.id, isDropped);\n    }\n    render() {\n        const item = this.getRecord();\n        if (this.state.loading) {\n\n            return <button className=\"btn btn-info btn-sm\">\n                <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n            </button>\n        }\n        return (\n            item.dropped_at ?\n                <AnchorWithIcon onClick={(e) => this.setDropped(false)} className=\"btn btn-info btn-sm\" iconClassName=\"fas fa-arrow-up\">\n                    Undrop\n                </AnchorWithIcon> :\n                <AnchorWithIcon onClick={(e) => this.setDropped(true)} className=\"btn btn-info btn-sm\" iconClassName=\"fas fa-arrow-down\">\n                    Drop\n                </AnchorWithIcon>\n        )\n    }\n}\n\nexport default withRouter(connect(\n    mapCommonUserStateToProps\n)(DropPointButtons))","\nimport React, { Component } from 'react'\nimport PointRecord from './../../../models/PointRecord';\nimport Card from './../../container/Card';\nimport FormGroup from './../../form/FormGroup';\nimport AnchorWithIcon from './../../navigation/AnchorWithIcon';\n\ninterface IProps {\n    record:PointRecord;\n    close():any;\n}\nexport default class PointRecordDetail extends Component<IProps, any> {\n\n\n    render() {\n        const record = PointRecord.clone(this.props.record);\n        const pictureUrl = record.getPicture();\n        const timeStamp = record.getTimestamp();\n        return <Card title={\"Record Detail - \"+timeStamp} footerContent={<AnchorWithIcon className=\"btn btn-dark\" onClick={this.props.close} >Ok</AnchorWithIcon>}>\n            <FormGroup label=\"Name\">{record.student?.user?.name} - {record.student?.kelas?.level} {record.student?.kelas?.rombel}</FormGroup>\n            <FormGroup label=\"Item\">\n                <strong>{record.rule_point?.category?.name}</strong> - {record.rule_point?.name} <span className=\"badge badge-dark\">{record.rule_point?.point}</span>\n            </FormGroup>\n            <FormGroup label=\"Location\">\n                {record.location??\"-\"}\n            </FormGroup>\n            <FormGroup label=\"Description\">\n                {record.description??\"-\"}\n            </FormGroup>\n            <FormGroup label=\"Dropped\">\n                {record.dropped_at??\"-\"}\n            </FormGroup>\n            <FormGroup label=\"Picture\">\n                {pictureUrl?\n                <img src={pictureUrl} width={200} height={200} className=\"border border-dark\" />:null}\n            </FormGroup>\n        </Card>\n    }\n}","import React, { ChangeEvent } from 'react'\nimport BaseManagementPage from '../management/BaseManagementPage';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\nimport EditDeleteButton from '../management/EditDeleteButton'\nimport PointRecord from './../../../models/PointRecord';\nimport Filter from '../../../models/commons/Filter';\nimport FormGroup from './../../form/FormGroup';\nimport NavigationButtons from './../../navigation/NavigationButtons';\nimport { tableHeader } from './../../../utils/CollectionUtil';\nimport DropPointButtons from './DropPointButtons';\nimport Spinner from './../../loader/Spinner';\nimport { MONTHS } from './../../../utils/DateUtil';\nimport FilterPeriod from './../../form/FilterPeriod';\nimport PointRecordDetail from './PointRecordDetail';\nclass State {\n    items: PointRecord[] = [];\n    filter: Filter = new Filter();\n    totalData: number = 0;\n    record?: PointRecord;\n    loading: boolean = false;\n\n}\n\n\nclass PointRecordManagement extends BaseManagementPage {\n    state: State = new State();\n\n    constructor(props) {\n        super(props, 'pointrecord', false);\n        if (!this.state.filter.fieldsFilter) {\n            this.state.filter.fieldsFilter = {};\n        }\n\n        this.state.filter.limit = 10;\n        this.state.filter.day = this.state.filter.dayTo = new Date().getDate();\n        this.state.filter.month = this.state.filter.monthTo = new Date().getMonth() + 1;\n        this.state.filter.year = this.state.filter.yearTo = new Date().getFullYear();\n        this.state.filter.fieldsFilter['dropped'] = 'ALL';\n    }\n\n    // oneRecordLoaded = (item:any) => {\n    //     window.scrollTo(0, 0);\n    //     super.oneRecordLoaded(item);\n    // }\n\n    render() {\n        const filter: Filter = this.state.filter;\n        const fieldsFilter = filter.fieldsFilter;\n        if (this.state.record) {\n            return (\n                <div className=\"container-fluid section-body\">\n                    <h2>Point Record Management</h2>\n                    <PointRecordDetail record={this.state.record} close={() => this.oneRecordLoaded(undefined)} />\n                </div>\n            )\n        }\n        return (\n            <div className=\"container-fluid section-body\">\n                <h2>Point Record Management</h2>\n                <hr />\n                <form onSubmit={(e) => { e.preventDefault(); this.loadAtPage(0) }}>\n                    <FormGroup label=\"Search\">\n                        <div className=\"input-group\">\n                            <input name=\"name\" placeholder=\"student name\" className=\"form-control\" value={fieldsFilter ? fieldsFilter['name'] : \"\"} onChange={this.updateFieldsFilter} />\n                            <input name=\"point_name\" placeholder=\"point name\" className=\"form-control\" value={fieldsFilter ? fieldsFilter['point_name'] : \"\"} onChange={this.updateFieldsFilter} />\n                        </div>\n                        <div className=\"input-group\">\n                            <input name=\"category_name\" placeholder=\"category\" className=\"form-control\" value={fieldsFilter ? fieldsFilter['category_name'] : \"\"} onChange={this.updateFieldsFilter} />\n                            <input name=\"location\" placeholder=\"location\" className=\"form-control\" value={fieldsFilter ? fieldsFilter['location'] : \"\"} onChange={this.updateFieldsFilter} />\n                        </div>\n                        <div className=\"input-group\">\n                            <FilterPeriod filter={filter} onChange={this.updateFilter} />\n                        </div>\n                        <div className=\"input-group\">\n                            <FilterPeriod mode={\"to\"} filter={filter} onChange={this.updateFilter} />\n                        </div>\n                    </FormGroup>\n                    <FormGroup label=\"Dropped\">\n                        <select name=\"dropped\" className=\"form-control\" value={fieldsFilter ? fieldsFilter['dropped'] : 'ALL'} onChange={this.updateFieldsFilter}>\n                            <option value=\"ALL\">All</option>\n                            <option value=\"false\">Not Dropped</option>\n                            <option value=\"true\">Dropped</option>\n                        </select>\n                    </FormGroup>\n                    <FormGroup label=\"Record Count\">\n                        <input name=\"limit\" className=\"form-control\" value={filter.limit ?? 5} onChange={this.updateFilter} />\n                    </FormGroup>\n                    <FormGroup label=\"Period\">\n                        {filter.day} {MONTHS[(filter.month ?? 1) - 1]} {filter.year} - {filter.dayTo} {MONTHS[(filter.monthTo ?? 1) - 1]} {filter.yearTo}\n                    </FormGroup>\n                    <FormGroup>\n                        <input className=\"btn btn-primary\" type=\"submit\" value=\"Submit\" />\n                    </FormGroup>\n                </form>\n                <NavigationButtons activePage={filter.page ?? 0} limit={filter.limit ?? 10} totalData={this.state.totalData}\n                    onClick={this.loadAtPage} />\n                <ItemsList startingNumber={(filter.page ?? 0) * (filter.limit ?? 10)} loading={this.state.loading}\n                    recordLoaded={this.oneRecordLoaded}\n                    recordUpdated={this.loadItems}\n                    items={this.state.items} />\n            </div>\n        )\n    }\n\n}\n\nconst ItemsList = (props: { loading: boolean, startingNumber: number, items: PointRecord[], recordLoaded(item: PointRecord), recordUpdated() }) => {\n\n    return (\n        <div style={{ overflow: 'scroll' }}>\n\n            <table className=\"table table-striped\">\n                {tableHeader(\"No\", \"Student\", \"Date\", \"Point Name\", \"Point\", \"Picture\", \"Dropped\", \"Option\")}\n                <tbody>\n\n                    {props.loading ?\n                        <tr><td colSpan={7}><Spinner /></td></tr>\n                        : props.items.map((item, i) => {\n                            item = PointRecord.clone(item);\n                            return (\n                                <tr key={\"PointRecord-\" + i}>\n                                    <td>{i + 1 + props.startingNumber}</td>\n                                    <td>{item.student?.user?.name}</td>\n                                    <td>{item.getTimestamp()}</td>\n                                    <td>{item.rule_point?.name} ({item.rule_point?.category?.name})</td>\n                                    <td>{item.rule_point?.point}</td>\n                                    <td>{item.getPicture() ?\n                                        <img src={item.getPicture() ?? \"\"} width={50} height={50} />\n                                        : null}</td>\n                                    <td>{item.dropped_at ?? \"-\"}</td>\n                                    <td>\n                                        <div style={{ width: '200px' }}>\n                                            <DropPointButtons record={item} onUpdated={props.recordUpdated} />\n                                            <EditDeleteButton record={item}\n                                                recordLoaded={props.recordLoaded}\n                                                recordDeleted={props.recordUpdated}\n                                                modelName={'pointrecord'} />\n                                        </div>\n                                    </td>\n                                </tr>\n                            )\n                        })}\n                </tbody>\n            </table>\n        </div>\n    )\n\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(PointRecordManagement)\n)","import React, { FormEvent } from 'react'\nimport BaseComponent from './../../../BaseComponent';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from './../../../../constant/stores';\nimport Card from './../../../container/Card';\nimport FormGroup from './../../../form/FormGroup';\nimport Student from './../../../../models/Student';\nimport MasterDataService from './../../../../services/MasterDataService';\nimport WebRequest from './../../../../models/commons/WebRequest';\nimport WebResponse from './../../../../models/commons/WebResponse';\nclass State {\n    studentName?:string;\n    items:Student[] = [];\n    item?:Student;\n}\nclass StudentForm extends BaseComponent{\n\n    state:State = new State();\n    masterDataService:MasterDataService;\n    constructor(props) {\n        super(props, true);\n        this.masterDataService = this.getServices().masterDataService;\n    }\n\n    submit = (e:FormEvent) => {\n        e.preventDefault();\n        this.loadStudent();\n    }\n    itemsLoaded = (response: WebResponse) => {\n        this.setState({items: response.items});\n    }\n    loadStudent = () => {\n        const request:WebRequest = {\n            modelName:'student',\n            filter:{\n                limit: 15,\n                fieldsFilter: {  name:this.state.studentName  }\n            }\n        }\n        this.commonAjax(\n            this.masterDataService.list,\n            this.itemsLoaded,\n            this.showCommonErrorAlert,\n            request\n        )\n    }\n    setSelectedItem = (item:Student) => {\n        this.setState({item:item,  items:[], studentName:undefined}, ()=> {\n            if (this.props.setItem) {\n                this.props.setItem(item);\n            }\n        });\n    }\n    reset = () => {\n        this.setState({item:undefined, items:[], studentName:undefined}, () => {\n            if (this.props.setItem) {\n                this.props.setItem(undefined);\n            }\n        });\n    }\n    render() {\n        const items:Student[] = this.state.items;\n        const selectedItem:Student | undefined = this.state.item;\n        return (\n            <form onReset={this.reset} onSubmit={this.submit}>\n                <Card title=\"Select Student\">\n                    <FormGroup label=\"Search\">\n                        <input placeholder=\"Name\" value={this.state.studentName??\"\"} className=\"form-control\" onChange={this.handleInputChange} name=\"studentName\" />\n                        {items.length > 0?<div style={{position:'absolute', zIndex: 200}} className=\"container-fluid bg-light rounded-sm border border-dark\">\n                                {items.map(item=>{\n                                    return (\n                                        <div className=\"option-item\"onClick={()=>{\n                                            this.setSelectedItem(item);\n                                        }} style={{cursor: 'pointer'}} key={\"Student-\"+item.id} >{item.user?.name}</div>\n                                    )\n                                })}\n                                <a onClick={this.reset} className=\"option-item\"><i className=\"fas fa-times\"/>&nbsp;close</a>\n                            </div>:null}\n                    </FormGroup>\n                    {selectedItem?\n                    <ItemDetail item={selectedItem} />\n                    :null}\n                    <hr/>\n                    <div className=\"btn-group float-right\">\n                        <input type=\"submit\" className=\"btn btn-dark\" value=\"Search\" />\n                        <input type=\"reset\" className=\"btn btn-secondary\" value=\"Reset\" />\n                    </div>\n                </Card>\n            </form>\n        )\n    }\n}\n\nconst ItemDetail = (props:{item:Student}) => {\n\n    return (\n        <>\n            <FormGroup label=\"Name\">{props.item.user?.name}</FormGroup>\n            <FormGroup label=\"Kelas\">{props.item.kelas?.level}{props.item.kelas?.rombel} - {props.item.kelas?.sekolah?.nama}</FormGroup>\n            \n        </>\n    )\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(StudentForm)\n)","\nimport BaseEntity from './BaseEntity';\nimport Student from './Student';\nexport default class MedicalRecord extends BaseEntity {\n      day: number = new Date().getDate();\n      month: number = new Date().getMonth();\n      year: number = new Date().getFullYear();\n      temperature_morning?: number;\n      temperature_afternoon?: number;\n      breakfast?: boolean;\n      lunch?: boolean;\n      dinner?: boolean;\n      medicine_consumption: boolean = false;\n      genose_test?: boolean;\n      antigen_test?: boolean;\n      pcr_test?: boolean;\n      description?: string\n      student_id;\n      student?: Student;\n\n      public static clone = (obj:MedicalRecord) : MedicalRecord => {\n            return Object.assign(new MedicalRecord(), obj);\n      }\n      public static instance = (student_id:string, d: number, m: number, y: number): MedicalRecord => {\n            const obj = new MedicalRecord();\n            obj.day = d;\n            obj.month = m;\n            obj.year = y;\n            obj.student_id = student_id;\n            return obj;\n      }\n}","import React, { ChangeEvent, Component, FormEvent } from 'react'\nimport BaseComponent from './../../../BaseComponent';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from './../../../../constant/stores';\nimport MedicalRecord from './../../../../models/MedicalRecord';\nimport StudentService from './../../../../services/StudentService';\nimport WebResponse from './../../../../models/commons/WebResponse';\nclass State {\n    record: MedicalRecord = new MedicalRecord();\n}\nclass MedicalRecordDailyInput extends BaseComponent {\n    state: State = new State();\n    studentService:StudentService;\n    constructor(props) {\n        super(props, true);\n        this.studentService = this.getServices().studentService;\n        this.state.record = MedicalRecord.instance(props.student.id, props.day, props.month, props.year);\n    }\n    reset = () => {\n        const props = this.props;\n        this.setState({record:  MedicalRecord.instance(props.student.id, props.day, props.month, props.year)});\n    }\n    setRecord = (record:MedicalRecord) => {\n        this.setState({record: MedicalRecord.clone(record)});\n    }\n\n    onChange = (e: ChangeEvent) => {\n        const record = this.state.record;\n        const target = e.target as HTMLInputElement;\n        record[target.name] = target.type == 'checkbox' ? target.checked : target.value;\n        this.setState({ record: MedicalRecord.clone(record) });\n    }\n\n    recordSubmitted = (response:WebResponse) => {\n        this.showInfo(\"Data has been submitted\");\n    }\n\n    onSubmit = (e:FormEvent) => {\n        e.preventDefault();\n        const record:MedicalRecord =  this.state.record;\n        record.student_id = this.props.student.id;\n        this.commonAjax(\n            this.studentService.submitMedicalRecord,\n            this.recordSubmitted,\n            this.showCommonErrorAlert,\n            record\n        )\n    }\n\n    render() {\n        const props = this.props;\n        const record = this.state.record;\n        return (\n            <form onSubmit={this.onSubmit}>\n                <table className=\"table table-bordered table-striped\" style={{ fontSize: '0.8em' }}>\n                    <tbody>\n                        <SingleRow><p className='text-center'> {record.day}/{record.month}</p></SingleRow>\n                        <SingleRow>\n                            <input type='number' onChange={this.onChange} className=\"form-control\" name=\"temperature_morning\" value={record.temperature_morning ?? \"\"} />\n                        </SingleRow>\n                        <SingleRow>\n                            <input type='number' onChange={this.onChange} className=\"form-control\" name=\"temperature_afternoon\" value={record.temperature_afternoon ?? \"\"} />\n                        </SingleRow>\n                        <SingleRow>\n                            <input style={{ marginRight: 5 }} onChange={this.onChange} type=\"checkbox\" name=\"breakfast\" checked={record.breakfast ?? false} />\n                            {record.breakfast ? \"yes\" : \"no\"}\n                        </SingleRow>\n                        <SingleRow>\n                            <input style={{ marginRight: 5 }} onChange={this.onChange} type=\"checkbox\" name=\"lunch\" checked={record.lunch ?? false} />\n                            {record.lunch ? \"yes\" : \"no\"}\n                        </SingleRow>\n                        <SingleRow>\n                            <input style={{ marginRight: 5 }} onChange={this.onChange} type=\"checkbox\" name=\"dinner\" checked={record.dinner ?? false} />\n                            {record.dinner ? \"yes\" : \"no\"}\n                        </SingleRow>\n                        <SingleRow>\n                            <input style={{ marginRight: 5 }} onChange={this.onChange} type=\"checkbox\" name=\"medicine_consumption\" checked={record.medicine_consumption ?? false} />\n                            {record.medicine_consumption ? \"yes\" : \"no\"}\n                        </SingleRow>\n                        <SingleRow>\n                            <input style={{ marginRight: 5 }} onChange={this.onChange} type=\"checkbox\" name=\"genose_test\" checked={record.genose_test ?? false} />\n                            {record.genose_test ? \"yes\" : \"no\"}\n                        </SingleRow>\n                        <SingleRow>\n                            <input style={{ marginRight: 5 }} onChange={this.onChange} type=\"checkbox\" name=\"antigen_test\" checked={record.antigen_test ?? false} />\n                            {record.antigen_test ? \"yes\" : \"no\"}\n                        </SingleRow>\n                        <SingleRow>\n                            <input style={{ marginRight: 5 }} onChange={this.onChange} type=\"checkbox\" name=\"pcr_test\" checked={record.pcr_test ?? false} />\n                            {record.pcr_test ? \"yes\" : \"no\"}\n                        </SingleRow>\n                        <SingleRow>\n                            <input onChange={this.onChange} type=\"text\" name=\"description\" value={record.description ?? \"\"} className=\"form-control\" />\n                        </SingleRow>\n                        <SingleRow>\n                            <button className=\"btn btn-success\" type=\"submit\">\n                                <i className=\"fas fa-save\" />\n                            </button>\n                            <br/>\n                            <p className='text-center'> {record.day}/{record.month}</p>\n                        </SingleRow>\n                    </tbody>\n                </table>\n            </form>\n        )\n    }\n}\n\n\nconst SingleRow = (props: { children: any }) => {\n    return (\n        <tr><td>\n            <div className=\"text-center\" style={{minHeight:40}}>{props.children}</div></td></tr>\n    )\n}\n\nexport default \n   connect(\n        mapCommonUserStateToProps, null, null,    { forwardRef: true }\n    )(MedicalRecordDailyInput)\n","import React from 'react'\nimport BaseComponent from '../../../BaseComponent';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\nimport StudentForm from './StudentForm';\nimport Student from './../../../../models/Student';\nimport FilterPeriod from './../../../form/FilterPeriod';\nimport Filter from './../../../../models/commons/Filter';\nimport FormGroup from './../../../form/FormGroup';\nimport { getMonthDays, MONTHS } from './../../../../utils/DateUtil';\nimport Card from './../../../container/Card';\nimport MedicalRecord from './../../../../models/MedicalRecord';\nimport MedicalRecordDailyInput from './MedicalRecordDailyInput';\nimport StudentService from './../../../../services/StudentService';\nimport WebResponse from './../../../../models/commons/WebResponse';\nimport AnchorWithIcon from './../../../navigation/AnchorWithIcon';\nimport { doItLater } from './../../../../utils/EventUtil';\nimport { compose } from 'redux';\nimport BasePage from './../../BasePage';\nclass State {\n    student?: Student;\n    month: number = new Date().getMonth() + 1;\n    year: number = new Date().getFullYear();\n    mappedItems: Map<number, MedicalRecord> = new Map()\n}\nclass MedicalRecordForm extends BasePage {\n    state: State = new State();\n    studentService: StudentService;\n    inputRefs: Map<number, any> = new Map();\n    constructor(props) {\n        super(props, \"Medical Record\", true);\n        this.studentService = this.getServices().studentService;\n    }\n    setStudent = (student: Student | undefined) => {\n        if (student) {\n            student = Object.assign(new Student(), student);\n        }\n        this.setState({ student: student }, this.reset);\n    }\n    validateStudentData = () => {\n        const student = this.props.location.state?this.props.location.state.student : undefined;\n        if (student) {\n            this.setStudent(student);\n        }\n    }\n    \n    reset = () => {\n        doItLater(() => {\n            if (this.state.student)\n            this.inputRefs.forEach((ref: any, day: number) => {\n                if (ref) {\n                    ref.reset();\n                }\n            })\n        }, 100);\n    }\n    recordsLoaded = (response: WebResponse) => {\n\n        let mappedItems = new Map();\n        if (response.items) {\n            mappedItems = this.toMap(response.items);\n        }\n\n        this.setState({ mappedItems: mappedItems }, () => {\n            doItLater(() => {\n                this.inputRefs.forEach((ref: any, day: number) => {\n                    let record = this.state.mappedItems.get(day);\n                    if (!record) {\n                        record = MedicalRecord.instance(this.state.student?.id,day, this.state.month, this.state.year);\n                    } else {\n                        record = MedicalRecord.clone(record);\n                    }\n                    if (ref) {\n                        ref.setRecord(record);\n                    }\n                })\n            }, 100);\n        });\n    }\n\n\n    toMap = (items: MedicalRecord[]): Map<number, MedicalRecord> => {\n        const map: Map<number, MedicalRecord> = new Map();\n        for (let i = 0; i < items.length; i++) {\n            const item = items[i];\n            map.set(item.day, item);\n        }\n        return map;\n    }\n\n    loadMonthlyRecord = () => {\n        this.commonAjax(\n            this.studentService.loadMonthlyMedicalRecord,\n            this.recordsLoaded, this.showCommonErrorAlert,\n            this.state.student?.id, this.state.month, this.state.year\n        )\n    }\n\n    getFilter = (): Filter => {\n        return { month: this.state.month, year: this.state.year }\n    }\n\n    componentDidMount() {\n        this.validateLoginStatus(()=>{\n            this.scrollTop();\n            this.validateStudentData();\n        });\n    }\n    dayCount = () => {\n        return getMonthDays(this.state.month, this.state.year);\n    }\n    render() {\n        const student = this.state.student;\n        const filter = this.getFilter();\n        const mappedRecord = this.state.mappedItems;\n        const dayCount = this.dayCount();\n        const days: number[] = [];\n        for (let i = 1; i <= dayCount; i++) {\n            days.push(i);\n        }\n        const gridTemplateColumns = ('150px ').repeat(dayCount);\n\n        return (\n            <div className=\"container-fluid section-body\">\n                <h2>Medical Record Form {student ? student.user?.name : \"\"}</h2>\n                <StudentForm setItem={this.setStudent} />\n                <p />\n                {student ?\n                    <Card>\n                        <FormGroup label={\"Period (\" + MONTHS[(filter.month ?? 1) - 1] + \" \" + filter.year + \")\"}>\n                            <div className=\"input-group\">\n                                <FilterPeriod filter={filter} hideDay onChange={this.handleInputChange} />\n                            </div>\n                        </FormGroup>\n                        <FormGroup>\n                            <AnchorWithIcon iconClassName=\"fas fa-redo\" onClick={this.loadMonthlyRecord}>Load Data</AnchorWithIcon>\n                        </FormGroup>\n\n                        <div className=\"container-fluid  row\">\n                            <div className=\"col-md-3\">\n                                <LeftLabel />\n                            </div>\n                            <div className=\"col-md-9\" style={{ overflow: 'scroll' }}>\n                                <div style={{ display: 'grid', gridTemplateColumns: gridTemplateColumns }}>\n\n                                    {days.map(day =>\n                                        <MedicalRecordDailyInput key={\"record-input-\" + day} student={student}\n                                            ref={ref => {\n                                                this.inputRefs.set(day, ref)\n                                            }}\n                                            year={this.state.year}\n                                            month={this.state.month} day={day} />)}\n                                </div>\n                            </div>\n                        </div>\n                    </Card>\n                    : null}\n            </div>\n        )\n    }\n\n}\n\nconst LeftLabel = (props: {}) => {\n    const labels = [\n        //temp\n        \"Pengukuran suhu badan pagi hari\", \"Pengukuran suhu badan sore hari\",\n        // constumption\n        \"Makan pagi\", \"Makan siang\", \"Makan malam\",\n        \"Konsumsi vitamin / Obat pribadi\",\n        //test\n        \"Genose test\", \"Swab antigen\", \"PCR test\",\n        //\n        \"Kesimpulan sementara\"\n    ]\n\n    return (\n        <table className=\"table table-bordered table-striped\" style={{ fontSize: '0.7em' }}>\n            <tbody>\n                <tr><td><div style={{ minHeight: 40 }}>Pengukuran</div></td></tr>\n                {labels.map((label, i) => {\n                    return (<tr key={\"label-\" + i}>\n                        <td><div style={{ minHeight: 40 }}>{i + 1}. {label}</div></td>\n                    </tr>)\n                })}\n            </tbody>\n        </table>\n    )\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(MedicalRecordForm)\n)","import React, { ChangeEvent, Component, FormEvent, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport BaseComponent from '../../BaseComponent';\r\nimport ApplicationProfile from '../../../models/ApplicationProfile';\r\nimport Card from '../../container/Card';\r\nimport FormGroup from '../../form/FormGroup';\r\nimport { baseImageUrl } from '../../../constant/Url';\r\nimport { setApplicationProfile } from '../../../redux/actionCreators';\r\nimport WebResponse from '../../../models/commons/WebResponse';\r\nimport { toBase64v2 } from '../../../utils/ComponentUtil';\r\nimport { EditField, EditImage } from './settingHelper';\r\nimport MasterDataService from './../../../services/MasterDataService';\r\nimport BasePage from './../BasePage';\r\nclass EditFields {\r\n    name: boolean = false; pageIcon: boolean = false;\r\n    welcomingMessage: boolean = false;\r\n    contact: boolean = false; shortDescription: boolean = false;\r\n    backgroundUrl: boolean = false; address: boolean = false;\r\n    about: boolean = false; color: boolean = false; fontColor: boolean = false\r\n}\r\nclass IState {\r\n    applicationProfile?: ApplicationProfile = undefined;\r\n    editFields: EditFields = new EditFields()\r\n    fieldChanged = (): boolean => {\r\n        for (const key in this.editFields) {\r\n            if (this.editFields[key] == true) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\nclass EditApplicationProfile extends BasePage {\r\n\r\n    masterDataService: MasterDataService;\r\n    state: IState = new IState();\r\n    constructor(props: any) {\r\n        super(props, \"Edit Application Profile\", true);\r\n        this.masterDataService = this.getServices().masterDataService;\r\n        this.state.applicationProfile = Object.assign(new ApplicationProfile(), this.getApplicationProfile());\r\n    }\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        document.title = \"ApplicationProfile Profile\";\r\n    }\r\n    updateProfileProperty = (e: ChangeEvent) => {\r\n        const target: HTMLInputElement | null = e.target as HTMLInputElement;\r\n        if (null == target) return;\r\n        const applicationProfile: ApplicationProfile | undefined = this.state.applicationProfile;\r\n        if (!applicationProfile) return;\r\n\r\n        applicationProfile[target.name] = target.value;\r\n        this.setState({ applicationProfile: applicationProfile });\r\n    }\r\n\r\n    updateImageField = (e: ChangeEvent) => {\r\n        const target: HTMLInputElement | null = e.target as HTMLInputElement;\r\n        if (null == target) return;\r\n        const fieldName: string | null = e.target.getAttribute(\"name\");\r\n        if (null == fieldName) {\r\n            return;\r\n        }\r\n        const app = this;\r\n        const fileName: string | undefined = target.files ? target.files[0].name : undefined;\r\n        if (!fileName) return;\r\n        toBase64v2(target).then(function (imageData) {\r\n            app.setAppProfileField(fieldName, imageData);\r\n        }).catch(console.error);\r\n    }\r\n    setAppProfileField = (fieldName: string, value: any) => {\r\n        const applicationProfile: ApplicationProfile | undefined = this.state.applicationProfile;\r\n        if (!applicationProfile) return;\r\n        applicationProfile[fieldName] = value;\r\n        this.setState({ applicationProfile: applicationProfile });\r\n    }\r\n    toggleInput = (e: MouseEvent) => {\r\n        const target: HTMLAnchorElement | null = e.target as HTMLAnchorElement;\r\n        const appProfile: ApplicationProfile | undefined = this.state.applicationProfile;\r\n        const actualAppProfile: ApplicationProfile | undefined = this.getApplicationProfile();\r\n        if (null == target || !appProfile || !actualAppProfile) {\r\n            return;\r\n        }\r\n\r\n        const propertyName: string | null = target.getAttribute(\"data-name\");\r\n        if (null == propertyName) {\r\n            return;\r\n        }\r\n        const enabled: boolean = target.getAttribute('data-enabled') == 'true';\r\n        const editFields = this.state.editFields;\r\n        editFields[propertyName] = enabled;\r\n        if (!enabled) {\r\n            appProfile[propertyName] = actualAppProfile[propertyName];\r\n        }\r\n        this.setState({ applicationProfile: appProfile, editFields: editFields });\r\n    }\r\n    saveRecord = (e: FormEvent) => {\r\n        e.preventDefault();\r\n        if (this.state.fieldChanged() == false) {\r\n            return;\r\n        }\r\n        const app = this;\r\n        this.showConfirmation(\"Save Data?\")\r\n            .then(function (ok) {\r\n                if (ok) { app.doSaveRecord(); }\r\n            })\r\n    }\r\n    doSaveRecord = () => {\r\n        const applicationProfile: ApplicationProfile | undefined = this.getApplicationEditedData();\r\n        if (!applicationProfile) return;\r\n        if (applicationProfile.backgroundUrl || applicationProfile.pageIcon) {\r\n            this.commonAjaxWithProgress(\r\n                this.masterDataService.updateApplicationProfile,\r\n                this.profileSaved, this.showCommonErrorAlert,\r\n                applicationProfile\r\n            )\r\n        } else {\r\n            this.commonAjax(\r\n                this.masterDataService.updateApplicationProfile,\r\n                this.profileSaved, this.showCommonErrorAlert,\r\n                applicationProfile\r\n            )\r\n        }\r\n    }\r\n    getApplicationEditedData = (): ApplicationProfile | undefined => {\r\n        const applicationProfile: ApplicationProfile | undefined = this.state.applicationProfile;\r\n        const editFields: EditFields = this.state.editFields;\r\n        if (!applicationProfile) return undefined;\r\n        const editedApplication: ApplicationProfile = new ApplicationProfile();\r\n        for (const key in editFields) {\r\n            const element: boolean = editFields[key];\r\n            if (element && key != 'backgroundUrl' && key != 'pageIcon') {\r\n                editedApplication[key] = applicationProfile[key];\r\n            }\r\n        }\r\n        if (editFields.backgroundUrl && applicationProfile.backgroundUrl?.startsWith(\"data:image\")) {\r\n            editedApplication.backgroundUrl = applicationProfile.backgroundUrl;\r\n        }\r\n        if (editFields.pageIcon && applicationProfile.pageIcon?.startsWith(\"data:image\")) {\r\n            editedApplication.pageIcon = applicationProfile.pageIcon;\r\n        }\r\n        return editedApplication;\r\n    }\r\n    profileSaved = (response: WebResponse) => {\r\n        this.showInfo(\"Success\");\r\n        this.props.setApplicationProfile(response.profile);\r\n        const editFields = this.state.editFields;\r\n        for (const key in editFields) {\r\n            editFields[key] = false;\r\n        }\r\n        this.setState({ editFields: editFields });\r\n    }\r\n\r\n    render() {\r\n        const applicationProfile: ApplicationProfile | undefined = this.state.applicationProfile;\r\n        if (!applicationProfile) return null;\r\n        const editFields: EditFields = this.state.editFields;\r\n        const bgUrl: string = applicationProfile.backgroundUrl ?? \"\";\r\n        const pageIcon: string = applicationProfile.pageIcon ?? \"\";\r\n        return (\r\n            <div  className=\"section-body container-fluid\">\r\n                <h2>Application Profile</h2>\r\n                <Card title=\"Profile Data\">\r\n                    <form onSubmit={this.saveRecord}>\r\n                        <div className=\"container-fluid text-center\" style={{ marginBottom: '10px' }}>\r\n                            <img style={{ marginBottom: '10px' }} height=\"100\" className=\"border border-primary\" src={bgUrl.startsWith(\"data:image\") ? bgUrl : baseImageUrl() + bgUrl} />\r\n                            <EditImage name=\"backgroundUrl\" edit={editFields.backgroundUrl} updateProperty={this.updateImageField} toggleInput={this.toggleInput} />\r\n                        </div>\r\n                        <FormGroup label=\"Name\">\r\n                            <EditField edit={editFields.name} updateProperty={this.updateProfileProperty} name=\"name\" toggleInput={this.toggleInput} value={applicationProfile.name} />\r\n                        </FormGroup>\r\n                        <FormGroup label=\"Welcoming Message\">\r\n                            <EditField edit={editFields.welcomingMessage} updateProperty={this.updateProfileProperty} name=\"welcomingMessage\" toggleInput={this.toggleInput} value={applicationProfile.welcoming_message} />\r\n                        </FormGroup>\r\n                        <FormGroup label=\"Short Description\">\r\n                            <EditField edit={editFields.shortDescription} updateProperty={this.updateProfileProperty} name=\"shortDescription\" toggleInput={this.toggleInput} value={applicationProfile.description} />\r\n                        </FormGroup>\r\n                        <FormGroup label=\"Address\">\r\n                            <EditField edit={editFields.address} updateProperty={this.updateProfileProperty} name=\"address\" toggleInput={this.toggleInput} value={applicationProfile.address} />\r\n                        </FormGroup>\r\n                        <FormGroup label=\"About\">\r\n                            <EditField edit={editFields.about} updateProperty={this.updateProfileProperty} name=\"about\" toggleInput={this.toggleInput} value={applicationProfile.about} />\r\n                        </FormGroup>\r\n                        <FormGroup label=\"Contact\">\r\n                            <EditField edit={editFields.contact} updateProperty={this.updateProfileProperty} name=\"contact\" toggleInput={this.toggleInput} value={applicationProfile.contact} />\r\n                        </FormGroup>\r\n                        <FormGroup label=\"Background Color\">\r\n                            <EditField type=\"color\" edit={editFields.color} updateProperty={this.updateProfileProperty} name=\"color\" toggleInput={this.toggleInput} value={applicationProfile.color} />\r\n                        </FormGroup>\r\n                        <FormGroup label=\"Font Color\">\r\n                            <EditField type=\"color\" edit={editFields.fontColor} updateProperty={this.updateProfileProperty} name=\"fontColor\" toggleInput={this.toggleInput} value={applicationProfile.fontColor} />\r\n                        </FormGroup>\r\n                        <FormGroup label=\"Page Icon\">\r\n                            <img style={{ marginBottom: '10px' }} height=\"100\" className=\"border border-primary\" src={pageIcon.startsWith(\"data:image\") ? pageIcon : baseImageUrl() + pageIcon} />\r\n                            <EditImage name=\"pageIcon\" edit={editFields.pageIcon} updateProperty={this.updateImageField} toggleInput={this.toggleInput} />\r\n                        </FormGroup>\r\n                        <FormGroup  >\r\n                            {this.state.fieldChanged() ? <input type=\"submit\" className=\"btn btn-primary\" value=\"Save\" /> : null}\r\n                        </FormGroup>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    setApplicationProfile: (applicationProfile: ApplicationProfile) => dispatch(setApplicationProfile(applicationProfile)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(EditApplicationProfile))","import React from 'react';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport Card from './../../container/Card';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport ApplicationProfile from './../../../models/ApplicationProfile';\r\nimport FormGroup from '../../form/FormGroup';\r\nclass AboutUs extends BaseComponent {\r\n    constructor(props) {\r\n        super(props, false);\r\n    }\r\n    componentDidMount() {\r\n        document.title = \"About Us\";\r\n    }\r\n    render() {\r\n        const appProfile:ApplicationProfile = this.getApplicationProfile();\r\n        return (<div className=\"section-body container-fluid\" style={{marginTop:'20px'}}>\r\n            <h2>About Us</h2>\r\n            <Card title=\"Application\">\r\n                <FormGroup label=\"Name\">{appProfile.name}</FormGroup>\r\n                <FormGroup  ><i>{appProfile.description}</i></FormGroup>\r\n                <FormGroup label=\"Contact\">{appProfile.contact}</FormGroup>\r\n                <FormGroup label=\"Address\">{appProfile.address}</FormGroup>\r\n            </Card>\r\n            <p/>\r\n            <Card title=\"Development Mode\">\r\n                {/* <FormGroup label=\"Repository\"><a target=\"_blank\" href=\"https://github.com/fajaralmu\">https://github.com/fajaralmu</a></FormGroup>\r\n                <FormGroup label=\"Front End\">React Js</FormGroup>\r\n                <FormGroup><a target=\"_blank\" href=\"https://github.com/fajaralmu/front-end-shopping-mart-v2\">https://github.com/fajaralmu/front-end-shopping-mart-v2</a></FormGroup>\r\n                <FormGroup label=\"Back End\">Java, Spring MVC</FormGroup>\r\n                <FormGroup><a target=\"_blank\" href=\"https://github.com/fajaralmu/universal-good-shop-v2\">https://github.com/fajaralmu/universal-good-shop-v2</a></FormGroup> */}\r\n            </Card>\r\n            <p/>\r\n        </div>);\r\n    }\r\n}\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps, \r\n)(AboutUs))","\r\n\r\nimport React, { RefObject, Component, FormEvent, Fragment, ChangeEvent } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from '../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport './Login.css';\r\nimport Spinner from '../../loader/Spinner';\r\nimport UserService from './../../../services/UserService';\r\nimport UserModel from './../../../models/User';\r\nimport WebResponse from '../../../models/commons/WebResponse'; \r\nclass IState {\r\n    loading: boolean = false; displayName: string = \"\";\r\n    username: string = \"\";\r\n    editPassword: string = \"\";\r\n    editPasswordRepeat: string = \"\";\r\n}\r\nclass Register extends BaseComponent {\r\n    state: IState = new IState();\r\n    userService: UserService;\r\n    constructor(props: any) {\r\n        super(props, false);\r\n        this.userService = this.getServices().userService;\r\n    }\r\n    startLoading = () => this.setState({ loading: true });\r\n    endLoading = () => this.setState({ loading: false });\r\n    register(e: FormEvent) {\r\n        e.preventDefault();\r\n        if (this.fieldComplete()) {\r\n            if (this.passwordMatch() == false) {\r\n                this.showCommonErrorAlert(\"Password mismatch\");\r\n                return;\r\n            }\r\n            this.saveUser();\r\n        } else {\r\n            this.showCommonErrorAlert(\"Field is not complete\");\r\n        }\r\n    }\r\n    saveUser = () => {\r\n        const user = new UserModel();\r\n        user.password = this.state.editPassword.trim();\r\n        user.nickname = this.state.username.trim();\r\n        user.name = this.state.displayName.trim();\r\n        this.commonAjax(\r\n            this.userService.saveUser,\r\n            this.userSaved,\r\n            this.showCommonErrorAlert,\r\n            user\r\n        );\r\n    }\r\n    userSaved = (response: WebResponse) => {\r\n        this.showConfirmation(\"Success\")\r\n            .then((ok) => {\r\n                this.backToLogin();\r\n            })\r\n    }\r\n    passwordMatch = () => {\r\n        return this.state.editPassword.trim() != \"\" && this.state.editPassword.trim() == this.state.editPasswordRepeat.trim();\r\n    }\r\n    fieldComplete = () => {\r\n        return this.state.displayName.trim() != \"\"\r\n            && this.state.username.trim() != \"\"\r\n            && this.state.editPassword.trim() != \"\"\r\n            && this.state.editPasswordRepeat.trim() != \"\";\r\n    }\r\n    componentDidMount() {\r\n        document.title = \"Register\";\r\n        if (this.isUserLoggedIn()) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.isUserLoggedIn()) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"RegisterForm\" className=\"Register-wrapper\" style={{ margin: 0, padding: 0 }}>\r\n                <div className=\"text-center\" style={{ marginTop: '25px' }}>\r\n                    <h1>Register</h1>\r\n                </div>\r\n                <form name='Register' onSubmit={(e) => { this.register(e) }}\r\n                    method='POST' className=\"form-signin text-center\">\r\n                    <CommonField name=\"username\" value={this.state.username} onChange={this.handleInputChange} />\r\n                    <CommonField name=\"displayName\" value={this.state.displayName} onChange={this.handleInputChange} />\r\n\r\n                    <PasswordField name=\"editPassword\" value={this.state.editPassword} onChange={this.handleInputChange} />\r\n                    <PasswordField name=\"editPasswordRepeat\" value={this.state.editPasswordRepeat} onChange={this.handleInputChange} />\r\n\r\n                    {this.state.loading ? <Spinner /> :\r\n                        <button className=\"btn text-light\" style={{ backgroundColor: 'rgb(9,26,78)' }} type=\"submit\">\r\n                            Register\r\n                        </button>}\r\n                    <p />\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst PasswordField = ({ name, value, onChange }) => {\r\n    return <Fragment>\r\n        <label className=\"sr-only\">Password</label>\r\n        <input style={{ borderColor: 'rgb(9,26,78)' }} name={name} value={value} onChange={onChange} type=\"password\" id=\"inputPassword\" className=\"form-control\"\r\n            placeholder={name} required />\r\n        <p />\r\n    </Fragment>\r\n}\r\nconst CommonField = ({ name, value, onChange }) => {\r\n    return (<Fragment>\r\n        <label className=\"sr-only\">Username</label>\r\n        <input style={{ borderColor: 'rgb(9,26,78)' }} name={name} value={value} onChange={onChange} type=\"text\" id=\"username\" className=\"form-control\"\r\n            placeholder={name} required autoFocus />\r\n        <p />\r\n    </Fragment>)\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    //  performRegister: (username: string, password: string, app: any) => dispatch(performRegister(username, password, app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(Register))","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../constant/stores';\r\nimport { withRouter, Switch, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Login from '../pages/login/Login';\r\nimport DashboardMain from '../pages/dashboard/main/DashboardMain';\r\nimport HomeMain from '../pages/home/HomeMain';\r\nimport Menu from '../../models/settings/Menu';\r\nimport SettingsMain from '../pages/settings/SettingsMain';\r\nimport UserProfile from '../pages/settings/UserProfile';\r\nimport MusyrifManagement from '../pages/management/MusyrifManagement';\r\nimport ManagementMain from '../pages/management/ManagementMain';\r\nimport CategoryManagement from '../pages/management/CategoryManagement';\r\nimport RulePointManagement from '../pages/management/RulePointManagement';\r\nimport StudentList from '../pages/dormitoryactivity/StudentList';\r\nimport InputPointForm from '../pages/dormitoryactivity/InputPointForm';\r\nimport PointRecordsManagement from '../pages/dormitoryactivity/PointRecordsManagement';\r\nimport MedicalRecordForm from '../pages/dormitoryactivity/medicalrecord/MedicalRecordForm';\r\nimport EditApplicationProfile from '../pages/settings/EditApplicationProfile';\r\nimport AboutUs from './../pages/home/AboutUs';\r\nimport Register from '../pages/login/Register'; \r\n\r\nclass ApplicationContent extends BaseComponent {\r\n \r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    setSidebarMenus = (menus: Menu[]) => {\r\n        this.props.setSidebarMenus(menus);\r\n    }\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Switch>\r\n                   \r\n                    {/* -------- home -------- */}\r\n                    <Route exact path=\"/home\" render={\r\n                        (props: any) => {\r\n                            console.debug(\"Home path\")\r\n                            return <HomeMain />\r\n                        }\r\n                    } />\r\n                    <Route exact path=\"/\" render={\r\n                        (props: any) =>\r\n                            <HomeMain />\r\n                    } />\r\n                    <Route exact path=\"/about\" render={\r\n                        (props: any) =>\r\n                            <AboutUs />\r\n                    } />\r\n                     \r\n{/* \r\n                     \r\n                    <Route exact path=\"/management\" render={\r\n                        (props: any) => {\r\n                            console.debug(\"MANAGEMENTS path\")\r\n                            return <MasterDataMain setSidebarMenus={this.setSidebarMenus} />\r\n                        }\r\n                    } />\r\n                    <Route exact path=\"/management/:code\" render={\r\n                        (props: any) =>\r\n                            <MasterDataMain setSidebarMenus={this.setSidebarMenus} />\r\n                    } /> */}\r\n\r\n\r\n                    {/* ///////// PUBLIC ///////// */}\r\n\r\n                </Switch>\r\n                <LoginRoute />\r\n                <Settings />\r\n                <StudentsRoute />\r\n                <MusyrifManagementRoute/>\r\n                <Dashboard />\r\n            </Fragment>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        // document.title = \"Login\";\r\n    }\r\n\r\n}\r\n\r\nconst MusyrifManagementRoute  = (props) => {\r\n\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/management\" render={\r\n                (props:any) => <ManagementMain />\r\n            } />\r\n            <Route exact path=\"/management/musyrifmanagement\" render={\r\n                (props:any) => <MusyrifManagement />\r\n            } />\r\n            <Route exact path=\"/management/rule_category\" render={\r\n                (props:any) => <CategoryManagement />\r\n            } />\r\n            <Route exact path=\"/management/rule_point\" render={\r\n                (props:any) => <RulePointManagement />\r\n            } />\r\n        </Switch>\r\n    )\r\n}\r\n\r\nconst StudentsRoute = (proos) => {\r\n\r\n    return (\r\n        <Switch>\r\n             <Route exact path=\"/dormitoryactivity/studentlist\" render={\r\n                (props:any) => <StudentList />\r\n            } />\r\n             <Route exact path=\"/dormitoryactivity/inputpoint\" render={\r\n                (props:any) => <InputPointForm/>\r\n            } />\r\n             <Route exact path=\"/dormitoryactivity/pointsummary\" render={\r\n                (props:any) => <PointRecordsManagement/>\r\n            } />\r\n             <Route exact path=\"/dormitoryactivity/medicalrecord\" render={\r\n                (props:any) => <MedicalRecordForm/>\r\n            } />\r\n            \r\n        </Switch>\r\n    )\r\n}\r\nconst LoginRoute = (props) => {\r\n\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/login\" render={\r\n                (props: any) =>\r\n                    <Login />\r\n            } />\r\n            <Route exact path=\"/register\" render={\r\n                (props: any) =>\r\n                    <Register />\r\n            } />\r\n        </Switch>\r\n    )\r\n}\r\n\r\n\r\nconst Dashboard = (props) => {\r\n    return (\r\n        <Switch>\r\n            {/* -------- dashboard -------- */}\r\n            <Route exact path=\"/dashboard\" render={\r\n                (props: any) => {\r\n                   \r\n                        console.debug(\"dashboard path\")   \r\n                       return  <DashboardMain />\r\n                }\r\n                   \r\n            } />\r\n            {/* <Route exact path=\"/dashboard/quizhistory\" render={\r\n                (props: any) =>\r\n                    <QuizHistoryPage />\r\n            } /> */}\r\n        </Switch>\r\n    )\r\n}\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <Switch>\r\n            {/* -------- settings --------- */}\r\n            <Route exact path=\"/settings\" render={\r\n                (props: any) =>\r\n                    <SettingsMain />\r\n            } />\r\n            <Route exact path=\"/settings/user-profile\" render={\r\n                (props: any) =>\r\n                    <UserProfile />\r\n            } />\r\n            <Route exact path=\"/settings/app-profile\" render={\r\n                (props: any) =>\r\n                    <EditApplicationProfile />\r\n            } />\r\n        </Switch>\r\n    )\r\n}\r\n \r\n\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => ({})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(ApplicationContent))","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../constant/stores';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { performLogout } from './../../redux/actionCreators';\r\nimport Menu from '../../models/settings/Menu';\r\nimport './SideBar.css'\r\n\r\nclass SideBar extends BaseComponent {\r\n    constructor(props: { brand: any, sidebarMenus?: Menu[] }) {\r\n        super(props, false);\r\n    }\r\n    isSidebarActive = (menu: Menu) => {\r\n        const parentMenu: Menu = this.props.parentMenu;\r\n        if (null == parentMenu) { return false; }\r\n        const pathName = this.props.location.pathname;\r\n        return parentMenu.url + \"/\" + menu.url == pathName;\r\n    }\r\n    componentDidMount() {\r\n        window.addEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    handleScroll(event) {\r\n        let scrollTop = event.srcElement.body.scrollTop,\r\n            itemTranslate = Math.min(0, scrollTop / 3 - 60);\r\n        // console.debug(\"scrollTop: \", scrollTop);\r\n\r\n    }\r\n    render() {\r\n        const parentMenu: Menu = this.props.parentMenu;\r\n        if (null == parentMenu) { return null }\r\n        const menus: Menu[] = this.props.sidebarMenus == null ? [] : this.props.sidebarMenus;\r\n        const user = this.getLoggedUser();\r\n        return (\r\n            <ul id=\"sidebar\" className=\"sidebar-nav bg-light\">\r\n                <Brand show={parentMenu != null} brand={parentMenu} />\r\n\r\n                {menus.map(menu => {\r\n                    if (menu.userAuthorized && !menu.userAuthorized(user)) return null;\r\n                    const isActive: boolean = this.isSidebarActive(menu);\r\n                    const menuClassName = isActive ? 'menu-active' : 'regular-menu';\r\n                    return (\r\n                        <li className={\"sidebar-item \" + menuClassName} key={\"SIDEBAR_\" + menu.code}><Link to={parentMenu.url + \"/\" + menu.url}>\r\n                            <span className=\"sidebar-icon\"><i className={Menu.getIconClassName(menu)}></i></span>\r\n                            <span className={'menu-label'} >{menu.name}</span>\r\n                        </Link></li>\r\n                    )\r\n                })\r\n                }\r\n            </ul >\r\n        )\r\n    }\r\n\r\n}\r\nconst Brand = (props) => {\r\n    if (props.show == false) return null;\r\n    return (\r\n        <Fragment>\r\n            <li id=\"sidebar-brand\" className=\"sidebar-brand\" style={{ marginBottom: '20px' }}>\r\n                <div style={{\r\n                    textAlign: 'center', paddingTop: '10px',\r\n                    paddingBottom: '10px'\r\n                }}>\r\n                    <h3 className=\"text-dark\">\r\n                        <i className={Menu.getIconClassName(props.brand)}></i>\r\n                    </h3>\r\n                    <Link to={props.brand.url} style={{ textDecoration: 'none' }}><h4 className=\"text-dark\">{props.brand.name}</h4></Link>\r\n                </div>\r\n            </li>\r\n            <li className={\"sidebar-item-brand \"} >\r\n                <Link to={props.brand.url}>\r\n                    <span className=\"sidebar-icon\"><i className={Menu.getIconClassName(props.brand)}></i></span>\r\n                </Link>\r\n            </li>\r\n        </Fragment>\r\n    )\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    performLogout: (app: any) => dispatch(performLogout(app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(SideBar))","import React, { Fragment } from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../constant/stores';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { performLogout } from './../../redux/actionCreators';\r\nimport Header from '../navigation/Header';\r\nimport ApplicationContent from './ApplicationContent';\r\nimport SideBar from '../navigation/SideBar';\r\nimport './Layout.css';\r\nimport Menu from '../../models/settings/Menu';\r\nimport { getMenuByMenuPath, extractMenuPath } from './../../constant/Menus';\r\ninterface IState {\r\n    showSidebar: boolean;\r\n    activeMenuCode: any;\r\n    menu?: Menu;\r\n    sidebarMenus?: Menu[]\r\n};\r\nclass MainLayout extends BaseComponent {\r\n    state: IState = {\r\n        showSidebar: false,\r\n        activeMenuCode: null,\r\n        menu: undefined,\r\n        sidebarMenus: []\r\n    };\r\n    currentPathName: string = \"\";\r\n    constructor(props: any) {\r\n        super(props, false);\r\n        this.state = {\r\n            ...this.state,\r\n        }\r\n    }\r\n    setMenuNull = () => {\r\n        console.warn(\"SET MENU NULL\");\r\n        this.setState({ menu: undefined, showSidebar: false, activeMenuCode: null, sidebarMenus: null });\r\n    }\r\n    setMenu = (menu: Menu) => {\r\n        if (menu == null) {\r\n            return;\r\n        }\r\n        console.debug(\"SET MENU: \", menu.code);\r\n        this.setState({ menu: menu, sidebarMenus: null, showSidebar: menu.showSidebar, activeMenuCode: menu.code });\r\n    }\r\n    setSidebarMenus = (menus: Menu[]) => {\r\n        // console.debug(\"Set sidebar menus: \", menus);\r\n        this.setState({ sidebarMenus: menus });\r\n    }\r\n    componentDidMount() {\r\n        this.setCurrentMenu();\r\n    }\r\n    componentDidUpdate() {\r\n        this.setCurrentMenu();\r\n    }\r\n    setCurrentMenu = () => {\r\n        const pathName = extractMenuPath(this.props.location.pathname);\r\n\r\n        if (pathName == this.currentPathName) {\r\n            return;\r\n        }\r\n        this.currentPathName = pathName;\r\n        const menu = getMenuByMenuPath(pathName);\r\n        if (menu == null) {\r\n            this.setMenuNull();\r\n        } else {\r\n            this.setMenu(menu);\r\n        }\r\n    }\r\n    getSubMenus = () :Menu[]|null => {\r\n        const menuState:Menu|undefined = this.state.menu;\r\n        if (menuState && menuState.subMenus != null && menuState.subMenus?.length > 0) {\r\n            return menuState.subMenus;\r\n        }\r\n        if (this.state.sidebarMenus) {\r\n            return this.state.sidebarMenus;\r\n        }\r\n        return null;\r\n    }\r\n    render() {\r\n        const showSidebar: boolean = this.state.showSidebar == true;\r\n        const className = showSidebar ? \"app-content\" : \"content\";\r\n        return (\r\n            <Fragment>\r\n                <Header setMenuNull={this.setMenuNull} activeMenuCode={this.state.activeMenuCode} setMenu={this.setMenu} />\r\n                <div id=\"content-wrapper\" className={\"container-fluid  \" + className}>\r\n                    <ApplicationContent setSidebarMenus={this.setSidebarMenus} />\r\n                </div>\r\n                {showSidebar ?\r\n                    <SideBar sidebarMenus={this.getSubMenus()} parentMenu={this.state.menu} />\r\n                    : null}\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    performLogout: (app: any) => dispatch(performLogout(app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(MainLayout))","\nimport React, { Component, Fragment, RefObject } from 'react';\nimport './App.css';\nimport { withRouter } from 'react-router-dom'\nimport * as actions from './redux/actionCreators'\nimport { connect } from 'react-redux'\nimport SockJsClient from 'react-stomp';\nimport * as url from './constant/Url';\nimport { mapCommonUserStateToProps } from './constant/stores';\nimport Loader from './component/loader/Loader';\nimport Alert from './component/alert/Alert';\nimport MainLayout from './component/layout/MainLayout';\nimport WebResponse from './models/commons/WebResponse';\nimport Spinner from './component/loader/Spinner';\nimport { performWebsocketConnection, setWebSocketUrl, registerWebSocketCallbacks } from './utils/websockets';\nimport UserService from './services/UserService';\nimport AnchorWithIcon from './component/navigation/AnchorWithIcon';\nimport { time } from 'console';\nimport { doItLater, updateFavicon } from './utils/EventUtil';\n\nclass IState {\n  loading: boolean = false;\n  loadingPercentage: number = 0;\n  requestId?: string;\n  mainAppUpdated: Date = new Date();\n  showAlert: boolean = false;\n  realtime: boolean = false;\n  appIdStatus: string = \"Loading App Id\";\n  errorAuthenticatingApp: boolean = false;\n}\nclass App extends Component<any, IState> {\n  wsConnected: boolean = false;\n  loadings: number = 0;\n  alertTitle: String = \"Info\";\n  alertBody: any = null;\n  alertIsYesOnly: boolean = true;\n  alertIsError: boolean = false;\n  alertOnYesCallback: Function = function (e) { };\n  alertOnCancelCallback: Function = function (e) { };\n  wsUpdateHandler: Function | undefined = undefined;\n  clientRef: RefObject<SockJsClient> = React.createRef();\n  userService: UserService;\n  // alertRef: RefObject<Alert> = React.createRef();\n  alertCallback = {\n    title: \"Info\", message: \"Info\", yesOnly: false,\n    onOk: () => { }, onNo: () => { }\n  }\n\n  constructor(props: any) {\n    super(props);\n    this.state = new IState();\n    this.userService = this.props.services.userService;\n\n    this.props.setMainApp(this);\n  }\n  refresh = () => { this.setState({ mainAppUpdated: new Date() }); }\n\n  requestAppId = () => {\n    this.setState({ appIdStatus: \"Authenticating application\", errorAuthenticatingApp: false });\n    this.userService.requestApplicationId((response) => {\n      this.props.setRequestId(response, this);\n      this.refresh();\n      this.setState({ errorAuthenticatingApp: false });\n    }, this.retryRequestAppId)\n\n  }\n  retryRequestAppId = () => {\n    this.setState({ appIdStatus: \"Authenticating application (Retrying)\", errorAuthenticatingApp: false });\n    this.userService.requestApplicationIdNoAuth((response) => {\n      this.props.setRequestId(response, this);\n      this.setState({ errorAuthenticatingApp: false });\n    },\n      () =>\n        this.setState({ errorAuthenticatingApp: true }))\n\n  }\n  incrementLoadings() {\n    this.loadings++;\n  }\n\n  decrementLoadings() {\n    this.loadings--;\n    if (this.loadings < 0) {\n      this.loadings = 0;\n    }\n  }\n\n  startLoading(realtime: boolean = false) {\n    this.incrementLoadings();\n    this.setState({ loading: true, realtime: realtime });\n  }\n\n  endLoading() {\n    this.decrementLoadings();\n    if (this.loadings == 0) {\n      if (this.state.realtime) {\n        this.setState({ loadingPercentage: 100 }, this.smoothEndLoading);\n      } else {\n        this.setState({ loading: false, loadingPercentage: 0 });\n      }\n    }\n  }\n\n  smoothEndLoading = () => {\n    doItLater(() => {\n      this.setState({ loading: false, loadingPercentage: 0 });\n    }, 100);\n  }\n\n  handleProgress = (msg: WebResponse) => {\n    const percentageFloat: number = msg.percentage ?? 0;\n    let percentage = Math.floor(percentageFloat);\n    if (percentageFloat < 0 || percentageFloat > 100) {\n      this.endLoading();\n    }\n    this.setState({ loadingPercentage: percentage });\n  }\n\n  showAlert(title: string, body: any, yesOnly: boolean, yesCallback: Function, noCallback?: Function) {\n    this.alertTitle = title;\n    this.alertBody = body;\n    this.alertIsYesOnly = yesOnly;\n    const app = this;\n    this.alertOnYesCallback = function (e) {\n      app.dismissAlert();\n      yesCallback(e);\n    }\n    if (!yesOnly) {\n      this.alertOnCancelCallback = function (e) {\n        app.dismissAlert();\n        if (noCallback != null) {\n          noCallback(e);\n        }\n      };\n    }\n    this.setState({ showAlert: true });\n  }\n\n  dismissAlert() {\n    this.alertIsError = false;\n    this.setState({ showAlert: false })\n  }\n  showAlertError(title: string, body: any, yesOnly: boolean, yesCallback: Function, noCallback?: Function) {\n    this.alertIsError = true;\n    this.showAlert(title, body, yesOnly, yesCallback, noCallback)\n  }\n\n  componentDidUpdate() {\n    // console.debug(\"APP UPDATED\");\n    if (this.props.applicationProfile) {\n      updateFavicon(this.props.applicationProfile);\n    }\n    if (this.props.requestId && !this.wsConnected) {\n      this.initWebsocket();\n    }\n  }\n\n  componentDidMount() {\n    this.requestAppId();\n    this.setState({ loadingPercentage: 0 });\n  }\n\n  initWebsocket = () => {\n    setWebSocketUrl(url.contextPath() + 'realtime-app');\n    registerWebSocketCallbacks({\n      subscribeUrl: \"/wsResp/progress/\" + this.props.requestId,\n      callback: this.handleProgress  //must use lambda\n    },\n      {\n        subscribeUrl: \"/wsResp/\" + this.props.requestId + \"/update\",\n        callback: (response) => this.handleWsUpdate(response)\n      });\n    performWebsocketConnection();\n    this.wsConnected = true;\n  }\n\n  private handleWsUpdate = (response: any) => {\n\n    if (this.wsUpdateHandler) {\n      this.wsUpdateHandler(response);\n    }\n  }\n\n  setWsUpdateHandler = (handler: Function | undefined) => {\n    this.wsUpdateHandler = handler;\n  }\n  resetWsUpdateHandler = () => {\n    this.setWsUpdateHandler(undefined);\n  }\n\n  render() {\n    if (!this.props.requestId) {\n      return (\n        <div className=\"text-center\" style={{ paddingTop: '10%' }}>\n          <h2>{this.state.appIdStatus}</h2>\n          {this.state.errorAuthenticatingApp ?\n            <AnchorWithIcon iconClassName=\"fas fa-redo\" onClick={this.retryRequestAppId} children=\"Retry\" /> :\n            <Spinner />}\n        </div>\n      )\n    }\n    return (\n      <Fragment>\n        <Loading realtime={this.state.realtime} loading={this.state.loading} loadingPercentage={this.state.loadingPercentage} />\n        {this.state.showAlert ?\n          <Alert title={this.alertTitle}\n            isError={this.alertIsError}\n            onClose={(e) => this.setState({ showAlert: false })}\n            yesOnly={this.alertIsYesOnly}\n            onYes={this.alertOnYesCallback} onNo={this.alertOnCancelCallback}\n          >{this.alertBody}</Alert> :\n          null}\n        <MainLayout />\n        {/* <SockJsClient url={usedHost + 'realtime-app'} topics={['/wsResp/progress/' + this.props.requestId]}\n\n          onMessage={(msg: WebResponse) => { this.handleMessage(msg) }}\n          ref={this.clientRef} /> */}\n      </Fragment>\n    )\n  }\n}\n\nfunction Loading(props) {\n  if (props.loading == true) {\n    return (\n      <Loader realtime={props.realtime} progress={props.loadingPercentage} text=\"Please wait...\" type=\"loading\" />\n    );\n  }\n  return null;\n}\n\n\nconst mapDispatchToProps = (dispatch: Function) => ({\n  setMainApp: (app: App) => dispatch(actions.setMainApp(app)),\n  setRequestId: (response: WebResponse, app: App) => dispatch(actions.setRequestId(response, app)),\n})\n\nexport default withRouter(connect(\n  mapCommonUserStateToProps,\n  mapDispatchToProps\n)(App))\n","import React from 'react'\r\nimport App from './App'\r\nimport configureStore from './redux/configureStore'\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n \r\nconst Root = (props:any)  => {\r\n\r\n    const store = configureStore();\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <App/>\r\n            </HashRouter>\r\n        </Provider>  \r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Root;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './Root.tsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}