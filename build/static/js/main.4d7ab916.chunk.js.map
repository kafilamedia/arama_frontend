{"version":3,"sources":["constant/Url.js","utils/EventUtil.ts","component/alert/Alert.js","models/AuthorityType.ts","models/BaseEntity.ts","models/User.ts","utils/websockets.js","component/BaseComponent.tsx","constant/stores.js","redux/actionCreators.ts","redux/types.js","utils/StringUtil.ts","models/settings/Menu.ts","constant/Menus.ts","component/navigation/Header.tsx","component/loader/Spinner.tsx","component/pages/login/Login.tsx","models/settings/AttachmentInfo.ts","utils/ComponentUtil.ts","component/pages/BasePage.tsx","component/pages/dashboard/main/DashboardMain.tsx","component/pages/home/HomeMain.tsx","models/Employee.ts","utils/CollectionUtil.tsx","utils/DateUtil.ts","models/commons/Filter.ts","component/form/FormGroup.tsx","component/navigation/NavigationButtons.tsx","redux/appReducer.js","redux/userReducer.js","redux/servicesReducer.ts","redux/reducers.js","middlewares/UserMiddleware.ts","middlewares/RealtimeChatMiddleware.js","redux/configureStore.js","middlewares/Common.ts","services/Promises.ts","services/MusyrifManagementService.ts","component/navigation/AnchorWithIcon.tsx","component/pages/management/EmployeeRow.tsx","component/navigation/AnchorButton.tsx","component/navigation/ToggleButton.tsx","services/MasterDataService.ts","component/pages/management/BaseManagementPage.tsx","component/pages/management/MusyrifManagement.tsx","component/pages/management/ManagementMain.tsx","models/Category.ts","component/container/Modal.tsx","component/pages/management/EditDeleteButton.tsx","component/pages/management/CategoryManagement.tsx","models/RulePoint.ts","component/pages/management/RulePointManagement.tsx","services/StudentService.ts","component/form/FilterPeriod.tsx","component/pages/asrama/StudentList.tsx","models/Student.ts","models/PointRecord.ts","component/form/InputTime.tsx","component/pages/asrama/form/FormStepThree.tsx","component/alert/SimpleError.tsx","component/pages/asrama/form/FormStepTwo.tsx","component/pages/asrama/form/FormStepOne.tsx","component/pages/asrama/InputPointForm.tsx","component/container/Card.tsx","component/pages/asrama/point-record/PointRecordDetail.tsx","component/pages/asrama/DropPointButtons.tsx","component/pages/management/PointRecordsSummary.tsx","models/Class.ts","component/pages/asrama/medicalrecord/StudentForm.tsx","models/MedicalRecord.ts","component/pages/asrama/medicalrecord/MedicalRecordDailyInput.tsx","component/pages/asrama/medicalrecord/MedicalRecordForm.tsx","component/pages/home/AboutUs.tsx","component/pages/shared/ClassMemberSearchForm.tsx","component/pages/asrama/point-record/PointRecordEdit.tsx","component/pages/dashboard/main/FollowUpReminder.tsx","models/WarningAction.ts","component/pages/management/WarningActionManagement.tsx","services/ConfigurationService.ts","component/pages/settings/ConfigSettingPage.tsx","component/pages/report/StudentSemesterReport.tsx","models/CategoryPredicate.ts","component/pages/management/CategoryPredicateManagement.tsx","models/RuleViolation.ts","component/pages/management/RuleViolationManagement.tsx","component/layout/ApplicationContent.tsx","component/navigation/SideBar.tsx","component/layout/MainLayout.tsx","component/loader/Loader.js","services/UserService.ts","App.tsx","inversify.config.ts","Root.tsx","serviceWorker.js","index.js"],"names":["rootValue","document","getElementById","value","contextPath","path","baseImageUrl","doItLater","callback","intervalMs","timeout","setTimeout","clearTimeout","State","backColor","marginTop","Backdrop","props","className","style","transitionDuration","backgroundColor","bgColor","Footer","ref","yesButtonRef","type","onClick","onYes","yesOnly","noButtonRef","onNo","Header","fontClassName","id","title","onClose","aria-hidden","Alert","AuthorityType","state","e","close","setState","React","createRef","isError","this","current","focus","headerClassName","display","children","Component","BaseEntity","created_at","updated_at","User","displayName","fullName","email","password","profileImage","authorities","name","ROLE_EMPLOYEE","requestId","role","i","length","user","Object","assign","stompClient","undefined","wsConnected","subscriptionCallbacks","Array","sendToWebsocket","url","requestObject","console","debug","send","JSON","stringify","info","BaseComponent","authenticated","parentApp","updated","Date","validateLoginStatus","isUserLoggedIn","backToLogin","sendWebSocket","payload","setWsUpdateHandler","handler","resetWsUpdateHandler","getApplicationProfile","applicationProfile","handleInputChange","event","stateFieldName","target","checked","parseInt","el","stateVal","doAjax","method","withProgress","successCallback","errorCallback","startLoading","params","then","response","catch","alert","finally","endLoading","commonAjax","commonAjaxWithProgress","getLoggedUser","loggedUser","isAdmin","hasRole","ROLE_SUPERADMIN","scrollTop","opt","top","behavior","window","scrollTo","propsAny","loginStatus","showConfirmation","body","app","Promise","resolve","reject","showAlert","showConfirmationDanger","showAlertError","showInfo","showError","refresh","forceUpdate","showCommonSuccessAlert","showCommonErrorAlert","message","error","data","mainApp","history","push","mapCommonUserStateToProps","userState","services","servicesState","appState","performLogout","meta","concat","index","uniqueId","string","String","getUTCMilliseconds","toString","months","twoDigits","Menu","code","description","pathVariables","iconUrl","color","fontColor","active","menuClass","showSidebar","subMenus","userAuthorized","clone","element","defaultMenuIconClassName","getIconClassName","menu","getMenus","menuSet","_menus","subMenu","ROLE_ASRAMA_MUSYRIF","IState","showNavLinks","buttonToggleNavRef","toggleNavLinks","onLogout","ok","setMenu","click","menus","profile","appName","position","zIndex","padding","margin","href","semester","year","data-toggle","data-target","aria-controls","aria-expanded","aria-label","map","isActive","activeMenuCode","key","to","setMenuNull","NavBarTop","paddingLeft","fontSize","UserIcon","withRouter","connect","dispatch","Spinner","innerDivs","width","height","visibility","show","loading","editPassword","Login","updateCredentialProperty","getAttribute","preventDefault","performLogin","onSubmit","login","onChange","marginRight","PasswordField","placeholder","required","EmailField","autoFocus","username","AttachmentInfo","file","blob","Blob","arg0","split","getAttachmentInfoFromFile","fileInput","files","reader","FileReader","readAsDataURL","onload","setUrl","result","onerror","Error","BasePage","componentReady","attachment","DashboardMain","addPointRecord","pathname","updateImage","accept","src","HomeMain","imageUrl","backgroundUrl","backgroundImage","backgroundSize","appDescription","welcoming_message","Employee","nisdm","tableHeader","values","MONTHS","leapMonths","regularMonths","getInputReadableDate","date","getFullYear","getMonth","getDate","join","parseDate","s","b","m","Filter","limit","page","orderType","orderBy","contains","exacts","module","fieldsFilter","maxValue","availabilityCheck","resetFieldsFilter","f","endsWith","withLimit","queryString","filter","q","prototype","hasOwnProperty","call","encodeURIComponent","updatePeriodFilter","field","val","isNaN","periodFilter","setDate","setMonth","setFullYear","FormGroup","orientation","label","NavigationButtons","buttonIndexes","generateButtonValues","totalData","activePage","lastIndex","nextPage","previusPage","currentPage","displayed_buttons","buttonCount","Math","ceil","min","max","initState","reducer","action","loginKey","loginFailed","menuData","loginAttempt","assetsPath","referer","setLoginKeyCookie","rootReducer","combineReducers","appReducer","userReducer","servicesReducers","initialState","axios","require","performLoginMiddleware","store","next","parameters","post","headers","axiosResponse","responseJson","loginSuccess","newAction","common","log","getLoggedUserMiddleware","param","performLogoutMiddleware","r","logoutSuccess","setLoggedUserMiddleware","getMessagesMiddleware","fetch","json","err","storeChatMessageLocallyMiddleware","configureStore","createStore","applyMiddleware","userMiddleware","realtimeChatMiddleware","commonAuthorizedHeader","contentType","getRequestId","getLoginKey","commonHeader","LOGIN_KEY","getState","getCookie","updateAccessToken","resp","accessToken","setCookie","cookieValue","cname","cvalue","exdays","d","setTime","getTime","expires","toUTCString","cookie","ca","decodeURIComponent","c","charAt","substring","indexOf","commonAjaxPostCalls","endpoint","request","rawAxiosResponse","commonAjaxGetCalls","get","MusyrifManagementService","injectable","emp","AnchorWithIcon","btnClassName","attributes","iconClassName","tyle","EmployeeRow","getEmployee","employee","activeStatusUpdate","onUpdated","activateMusyrif","musyrifManagementService","activate","isMusyrif","startingNumber","AnchorButton","ToggleButton","yesLabel","noLabel","MasterDataService","getOne","modelName","delete","commonAjaxDeleteCalls","list","insert","update","put","commonAjaxPutCalls","responseType","fileName","rawSplit","extension","URL","createObjectURL","attachmentInfo","commonAjaxPostCallsWithBlob","BaseManagementPage","overrideLoading","formRef","emptyRecord","loadItems","masterDataService","itemsLoaded","items","updateFilter","dataset","updateFieldsFilter","loadAtPage","updateRecordProp","record","resetForm","oneRecordLoaded","showModal","recordUpdated","hideModal","callApiInsert","callApiUpdate","reload","MusyrifManagement","setMusyrifOnly","musyrifOnly","onEmployeeStatusUpdate","EmployeeList","overflow","ManagementMain","Category","points","object","Modal","toggleable","marginBottom","footerContent","showFooter","EditDeleteButton","getRecord","rec","recordLoaded","recordLoadedForDetail","recordDeleted","loadRecord","loadRecordRequest","record_id","loadRecordForDetail","deleteRecord","hasType","types","CategoryManagement","ItemsList","item","RecordForm","RulePoint","ruleCategoryName","ruleCategoryId","point","droppable","categories","categoriesLoaded","RulePointManagement","categoriesNotLoaded","loadCategories","req","selectedCategoryId","reloadCategories","data-type","StudentService","followUp","pointRecordId","getFollowUpReminders","getRaporData","classId","downloadRaporData","submitMedicalRecord","loadMonthlyMedicalRecord","studentId","month","student_id","setPointDropped","dropped","dropAll","ids","undropAll","removeImage","FormData","append","day","time","location","rulePointId","classMemberId","imgFile","FilterPeriod","disableDay","Fragment","arr","days","classes","now","defaultFieldsFilter","StudentList","classesLoaded","studentService","getStudentWithPoints","loadClasses","getClasses","updateFieldFilter","updateSelectedClass","inputPage","inputPoint","student","updateWithPointRecord","enable","selectedClassId","showPointRecord","level","letter","schoolName","toDateString","colSpan","classLevel","classLetter","Student","nis","kelas","PointRecord","h","setHours","dateString","td","pictures","ruleName","studentName","getPicture","getTimestamp","DAYS","getDay","getHours","getMinutes","getSeconds","y","p","hour","minute","second","hours","minutesOrSeconds","InputTime","minutes","seconds","updateFromProps","updateValue","setNow","border","sec","marginLeft","pointRecord","FormStepThree","submit","updatePointRecord","updateDate","updateTime","setAttachment","removeAttachment","getAttachment","rulePoint","timeString","onBack","SimpleError","rulePoints","FormStepTwo","rulePointsLoaded","setRulePoint","loadRulePoints","getCategory","category","updateRulePoint","select","filtered","FormStepOne","setCategory","setSelectedCategory","updateCategory","formStep","savedRecord","InputPointForm","totalStep","validateStudentData","removeStudent","nextStep","step","submitRecord","insertPointRecord","recordSubmitted","back","Progress","Detail","toLocaleString","Warning","Card","PointRecordDetail","pictureUrl","timeStamp","DropPointButtons","setDropped","isDropped","selectedCategory","showFilterDetail","PointRecordSummary","classessLoaded","getCategories","showDetail","hideDetail","hideFilterDetail","openEditPage","resetFilter","itemsId","updateDroppedOption","startsWith","autoComplete","sekolah","recordLoadedForEdit","optionTypes","toLocaleDateString","Class","rombel","nama","StudentForm","loadStudent","setSelectedItem","setItem","reset","selectedItem","onReset","cursor","ItemDetail","studentClassString","MedicalRecord","temperature_morning","temperature_afternoon","breakfast","lunch","dinner","medicine_consumption","genose_test","antigen_test","pcr_test","obj","instance","MedicalRecordDailyInput","setRecord","period","monthName","rows","Checkbox","SingleRow","minHeight","forwardRef","mappedItems","Map","MedicalRecordForm","inputRefs","setStudent","loadMonthlyRecord","forEach","recordsLoaded","toMap","set","getFilter","dayCount","getMonthDays","gridTemplateColumns","repeat","AboutUs","appProfile","contact","address","keyword","ClassMemberSearchForm","selectItem","pointsMap","selectedPointId","editMode","editModeRemoveImage","PointRecordEdit","inputTimeRef","categoryId","catId","checkPassedData","updateInput","updateRecordField","setSelectedRulePoint","validateInput","onRemoveImageOptionChanged","updatePicture","cat","htmlFor","followUpInfos","FollowUpReminder","loadReminder","warningPointLimit","TOTAL_POINT","FOLLOW_UP_COUNT","WarningAction","classMemberName","WarningActionManagement","ConfigurationService","loadConfig","ConfigSettingPage","configService","configUpdated","updateField","reportDate","StudentSemesterReport","selectClassRef","loadRaporData","raporDataLoaded","downloadData","reportCreated","downloadRapor","open","createElement","download","reportHeader","classMember","score","predicateLetter","predicateDescription","CategoryPredicate","CategoryPredicateManagement","RuleViolation","RuleViolationManagement","ApplicationContent","setSidebarMenus","exact","render","Setting","Report","Management","Asrama","proos","LoginRoute","Dashboard","SideBar","isSidebarActive","parentMenu","pathName","addEventListener","handleScroll","removeEventListener","srcElement","sidebarMenus","brand","menuClassName","Brand","textAlign","paddingTop","paddingBottom","textDecoration","MainLayout","currentPathName","setCurrentMenu","pathRaw","firstPath","trim","extractMenuPath","getMenuByMenuPath","getSubMenus","menuState","LoaderContent","realtime","progress","disabled","Loader","timer","intervalId","clearInterval","endMessage","withTimer","setInterval","UserService","requestApplicationId","callbackSuccess","callbackError","requestApplicationIdNoAuth","loadingPercentage","mainAppUpdated","appIdStatus","errorAuthenticatingApp","App","loadings","alertTitle","alertBody","alertIsYesOnly","alertIsError","alertOnYesCallback","alertOnCancelCallback","wsUpdateHandler","clientRef","alertCallback","onOk","requestAppId","userService","reqIdResp","retryRequestAppId","setRequestId","setLoggedUser","smoothEndLoading","handleProgress","msg","percentageFloat","percentage","floor","initWebsocket","callBackObjects","registerWebSocketCallbacks","subscribeUrl","handleWsUpdate","setMainApp","incrementLoadings","decrementLoadings","yesCallback","noCallback","dismissAlert","pageIcon","link","querySelector","setAttribute","head","appendChild","updateFavicon","Loading","text","actions","loggedIn","inversifyContainer","Container","bind","toSelf","inSingletonScope","Root","container","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4d7ab916.chunk.js","sourcesContent":["const rootValue = `${document.getElementById(\"${ROOT_PATH}\").value}`;\r\n\r\n/**\r\n * \r\n * @param {string} path \r\n * @returns \r\n */\r\nexport const contextPath = (path = null) => {\r\n    return `${rootValue}/${path ?? ''}`;\r\n}\r\nexport const baseImageUrl = () => contextPath('images/');\r\n","\r\nimport ApplicationProfile from './../models/ApplicationProfile';\r\nimport { baseImageUrl } from './../constant/Url';\r\nexport const doItLater = (callback:()=>any, intervalMs:number) => {\r\n    const timeout = setTimeout(()=>{\r\n       callback();\r\n        clearTimeout(timeout);\r\n      }, intervalMs)\r\n}\r\n\r\n\r\nexport const  updateFavicon = (profile: ApplicationProfile) => {\r\n    if (profile.pageIcon) {\r\n      let link = document.querySelector('link[rel=\"shortcut icon\"]') ||\r\n        document.querySelector('link[rel=\"icon\"]');\r\n      if (!link) {\r\n        link = document.createElement('link');\r\n        link.id = 'favicon';\r\n        link.setAttribute(\"rel\", 'shortcut icon');\r\n        document.head.appendChild(link);\r\n      }\r\n      link.setAttribute(\"href\", baseImageUrl() + profile.pageIcon);\r\n    }\r\n  }","import React, { Component } from 'react'\r\nimport { doItLater } from './../../utils/EventUtil';\r\nconst initialMargin = '-200px';\r\nconst transitionDuration = '200ms';\r\nclass State {\r\n    backColor  = 'transparent';\r\n    marginTop = initialMargin;\r\n}\r\nclass Alert extends Component  {\r\n    yesButtonRef;\r\n    noButtonRef;\r\n    state  = new State();\r\n    constructor(props) {\r\n        super(props);\r\n        this.yesButtonRef = React.createRef();\r\n        this.noButtonRef = React.createRef();\r\n    }\r\n    onYes = (e) => {\r\n        \r\n        this.close(()=>{\r\n            if (this.props.onYes) {\r\n                this.props.onYes(e);\r\n            }\r\n        });\r\n    }\r\n    close = (callback)=> {\r\n        doItLater(()=>{\r\n            this.setState({backColor:'transparent', marginTop: initialMargin}, ()=>{\r\n                doItLater(callback, 100);\r\n                \r\n            });\r\n        }, 100);\r\n    }\r\n    onNo = (e) => {\r\n        \r\n        this.close(()=>{\r\n            if (this.props.onNo) {\r\n                this.props.onNo(e);\r\n            }\r\n        });\r\n    }\r\n    onClose = (e) => {\r\n       \r\n        this.close(()=>{\r\n            if (this.props.onClose) {\r\n                this.props.onClose(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        const isError = this.props.isError == true;\r\n        if (!isError && this.yesButtonRef.current) {\r\n            this.yesButtonRef.current.focus();\r\n        } else if (isError && this.noButtonRef.current) {\r\n            this.noButtonRef.current.focus();\r\n        } else if (isError && this.yesButtonRef.current) {\r\n            this.yesButtonRef.current.focus();\r\n        }\r\n\r\n        doItLater(()=>{\r\n            this.setState({backColor:'rgba(100,100,100,0.7)', marginTop:'30vh'})\r\n        }, 100);\r\n    }\r\n\r\n    render() {\r\n        const title = this.props.title ? this.props.title : \"Info\";\r\n        const yesOnly = this.props.yesOnly == true;\r\n        const isError = this.props.isError == true;\r\n        const headerClassName = isError ? 'bg-danger' : 'bg-info';\r\n        const headerFontClassName = 'text-light';\r\n        return (\r\n            <>\r\n                <Backdrop bgColor={this.state.backColor} />\r\n                <div className=\"modal show\" style={{ display: 'block' }}  >\r\n                    <div className=\"modal-dialog -modal-dialog-centered\" \r\n                        style={{\r\n                            transitionDuration:  transitionDuration,\r\n                            marginTop: this.state.marginTop\r\n                        }}\r\n                    >\r\n                        <div className=\"modal-content\" style={{marginTop:'5px',}} >\r\n                            <Header fontClassName={headerFontClassName} className={headerClassName} title={title} onClose={this.onClose} />\r\n                            <div className=\"modal-body\" > {this.props.children} </div>\r\n                            <Footer noButtonRef={this.noButtonRef} yesButtonRef={this.yesButtonRef} yesOnly={yesOnly} onYes={this.onYes} onNo={this.onNo} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction Backdrop(props ) {\r\n    return (\r\n        <div className=\"modal-backdrop\" style={{ transitionDuration:transitionDuration, backgroundColor: props.bgColor }\r\n        } > </div>\r\n    );\r\n}\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <div className={\"modal-footer \" + props.className} >\r\n            <button ref={props.yesButtonRef} type=\"button\"\r\n                onClick={props.onYes} className=\"btn btn-outline-primary\" > Yes </button>\r\n            {props.yesOnly ? \r\n                null : \r\n                <button ref={props.noButtonRef} type=\"button\"\r\n                    onClick={props.onNo} className=\"btn btn-outline-secondary\" > No \r\n                </button>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Header(props) {\r\n    return (<div className={\"modal-header \" + props.className} >\r\n        <h5 className={\"modal-title \" + props.fontClassName} id=\"exampleModalCenterTitle\" > {props.title} </h5>\r\n        < button onClick={props.onClose} type=\"button\" className=\"close\" >\r\n            <span aria-hidden=\"true\" className={props.fontClassName} > <i className=\"fas fa-times\" /> </span>\r\n        </button>\r\n    </div>)\r\n}\r\n\r\nexport default Alert;","\nexport   enum AuthorityType{\n    \n    ROLE_SUPERADMIN = \"ROLE_SUPERADMIN\",\n    ROLE_ASRAMA_MUSYRIF = \"ROLE_ASRAMA_MUSYRIF\",\n    ROLE_EMPLOYEE = \"ROLE_EMPLOYEE\"\n}\n","\nexport default class BaseEntity {\n\tid?: number;\n\tcreated_at?: string;\n\tupdated_at?: string;\n}\n","import Authority from './Authority';\nimport { AuthorityType } from './AuthorityType';\nimport BaseEntity from './BaseEntity';\n\nexport default class User extends BaseEntity {\n  static clone(user: User): User {\n    return Object.assign(new User(), user);\n  }\n  hasRole(role: AuthorityType): boolean {\n    for (let i = 0; i < this.authorities.length; i++) {\n      const element = this.authorities[i];\n      if (element.name == role) {\n        return true;\n      }\n    }\n    return false;\n  }\n  displayName?: string;\n  fullName?: string;\n  email?: string;\n  password?: string;\n  profileImage?: string;\n  authorities: Authority[] = [ { name: AuthorityType.ROLE_EMPLOYEE } ];\n  requestId?: string;\n\n}\n","import { doItLater } from './EventUtil';\r\nlet stompClient = undefined;\r\nlet wsConnected = false;\r\nlet websocketUrl = undefined;\r\nconst onConnectCallbacks = new Array();\r\nconst subscriptionCallbacks = new Array();\r\nexport const isWsConnected = () => {\r\n\treturn wsConnected == true;\r\n}\r\nexport const setWebSocketUrl = (url) => {\r\n\twebsocketUrl = url;\r\n}\r\nexport const sendToWebsocket = (url, requestObject) => {\r\n\tif (!wsConnected || !stompClient) {\r\n\t\tconsole.info(\"Connecting\");\r\n\t\treturn false;\r\n\t}\r\n\tconsole.debug(\"SEND WEBSOCKET\")\r\n\tstompClient.send(url, {}, JSON.stringify(requestObject));\r\n\treturn true;\r\n}\r\n\r\nexport const addOnWsConnectCallbacks = (...callbacks) => {\r\n\tfor (let i = 0; i < callbacks.length; i++) {\r\n\t\tconst element = callbacks[i];\r\n\t\tonConnectCallbacks.push(element);\r\n\t}\r\n}\r\n\r\nexport const performWebsocketConnection = () => {\r\n\r\n\treturn;\r\n\tvar socket = new window.SockJS(websocketUrl);\r\n\tstompClient  = window.Stomp.over(socket);\r\n\tstompClient .connect({}, function (frame) {\r\n\t\twsConnected = true;\r\n\t\t// setConnected(true);\r\n\t\tconsole.log('Websocket CONNECTED: ', websocketUrl, 'frame :', frame, stompClient.ws._transport.ws.url);\r\n\t\tconsole.debug(\"subscriptionCallbacks :\", subscriptionCallbacks.length);\r\n\t\t// document.getElementById(\"ws-info\").innerHTML =\r\n\t\t// stompClients.ws._transport.ws.url;\r\n\t\tfor (let i = 0; i < subscriptionCallbacks.length; i++) {\r\n\t\t\tconst callBackObject = subscriptionCallbacks[i];\r\n\r\n\t\t\tif (callBackObject) {\r\n\r\n\t\t\t\tstompClient.subscribe(callBackObject.subscribeUrl, (response) => {\r\n\t\t\t\t\tvar respObject = JSON.parse(response.body);\r\n\t\t\t\t\tcallBackObject.callback(respObject);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < onConnectCallbacks.length; i++) {\r\n\t\t\tconst callback = onConnectCallbacks[i];\r\n\t\t\tcallback(frame);\r\n\t\t}\r\n\r\n\t}, (e) => {\r\n\t\tconsole.warn(\"Error connection websocket, reconnect\");\r\n\t\tdoItLater(performWebsocketConnection, 2000);\r\n\t});\r\n\r\n\t \r\n}\r\n\r\n /**\r\n  * \r\n  * @param  {...WsCallback} callBackObjects \r\n  */\r\nexport const registerWebSocketCallbacks = (...callBackObjects) => {\r\n\r\n\tif (null == callBackObjects) {\r\n\t\treturn;\r\n\t}\r\n\tfor (var i = 0; i < callBackObjects.length; i++) {\r\n\t\tsubscriptionCallbacks.push(callBackObjects[i]);\r\n\t}\r\n}\r\n","import { Component } from 'react';\r\nimport WebResponse from '../models/commons/WebResponse';\r\nimport ApplicationProfile from './../models/ApplicationProfile';\r\nimport User from './../models/User';\r\nimport { AuthorityType } from '../models/AuthorityType';\r\nimport WebRequest from '../models/commons/WebRequest';\r\nimport { sendToWebsocket } from './../utils/websockets';\r\nimport { doItLater } from './../utils/EventUtil';\r\n\r\nexport default class BaseComponent<P, S> extends Component<P, S> {\r\n  parentApp: any;\r\n  authenticated: boolean = true;\r\n  state: any = { updated: new Date() };\r\n  constructor(props: any, authenticated = false) {\r\n    super(props);\r\n\r\n    this.authenticated = authenticated\r\n    this.parentApp = props.mainApp;\r\n  }\r\n\r\n  validateLoginStatus = (callback?: () => any) => {\r\n    if (this.authenticated == false) {\r\n      if (callback) {\r\n        callback();\r\n      }\r\n      return true;\r\n    }\r\n    if (this.isUserLoggedIn() == false) {\r\n      this.backToLogin();\r\n      return false;\r\n    }\r\n    if (callback) {\r\n      callback();\r\n    }\r\n    return true;\r\n  }\r\n\r\n  protected sendWebSocket = (url: string, payload: WebRequest) => {\r\n    sendToWebsocket(url, payload);\r\n  }\r\n\r\n  protected setWsUpdateHandler = (handler: Function | undefined) => {\r\n    this.parentApp?.setWsUpdateHandler(handler);\r\n  }\r\n  protected resetWsUpdateHandler = () => {\r\n    this.parentApp?.resetWsUpdateHandler();\r\n  }\r\n\r\n  getApplicationProfile = (): ApplicationProfile => {\r\n    return (this.props as any).applicationProfile;\r\n  }\r\n\r\n  handleInputChange = (event: any, stateFieldName?: string | undefined) => {\r\n    const target = event.target;\r\n    let value = target.type == 'checkbox' ? target.checked : target.value;\r\n    if (target.type == 'number') {\r\n      value = parseInt(value);\r\n    }\r\n    if (stateFieldName) {\r\n      const el = this.state[stateFieldName];\r\n      el[target.name] = value;\r\n      const stateVal: any = { [stateFieldName]: el };\r\n      this.setState(stateVal);\r\n    } else {\r\n      const stateVal: any = { [target.name]: value };\r\n      this.setState(stateVal);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * \r\n   * @param {boolean} withProgress \r\n   */\r\n  startLoading(withProgress: boolean) {\r\n    this.parentApp?.startLoading(withProgress);\r\n  }\r\n\r\n  endLoading() {\r\n    this.parentApp?.endLoading();\r\n  }\r\n  /**\r\n   * api response must be instance of WebResponse\r\n   * @param method returning Promise\r\n   * @param withProgress \r\n   * @param successCallback \r\n   * @param errorCallback \r\n   * @param params \r\n   */\r\n  doAjax = (method: Function, withProgress: boolean, successCallback: Function, errorCallback?: Function, ...params: any) => {\r\n    this.startLoading(withProgress);\r\n\r\n    method(...params).then((response: WebResponse) => {\r\n      if (successCallback) {\r\n        successCallback(response);\r\n      }\r\n    }).catch((e) => {\r\n      if (errorCallback) {\r\n        errorCallback(e);\r\n      } else {\r\n        if (typeof (e) == 'string') {\r\n          alert(\"Operation Failed: \" + e);\r\n        }\r\n        alert(\"resource not found\");\r\n      }\r\n    }).finally(() => {\r\n      this.endLoading();\r\n    })\r\n  }\r\n\r\n  commonAjax = (method: Function, successCallback: Function, errorCallback: Function, ...params: any) => {\r\n    this.doAjax(method, false, successCallback, errorCallback, ...params);\r\n  }\r\n  commonAjaxWithProgress = (method: Function, successCallback: Function, errorCallback: Function, ...params: any) => {\r\n    this.doAjax(method, true, successCallback, errorCallback, ...params);\r\n  }\r\n  getLoggedUser = (): User | undefined => {\r\n    const user: User | undefined = (this.props as any).loggedUser;\r\n    if (!user) return undefined;\r\n    user.password = \"^_^\";\r\n    return Object.assign(new User(), user);\r\n  }\r\n  isAdmin = (): boolean => {\r\n    const user = this.getLoggedUser();\r\n    if (!user) return false;\r\n    return user.hasRole(AuthorityType.ROLE_SUPERADMIN);\r\n  }\r\n  scrollTop = () => {\r\n    // console.info(\"SCROLL TOP\");\r\n    const opt: ScrollToOptions = { top: 0, behavior: 'smooth' };\r\n    doItLater(() => {\r\n      window.scrollTo(opt);\r\n    }, 100);\r\n  }\r\n  get propsAny() {\r\n    return this.props as any;\r\n  }\r\n  isUserLoggedIn = (): boolean => {\r\n    const loggedIn = true == this.propsAny.loginStatus && null != this.propsAny.loggedUser;\r\n    return loggedIn;\r\n  }\r\n  showConfirmation = (body: any): Promise<boolean> => {\r\n    const app = this;\r\n    return new Promise(function (resolve, reject) {\r\n      const onYes = function (e) {\r\n        resolve(true);\r\n      }\r\n      const onNo = function (e) {\r\n        resolve(false);\r\n      }\r\n      app.parentApp.showAlert(\"Konfirmasi\", body, false, onYes, onNo);\r\n    });\r\n\r\n  }\r\n  showConfirmationDanger = (body: any): Promise<any> => {\r\n    const app = this;\r\n    return new Promise(function (resolve, reject) {\r\n      const onYes = function (e) {\r\n        resolve(true);\r\n      }\r\n      const onNo = function (e) {\r\n        resolve(false);\r\n      }\r\n      app.parentApp.showAlertError(\"Konfirmasi\", body, false, onYes, onNo);\r\n    });\r\n\r\n  }\r\n  showInfo = (body: any) => {\r\n    this.parentApp.showAlert(\"Info\", body, true, function () { });\r\n  }\r\n  showError = (body: any) => {\r\n    this.parentApp.showAlertError(\"Error\", body, true, function () { });\r\n  }\r\n\r\n  backToLogin() {\r\n    if (!this.authenticated || this.propsAny.history == null) {\r\n      return;\r\n    }\r\n    this.propsAny.history.push(\"/login\");\r\n  }\r\n  refresh = () => this.forceUpdate();\r\n  showCommonSuccessAlert = () => {\r\n    this.showInfo(\"Success\");\r\n  }\r\n  showCommonErrorAlert = (e: any) => {\r\n    console.error(e);\r\n\r\n    let message;\r\n    if (e.response && e.response.data) {\r\n      message = e.response.data.message;\r\n    } else {\r\n      message = e;\r\n    }\r\n    this.showError(\"Operasi Gagal: \" + message);\r\n  }\r\n  componentDidMount() {\r\n    if (this.validateLoginStatus()) {\r\n    }\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.authenticated == true && this.isUserLoggedIn() == false) {\r\n      console.debug(typeof this, \"BACK TO LOGIN\");\r\n      this.validateLoginStatus();\r\n    }\r\n  }\r\n}","\r\nexport const mapCommonUserStateToProps = (state) => {\r\n    return {\r\n        applicationProfile: state.userState.applicationProfile,\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n        requestId: state.userState.requestId, \r\n        services: state.servicesState.services,\r\n        mainApp: state.appState.mainApp\r\n    }\r\n}","import * as types from './types'\r\nimport * as url from '../constant/Url'\r\nimport { contextPath } from '../constant/Url';\r\nimport User from './../models/User';\r\nimport ApplicationProfile from './../models/ApplicationProfile';\r\nimport WebResponse from '../models/commons/WebResponse';\r\n\r\nconst usedHost = url.contextPath();\r\nconst apiEntityBaseUrl = usedHost + \"api/app/entity/\"\r\nconst apiAdmin = usedHost + \"api/app/admin/\"\r\n\r\nexport const getEntityProperty = (entityName, app) => {\r\n  app.startLoading();\r\n  let requested = {\r\n    type: types.GET_ENTITY_PROPERTY,\r\n    payload: {\r\n      entity: entityName\r\n    },\r\n    meta: {\r\n      type: types.GET_ENTITY_PROPERTY,\r\n      url: apiEntityBaseUrl.concat(\"config\"),\r\n      app: app,\r\n    }\r\n  };\r\n  return requested;\r\n}\r\n\r\n\r\nexport const getManagementMenus = (app) => {\r\n  app.startLoading();\r\n  let requested = {\r\n    type: types.GET_MANAGEMENT_MENUS,\r\n    payload: {},\r\n    meta: {\r\n      type: types.GET_MANAGEMENT_MENUS,\r\n      url: apiEntityBaseUrl.concat(\"managementpages\"),\r\n      app: app,\r\n    }\r\n  };\r\n  return requested;\r\n}\r\n\r\n\r\nexport const setRequestId = (data: WebResponse, app) => {\r\n\r\n  const ret = {\r\n    type: types.SET_REQUEST_ID,\r\n    payload: { loginStatus: data.loggedIn, referer: app, ...data },\r\n    meta: {\r\n      type: types.SET_REQUEST_ID,\r\n    }\r\n  };\r\n  // console.debug(\"setRequestId: \", ret);\r\n  return ret;\r\n}\r\n\r\nexport const getMessageList = (app) => {\r\n  app.startLoading();\r\n  return {\r\n    type: types.GET_MESSAGE,\r\n    payload: {},\r\n    meta: {\r\n      type: types.GET_MESSAGE, app: app,\r\n      url: apiAdmin.concat(\"getmessages\")\r\n    }\r\n  };\r\n}\r\n\r\nexport const storeMessageLocally = (messages) => {\r\n\r\n  return {\r\n    type: types.STORE_MESSAGE,\r\n    payload: {\r\n      entities: messages\r\n    },\r\n    meta: {\r\n      type: types.STORE_MESSAGE,\r\n    }\r\n  };\r\n}\r\n\r\n\r\nexport const performLogout = (app) => {\r\n  app.startLoading();\r\n  let loginRequest = {\r\n    type: types.DO_LOGOUT,\r\n    payload: {},\r\n    meta: { app: app, type: types.DO_LOGOUT, url: contextPath().concat(\"api/user/logout\") }\r\n  };\r\n  return loginRequest;\r\n}\r\n\r\nexport const performLogin = (email, password, app) => {\r\n  app.startLoading();\r\n  let loginRequest = {\r\n    type: types.DO_LOGIN,\r\n    payload: {},\r\n    meta: {\r\n      type: types.DO_LOGIN,\r\n      url: contextPath().concat(\"login\"),\r\n      email: email, password: password,\r\n      app: app\r\n    }\r\n  };\r\n  return loginRequest;\r\n}\r\n\r\nexport const getLoggedUser = (app) => {\r\n  app.startLoading();\r\n  let request = {\r\n    type: types.GET_LOGGED_USER,\r\n    payload: {},\r\n    meta: { type: types.GET_LOGGED_USER, url: contextPath().concat(\"api/user\"), app: app }\r\n  };\r\n  return request;\r\n}\r\n\r\nexport const setLoggedUser = (user: User) => {\r\n  let request = {\r\n    type: types.SET_LOGGED_USER,\r\n    payload: Object.assign(new User(), user),\r\n    meta: { type: types.SET_LOGGED_USER }\r\n  };\r\n  return request;\r\n}\r\n\r\nexport const setApplicationProfile = (applicationProfile: ApplicationProfile) => {\r\n\r\n  let request = {\r\n    type: types.SET_APPLICATION_PROFILE,\r\n    payload: { applicationProfile: applicationProfile },\r\n    meta: { type: types.SET_APPLICATION_PROFILE }\r\n  };\r\n  return request;\r\n}\r\n\r\nexport const removeEntity = () => ({\r\n  type: types.REMOVE_SHOP_ENTITY,\r\n  payload: {},\r\n  meta: { type: types.REMOVE_SHOP_ENTITY }\r\n})\r\n\r\n\r\nexport const setMainApp = (mainApp: any) => ({\r\n  type: types.SET_MAIN_APP,\r\n  payload: mainApp,\r\n  meta: { type: types.SET_MAIN_APP }\r\n})\r\n\r\n","/**\r\n * \r\n */\r\n \r\nexport const REMOVE_SHOP_ENTITY= \"remove_shop_entity\"; \r\nexport const FETCH_PRODUCT_CATEGORIES_ALL = \"all_product_categories\";\r\nexport const DO_LOGIN = \"do_login\";\r\nexport const DO_LOGOUT = \"do_logout\";    \r\nexport const SET_REQUEST_ID = \"SET_REQUEST_ID\"; \r\nexport const STORE_MESSAGE = \"store_message\";\r\nexport const GET_ENTITY_PROPERTY = \"get_entity_config\";\r\nexport const GET_MANAGEMENT_MENUS = \"GET_MANAGEMENT_MENUS\";\r\nexport const GET_MESSAGE = \"GET_MESSAGE\";\r\nexport const SET_MAIN_APP = \"SET_MAIN_APP\"; \r\nexport const GET_ENTITY_BY_ID = \"get_entity_by_id\";\r\nexport const UPDATE_ENTITY = \"update_entity\"; \r\nexport const REFRESH_LOGIN = \"refresh_login\";\r\nexport const GET_LOGGED_USER = \"get_logged_user\";\r\nexport const SET_LOGGED_USER = \"set_logged_user\";\r\nexport const SET_APPLICATION_PROFILE = \"SET_APPLICATION_PROFILE\";","let index = 1;\r\nexport const uniqueId = function () {\r\n\tlet string = new String(new Date().getUTCMilliseconds()).toString();\r\n\tindex++;\r\n\treturn index + \"-\" + string;\r\n}\r\n\r\nexport function beautifyNominal(val:any) {\r\n\tif (val == \"\" || val == null) return \"0\";\r\n\tconst isDecimal:boolean = new String(val).includes(\".\");\r\n\tconst isNegative:boolean = new String(val).startsWith(\"-\");\r\n\tif (isNegative) {\r\n\t\tval = new String(val).replace(\"-\",\"\");\r\n\t}\r\n\tconst rawVal = isDecimal? parseInt( new String(val).split(\".\")[0]) : parseInt(val);\r\n\tlet nominal = Math.abs(rawVal).toString();\r\n\tlet result = \"\";\r\n\tif (nominal.length > 3) { \r\n\t\tlet zeroIndex: number = 0;\r\n\t\tfor (let i = nominal.length - 1; i > 0; i--) {\r\n\t\t\tzeroIndex++; \r\n\t\t\tresult = nominal[i] + result;\r\n\t\t\tif (zeroIndex == 3 ) {\r\n\t\t\t\tresult = \".\" + result;\r\n\t\t\t\tzeroIndex = 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tresult = nominal[0] + result;\r\n\t} else {\r\n\t\tresult = val;\r\n\t}\r\n\tif (rawVal < 0) {\r\n\t\treturn rawVal;\r\n\t}\r\n\tif (isDecimal) {\r\n\t\tresult+= \",\"+ new String(val).split(\".\")[1];\r\n\t}\r\n\tif (isNegative) {\r\n\t\tresult = \"-\"+result;\r\n\t}\r\n\treturn result;\r\n}\r\n \r\n\r\nconst months = [\r\n\t\"Januari\", \"Ferbuari\", \"Maret\", \"April\", \"Mei\", \"Juni\",\r\n\t\"Juli\", \"Agustus\", \"September\", \"Oktober\", \"November\", \"Desember\"\r\n]\r\n\r\nexport const monthName = (index:number) => {\r\n\treturn months[index];\r\n}\r\n\r\nexport const monthYearString = function (m, y) {\r\n\tif (m == null || y == null) {\r\n\t\treturn \"-\";\r\n\t}\r\n\treturn months[m - 1] + \" \" + y;\r\n}\r\nexport const twoDigits = (value:number) :string => {\r\n    if (value >= 10) {\r\n        return   value.toString();\r\n    }\r\n    return \"0\"+value;\r\n}","import BaseEntity from '../BaseEntity'; \nimport { uniqueId } from '../../utils/StringUtil';\nimport { AuthorityType } from '../AuthorityType';\nimport User from './../User';\n\nexport default class Menu extends BaseEntity{\n\tstatic defaultMenuIconClassName:string = \"fas fa-folder\";\n\n\tcode:string = uniqueId();\n\tname?:string;\n\tdescription?:string;\n\turl?:string;\n\tpathVariables?:string; \n\ticonUrl?:string;\n\tcolor?:string;\n\tfontColor?:string;\n\trole:AuthorityType[] = [];\n\n\t//\n\tactive?:boolean = false;\n\tmenuClass?:string = \"fas fa-folder\";\n\tauthenticated?:boolean = false;\n\tshowSidebar?:boolean  = false;\n\tsubMenus?:Menu[] = undefined;\n\n\tstatic getIconClassName = (menu:Menu) => {\n\t\tif (undefined == menu.menuClass) {\n\t\t\treturn Menu.defaultMenuIconClassName;\n\t\t}\n\t\treturn menu.menuClass;\n\t}\n\n\tuserAuthorized? = (user?:User) : boolean => {\n\t\tif (this.role.length == 0) return true;\n\t\tif (!user) return false;\n\t\tuser = User.clone(user);\n\t\tfor (let i = 0; i < this.role.length; i++) {\n\t\t\tconst element = this.role[i];\n\t\t\tif (user.hasRole(element)){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n","\r\nimport { AuthorityType } from '../models/AuthorityType';\r\nimport Menu from '../models/settings/Menu';\r\n \r\n\r\nexport const getMenus = () => {\r\n    let menuSet: Menu[] = [];\r\n    for (let i = 0; i < _menus.length; i++) {\r\n        const element: Menu = _menus[i];\r\n        const menu:Menu = Object.assign(new Menu, element);\r\n        const subMenus:Menu[] = [];\r\n        if (element.subMenus) {\r\n            for (let i = 0; i < element.subMenus.length; i++) {\r\n                const subMenu = element.subMenus[i];\r\n                subMenus.push(Object.assign(new Menu, subMenu));\r\n            }\r\n            menu.subMenus = subMenus;\r\n        }\r\n        menuSet.push(menu);\r\n    }\r\n    \r\n    return menuSet;\r\n}\r\nexport const extractMenuPath = (pathName: string) => {\r\n    const pathRaw = pathName.split('/');\r\n   \r\n    let firstPath = pathRaw[0];\r\n    if (firstPath.trim() == \"\") {\r\n        firstPath = pathRaw[1];\r\n    }\r\n    return firstPath;\r\n}\r\nexport const getMenuByMenuPath = (pathName: string): Menu | null => {\r\n    const menus = getMenus();\r\n    try {\r\n        for (let i = 0; i < menus.length; i++) {\r\n            const menu: Menu = menus[i];\r\n            if (menu.url == \"/\" + pathName) {\r\n                return menu;\r\n            }\r\n        }\r\n        return null;\r\n    } catch (error) {\r\n        return null;\r\n    }\r\n}\r\n\r\nconst _menus: Menu[] = [\r\n    {\r\n        code: 'home',\r\n        name: \"Home\",\r\n        url: \"/home\",\r\n        menuClass: \"fa fa-home\",\r\n        active: false,\r\n        authenticated: false,\r\n        showSidebar: false,\r\n        role : []\r\n    },\r\n    \r\n    {\r\n        code: 'dashboard',\r\n        name: \"Dashboard\",\r\n        url: \"/dashboard\",\r\n        menuClass: \"fas fa-tachometer-alt\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true,\r\n        role: [AuthorityType.ROLE_SUPERADMIN, AuthorityType.ROLE_ASRAMA_MUSYRIF],\r\n        subMenus: [\r\n            {\r\n                code: 'followup',\r\n                name: 'Follow Up',\r\n                url: 'followup',\r\n                menuClass: 'fas fa-history',\r\n                role: [ AuthorityType.ROLE_ASRAMA_MUSYRIF],\r\n            },\r\n            // {\r\n            //     code: 'dashboard_productsales',\r\n            //     name: 'Product Sales',\r\n            //     url: 'productsales',\r\n            //     menuClass: 'fas fa-chart-line',\r\n            //     role: [],\r\n            // }\r\n        ]\r\n    }, \r\n    {\r\n        code: 'management',\r\n        name: \"Manajemen\",\r\n        url: \"/management\",\r\n        menuClass: \"fas fa-mail-bulk\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true,\r\n        role: [AuthorityType.ROLE_SUPERADMIN, AuthorityType.ROLE_ASRAMA_MUSYRIF],\r\n        subMenus: [\r\n            {\r\n                code: 'musyrifmanagement',\r\n                name: 'Musyrif',\r\n                url: 'musyrifmanagement',\r\n                menuClass: 'fas fa-users',\r\n                role: [AuthorityType.ROLE_SUPERADMIN],\r\n            },\r\n            {\r\n                code: 'rule_category',\r\n                name: 'Kategori Pelanggaran',\r\n                url: 'rule_category',\r\n                menuClass: 'fas fa-tags',\r\n                role: [AuthorityType.ROLE_SUPERADMIN],\r\n            },\r\n            {\r\n                code: 'rule_point',\r\n                name: 'Poin Pelanggaran',\r\n                url: 'rule_point',\r\n                menuClass: 'fas fa-puzzle-piece',\r\n                role: [AuthorityType.ROLE_SUPERADMIN],\r\n            }, \r\n            {\r\n                code: 'warning_action',\r\n                name: 'Peringatan',\r\n                url: 'warning_action',\r\n                menuClass: 'fas fa-exclamation-triangle',\r\n                role: [AuthorityType.ROLE_SUPERADMIN, AuthorityType.ROLE_ASRAMA_MUSYRIF],\r\n            }, \r\n            {\r\n                code: 'category_predicate',\r\n                name: 'Predikat Rapor',\r\n                url: 'category_predicate',\r\n                menuClass: 'far fa-flag',\r\n                role: [AuthorityType.ROLE_SUPERADMIN, ],\r\n            }, \r\n            {\r\n                code: 'rule_violation',\r\n                name: 'Pelanggaran Umum',\r\n                url: 'rule_violation',\r\n                menuClass: 'fas fa-times-circle',\r\n                role: [AuthorityType.ROLE_ASRAMA_MUSYRIF, ],\r\n            }, \r\n        ]\r\n    }, \r\n    {\r\n        code: 'asrama',\r\n        name: \"Asrama\",\r\n        url: \"/asrama\",\r\n        menuClass: \"fas fa-school\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true,\r\n        role: [  AuthorityType.ROLE_ASRAMA_MUSYRIF, AuthorityType.ROLE_SUPERADMIN],\r\n        subMenus: [\r\n            {\r\n                code: 'studentlist',\r\n                name: 'Siswa',\r\n                url: 'studentlist',\r\n                menuClass: 'fas fa-users',\r\n                role: [ AuthorityType.ROLE_ASRAMA_MUSYRIF],\r\n            },\r\n            {\r\n                code: 'input_point',\r\n                name: 'Form Pelanggaran Tipe 1',\r\n                url: 'inputpoint',\r\n                menuClass: 'fas fa-edit',\r\n                role: [ AuthorityType.ROLE_ASRAMA_MUSYRIF],\r\n            }, \r\n            {\r\n                code: 'pointrecordedit',\r\n                name: 'Form Pelanggaran Tipe 2',\r\n                url: 'pointrecordedit',\r\n                menuClass: 'fas fa-edit',\r\n                role: [ AuthorityType.ROLE_ASRAMA_MUSYRIF],\r\n            },\r\n            // {\r\n            //     code: 'medicalrecord',\r\n            //     name: 'Medical Record',\r\n            //     url: 'medicalrecord',\r\n            //     menuClass: 'fas fa-briefcase-medical',\r\n            //     role: [ AuthorityType.musyrif_asrama],\r\n            // },\r\n            {\r\n                code: 'pointsummary',\r\n                name: 'Rekap Pelanggaran',\r\n                url: 'pointsummary',\r\n                menuClass: 'fas fa-clipboard',\r\n                role: [ AuthorityType.ROLE_ASRAMA_MUSYRIF, AuthorityType.ROLE_SUPERADMIN],\r\n            },\r\n           \r\n            \r\n        ]\r\n    }, \r\n    {\r\n        code: 'report',\r\n        name: \"Laporan\",\r\n        url: \"/report\",\r\n        menuClass: \"fas fa-file\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true,\r\n        role: [  AuthorityType.ROLE_ASRAMA_MUSYRIF, AuthorityType.ROLE_SUPERADMIN],\r\n        subMenus: [\r\n            {\r\n                code: 'studentreport',\r\n                name: 'Rapor',\r\n                url: 'studentreport',\r\n                menuClass: 'fas fa-file',\r\n                role: [ AuthorityType.ROLE_ASRAMA_MUSYRIF, AuthorityType.ROLE_SUPERADMIN],\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        code: 'settings',\r\n        name: \"Setting\",\r\n        url: \"/settings\",\r\n        menuClass: \"fas fa-cogs\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true,\r\n        role: [  AuthorityType.ROLE_SUPERADMIN],\r\n        subMenus: [\r\n            {\r\n                code: 'config',\r\n                name: 'Konfigurasi',\r\n                url: 'config',\r\n                menuClass: 'fas fa-cog',\r\n                role: [ AuthorityType.ROLE_SUPERADMIN],\r\n            },\r\n        ]\r\n    }\r\n    \r\n];\r\n","\r\nimport React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { getMenus } from '../../constant/Menus';\r\nimport { mapCommonUserStateToProps } from './../../constant/stores';\r\nimport ApplicationProfile from './../../models/ApplicationProfile';\r\nimport Menu from './../../models/settings/Menu';\r\nimport User from './../../models/User';\r\nimport { performLogout } from './../../redux/actionCreators';\r\nimport BaseComponent from './../BaseComponent';\r\nimport './Header.css';\r\nclass IState {\r\n  showNavLinks: boolean = false;\r\n}\r\nclass Header extends BaseComponent<any, IState> {\r\n  state: IState = new IState();\r\n  buttonToggleNavRef: React.RefObject<HTMLButtonElement> = React.createRef();\r\n  constructor(props: any) {\r\n    super(props, false);\r\n  }\r\n  toggleNavLinks = () => {\r\n    this.setState({ showNavLinks: !this.state.showNavLinks });\r\n  }\r\n  onLogout = (e: any) => {\r\n    const app = this;\r\n    app.showConfirmation(\"Logout?\").then(\r\n      function (ok) {\r\n        if (ok) {\r\n          app.props.performLogout(app.parentApp);\r\n        }\r\n      }\r\n    )\r\n  }\r\n  setMenu = (menu: Menu) => {\r\n    if (this.state.showNavLinks && this.buttonToggleNavRef.current) {\r\n      this.buttonToggleNavRef.current.click();\r\n    }\r\n    this.props.setMenu(menu);\r\n\r\n  }\r\n  render() {\r\n    const showNavLinks: boolean = this.state.showNavLinks;\r\n    const menus = getMenus();\r\n    const user = this.getLoggedUser();\r\n    const profile = this.getApplicationProfile();\r\n    const { appName } = profile;\r\n    return (\r\n      <div className=\"bg-dark container-fluid\" style={{ position: 'fixed', zIndex: 55, padding: 0, margin: 0 }}>\r\n        <NavBarTop profile={profile} />\r\n        <nav id=\"navbar\" className=\"w-100 navbar navbar-expand-lg navbar-dark bg-dark\">\r\n          <a id=\"navbar-brand\" className=\"navbar-brand\" href=\"#\">\r\n            {appName} | Semester: {profile.semester} {profile.year}\r\n          </a>\r\n          <button\r\n            ref={this.buttonToggleNavRef}\r\n            onClick={this.toggleNavLinks}\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarToggler\"\r\n            aria-controls=\"navbarToggler\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <i className={showNavLinks ? \"fas fa-times\" : \"fas fa-bars\"} />\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarToggler\">\r\n            <ul id=\"navbar-top\" className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n              {menus.map(menu => {\r\n                if (menu == null || (menu.authenticated && !user)) return null;\r\n                if (menu.userAuthorized && menu.userAuthorized(user) == false) return null;\r\n                const isActive = this.props.activeMenuCode == menu.code;\r\n                return (\r\n                  <li key={\"header-menu-\" + new String(menu.code)} className={\"nav-item \" + (isActive ? \"active nav-active\" : \"nav-inactive\")}>\r\n                    <Link onClick={() => this.setMenu(menu)} className={\"nav-link  \"}\r\n                      to={menu.url}><span>{menu.name}</span>\r\n                    </Link></li>\r\n                )\r\n              })}\r\n            </ul >\r\n            <form className=\"form-inline my-2 my-lg-0\">\r\n              <UserIcon setMenuNull={this.props.setMenuNull}\r\n                onLogout={this.onLogout} user={user} />\r\n            </form >\r\n          </div >\r\n        </nav >\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\nconst NavBarTop = (props: { profile: ApplicationProfile }) => {\r\n  const { profile } = props;\r\n  return (\r\n    <div id=\"navbar-brand-top\" style={{ paddingLeft: '0.5rem' }} className=\"container-fluid\">\r\n      <a style={{ fontSize: '15px' }} className=\"text-white navbar-brand\" href=\"#\">\r\n        <strong>{profile.appName} | Semester {profile.semester} {profile.year}</strong>\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\nconst UserIcon = (props: { user: User | undefined, setMenuNull(): any, onLogout(e): any }) => {\r\n  if (props.user) {\r\n    return (\r\n      <Fragment>\r\n        <Link\r\n          onClick={props.setMenuNull}\r\n          className=\"btn btn-light btn-sm my-2 my-sm-0 mr-2\"\r\n          to='/settings/user-profile'\r\n        >\r\n          <i className=\"fas fa-user-circle mr-2\" />\r\n          <span>{props.user.displayName}</span>\r\n        </Link>\r\n        <a className=\"mr-1 btn btn-danger btn-sm  my-2 my-sm-0\"\r\n          onClick={props.onLogout}><i className=\"fas fa-sign-out-alt mr-2\" /><span>Logout</span>\r\n        </a>\r\n      </Fragment>);\r\n  }\r\n  return (\r\n\r\n    <Link\r\n      onClick={props.setMenuNull}\r\n      className=\"btn btn-sm btn-info my-2 my-sm-0 mr-2\"\r\n      to='/login'\r\n    >\r\n      <i className=\"fas fa-sign-in-alt mr-2\"></i><span>Login</span>\r\n    </Link>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n  performLogout: (app: any) => dispatch(performLogout(app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n  mapCommonUserStateToProps,\r\n  mapDispatchToProps\r\n)(Header))","\r\nimport React, { Component } from 'react';\r\nimport './Spinner.css';\r\nexport default class Spinner extends Component<any, any>{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const innerDivs:JSX.Element[] = new Array<JSX.Element>();\r\n        for (let i = 0; i <= 11; i++) {\r\n            innerDivs.push(<div key={\"spinner-item-\"+i}></div>);\r\n        }\r\n        return (\r\n            <div style={{width:'85px', height:'85px', display:'block'}} className=\"container-fluid text-center\" >\r\n                 <div style={{visibility:this.props.show == false?'hidden':'visible'}} className=\"lds-spinner\">\r\n                  {innerDivs}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","\r\n\r\nimport React, { ChangeEvent, FormEvent, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { performLogin } from '../../../redux/actionCreators';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport Spinner from './../../loader/Spinner';\r\nimport './Login.css';\r\nclass IState {\r\n  loading = false; email = \"\"; editPassword = \"\";\r\n}\r\nclass Login extends BaseComponent<any, IState> {\r\n  state: IState = new IState();\r\n  constructor(props: any) {\r\n    super(props, false);\r\n  }\r\n  startLoading = () => this.setState({ loading: true });\r\n  endLoading = () => this.setState({ loading: false });\r\n  login(e: FormEvent) {\r\n    e.preventDefault();\r\n    this.props.performLogin(this.state.email, this.state.editPassword, this);\r\n  }\r\n  componentDidMount() {\r\n    document.title = \"Login\";\r\n    if (this.isUserLoggedIn()) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n  componentDidUpdate() {\r\n\r\n    if (this.isUserLoggedIn()) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n  updateCredentialProperty = (e: ChangeEvent) => {\r\n    const target = e.target as HTMLInputElement;\r\n    const name: string | null = target.getAttribute(\"name\");\r\n    if (null == name) return;\r\n    this.setState({ [name]: target.value } as any);\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"Login\" className=\"mt-4\" >\r\n        <form name='login' onSubmit={(e) => { this.login(e) }} className=\"form-signin\">\r\n          <div className=\"text-center\">\r\n            <h2><i className=\"fas fa-user-circle\"></i></h2>\r\n            <h1 className=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\r\n          </div>\r\n          <EmailField value={this.state.email} onChange={this.updateCredentialProperty} />\r\n          <PasswordField value={this.state.editPassword} onChange={this.updateCredentialProperty} />\r\n          {\r\n            this.state.loading ?\r\n              <Spinner /> :\r\n              <Fragment>\r\n                <button className=\"btn text-light\" style={{ marginRight: '5px', backgroundColor: 'rgb(9,26,78)' }} type=\"submit\">\r\n                  Sign in\r\n                </button>\r\n              </Fragment>\r\n          }\r\n          <input name=\"transport_type\" type=\"hidden\" value=\"rest\" />\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\nconst PasswordField = ({ value, onChange }) => {\r\n  return <Fragment>\r\n    <label className=\"sr-only\">Password</label>\r\n    <input name=\"editPassword\" value={value} onChange={onChange} type=\"password\" id=\"inputPassword\" className=\"form-control\"\r\n      placeholder=\"Password\" required />\r\n  </Fragment>\r\n}\r\nconst EmailField = ({ value, onChange }) => {\r\n  return (<Fragment>\r\n    <label className=\"sr-only\">Email</label>\r\n    <input name=\"email\" value={value} onChange={onChange} type=\"text\" className=\"form-control\"\r\n      placeholder=\"Email\" required autoFocus />\r\n  </Fragment>)\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n  performLogin: (username: string, password: string, app: any) => dispatch(performLogin(username, password, app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n  mapCommonUserStateToProps,\r\n  mapDispatchToProps\r\n)(Login))","export default class AttachmentInfo {\r\n    setUrl(arg0: string) {\r\n        this.url = arg0;\r\n        this.data = arg0.split(\",\")[1];\r\n    }\r\n    static nameOnly(name: any): AttachmentInfo {\r\n        const info = new AttachmentInfo();\r\n        info.name = name;\r\n        return info;\r\n    }\r\n    static instance(name: any, url:string): AttachmentInfo {\r\n        const info = new AttachmentInfo();\r\n        info.name = name;\r\n        info.url = url;\r\n        return info;\r\n    }\r\n    constructor(public file?: File) {\r\n\r\n    }\r\n    name: string = \"\";\r\n    blob: Blob = new Blob();\r\n    url: string = \"\";\r\n    data: string = \"\";\r\n}","import AttachmentInfo from '../models/settings/AttachmentInfo';\r\n \r\n  \r\nexport const getAttachmentInfoFromFile = (fileInput:HTMLInputElement): Promise<AttachmentInfo> => {\r\n    return new Promise<AttachmentInfo>((resolve, reject) =>{\r\n        if (null == fileInput.files || !fileInput.files[0]) {\r\n            reject(new Error(\"No file\"));\r\n            return;\r\n        }\r\n        try { \r\n            const file = fileInput.files[0]; \r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            console.debug(\"fileInput.files[0]: \", file);\r\n            reader.onload = function () { \r\n                const info = new AttachmentInfo(file);\r\n                info.setUrl(new String(reader.result).toString());\r\n                // info.\r\n                info.name = file.name;\r\n                resolve(info);\r\n             }\r\n            reader.onerror = function (error) {\r\n                reject(error);\r\n            }\r\n        } catch (e) {\r\n            reject(e);\r\n        }\r\n    });\r\n\r\n}\r\n \r\n\r\n/**\r\n * \r\n * @param {Number} totalButton \r\n * @param {Number} currentPage \r\n */\r\nexport const createNavButtons = (totalButton, currentPage) => {\r\n    totalButton = Math.ceil(totalButton);\r\n    if (!currentPage) { currentPage = 0 }\r\n    let buttonData = new Array();\r\n    let min = currentPage - 3 < 0 ? 0 : currentPage - 3;\r\n    let max = currentPage + 3 > totalButton ? totalButton : currentPage + 3;\r\n\r\n    if (min != 0) {\r\n        buttonData.push({\r\n            text: 1,\r\n            value: 0\r\n        });\r\n    }\r\n\r\n    for (let index = min; index < max; index++) {\r\n        buttonData.push({\r\n            text: index + 1,\r\n            value: index\r\n        });\r\n    }\r\n\r\n    if (max != totalButton) {\r\n        buttonData.push({\r\n            text: totalButton,\r\n            value: totalButton - 1\r\n        });\r\n    }\r\n\r\n\r\n    return buttonData;\r\n}\r\n\r\n ","\nimport BaseComponent from './../BaseComponent';\n\nexport default class BasePage<P, S> extends BaseComponent<P, S> {\n  constructor(props,\n             protected title: string | undefined | null,\n             authenticated: boolean = false) {\n    super(props, authenticated);\n    if (title !== undefined && title !== null) {\n      document.title = title;\n    } else {\n      document.title = \"Asrama KIIS\";\n    }\n  }\n\n  componentDidMount() {\n    this.validateLoginStatus(() => {\n      this.scrollTop();\n      this.componentReady();\n    })\n  }\n\n  protected componentReady() { }\n}","\r\n\r\nimport React, { ChangeEvent, FormEvent } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\r\nimport { AuthorityType } from '../../../../models/AuthorityType';\r\nimport AttachmentInfo from './../../../../models/settings/AttachmentInfo';\r\nimport User from './../../../../models/User';\r\nimport { getAttachmentInfoFromFile } from './../../../../utils/ComponentUtil';\r\nimport BasePage from './../../BasePage';\r\n\r\nclass State {\r\n  attachment?: AttachmentInfo;\r\n}\r\nclass DashboardMain extends BasePage<any, State> {\r\n  state = new State();\r\n  constructor(props: any) {\r\n    super(props, \"Dashboard\", true);\r\n  }\r\n\r\n  addPointRecord = (e: FormEvent) => {\r\n    e.preventDefault();\r\n    if (!this.state.attachment) return;\r\n\r\n    this.props.history.push({\r\n      pathname: '/asrama/pointrecordedit',\r\n      state: { attachment: this.state.attachment }\r\n    })\r\n  }\r\n  updateImage = (e: ChangeEvent) => {\r\n    getAttachmentInfoFromFile(e.target as HTMLInputElement)\r\n      .then(attachment => {\r\n        this.setState({ attachment: attachment });\r\n      }).catch(console.error)\r\n  }\r\n  render() {\r\n    const user: User | undefined = this.getLoggedUser();\r\n    if (!user) return null;\r\n    return (\r\n      <div className=\" section-body container-fluid\">\r\n        <h2>Dashboard</h2>\r\n        <div className=\"alert alert-info\">\r\n          Welcome, <strong>{user.fullName}  </strong>\r\n          <hr />\r\n          {/* <p className=\"badge badge-dark text-capitalize\">{(user.roles).join(\", \")}</p> */}\r\n\r\n        </div>\r\n        {!this.getLoggedUser()?.hasRole(AuthorityType.ROLE_ASRAMA_MUSYRIF) ? null :\r\n          <form className=\"mt-10 text-center\" onSubmit={this.addPointRecord}>\r\n            <h1><i className=\"fas fa-camera\" /></h1>\r\n            <h3> Input Pelanggaran</h3>\r\n            <input onChange={this.updateImage} type=\"file\" accept=\"image/*\" className=\"form-control mt-3\" />\r\n            <p />\r\n            {this.state.attachment ?\r\n              <div>\r\n                <input type=\"submit\" className=\"btn btn-dark btn-large\" value=\"Selanjutnya\" />\r\n                <img className=\"w-100 mt-5\" src={this.state.attachment.url} />\r\n\r\n              </div>\r\n              : null}\r\n          </form>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(\r\n  mapCommonUserStateToProps\r\n)(DashboardMain))","\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport { baseImageUrl } from '../../../constant/Url';\r\nimport ApplicationProfile from '../../../models/ApplicationProfile';\r\nimport BaseComponent from '../../BaseComponent';\r\n\r\nclass HomeMain extends BaseComponent<any, any> {\r\n  constructor(props: any) {\r\n    super(props, false);\r\n  }\r\n  componentDidMount() {\r\n    document.title = \"Home\";\r\n  }\r\n  render() {\r\n    const applicationProfile = this.getApplicationProfile();\r\n    const imageUrl = baseImageUrl() + applicationProfile.backgroundUrl;\r\n    return (\r\n      <div className=\"section-body container-fluid\" style={{ padding: 0 }}>\r\n        <div className=\"jumbotron\"\r\n          style={{\r\n            margin: '0px',\r\n            marginTop: '20px',\r\n            backgroundImage: 'url(\"' + imageUrl + '\")',\r\n            backgroundSize: 'cover',\r\n            color: applicationProfile.fontColor ?? \"rgb(0,0,0)\"\r\n          }}\r\n        >\r\n          <h1 className=\"display-4\">{applicationProfile.appName}</h1>\r\n          <p className=\"lead\">{applicationProfile.appDescription}</p>\r\n          <hr className=\"my-4\" />\r\n          <p>{applicationProfile.welcoming_message}</p>\r\n          <Link className=\"btn btn-primary btn-lg\" to=\"/about\" role=\"button\">About Us</Link>\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(connect(mapCommonUserStateToProps)(HomeMain));\r\n","\r\nimport BaseEntity from './BaseEntity';\r\nimport User from './User';\r\nexport default class Employee extends BaseEntity {\r\n    user?: User;\r\n    nisdm?: string;\r\n}","import React from 'react'\r\nimport { uniqueId } from './StringUtil';\r\nexport const tableHeader = (...values:string[]) => {\r\n   \r\n    return (<thead>\r\n        <tr>\r\n            {values.map((value)=>{\r\n\r\n                return <th key={uniqueId()}>{value}</th>\r\n            })}\r\n        </tr>\r\n    </thead>)\r\n}\r\nexport const groupArray = function (array, division) {\r\n    if (null == array || array.length == 0) { return [] }\r\n    const groupedArray = new Array();\r\n    const itemPerDivision = Math.ceil(array.length / division)\r\n\r\n    if (itemPerDivision == 1) {\r\n        groupedArray.push(array);\r\n        return groupedArray;\r\n    }\r\n\r\n    for (let i = 0; i < division; i++) {\r\n        groupedArray.push(new Array());\r\n    }\r\n\r\n    let index = 1;\r\n    let divisionIndex = 0;\r\n    for (let i = 0; i < array.length; i++) {\r\n        const element = array[i];\r\n        groupedArray[divisionIndex].push(element);\r\n\r\n        index++;\r\n        if (index > itemPerDivision) {\r\n            divisionIndex++;\r\n            index = 1;\r\n        }\r\n    }\r\n\r\n    return groupedArray;\r\n}\r\n","import { join } from \"path\";\r\nimport { twoDigits } from './StringUtil';\r\n\r\nexport const MONTHS = [\r\n    \"Januari\",\r\n    \"Februari\",\r\n    \"Maret\",\r\n    \"April\",\r\n    \"Mei\",\r\n    \"Juni\",\r\n    \"Juli\",\r\n    \"Agustus\",\r\n    \"September\",\r\n    \"Oktober\",\r\n    \"November\",\r\n    \"Desember\"\r\n]\r\n\r\nconst leapMonths = [ 31, (  29  ), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\r\nconst regularMonths = [ 31, (  28  ), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\r\n/**\r\n * \r\n * @param {Number} month starts at 0\r\n */\r\nexport const getMonthDays = (month:number, year:number = new Date().getFullYear()) : number=> {\r\n    if(year % 4 == 0){\r\n        return leapMonths[month];\r\n    }\r\n    return regularMonths[month];\r\n}\r\n\r\nexport const getInputReadableDate = (date:Date) :string => {\r\n    const year = date.getFullYear();\r\n\r\n    const arr = [year, twoDigits(date.getMonth()+1), twoDigits(date.getDate())];\r\n    return arr.join(\"-\");\r\n}\r\nexport function addDays(date:Date, days:number) :Date{\r\n    const result:Date = new Date(date);\r\n    result.setDate(result.getDate() + days);\r\n    return result;\r\n  }\r\n  export const getDiffDays = (a:Date, b:Date) : number => {\r\n    // Discard the time and time-zone information.\r\n\r\n    console.debug(\"DIFF DATE \",a,\" vs \", b);\r\n    const _MS_PER_DAY = 1000 * 60 * 60 * 24;\r\n    const utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());\r\n    const utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate()); \r\n    return Math.floor((utc2 - utc1) / _MS_PER_DAY);\r\n}\r\n\r\nexport const parseDate = (s:string) :Date => {\r\n    var b:string[] = s.split(/\\D/);\r\n    var m = parseInt(b[1]);\r\n    return new Date(parseInt(b[0]), --m, parseInt(b[2]));\r\n  }\r\nexport const timerString = (inputSeconds:number ) => {\r\n    let hour = 0;\r\n    let minutes:number = 0;\r\n    let seconds = 0;\r\n    let totalSeconds = inputSeconds;\r\n    if (totalSeconds >= 3600) {\r\n        hour = totalSeconds/ 3600;\r\n        totalSeconds = totalSeconds % 3600;\r\n    }\r\n    if (totalSeconds >= 60) {\r\n        minutes = totalSeconds/60;\r\n        totalSeconds = totalSeconds%60;\r\n    }\r\n    seconds = totalSeconds; \r\n\r\n    return  twoDigits(hour)+\":\"+twoDigits(Math.floor(minutes))+\":\"+twoDigits(seconds);\r\n}\r\n\r\n\r\n\r\n","\nimport { ChangeEvent } from 'react';\nimport { getInputReadableDate } from './../../utils/DateUtil';\nexport default class Filter {\n  static resetFieldsFilter = (f: Filter): Filter => {\n    for (const key in f.fieldsFilter) {\n      if (key.endsWith('=d')) {\n        f.fieldsFilter[key] = getInputReadableDate(new Date());\n      } else {\n        f.fieldsFilter[key] = '';\n      }\n    }\n    return f;\n  }\n  static withLimit = (arg0: number): Filter => {\n    const f = new Filter();\n    f.limit = arg0;\n    return f;\n  }\n  limit?: number = 5;\n  page?: number = 0;\n  orderType?: 'desc' | 'asc';\n  orderBy?: string;\n  contains?: boolean;\n  exacts?: boolean;\n  module?: string;\n  fieldsFilter: Record<string, any> = {};\n  maxValue?: number;\n  availabilityCheck?: boolean;\n\n\n  public static queryString = (filter?: Filter) => {\n    if (!filter) return '';\n    let q: string[] = [];\n    if (filter.page && filter.page >= 0) {\n      q.push(`page=${filter.page}`);\n    }\n    if (filter.limit && filter.limit >= 0) {\n      q.push(`limit=${filter.limit}`);\n    }\n    if (filter.orderBy) {\n      q.push(`order=${filter.orderBy}`);\n    }\n    if (filter.orderType && (filter.orderType === 'asc' || filter.orderType === 'desc')) {\n      q.push(`orderDesc=${filter.orderType === 'desc' ? 'true' : 'false'}`);\n    }\n    if (filter.fieldsFilter)\n      for (const key in filter.fieldsFilter) {\n        if (Object.prototype.hasOwnProperty.call(filter.fieldsFilter, key)) {\n          const element = filter.fieldsFilter[key];\n          q.push(`filter=${encodeURIComponent(key)}:${encodeURIComponent(element)}`);\n        }\n      }\n    return '?' + q.join('&');\n  }\n  public static updatePeriodFilter = (filter: Filter, e: ChangeEvent<HTMLInputElement | HTMLSelectElement>, field: 'time<=d' | 'time>=d') => {\n    const val = parseInt(e.target.value);\n    if (isNaN(val)) {\n      return;\n    }\n    const periodFilter = new Date(filter.fieldsFilter[field]);\n    switch (e.target.name) {\n      case 'day':\n        periodFilter.setDate(val);\n        break;\n      case 'month':\n        periodFilter.setMonth(val);\n        break;\n      case 'year':\n        periodFilter.setFullYear(val);\n        break;\n      default:\n        return;\n    }\n    filter.fieldsFilter[field] = getInputReadableDate(periodFilter);\n  }\n}\n","\r\nimport React, { Component } from 'react';\r\ninterface Props {\r\n    orientation?:string,\r\n    show?:boolean,\r\n    children:any,\r\n    label?:any,\r\n    className?:string,\r\n}\r\nexport default class FormGroup extends Component<Props, any>\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        if (false == this.props.show) return null;\r\n        const orientation = this.props.orientation == 'vertical' ? 'vertical' : 'horizontal';\r\n        return (\r\n            <div className={`form-group ${this.props.className} ` + (orientation == 'vertical' ? '' : 'row')}>\r\n                <label className={(orientation == 'vertical' ? '' : 'col-sm-3')}><strong>{this.props.label ? this.props.label : null}</strong></label>\r\n                <div className={(orientation == 'vertical' ? '' : 'col-sm-9')}>\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nimport { uniqueId } from './../../utils/StringUtil';\r\ninterface IProps {\r\n    limit: number,\r\n    totalData: number,\r\n    activePage: number,\r\n    onClick: any\r\n}\r\nexport default class NavigationButtons extends Component<IProps, any> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        const buttonIndexes = generateButtonValues(this.props.limit, this.props.totalData, this.props.activePage);\r\n        if (buttonIndexes.length == 0) { return null }\r\n        const lastIndex = buttonIndexes[buttonIndexes.length - 1];\r\n        const nextPage = this.props.activePage + 1 >= lastIndex  ? 0 : this.props.activePage + 1;\r\n        const previusPage = this.props.activePage - 1 < 0? lastIndex-1 : this.props.activePage - 1;\r\n        return (<div>\r\n            <nav aria-label=\"Page navigation example\">\r\n                <ul className=\"pagination\">\r\n                    <li className=\"page-item\"><a className=\"page-link\" onClick={(e) => this.props.onClick(previusPage)}>Previous</a></li>\r\n                    {buttonIndexes.map((page, i) => {\r\n                        return <li key={\"NAV-\"+uniqueId()} className={\"page-item \"+(page-1 == this.props.activePage?\"active\":\"\")}><a className=\"page-link \" onClick={(e) => this.props.onClick(page - 1)} >{page}</a></li>\r\n                    })}\r\n                    <li className=\"page-item\"><a className=\"page-link\" onClick={(e) => this.props.onClick(nextPage)}>Next</a></li>\r\n                </ul>\r\n            </nav>\r\n        </div>)\r\n    }\r\n}\r\n\r\nconst generateButtonValues = (limit: number, totalData: number, currentPage: number) => {\r\n\r\n    /* DISPLAYED BUTTONS */\r\n    const displayed_buttons: number[] = [];\r\n    const buttonCount = Math.ceil(totalData / limit);\r\n\r\n    // console.debug(\"current page:\", currentPage);\r\n    const min = (currentPage) - 1;\r\n    const max = (currentPage) + 3;\r\n    // const min = (currentPage) - 2;\r\n    // const max = (currentPage) + 2;\r\n\r\n    // console.debug(\"min\", min, \"current page:\", currentPage, \"max\", max);\r\n    if (buttonCount > 1) {\r\n        displayed_buttons.push(1);\r\n    }\r\n    for (let i = min; i <= max; i++) {\r\n        if (i > 1 && i <= buttonCount) {\r\n            (displayed_buttons.push(i));\r\n        }\r\n    }\r\n    if (max < buttonCount) {\r\n        displayed_buttons.push(buttonCount);\r\n    }\r\n    return displayed_buttons;\r\n}\r\n","import * as types from './types'\r\n\r\nexport const initState = { \r\n    mainApp: undefined\r\n\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case types.SET_MAIN_APP:\r\n              \r\n            return { ...state, mainApp: action.payload }; \r\n       \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as types from './types'\r\nimport * as menuData from '../constant/Menus' \r\nimport { setLoginKeyCookie } from './../middlewares/Common';\r\n\r\nexport const initState = {\r\n    loginKey: null,\r\n    loginStatus: false,\r\n    loginFailed: false,\r\n    menus: menuData.getMenus(),\r\n    loggedUser: null,\r\n    loginAttempt: false,\r\n    requestId: null,\r\n    applicationProfile: {},\r\n    assetsPath: \"\"\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    \r\n    let result = {};\r\n    switch (action.type) { \r\n        case types.SET_REQUEST_ID:\r\n            \r\n            result = {\r\n                ...state,\r\n                requestId: action.payload.requestId,\r\n                applicationProfile: action.payload.result ?? {},\r\n                assetsPath: \"http://FIXME\"\r\n            };\r\n            \r\n            result.loginStatus = false;\r\n            result.loggedUser = null;\r\n            // console.debug(\"result\");\r\n            // console.debug(\"action.payload.requestId: \",action.payload.message); \r\n            // console.debug(\"REQUEST_ID result.loginStatus:\", result.loginStatus)\r\n            action.payload.referer.refresh();\r\n\r\n            return result;\r\n        case types.DO_LOGIN:\r\n            result = {\r\n                ...state,\r\n                loginAttempt: true,\r\n                loginStatus: action.payload.loginStatus,\r\n                loginKey: action.payload.loginKey,\r\n                loginFailed: action.payload.loginStatus == false,\r\n                loggedUser: action.payload.loggedUser\r\n            };\r\n            return result;\r\n        case types.DO_LOGOUT:\r\n            result = {\r\n                ...state,\r\n                loginStatus: false,\r\n                loggedUser: null\r\n            };\r\n            setLoginKeyCookie(null);\r\n            return result;\r\n        case types.REFRESH_LOGIN:\r\n            result = {\r\n                ...state,\r\n                loginStatus: action.payload.loginStatus,\r\n                loggedUser: action.payload.loggedUser,\r\n                requestId: action.payload.requestId,\r\n            };\r\n            return result;\r\n        case types.GET_LOGGED_USER:\r\n            result = {\r\n                ...state, loggedUser: action.payload.data\r\n            };\r\n            return result;\r\n        case types.SET_LOGGED_USER:\r\n            result = {\r\n                ...state, loggedUser: action.payload, loginStatus: true\r\n            };\r\n            return result;\r\n        case types.SET_APPLICATION_PROFILE:\r\n            result = {\r\n                ...state, applicationProfile: action.payload.applicationProfile\r\n            };\r\n            return result;\r\n        default:\r\n            return { ...state };\r\n\r\n    }\r\n}\r\n\r\nexport default reducer;","export const initState: { services } = {\r\n    services: { }\r\n};\r\n\r\nexport const reducer = (state = initState, action) => state;\r\n\r\nexport default reducer;","import * as appReducer from \"./appReducer\"\r\nimport * as userReducer from \"./userReducer\" \r\nimport  * as servicesReducers from './servicesReducer';\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport const rootReducer = combineReducers(\r\n    {\r\n        appState: appReducer.reducer,\r\n        userState: userReducer.reducer, \r\n        servicesState: servicesReducers.reducer\r\n    }\r\n);\r\n\r\nexport const initialState = {\r\n    appState: appReducer.initState,\r\n    userState: userReducer.initState, \r\n    servicesState: servicesReducers.initState\r\n}\r\n\r\nexport default rootReducer;","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\nimport { AxiosResponse } from 'axios';\r\nconst axios = require('axios');\r\n\r\nexport const performLoginMiddleware = store => next => action => {\r\n  if (!action.meta || action.meta.type !== types.DO_LOGIN) {\r\n    return next(action);\r\n  }\r\n  const { app } = action.meta;\r\n  const parameters = [\r\n    'username=' + action.meta.email,\r\n    'password=' + action.meta.password,\r\n    'transport_type=rest'\r\n  ];\r\n  axios.post(action.meta.url, parameters.join('&'), {\r\n    headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\r\n  }).then(axiosResponse => {\r\n    const responseJson = axiosResponse.data;\r\n    let loginKey: string = '';\r\n    let loginSuccess: boolean = false;\r\n\r\n    if (responseJson.code != null && responseJson.code == '00') {\r\n      loginKey = axiosResponse.headers['access-token'];\r\n      // console.log('api_token: ', loginKey);\r\n      loginSuccess = true;\r\n    } else {\r\n    }\r\n    let newAction = Object.assign({}, action, {\r\n      payload: {\r\n        loginStatus: loginSuccess,\r\n        loginKey: loginKey,\r\n        loggedUser: responseJson.result\r\n      }\r\n    });\r\n    common.updateAccessToken(axiosResponse);\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n  })\r\n    .catch(console.log)\r\n    .finally(() => { app.endLoading(); });\r\n\r\n}\r\n\r\n\r\nexport const getLoggedUserMiddleware = store => next => action => {\r\n  if (!action.meta || action.meta.type !== types.GET_LOGGED_USER) { return next(action); }\r\n\r\n  let headers = common.commonAuthorizedHeader();\r\n\r\n  axios.post(action.meta.url, (action.payload), {\r\n    headers: headers\r\n  }).then(response => {\r\n    const data = response.data;\r\n\r\n    if (!data) {\r\n      alert('Error performing request');\r\n      return;\r\n    }\r\n\r\n    let newAction = Object.assign({}, action, { payload: { data } });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n  })\r\n    .catch(console.log).finally(param => {\r\n      action.meta.app.endLoading();\r\n      action.meta.app.refresh();\r\n    });\r\n}\r\n\r\n\r\nexport const performLogoutMiddleware = store => next => action => {\r\n  if (!action.meta || action.meta.type !== types.DO_LOGOUT) {\r\n    return next(action);\r\n  }\r\n  const app = action.meta.app;\r\n\r\n  axios.post(action.meta.url, action.payload, {\r\n    headers: common.commonAuthorizedHeader()\r\n  })\r\n    .then((r: AxiosResponse) => {\r\n      const responseJson = r.data;\r\n      let logoutSuccess = false;\r\n      if (responseJson.code == '00') {\r\n        logoutSuccess = true;\r\n      } else {\r\n        alert('Logout Failed');\r\n      }\r\n\r\n      let newAction = Object.assign({}, action, {\r\n        payload: {\r\n          loginStatus: !logoutSuccess\r\n        }\r\n      });\r\n      delete newAction.meta;\r\n      store.dispatch(newAction);\r\n    })\r\n    .catch(console.log).finally(param => app.endLoading());\r\n}\r\n\r\nexport const setLoggedUserMiddleware = store => next => action => {\r\n  if (!action.meta || action.meta.type !== types.SET_LOGGED_USER) { return next(action); }\r\n  let newAction = Object.assign({}, action, { payload: action.payload });\r\n  delete newAction.meta;\r\n  store.dispatch(newAction);\r\n}","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\n\r\nconst POST_METHOD = \"post\"; \r\n\r\nexport const getMessagesMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_MESSAGE) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: common.commonAuthorizedHeader()\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"sendChatMessageMiddleware Response:\", data);\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n \r\nexport const storeChatMessageLocallyMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.STORE_MESSAGE) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n} \r\n\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport { initialState, rootReducer } from './reducers' \r\nimport * as userMiddleware from '../middlewares/UserMiddleware' \r\nimport * as realtimeChatMiddleware from '../middlewares/RealtimeChatMiddleware' \r\n \r\nlet store = null;\r\nexport const getStore = () => {\r\n    return store;\r\n}\r\nexport const configureStore = () => {\r\n    store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        applyMiddleware(   \r\n\r\n            //user related\r\n            userMiddleware.performLoginMiddleware,\r\n            userMiddleware.performLogoutMiddleware,  \r\n            userMiddleware.getLoggedUserMiddleware, \r\n            userMiddleware.setLoggedUserMiddleware,\r\n \r\n\r\n            /*realtime chat*/\r\n            realtimeChatMiddleware.storeChatMessageLocallyMiddleware,\r\n            realtimeChatMiddleware.getMessagesMiddleware,\r\n\r\n        )\r\n    );\r\n\r\n    return store;\r\n}\r\n   \r\n\r\nexport default configureStore;","import { AxiosResponse } from 'axios';\r\nimport { getStore } from '../redux/configureStore';\r\nexport const commonAuthorizedHeader = (contentType = 'application/json') => {\r\n  return {\r\n    'Content-Type': contentType,\r\n    'requestId': getRequestId(),//'localStorage.getItem(\"requestId\")',\r\n    'Authorization': 'Bearer ' + getLoginKey()\r\n  }\r\n};\r\nexport const commonHeader = () => {\r\n  return {\r\n    'Content-Type': 'application/json',\r\n    'requestId': getRequestId(),\r\n  }\r\n};\r\n\r\nconst LOGIN_KEY: string = \"dormitory-app-login-key-3\";\r\n\r\nexport const getRequestId = (): string => {\r\n  const store = getStore();\r\n  if (null == store) return \"\";\r\n  const state = store.getState();\r\n  return state.userState.requestId;\r\n}\r\nexport const getLoginKey = () => {\r\n  return getCookie(LOGIN_KEY);\r\n}\r\n\r\nexport const updateAccessToken = (resp: AxiosResponse) => {\r\n  if (resp && resp.headers && resp.headers['access-token']) {\r\n    const accessToken = resp.headers['access-token'];\r\n    setCookie(LOGIN_KEY, accessToken);\r\n  }\r\n}\r\nexport const setLoginKeyCookie = (cookieValue: any) => {\r\n  setCookie(LOGIN_KEY, cookieValue);\r\n}\r\nexport const setCookie = function (cname, cvalue, exdays = 1) {\r\n  var d = new Date();\r\n  d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\r\n  var expires = \"expires=\" + d.toUTCString();\r\n  document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n}\r\nexport const getCookie = function (cname) {\r\n  var name = cname + \"=\";\r\n  var decodedCookie = decodeURIComponent(document.cookie);\r\n  var ca = decodedCookie.split(';');\r\n  for (var i = 0; i < ca.length; i++) {\r\n    var c = ca[i];\r\n    while (c.charAt(0) == ' ') {\r\n      c = c.substring(1);\r\n    }\r\n    if (c.indexOf(name) == 0) {\r\n      return c.substring(name.length, c.length);\r\n    }\r\n  }\r\n  return \"\";\r\n}","\r\nimport { commonAuthorizedHeader, commonHeader } from '../middlewares/Common';\r\nimport WebResponse from '../models/commons/WebResponse';\r\nimport { updateAccessToken } from './../middlewares/Common';\r\nimport AttachmentInfo from '../models/settings/AttachmentInfo';\r\n\r\nconst axios = require('axios');\r\n\r\nexport const rejectedPromise = (message: any) => {\r\n  return new Promise((res, rej) => {\r\n    rej(message);\r\n  });\r\n}\r\n\r\nexport const emptyPromise = (defaultResponse: any) => new Promise(function (res, rej) {\r\n  res(defaultResponse);\r\n});\r\n\r\nexport const commonAjaxPostCalls = (endpoint: string, payload?: any, contentType = 'application/json') => {\r\n  const request = payload ?? {};\r\n  return new Promise<WebResponse>(function (resolve, reject) {\r\n    axios.post(endpoint, request, {\r\n      headers: commonAuthorizedHeader(contentType)\r\n    })\r\n      .then(axiosResponse => {\r\n        updateAccessToken(axiosResponse);\r\n        const response: WebResponse = axiosResponse.data;\r\n        response.rawAxiosResponse = axiosResponse;\r\n        if (response.code == \"00\") {\r\n\r\n          resolve(response);\r\n        }\r\n        else { reject(response); }\r\n      })\r\n      .catch((e: any) => {\r\n\r\n        console.error(e);\r\n        reject(e);\r\n      });\r\n  })\r\n}\r\nexport const commonAjaxPutCalls = (endpoint: string, payload?: any, contentType = 'application/json') => {\r\n  const request = payload == null ? {} : payload;\r\n  return new Promise<WebResponse>(function (resolve, reject) {\r\n    axios.put(endpoint, request, {\r\n      headers: commonAuthorizedHeader(contentType)\r\n    })\r\n      .then(axiosResponse => {\r\n        updateAccessToken(axiosResponse);\r\n        const response: WebResponse = axiosResponse.data;\r\n        response.rawAxiosResponse = axiosResponse;\r\n        if (response.code == \"00\") {\r\n\r\n          resolve(response);\r\n        }\r\n        else { reject(response); }\r\n      })\r\n      .catch((e: any) => {\r\n\r\n        console.error(e);\r\n        reject(e);\r\n      });\r\n  })\r\n}\r\nexport const commonAjaxGetCalls = (endpoint: string) => {\r\n  return new Promise<WebResponse>(function (resolve, reject) {\r\n    axios.get(endpoint, {\r\n      headers: commonAuthorizedHeader()\r\n    })\r\n      .then(axiosResponse => {\r\n        updateAccessToken(axiosResponse);\r\n        const response: WebResponse = axiosResponse.data;\r\n        response.rawAxiosResponse = axiosResponse;\r\n        if (response.code == \"00\") {\r\n\r\n          resolve(response);\r\n        }\r\n        else { reject(response); }\r\n      })\r\n      .catch((e: any) => {\r\n\r\n        console.error(e);\r\n        reject(e);\r\n      });\r\n  })\r\n}\r\nexport const commonAjaxDeleteCalls = (endpoint: string) => {\r\n  return new Promise<WebResponse>(function (resolve, reject) {\r\n    axios.delete(endpoint, {\r\n      headers: commonAuthorizedHeader()\r\n    })\r\n      .then(axiosResponse => {\r\n        updateAccessToken(axiosResponse);\r\n        const response: WebResponse = axiosResponse.data;\r\n        response.rawAxiosResponse = axiosResponse;\r\n        if (response.code == \"00\") {\r\n\r\n          resolve(response);\r\n        }\r\n        else { reject(response); }\r\n      })\r\n      .catch((e: any) => {\r\n\r\n        console.error(e);\r\n        reject(e);\r\n      });\r\n  })\r\n}\r\n\r\n\r\nexport const commonAjaxPublicPostCalls = (endpoint: string, payload?: any) => {\r\n  const request = payload == null ? {} : payload;\r\n  return new Promise<WebResponse>(function (resolve, reject) {\r\n    axios.get(endpoint, {\r\n      headers: commonHeader()\r\n    })\r\n      .then(axiosResponse => {\r\n\r\n        const response: WebResponse = axiosResponse.data;\r\n        response.rawAxiosResponse = axiosResponse;\r\n        if (response.code == \"00\") {\r\n          resolve(response);\r\n        }\r\n        else { reject(response); }\r\n      })\r\n      .catch((e: any) => {\r\n\r\n        console.error(e);\r\n        reject(e);\r\n      });\r\n  })\r\n}\r\nexport const commonAjaxPublicGetCalls = (endpoint: string) => {\r\n  return new Promise<WebResponse>(function (resolve, reject) {\r\n    axios.get(endpoint, {\r\n      headers: commonHeader()\r\n    })\r\n      .then(axiosResponse => {\r\n\r\n        const response: WebResponse = axiosResponse.data;\r\n        response.rawAxiosResponse = axiosResponse;\r\n        if (response.code == \"00\") {\r\n          resolve(response);\r\n        }\r\n        else { reject(response); }\r\n      })\r\n      .catch((e: any) => {\r\n\r\n        console.error(e);\r\n        reject(e);\r\n      });\r\n  })\r\n}\r\n\r\nexport const commonAjaxPostCallsWithBlob = (endpoint: string, payload?: any) => {\r\n  const request = payload == null ? {} : payload;\r\n  return new Promise<AttachmentInfo>(function (resolve, reject) {\r\n    axios.post(endpoint, request, {\r\n      responseType: 'blob',\r\n      headers: commonAuthorizedHeader()\r\n    })\r\n      .then(axiosResponse => {\r\n        updateAccessToken(axiosResponse);\r\n\r\n        const response: any = axiosResponse.data;\r\n        response.rawAxiosResponse = axiosResponse;\r\n        console.debug(\"axiosResponse.headers: \", axiosResponse.headers);\r\n        let contentDisposition = axiosResponse.headers[\"content-disposition\"];\r\n        let fileName = contentDisposition.split(\"filename=\")[1];\r\n        let rawSplit = fileName.split(\".\");\r\n        let extension = rawSplit[rawSplit.length - 1];\r\n        let blob = new Blob([response], { type: extension });\r\n        let url = window.URL.createObjectURL(blob);\r\n        // let a = document.createElement(\"a\");\r\n\r\n        // document.body.appendChild(a);\r\n\r\n        // a.href = url;\r\n        // a.style.display = 'none';\r\n        // a.download = fileName;\r\n        // a.click();\r\n\r\n        // window.URL.revokeObjectURL(url);\r\n        const attachmentInfo: AttachmentInfo = new AttachmentInfo();\r\n        attachmentInfo.name = fileName;\r\n        attachmentInfo.blob = blob;\r\n        attachmentInfo.url = url;\r\n        resolve(attachmentInfo);\r\n\r\n      })\r\n      .catch((e: any) => { console.error(e); reject(e); });\r\n  })\r\n}\r\nexport const commonAjaxGetCallsWithBlob = (endpoint: string) => {\r\n  return new Promise<AttachmentInfo>(function (resolve, reject) {\r\n    axios.get(endpoint, {\r\n      responseType: 'blob',\r\n      headers: commonAuthorizedHeader()\r\n    })\r\n      .then(axiosResponse => {\r\n        updateAccessToken(axiosResponse);\r\n\r\n        const response: any = axiosResponse.data;\r\n        response.rawAxiosResponse = axiosResponse;\r\n        console.debug(\"axiosResponse.headers: \", axiosResponse.headers);\r\n        let contentDisposition = axiosResponse.headers[\"content-disposition\"];\r\n        let fileName = contentDisposition.split(\"filename=\")[1];\r\n        let rawSplit = fileName.split(\".\");\r\n        let extension = rawSplit[rawSplit.length - 1];\r\n        let blob = new Blob([response], { type: extension });\r\n        let url = window.URL.createObjectURL(blob);\r\n        \r\n        const attachmentInfo: AttachmentInfo = new AttachmentInfo();\r\n        attachmentInfo.name = fileName;\r\n        attachmentInfo.blob = blob;\r\n        attachmentInfo.url = url;\r\n        resolve(attachmentInfo);\r\n\r\n      })\r\n      .catch((e: any) => { console.error(e); reject(e); });\r\n  })\r\n}","import 'reflect-metadata';\r\nimport { injectable } from 'inversify';\r\nimport Filter from '../models/commons/Filter';\r\nimport Employee from '../models/Employee';\r\nimport { contextPath } from './../constant/Url';\r\nimport { commonAjaxPostCalls } from './Promises';\r\n\r\n@injectable()\r\nexport default class MusyrifManagementService {\r\n  public employeeList(filter: Filter) {\r\n    return commonAjaxPostCalls(contextPath() + '/api/musyrifmanagement/employees', { filter });\r\n  }\r\n  activate(emp: Employee, active: boolean) {\r\n    const path = `api/admin/asrama/musyrif/set-active/${emp.id}/${active}`;\r\n    return commonAjaxPostCalls(contextPath() + path);\r\n  }\r\n}","\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\ninterface IProps{\r\n    show?:boolean, attributes?:any, iconClassName?:string, to?:string, className?:string,\r\n    style?:any, onClick?(e:any):any, children?:any\r\n}\r\nexport default class AnchorWithIcon extends Component<IProps, any>\r\n{\r\n    constructor(props: any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        if (this.props.show == false) return null;\r\n        const btnClassName = this.props.className ?? \"btn btn-outline-secondary\";\r\n        if (this.props.to) {\r\n            return <Link {...this.props.attributes} to={this.props.to} style={this.props.style} onClick={this.props.onClick} className={btnClassName} >\r\n                {this.props.iconClassName ?\r\n                    <span style={{ marginRight: this.props.children?'5px':'0px' }}><i className={this.props.iconClassName} /></span>\r\n                    :\r\n                    null}\r\n                {this.props.children}\r\n            </Link>\r\n        }\r\n        return (\r\n            <a {...this.props.attributes} tyle={this.props.style} onClick={this.props.onClick} className={btnClassName} >\r\n                {this.props.iconClassName ?\r\n                    <span style={{ marginRight: this.props.children?'5px':'0px' }}><i className={this.props.iconClassName} /></span>\r\n                    :\r\n                    null}\r\n                {this.props.children}\r\n            </a>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { resolve } from 'inversify-react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { AuthorityType } from '../../../models/AuthorityType';\r\nimport WebResponse from '../../../models/commons/WebResponse';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport Employee from './../../../models/Employee';\r\nimport MusyrifManagementService from './../../../services/MusyrifManagementService';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport AnchorWithIcon from './../../navigation/AnchorWithIcon';\r\n\r\nclass EmployeeRow extends BaseComponent<any, any> {\r\n  @resolve(MusyrifManagementService)\r\n  private musyrifManagementService: MusyrifManagementService;\r\n  constructor(props) {\r\n    super(props, true);\r\n  }\r\n  getEmployee = () => this.props.employee as Employee;\r\n  activeStatusUpdate = (response: WebResponse) => {\r\n    // this.showInfo(\"Success\");\r\n    if (this.props.onUpdated) {\r\n      this.props.onUpdated();\r\n    }\r\n  }\r\n  activateMusyrif = (active: boolean) => {\r\n    const emp = this.getEmployee();\r\n    this.commonAjax(\r\n      this.musyrifManagementService.activate,\r\n      this.activeStatusUpdate,\r\n      this.showCommonErrorAlert,\r\n      emp, active);\r\n\r\n  }\r\n  render() {\r\n    const { props } = this;\r\n    const emp = this.getEmployee();\r\n    const isMusyrif = emp.user?.hasRole(AuthorityType.ROLE_ASRAMA_MUSYRIF);\r\n    return (\r\n      <tr key={emp.id} >\r\n        <td>{props.startingNumber + 1}</td>\r\n        <td>{emp.user?.fullName}</td>\r\n        <td>{emp.user?.email}</td>\r\n        <td>{emp.nisdm}</td>\r\n        <td><i className={isMusyrif ? \"fas fa-check text-success\" : \"fas fa-times\"} /></td>\r\n        <td> {isMusyrif == true ?\r\n          <AnchorWithIcon className=\"btn btn-danger btn-sm\" onClick={(e) => this.activateMusyrif(false)} >\r\n            Nonaktifkan\r\n          </AnchorWithIcon> :\r\n          <AnchorWithIcon className=\"btn btn-success btn-sm\" onClick={(e) => this.activateMusyrif(true)} >\r\n            Jadikan musyrif\r\n          </AnchorWithIcon>\r\n        }\r\n        </td>\r\n      </tr>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapCommonUserStateToProps)(EmployeeRow))","\r\nimport React, { Component } from 'react';\r\ninterface IProps {\r\n    show?:boolean;\r\n    className?:string;\r\n    style?:any;\r\n    onClick?:any;\r\n    iconClassName?:string;\r\n    attributes?:any;\r\n}\r\nexport default class AnchorButton extends Component<IProps, any>\r\n{\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        if (this.props.show == false) return null;\r\n        const btnClassName = this.props.className??\"btn btn-outline-secondary\";\r\n        return (\r\n            <a style={this.props.style} {...this.props.attributes} onClick={this.props.onClick} className={btnClassName} >\r\n                {this.props.iconClassName?\r\n                <span style={this.props.children?{marginRight:'5px'}:{}}><i className={this.props.iconClassName}/></span>\r\n                :\r\n                null}\r\n                {this.props.children}\r\n            </a>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport AnchorButton from './AnchorButton';\r\ninterface Props {\r\n    onClick(val:boolean):void,\r\n    active:boolean,\r\n    yesLabel?:string,\r\n    noLabel?:string\r\n}\r\nexport default class ToggleButton extends Component<Props, any>{\r\n    \r\n    render() {\r\n        const props = this.props;\r\n        const active = this.props.active;\r\n        return (\r\n            <div className=\"btn-group\">\r\n                <AnchorButton className={\"btn  btn-sm \" + (active ? \"btn-dark\" : \"btn-outline-dark\")} onClick={(e) => this.props.onClick(true)} >\r\n                    {props.yesLabel??\"Yes\"}</AnchorButton>\r\n                <AnchorButton className={\"btn  btn-sm \" + (active == false ? \"btn-dark\" : \"btn-outline-dark\")} onClick={(e) => this.props.onClick(false)}  >\r\n                    {props.noLabel??\"No\"}</AnchorButton>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}","import 'reflect-metadata';\r\nimport { injectable } from 'inversify';\r\nimport Filter from '../models/commons/Filter';\r\nimport WebRequest from '../models/commons/WebRequest';\r\nimport { contextPath } from './../constant/Url';\r\nimport { commonAjaxDeleteCalls, commonAjaxGetCalls, commonAjaxPostCalls, commonAjaxPostCallsWithBlob, commonAjaxPutCalls } from './Promises';\r\ntype Menus = 'asrama' | 'management' | 'school-data';\r\n\r\n@injectable()\r\nexport default class MasterDataService {\r\n  getOne = (menu: Menus, modelName: string, id: any) => {\r\n    const endpoint = contextPath().concat(`api/admin/${menu}/${modelName}/${id}`);\r\n    return commonAjaxGetCalls(endpoint);\r\n  }\r\n  delete = (menu: Menus, modelName: string, id: any) => {\r\n    const endpoint = contextPath().concat(`api/admin/${menu}/${modelName}/${id}`);\r\n    return commonAjaxDeleteCalls(endpoint);\r\n  }\r\n  list = (request: WebRequest, menu: Menus) => {\r\n    console.log('filter', request.filter);\r\n    const endpoint = contextPath().concat(`api/admin/${menu}/${request.modelName}`);\r\n    return commonAjaxGetCalls(endpoint + Filter.queryString(request.filter));\r\n  }\r\n\r\n  insert = (modelName: string, menu: Menus, body: any) => {\r\n    const endpoint = contextPath().concat(`api/admin/${menu}/${modelName}`);\r\n    return commonAjaxPostCalls(endpoint, body);\r\n  }\r\n  update = (modelName: string, menu: Menus, id: any, body: any) => {\r\n    const endpoint = contextPath().concat(`api/admin/${menu}/${modelName}/${id}`);\r\n    return commonAjaxPutCalls(endpoint, body);\r\n  }\r\n  generateReport(request: WebRequest) {\r\n    const endpoint = contextPath().concat('api/app/report/records');\r\n    return commonAjaxPostCallsWithBlob(endpoint, request);\r\n  }\r\n}","import React, { ChangeEvent } from 'react'\r\nimport BaseComponent from './../../BaseComponent';\r\nimport Modal from './../../container/Modal';\r\nimport MasterDataService from './../../../services/MasterDataService';\r\nimport WebResponse from '../../../models/commons/WebResponse';\r\nimport WebRequest from '../../../models/commons/WebRequest';\r\nimport BasePage from './../BasePage';\r\nimport './Management.css'\r\nimport BaseEntity from './../../../models/BaseEntity';\r\nimport { resolve } from 'inversify-react';\r\n\r\nexport default abstract class BaseManagementPage<P, S> extends BasePage<P, S> {\r\n  @resolve(MasterDataService)\r\n  protected masterDataService: MasterDataService;\r\n  protected formRef: React.RefObject<Modal> = React.createRef();\r\n\r\n  emptyRecord = (): BaseEntity => {\r\n    throw new Error(\"Empty Record Method is Not Implemented....\");\r\n  }\r\n\r\n  constructor(props,\r\n              protected modelName: string,\r\n              protected menu: 'asrama' | 'management' | 'school-data',\r\n              protected overrideLoading: boolean = false) {\r\n    super(props, \"Asrama KIIS\", true);\r\n    this.modelName = modelName ?? this.modelName;\r\n  }\r\n  startLoading = (withProgress: boolean = false) => {\r\n    if (this.overrideLoading) {\r\n      // FIXME\r\n      this.setState({ loading: true } as any);\r\n    } else {\r\n      super.startLoading(withProgress);\r\n    }\r\n  }\r\n  endLoading = () => {\r\n    if (this.overrideLoading) {\r\n      // FIXME\r\n      this.setState({ loading: false } as any);\r\n    } else {\r\n      super.endLoading();\r\n    }\r\n  }\r\n  loadItems = () => {\r\n    const request: WebRequest = {\r\n      filter: this.state.filter,\r\n      modelName: this.modelName\r\n    }\r\n    this.commonAjax(\r\n      this.masterDataService.list,\r\n      this.itemsLoaded,\r\n      this.showCommonErrorAlert,\r\n      request,\r\n      this.menu\r\n    )\r\n  }\r\n  itemsLoaded = (response: WebResponse) => {\r\n    this.setState({ items: response.result.items, totalData: response.result.totalData } as any);\r\n  }\r\n\r\n  updateFilter = (e: ChangeEvent<any>) => {\r\n    const { filter } = this.state;\r\n    const { target } = e;\r\n    if (!target.value || target.value == \"\") {\r\n      return;\r\n    }\r\n    let value: any;\r\n    if (target.type == 'number' || (target.dataset && target.dataset['type'] == 'number')) {\r\n      value = parseInt(target.value);\r\n    } else {\r\n      value = target.value;\r\n    }\r\n    filter[target.name] = value;\r\n    this.setState({ filter } as any)\r\n  }\r\n  updateFieldsFilter = (e: ChangeEvent) => {\r\n    const { filter } = this.state;\r\n    const target = (e.target as any);\r\n    if (!filter.fieldsFilter) {\r\n      filter.fieldsFilter = {};\r\n    }\r\n    filter.fieldsFilter[target.name] = target.value;\r\n    this.setState({ filter } as any)\r\n  }\r\n  loadAtPage = (page: number) => {\r\n    const filter = this.state.filter;\r\n    filter.page = page;\r\n    this.setState({ filter } as any, this.loadItems);\r\n  }\r\n  updateRecordProp = (e: ChangeEvent) => {\r\n    const target = e.target as any;\r\n    const dataset = target.dataset;\r\n    let value: any;\r\n    if (dataset['type'] && dataset['type'] == 'boolean') {\r\n      value = target.value == \"true\" ? true : false;\r\n    } else {\r\n      value = target.value;\r\n    }\r\n    const record = this.state.record;\r\n    record[target.name] = value;\r\n    this.setState({ record: record } as any);\r\n  }\r\n  resetForm = (callback?: () => any) => {\r\n    this.setState({ record: this.emptyRecord() } as any, callback);\r\n  }\r\n  oneRecordLoaded = (record: any) => {\r\n    this.setState({ record } as any, () => {\r\n      if (this.formRef.current) {\r\n        this.formRef.current.showModal();\r\n      }\r\n      this.scrollTop();\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    super.componentDidMount();\r\n    this.scrollTop();\r\n    this.loadItems();\r\n  }\r\n  recordUpdated = (response: WebResponse) => {\r\n    this.resetForm(() => {\r\n      if (this.formRef.current) {\r\n        this.formRef.current.hideModal();\r\n      }\r\n      this.showInfo(\"Success Update\");\r\n      this.loadItems();\r\n    });\r\n  }\r\n  protected callApiInsert = (body: any) => {\r\n    this.commonAjax(\r\n      this.masterDataService.insert,\r\n      this.recordUpdated,\r\n      this.showCommonErrorAlert,\r\n      this.modelName,\r\n      this.menu,\r\n      body\r\n    )\r\n  }\r\n  protected callApiUpdate = (id: any, body: any) => {\r\n    this.commonAjax(\r\n      this.masterDataService.update,\r\n      this.recordUpdated,\r\n      this.showCommonErrorAlert,\r\n      this.modelName,\r\n      this.menu,\r\n      id,\r\n      body\r\n    )\r\n  }\r\n\r\n  reload = (e: any) => {\r\n    if (e && e.preventDefault) {\r\n      e.preventDefault();\r\n    }\r\n    this.loadAtPage(0);\r\n  }\r\n}","import React, { ChangeEvent } from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport Employee from './../../../models/Employee';\r\nimport { tableHeader } from './../../../utils/CollectionUtil';\r\nimport Filter from '../../../models/commons/Filter';\r\nimport FormGroup from './../../form/FormGroup';\r\nimport NavigationButtons from './../../navigation/NavigationButtons';\r\nimport EmployeeRow from './EmployeeRow';\r\nimport User from '../../../models/User';\r\nimport ToggleButton from './../../navigation/ToggleButton';\r\nimport BaseManagementPage from './BaseManagementPage';\r\nimport { AuthorityType } from '../../../models/AuthorityType';\r\nclass State {\r\n  items: Employee[] = [];\r\n  filter: Filter = new Filter();\r\n  totalData: number = 0;\r\n}\r\nclass MusyrifManagement extends BaseManagementPage<any, State> {\r\n  state = new State();\r\n  constructor(props) {\r\n    super(props, 'employees', 'management');\r\n    this.state.filter.limit = 10;\r\n    this.state.filter.orderBy = 'user.fullName';\r\n    this.state.filter.fieldsFilter = {}\r\n  }\r\n  emptyRecord = () => new Employee();\r\n  setMusyrifOnly = (musyrifOnly: boolean) => {\r\n    const filter = this.state.filter;\r\n    if (!filter.fieldsFilter) {\r\n      filter.fieldsFilter = {};\r\n    }\r\n    filter.fieldsFilter['user.authorities.name'] = musyrifOnly ? AuthorityType.ROLE_ASRAMA_MUSYRIF : AuthorityType.ROLE_EMPLOYEE;\r\n    this.setState({ filter: filter }, () => this.loadAtPage(0))\r\n  }\r\n  onEmployeeStatusUpdate = () => {\r\n    this.loadItems();\r\n  }\r\n  render() {\r\n    const { filter } = this.state;\r\n    const musyrifOnly = filter?.fieldsFilter && filter.fieldsFilter['user.authorities.name'] === AuthorityType.ROLE_ASRAMA_MUSYRIF;\r\n    return (\r\n      <div className=\"section-body container-fluid\">\r\n        <h2>Musyrif</h2>\r\n        <hr />\r\n        <form onSubmit={this.reload}>\r\n          <FormGroup label=\"Cari\">\r\n            <input name=\"user.fullName\" placeholder=\"Nama\" className=\"form-control-sm\" value={filter.fieldsFilter ? filter.fieldsFilter['user.fullName'] : ''} onChange={this.updateFieldsFilter} />\r\n          </FormGroup>\r\n          <FormGroup label=\"Jumlah Tampilan\">\r\n            <input name=\"limit\" type=\"number\" className=\"form-control-sm\" value={filter.limit ?? 5} onChange={this.updateFilter} />\r\n          </FormGroup>\r\n          <FormGroup label=\"Opsi\">\r\n            <ToggleButton active={musyrifOnly} onClick={this.setMusyrifOnly} noLabel=\"Semua pegawai\" yesLabel=\"Hanya musyrif\" />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <input className=\"btn btn-primary btn-sm\" type=\"submit\" value=\"Submit\" />\r\n          </FormGroup>\r\n        </form>\r\n        <NavigationButtons activePage={filter.page ?? 0} limit={filter.limit ?? 5} totalData={this.state.totalData}\r\n          onClick={this.loadAtPage} />\r\n        <EmployeeList onUpdated={this.onEmployeeStatusUpdate} startingNumber={(filter.page ?? 0) * (filter.limit ?? 5)} items={this.state.items} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\nconst EmployeeList = (props: { onUpdated: () => void, startingNumber: number, items: Employee[] }) => {\r\n  const items = props.items;\r\n  return (\r\n    <div className=\"container-fluid\" style={{ overflow: 'auto' }}>\r\n      <table className=\"table table-striped\" >\r\n        {tableHeader(\"No\", \"Nama\", \"Email\", \"NIP\", \"Role: Musyrif\", \"Opsi\")}\r\n        <tbody>\r\n          {items.map((emp, i) => {\r\n            if (emp.user) {\r\n              emp.user = User.clone(emp.user);\r\n            }\r\n            return (\r\n              <EmployeeRow onUpdated={props.onUpdated} employee={emp} startingNumber={props.startingNumber + i} key={emp.id} />\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapCommonUserStateToProps\r\n  )(MusyrifManagement)\r\n)","import React from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport BasePage from './../BasePage';\r\n\r\nclass ManagementMain extends BasePage<any, any> {\r\n  constructor(props) {\r\n    super(props, \"Management\", true);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid section-body\">\r\n        <h2>Halaman Manajemen</h2>\r\n        <div className=\"alert alert-info\">\r\n          Welcome, <strong>{this.getLoggedUser()?.fullName}</strong>\r\n          <hr />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapCommonUserStateToProps\r\n  )(ManagementMain)\r\n)","\r\nimport BaseEntity from './BaseEntity';\r\nimport RulePoint from './RulePoint';\r\nexport default class Category extends BaseEntity\r\n{\r\n    name?:string;\r\n    description?:string;\r\n\r\n    points:RulePoint[] | undefined;\r\n\r\n    static clone = (object:any) : Category => {\r\n        return Object.assign(new Category, object);\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nimport AnchorButton from '../navigation/AnchorButton';\r\nclass IState {\r\n    show:boolean = true\r\n}\r\ninterface IProps {\r\n    toggleable?:boolean, show?:boolean, title?:string, style?:any, footerContent?:any,showFooter?:boolean\r\n}\r\nexport default class Modal extends Component<IProps, IState> {\r\n    state:IState = new IState();\r\n    constructor(props: any) {\r\n        super(props);\r\n    }\r\n    hideModal = () => {\r\n        this.setState({show:false});\r\n    }\r\n    showModal = () => {\r\n        this.setState({show:true});\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.show == false) { this.setState({show:false}); }\r\n    }\r\n    render() {\r\n    //    if (this.props.show == false) { return null; }\r\n        const title = this.props.title?? \"Title\"; \r\n        if (this.props.toggleable == true && this.state.show == false) {\r\n            return (\r\n                <AnchorButton style={{marginBottom:'10px'}} onClick={this.showModal} iconClassName=\"fas fa-angle-down\" >Show {title}</AnchorButton>\r\n            )\r\n        }\r\n        const props = (({ style, show, footerContent, toggleable, ...props }) => props)(this.props) // remove b and c\r\n        return (\r\n            <div {...props} className=\"modal-content \" style={{...this.props.style, marginBottom:'10px'}}>\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">{title}</h5>\r\n                    {this.props.toggleable?\r\n                    <button type=\"button\" className=\"btn btn-sm\" onClick={this.hideModal} aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\">\r\n                            <i className='fas fa-times'/>\r\n                        </span>\r\n                    </button>\r\n                    :\r\n                    null}\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    {this.props.children}\r\n                </div>\r\n                {this.props.footerContent || this.props.showFooter == true?\r\n                <div className=\"modal-footer\">\r\n                    {this.props.footerContent}\r\n                </div>\r\n                :null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React from 'react'\r\nimport BaseComponent from './../../BaseComponent';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport AnchorWithIcon from './../../navigation/AnchorWithIcon';\r\nimport BaseEntity from './../../../models/BaseEntity';\r\nimport MasterDataService from './../../../services/MasterDataService';\r\nimport WebRequest from '../../../models/commons/WebRequest';\r\nimport WebResponse from '../../../models/commons/WebResponse';\r\nimport { resolve } from 'inversify-react';\r\n\r\nclass EditDeleteButton extends BaseComponent<any, any> {\r\n  @resolve(MasterDataService)\r\n  private masterDataService: MasterDataService;\r\n  constructor(props) {\r\n    super(props, true);\r\n  }\r\n\r\n  get modelName(): string { return this.props.modelName; }\r\n  getRecord = (): BaseEntity => {\r\n    const rec = this.props.record;\r\n    if (!rec) {\r\n      alert(\"this.props.record undefined\");\r\n      return {};\r\n    }\r\n    return rec;\r\n  }\r\n  recordLoaded = (response: WebResponse) => {\r\n    if (this.props.recordLoaded) {\r\n      this.props.recordLoaded(response.result);\r\n    }\r\n  }\r\n  recordLoadedForDetail = (response: WebResponse) => {\r\n    if (this.props.recordLoadedForDetail) {\r\n      this.props.recordLoadedForDetail(response.result);\r\n    }\r\n  }\r\n  recordDeleted = (response: WebResponse) => {\r\n    this.showInfo(\"Record has been deleted\");\r\n    if (this.props.recordDeleted) {\r\n      this.props.recordDeleted(response.result);\r\n    }\r\n  }\r\n  get loadRecordRequest() {\r\n    const req: WebRequest = {\r\n      record_id: this.getRecord().id,\r\n      modelName: this.modelName\r\n    }\r\n    return req;\r\n  }\r\n  loadRecord = () => {\r\n\r\n    this.commonAjax(\r\n      this.masterDataService.getOne,\r\n      this.recordLoaded,\r\n      this.showCommonErrorAlert,\r\n      this.props.menu,\r\n      this.props.modelName,\r\n      this.loadRecordRequest.record_id\r\n    )\r\n  }\r\n  loadRecordForDetail = () => {\r\n\r\n    this.commonAjax(\r\n      this.masterDataService.getOne,\r\n      this.recordLoadedForDetail,\r\n      this.showCommonErrorAlert,\r\n      this.props.menu,\r\n      this.props.modelName,\r\n      this.loadRecordRequest.record_id\r\n    )\r\n  }\r\n  deleteRecord = () => {\r\n    this.showConfirmationDanger(\"Delete record?\")\r\n      .then(ok => {\r\n        if (!ok) return;\r\n        this.commonAjax(\r\n          this.masterDataService.delete,\r\n          this.recordDeleted,\r\n          this.showCommonErrorAlert,\r\n          this.props.menu,\r\n          this.props.modelName,\r\n          this.loadRecordRequest.record_id\r\n        )\r\n      })\r\n  }\r\n  hasType = (type: string): boolean => {\r\n    if (!this.props.types) return false;\r\n    return (this.props.types as string[]).indexOf(type) >= 0;\r\n  }\r\n  render() {\r\n    const types: string[] | undefined = this.props.types ?? undefined;\r\n    return (\r\n      <div className=\"btn-group\">\r\n        {this.hasType('detail') ?\r\n          <AnchorWithIcon onClick={this.loadRecordForDetail} iconClassName=\"fas fa-info-circle\" className=\"btn btn-info btn-sm\" />\r\n          :\r\n          null}\r\n        {types === undefined || this.hasType('edit') ?\r\n          <AnchorWithIcon onClick={this.loadRecord} iconClassName=\"fas fa-edit\" className=\"btn btn-warning btn-sm\" />\r\n          :\r\n          null}\r\n        {types === undefined || this.hasType('delete') ?\r\n          <AnchorWithIcon onClick={this.deleteRecord} iconClassName=\"fas fa-times\" className=\"btn btn-danger btn-sm\" />\r\n          :\r\n          null}\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapCommonUserStateToProps\r\n  )(EditDeleteButton)\r\n)","\r\nimport React, { ChangeEvent } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Filter from '../../../models/commons/Filter';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport BaseEntity from './../../../models/BaseEntity';\r\nimport Category from './../../../models/Category';\r\nimport { tableHeader } from './../../../utils/CollectionUtil';\r\nimport Modal from './../../container/Modal';\r\nimport FormGroup from './../../form/FormGroup';\r\nimport NavigationButtons from './../../navigation/NavigationButtons';\r\nimport BaseManagementPage from './BaseManagementPage';\r\nimport EditDeleteButton from './EditDeleteButton';\r\nclass State {\r\n  items: Category[] = [];\r\n  filter: Filter = new Filter();\r\n  totalData: number = 0;\r\n  record: Category = new Category();\r\n}\r\nconst MODEL_NAME = 'rule-categories';\r\nconst MENU = 'asrama';\r\nclass CategoryManagement extends BaseManagementPage<any, State> {\r\n  state = new State();\r\n  constructor(props) {\r\n    super(props, MODEL_NAME, MENU);\r\n    this.state.filter.limit = 10;\r\n    this.state.filter.orderBy = 'name';\r\n  }\r\n\r\n  onSubmit = () => {\r\n    // console.debug(\"RECORD: \", this.state.record);\r\n    this.showConfirmation(\"Submit Data?\")\r\n      .then(ok => {\r\n        if (!ok) return;\r\n        if (this.state.record.id ?? 0 > 0) {\r\n          this.callApiUpdate(this.state.record.id, this.state.record);\r\n        } else {\r\n          this.callApiInsert(this.state.record);\r\n        }\r\n      })\r\n  }\r\n\r\n  emptyRecord = (): BaseEntity => new Category();\r\n  render() {\r\n    const filter: Filter = this.state.filter;\r\n    return (\r\n      <div className=\"container-fluid section-body\">\r\n        <h2>Kategori Pelanggaran</h2>\r\n        <hr />\r\n        <RecordForm formRef={this.formRef} resetForm={this.resetForm} onSubmit={this.onSubmit} record={this.state.record} updateRecordProp={this.updateRecordProp} />\r\n        <form onSubmit={this.reload}>\r\n          <FormGroup label=\"Cari\">\r\n            <input name=\"name\" placeholder=\"nama\" className=\"form-control-sm\" value={filter.fieldsFilter ? filter.fieldsFilter['name'] : \"\"} onChange={this.updateFieldsFilter} />\r\n          </FormGroup>\r\n          <FormGroup label=\"Jumlah Tampilan\">\r\n            <input name=\"limit\" type=\"number\" className=\"form-control-sm\" value={filter.limit ?? 5} onChange={this.updateFilter} />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <input className=\"btn btn-primary btn-sm\" type=\"submit\" value=\"Submit\" />\r\n          </FormGroup>\r\n        </form>\r\n        <NavigationButtons activePage={filter.page ?? 0} limit={filter.limit ?? 5} totalData={this.state.totalData}\r\n          onClick={this.loadAtPage} />\r\n        <ItemsList\r\n          recordLoaded={this.oneRecordLoaded}\r\n          recordDeleted={this.loadItems}\r\n          startingNumber={(filter.page ?? 0) * (filter.limit ?? 10)} items={this.state.items} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\nconst ItemsList = (props: { startingNumber: number, items: Category[], recordLoaded(item: any), recordDeleted() }) => {\r\n\r\n  return (\r\n    <div style={{ overflow: 'auto' }}>\r\n      <table className=\"table table-striped\">\r\n        {tableHeader(\"No\", \"Nama\", \"Deskripsi\", \"Opsi\")}\r\n        <tbody>\r\n          {props.items.map((item, i) => {\r\n\r\n            return (\r\n              <tr key={\"category-\" + i}>\r\n                <td>{i + 1 + props.startingNumber}</td>\r\n                <td>{item.name}</td>\r\n                <td>{item.description}</td>\r\n                <td>\r\n                  <EditDeleteButton\r\n                    recordLoaded={props.recordLoaded}\r\n                    recordDeleted={props.recordDeleted}\r\n                    record={item}\r\n                    modelName={MODEL_NAME}\r\n                    menu={MENU}\r\n                  />\r\n                </td>\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\nconst RecordForm = (props: { formRef: React.RefObject<Modal>, updateRecordProp(e: ChangeEvent): any, resetForm(): any, onSubmit(): any, record: Category }) => {\r\n\r\n  return (\r\n    <form className=\"record-form mb-3\" onSubmit={(e) => { e.preventDefault(); props.onSubmit() }}>\r\n      <Modal show={false} ref={props.formRef} toggleable={true} title=\"Record Form\" >\r\n        <FormGroup label=\"Nama\"><input required value={props.record.name ?? \"\"} onChange={props.updateRecordProp} className=\"form-control\" name=\"name\" /></FormGroup>\r\n        <FormGroup label=\"Deskripsi\">\r\n          <textarea required className=\"form-control\" name=\"description\" onChange={props.updateRecordProp} value={props.record.description ?? \"\"} />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-sm mr-2\" />\r\n          <input type=\"reset\" className=\"btn btn-secondary btn-sm\" onClick={(e) => props.resetForm()} />\r\n        </FormGroup>\r\n      </Modal>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapCommonUserStateToProps\r\n  )(CategoryManagement)\r\n)","\r\nimport BaseEntity from './BaseEntity';\r\nimport Category from './Category';\r\nexport default class RulePoint extends BaseEntity {\r\n    ruleCategoryName?: string;\r\n    ruleCategoryId?: any;\r\n    name?: string;\r\n    description?: string;\r\n    point: number = 1;\r\n    droppable?: boolean = true;\r\n}","import React, { ChangeEvent } from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport RulePoint from './../../../models/RulePoint';\r\nimport Filter from '../../../models/commons/Filter';\r\nimport Modal from './../../container/Modal';\r\nimport FormGroup from './../../form/FormGroup';\r\nimport WebRequest from '../../../models/commons/WebRequest';\r\nimport NavigationButtons from './../../navigation/NavigationButtons';\r\nimport EditDeleteButton from './EditDeleteButton';\r\nimport { tableHeader } from './../../../utils/CollectionUtil';\r\nimport BaseManagementPage from './BaseManagementPage';\r\nimport Category from './../../../models/Category';\r\nimport WebResponse from '../../../models/commons/WebResponse';\r\nimport AnchorWithIcon from './../../navigation/AnchorWithIcon';\r\nclass State {\r\n  items: RulePoint[] = [];\r\n  filter: Filter = new Filter();\r\n  totalData: number = 0;\r\n  record: RulePoint = new RulePoint();\r\n  categories: Category[] = [];\r\n  categoriesLoaded: boolean = false;\r\n\r\n}\r\nconst MODEL_NAME = 'rule-points';\r\nconst MENU = 'asrama';\r\n\r\nclass RulePointManagement extends BaseManagementPage<any, State> {\r\n  state = new State();\r\n  constructor(props) {\r\n    super(props, MODEL_NAME, MENU);\r\n    this.state.filter.limit = 10;\r\n    this.state.filter.orderBy = 'name'\r\n  }\r\n\r\n  onSubmit = () => {\r\n    // console.debug(\"RECORD: \", this.state.record);\r\n    this.showConfirmation(\"Submit Data?\")\r\n      .then(ok => {\r\n        if (!ok) return;\r\n        if (this.state.record.id ?? 0 > 0) {\r\n          this.callApiUpdate(this.state.record.id, this.state.record);\r\n        } else {\r\n          this.callApiInsert(this.state.record);\r\n        }\r\n      })\r\n  }\r\n  componentDidMount() {\r\n    this.validateLoginStatus(() => {\r\n      this.scrollTop();\r\n      this.loadCategories();\r\n    });\r\n  }\r\n  categoriesLoaded = (response: WebResponse) => {\r\n    this.setState({ categories: response.result.items, categoriesLoaded: true }, () => { this.resetForm(); this.loadItems() });\r\n  }\r\n  categoriesNotLoaded = (response: WebResponse) => {\r\n    this.setState({ categories: [], categoriesLoaded: true }, this.resetForm);\r\n  }\r\n  loadCategories = () => {\r\n    const filter: Filter = new Filter();\r\n    filter.limit = 0;\r\n    const req: WebRequest = {\r\n      filter: filter,\r\n      modelName: 'rule-categories'\r\n    }\r\n    this.commonAjax(\r\n      this.masterDataService.list,\r\n      this.categoriesLoaded,\r\n      this.categoriesNotLoaded,\r\n      req,\r\n      MENU\r\n    );\r\n  }\r\n\r\n  emptyRecord = (): any => {\r\n    const record = new RulePoint();\r\n    if (this.state.categories.length > 0) {\r\n      record.ruleCategoryId = this.state.categories[0].id;\r\n    }\r\n    return record;\r\n  }\r\n\r\n  render() {\r\n    const filter: Filter = this.state.filter;\r\n    const categories: Category[] = this.state.categories;\r\n    if (this.state.categoriesLoaded && categories.length == 0) {\r\n      return (\r\n        <div className=\"container-fluid section-body\">\r\n          <h2>Kategori pelanggaran belum ada</h2>\r\n        </div>\r\n      )\r\n    }\r\n    const selectedCategoryId = filter.fieldsFilter && filter.fieldsFilter['category_id'] ? filter.fieldsFilter['category_id'] : \"ALL\";\r\n    return (\r\n      <div className=\"container-fluid section-body\">\r\n        <h2>Poin Pelanggaran</h2>\r\n        <hr />\r\n        <RecordForm categories={categories} reloadCategories={this.loadCategories} formRef={this.formRef} resetForm={this.resetForm} onSubmit={this.onSubmit} record={this.state.record} updateRecordProp={this.updateRecordProp} />\r\n        <form onSubmit={this.reload}>\r\n          <FormGroup label=\"Cari\">\r\n            <div className=\"input-group\">\r\n              <input name=\"name\" placeholder=\"nama\" className=\"form-control-sm\" value={filter.fieldsFilter ? filter.fieldsFilter['name'] : \"\"} onChange={this.updateFieldsFilter} />\r\n              <select value={selectedCategoryId} className=\"form-control-sm\" name=\"category_id\" onChange={this.updateFieldsFilter} >\r\n                {[{ id: \"\", name: \"Semua Kategori\" }, ...categories].map((c) => {\r\n                  return <option key={\"filter-cat-\" + c.id} value={c.id}>{c.name}</option>\r\n                })}\r\n              </select>\r\n              <div className=\"input-group-append\">\r\n                <AnchorWithIcon className=\"btn btn-sm\" iconClassName=\"fas fa-redo\" onClick={this.loadCategories}>Reload</AnchorWithIcon>\r\n              </div>\r\n            </div>\r\n          </FormGroup>\r\n          <FormGroup label=\"Jumlah Tampilan\">\r\n            <input type=\"number\" name=\"limit\" className=\"form-control-sm\" value={filter.limit ?? 5} onChange={this.updateFilter} />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <input className=\"btn btn-primary btn-sm\" type=\"submit\" value=\"Submit\" />\r\n          </FormGroup>\r\n        </form>\r\n        <NavigationButtons activePage={filter.page ?? 0} limit={filter.limit ?? 5} totalData={this.state.totalData}\r\n          onClick={this.loadAtPage} />\r\n        <ItemsList\r\n          recordLoaded={this.oneRecordLoaded}\r\n          recordDeleted={this.loadItems}\r\n          startingNumber={(filter.page ?? 0) * (filter.limit ?? 10)} items={this.state.items} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\nconst ItemsList = (props: { startingNumber: number, items: RulePoint[], recordLoaded(item: any), recordDeleted() }) => {\r\n\r\n  return (\r\n    <div style={{ overflow: 'auto' }}>\r\n      <table className=\"table table-striped\">\r\n        {tableHeader(\"No\", \"Nama\", \"Poin\", \"Deskripsi\", \"Kategori\", \"Pemutihan\", \"Opsi\")}\r\n        <tbody>\r\n          {props.items.map((item, i) => {\r\n            return (\r\n              <tr key={`RulePoint-${i}`}>\r\n                <td>{i + 1 + props.startingNumber}</td>\r\n                <td>{item.name}</td>\r\n                <td>{item.point}</td>\r\n                <td>{item.description}</td>\r\n                <td>{item.ruleCategoryName}</td>\r\n                <td>{item.droppable ? \"Ya\" : \"TIdak\"}</td>\r\n                <td>\r\n                  <EditDeleteButton\r\n                    recordLoaded={props.recordLoaded}\r\n                    recordDeleted={props.recordDeleted}\r\n                    record={item}\r\n                    modelName={MODEL_NAME}\r\n                    menu={MENU}\r\n                  />\r\n                </td>\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\nconst RecordForm = (props: {\r\n  categories: Category[],\r\n  formRef: React.RefObject<Modal>,\r\n  updateRecordProp(e: ChangeEvent): any,\r\n  resetForm(): any, onSubmit(): any,\r\n  record: RulePoint, reloadCategories(): any\r\n}) => {\r\n\r\n  return (\r\n    <form className=\"record-form mb-3\" onSubmit={(e) => { e.preventDefault(); props.onSubmit() }}>\r\n      <Modal show={false} ref={props.formRef} toggleable={true} title=\"Record Form\" >\r\n        <FormGroup label=\"Nama\"><input value={props.record.name ?? \"\"} onChange={props.updateRecordProp} className=\"form-control \" name=\"name\" required /></FormGroup>\r\n        <FormGroup label=\"Pengurangan Poin\"><input type=\"number\" value={props.record.point} onChange={props.updateRecordProp} className=\"form-control \" name=\"point\" required /></FormGroup>\r\n        <FormGroup label=\"Deskripsi\">\r\n          <textarea className=\"form-control\" name=\"description\" onChange={props.updateRecordProp} value={props.record.description ?? \"\"} />\r\n        </FormGroup>\r\n        <FormGroup label=\"Dapat diputihkan\">\r\n          <select className=\"form-control-sm\" data-type=\"boolean\" name=\"droppable\" onChange={props.updateRecordProp} value={props.record.droppable == true ? \"true\" : \"false\"} required>\r\n            <option value={\"true\"} >Ya</option>\r\n            <option value={\"false\"}>Tidak</option>\r\n          </select>\r\n        </FormGroup>\r\n        <FormGroup label=\"Category\">\r\n          <div className=\"input-group\">\r\n            <select required value={props.record.ruleCategoryId} className=\"form-control-sm\" name=\"ruleCategoryId\" onChange={props.updateRecordProp} >\r\n              {props.categories.map((c) => {\r\n                return <option key={\"cat-\" + c.id} value={c.id}>{c.name}</option>\r\n              })}\r\n            </select>\r\n            <div className=\"input-group-append\">\r\n              <AnchorWithIcon className=\"btn btn-sm\" iconClassName=\"fas fa-redo\" onClick={props.reloadCategories}>Reload</AnchorWithIcon>\r\n            </div>\r\n          </div>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-sm mr-2\" />\r\n          <input value=\"Reset\" type=\"reset\" className=\"btn btn-secondary btn-sm\" onClick={(e) => props.resetForm()} />\r\n        </FormGroup>\r\n      </Modal>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapCommonUserStateToProps\r\n  )(RulePointManagement)\r\n)\r\n","import 'reflect-metadata';\r\nimport { injectable } from 'inversify';\r\nimport { contextPath } from '../constant/Url';\r\nimport WebResponse from '../models/commons/WebResponse';\r\nimport Filter from './../models/commons/Filter';\r\nimport WebRequest from './../models/commons/WebRequest';\r\nimport MedicalRecord from './../models/MedicalRecord';\r\nimport PointRecord from './../models/PointRecord';\r\nimport AttachmentInfo from './../models/settings/AttachmentInfo';\r\nimport { commonAjaxGetCalls, commonAjaxGetCallsWithBlob, commonAjaxPostCalls } from './Promises';\r\n\r\n@injectable()\r\nexport default class StudentService {\r\n  public updatePointRecord(req: PointRecord, attachmentInfo?: AttachmentInfo, removeImage = false) {\r\n    if (attachmentInfo) {\r\n      attachmentInfo.data = '';\r\n    }\r\n    const data = new FormData();\r\n    data.append('id', req.id?.toString() ?? '');\r\n    data.append('day', req.day?.toString() ?? '');\r\n    data.append('month', req.month?.toString() ?? '');\r\n    data.append('year', req.year?.toString() ?? '');\r\n    data.append('time', new Date(req.time ?? new Date()).getTime().toString());\r\n    data.append('description', req.description ?? '');\r\n    data.append('location', req.location ?? '');\r\n    data.append('rulePointId', req.rulePointId?.toString() ?? '');\r\n    data.append('classMemberId', req.classMemberId?.toString() ?? '');\r\n    data.append('removeImage', removeImage ? 'true' : 'false');\r\n    const imgFile = attachmentInfo?.file;\r\n    if (imgFile)\r\n      data.append('image', imgFile);\r\n    return commonAjaxPostCalls(contextPath('api/asrama/student-points/update'), data, 'multipart/form-data');\r\n  }\r\n  public insertPointRecord(req: PointRecord, attachmentInfo?: AttachmentInfo) {\r\n    if (attachmentInfo) {\r\n      attachmentInfo.data = '';\r\n    }\r\n    const data = new FormData();\r\n    data.append('day', req.day?.toString() ?? '');\r\n    data.append('month', req.month?.toString() ?? '');\r\n    data.append('year', req.year?.toString() ?? '');\r\n    data.append('time', new Date(req.time ?? new Date()).getTime().toString());\r\n    data.append('description', req.description ?? '');\r\n    data.append('location', req.location ?? '');\r\n    data.append('rulePointId', req.rulePointId?.toString() ?? '');\r\n    data.append('classMemberId', req.classMemberId?.toString() ?? '');\r\n    const imgFile = attachmentInfo?.file;\r\n    if (imgFile)\r\n      data.append('image', imgFile);\r\n    return commonAjaxPostCalls(contextPath('api/asrama/student-points/insert'), data, 'multipart/form-data');\r\n  }\r\n  public getClasses() {\r\n    return commonAjaxGetCalls(contextPath('api/admin/school-data/classlevels'));\r\n  }\r\n  public getStudentWithPoints(filter: Filter) {\r\n    const q = Filter.queryString(filter);\r\n    return commonAjaxGetCalls(contextPath(`api/asrama/student-points${q}`));\r\n  }\r\n  public getCategories() {\r\n    return commonAjaxGetCalls(contextPath('api/admin/asrama/rule-categories?order=name'));\r\n  }\r\n  public followUp = (pointRecordId: number): Promise<WebResponse> => {\r\n    return commonAjaxPostCalls(contextPath('api/dormitorymanagement/followup'), {\r\n      record_id: pointRecordId\r\n    });\r\n  }\r\n  public getFollowUpReminders = (): Promise<WebResponse> => {\r\n    return commonAjaxPostCalls(contextPath() + 'api/dormitorymanagement/followupreminders', {});\r\n  }\r\n  public getRaporData = (classId: string): Promise<WebResponse> => {\r\n    return commonAjaxGetCalls(contextPath() + `api/asrama/report/load-data/${classId}`);\r\n  }\r\n  public downloadRaporData = (classId: string): Promise<any> => {\r\n    // return commonAjaxPostCallsWithBlob(endpoint, request);\r\n    return commonAjaxGetCallsWithBlob(contextPath() + `api/asrama/report/load-data-xls/${classId}`);\r\n  }\r\n\r\n\r\n  public submitMedicalRecord = (record: MedicalRecord) => {\r\n    return commonAjaxPostCalls(contextPath() + 'api/dormitorymanagement/submitmedicalrecord', record)\r\n  }\r\n  public loadMonthlyMedicalRecord = (studentId: number, month: number, year: number) => {\r\n    const req: WebRequest = {\r\n      filter: {\r\n        fieldsFilter: { student_id: studentId }\r\n      }\r\n    }\r\n    return commonAjaxPostCalls(contextPath() + 'api/dormitorymanagement/monthlymedicalrecord', req)\r\n  }\r\n\r\n  public setPointDropped = (id: number, dropped: boolean) => {\r\n    const path = dropped ? contextPath('api/asrama/student-points/drop-points') : contextPath('api/asrama/student-points/undrop-points');\r\n    return commonAjaxPostCalls(`${path}?id=${id}`);\r\n  }\r\n\r\n  /**\r\n   * pemutihan\r\n   * @param ids \r\n   */\r\n  public dropAll = (ids: number[]) => {\r\n    const path = contextPath('api/asrama/student-points/drop-points');\r\n    const q = '?' + ids.map(id => `id=${id}`).join('&');\r\n    return commonAjaxPostCalls(path + q);\r\n  }\r\n  /**\r\n   * reset pemutihan\r\n   * @param ids \r\n   */\r\n  public undropAll = (ids: number[]) => {\r\n    const path = contextPath('api/asrama/student-points/undrop-points');\r\n    const q = '?' + ids.map(id => `id=${id}`).join('&');\r\n    return commonAjaxPostCalls(path + q);\r\n  }\r\n}\r\n","import React, { ChangeEvent } from 'react';\nimport Filter from '../../models/commons/Filter';\nimport { MONTHS } from './../../utils/DateUtil';\n\nconst days = (): number[] => {\n  const arr: number[] = [];\n  for (let i = 1; i <= 31; i++) {\n    arr.push(i);\n  }\n  return arr;\n}\nconst FilterPeriod = (props: {\n  date: Date,\n  onChange(e: ChangeEvent<HTMLSelectElement | HTMLInputElement>): any,\n  disableDay?: boolean,\n}) => {\n  const { date, disableDay } = props;\n  return (\n    <React.Fragment>\n      {\n        disableDay !== true &&\n        <select data-type=\"number\" className=\"form-control-sm\" name=\"day\" value={date.getDate()} onChange={props.onChange}>\n          {days().map((d) => {\n            return <option key={`td-${d}`} value={d}>{d == 0 ? 'day' : d}</option>\n          })}\n        </select>\n      }\n      <select data-type=\"number\" className=\"form-control-sm\" name=\"month\" value={date.getMonth()} onChange={props.onChange}>\n        {MONTHS.map((m, i) => {\n          return <option key={`tm-${i}`} value={i}>{m}</option>\n        })}\n      </select>\n      <input name=\"year\" placeholder=\"year\" className=\"form-control-sm\" value={date.getFullYear()} onChange={props.onChange} />\n    </React.Fragment>\n  )\n}\n\nexport default FilterPeriod;","import { resolve } from 'inversify-react';\r\nimport React, { ChangeEvent } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport Class from '../../../models/Class';\r\nimport Filter from '../../../models/commons/Filter';\r\nimport WebResponse from '../../../models/commons/WebResponse';\r\nimport Student from '../../../models/Student';\r\nimport StudentService from '../../../services/StudentService';\r\nimport { tableHeader } from '../../../utils/CollectionUtil';\r\nimport { getInputReadableDate } from '../../../utils/DateUtil';\r\nimport FilterPeriod from '../../form/FilterPeriod';\r\nimport FormGroup from '../../form/FormGroup';\r\nimport Spinner from '../../loader/Spinner';\r\nimport AnchorWithIcon from '../../navigation/AnchorWithIcon';\r\nimport NavigationButtons from '../../navigation/NavigationButtons';\r\nimport ToggleButton from '../../navigation/ToggleButton';\r\nimport BaseComponent from './../../BaseComponent';\r\n\r\nclass State {\r\n  items: Student[] = [];\r\n  classes: Class[] = [];\r\n  totalData = 0;\r\n  filter = new Filter();\r\n  loading = false;\r\n}\r\nconst now = new Date();\r\nconst defaultFieldsFilter = {\r\n  'classLevel.id=': '',\r\n  'with_point_record': 'false',\r\n  'time>=d': getInputReadableDate(new Date(now.getFullYear(), 0, 1)),\r\n  'time<=d': getInputReadableDate(now)\r\n};\r\nclass StudentList extends BaseComponent<any, State> {\r\n  readonly state = new State();\r\n  @resolve(StudentService)\r\n  private studentService: StudentService;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state.filter.limit = 10;\r\n    this.state.filter.orderBy = 'student.user.fullName';\r\n    this.state.filter.fieldsFilter = defaultFieldsFilter;\r\n  }\r\n  itemsLoaded = (response: WebResponse) => {\r\n    this.setState({ items: response.result.items, totalData: response.result.totalData });\r\n  }\r\n  classesLoaded = (response: WebResponse) => {\r\n    this.setState({ classes: response.result }, this.loadItems);\r\n  }\r\n  loadItems = () => {\r\n    this.commonAjax(\r\n      this.studentService.getStudentWithPoints,\r\n      this.itemsLoaded,\r\n      this.showCommonErrorAlert,\r\n      this.state.filter\r\n    )\r\n  }\r\n  loadAtPage = (page: number) => {\r\n    const { filter } = this.state;\r\n    filter.page = page;\r\n    this.setState({ filter }, this.loadItems);\r\n  }\r\n  loadClasses = () => {\r\n    this.commonAjax(\r\n      this.studentService.getClasses,\r\n      this.classesLoaded,\r\n      this.showCommonErrorAlert,\r\n    )\r\n  }\r\n  componentDidMount() {\r\n    this.validateLoginStatus(() => {\r\n      this.scrollTop();\r\n      this.loadClasses();\r\n    })\r\n  }\r\n  updatePeriodFilter = (e: ChangeEvent<HTMLInputElement | HTMLSelectElement>, field: 'time<=d' | 'time>=d') => {\r\n    const { filter } = this.state;\r\n    Filter.updatePeriodFilter(filter, e, field);\r\n    this.setState({ filter });\r\n  }\r\n  updateFieldFilter = (e: ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\r\n    const { filter } = this.state;\r\n    filter.fieldsFilter[e.target.name] = e.target.value;\r\n    this.setState({ filter });\r\n  }\r\n  updateSelectedClass = (e: ChangeEvent) => {\r\n    const target = e.target as HTMLSelectElement;\r\n    const { filter } = this.state;\r\n    if (!filter.fieldsFilter) {\r\n      filter.fieldsFilter = {};\r\n    }\r\n    filter.fieldsFilter['classLevel.id='] = target.value;\r\n    this.setState({ filter });\r\n  }\r\n  inputPage = (type: string, s: Student) => {\r\n    switch (type) {\r\n      case 'pointrecord':\r\n        this.inputPoint(s);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  inputPoint = (student: Student) => {\r\n    this.props.history.push({\r\n      pathname: \"/asrama/inputpoint\",\r\n      state: { student }\r\n    })\r\n  }\r\n  updateWithPointRecord = (enable: boolean) => {\r\n    const { filter } = this.state;\r\n    filter.fieldsFilter['with_point_record'] = `${enable}`;\r\n    this.setState({ filter });\r\n  }\r\n  updateFilter = (e: ChangeEvent<any>) => {\r\n    const { filter } = this.state;\r\n    const { target } = e;\r\n    if (!target.value || target.value == \"\") {\r\n      return;\r\n    }\r\n    let value: any;\r\n    if (target.type == 'number' || (target.dataset && target.dataset['type'] == 'number')) {\r\n      value = parseInt(target.value);\r\n    } else {\r\n      value = target.value;\r\n    }\r\n    filter[target.name] = value;\r\n    this.setState({ filter })\r\n  }\r\n  onSubmit = (e) => { e.preventDefault(); this.loadAtPage(0) }\r\n  render() {\r\n    const { filter, classes, loading, totalData } = this.state;\r\n    const { fieldsFilter } = filter;\r\n    const defaultClass = { id: '', level: 'Semua Kelas' } as Class;\r\n    const selectedClassId = fieldsFilter['classLevel.id='] ?? '';\r\n    const showPointRecord = fieldsFilter['with_point_record'] === `${true}`;\r\n    return (\r\n      <div className=\"container-fluid section-body\">\r\n        <h2>Siswa</h2>\r\n        <hr />\r\n        <form onSubmit={this.onSubmit}>\r\n          <FormGroup label=\"Cari\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                name=\"student.user.fullName\"\r\n                placeholder=\"Nama\"\r\n                className=\"form-control-sm\"\r\n                value={fieldsFilter['student.user.fullName'] ?? ''}\r\n                onChange={this.updateFieldFilter}\r\n              />\r\n              <select\r\n                value={selectedClassId}\r\n                onChange={this.updateFieldFilter}\r\n                className=\"form-control-sm\"\r\n                name=\"classLevel.id=\"\r\n              >\r\n                {[defaultClass, ...classes].map((c) => {\r\n                  return <option key={`class_${c.id}`} value={c.id}>{c.level}{c.letter} - {c.schoolName}</option>\r\n                })}\r\n              </select>\r\n            </div>\r\n          </FormGroup>\r\n          <FormGroup label=\"Jumlah Tampilan\">\r\n            <input\r\n              name=\"limit\"\r\n              type=\"number\"\r\n              className=\"form-control-sm\"\r\n              value={filter.limit ?? 5}\r\n              onChange={this.updateFilter}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup label=\"Periode\">\r\n            <ToggleButton\r\n              active={showPointRecord}\r\n              yesLabel=\"tampilkan poin\"\r\n              noLabel=\"tanpa poin\"\r\n              onClick={this.updateWithPointRecord}\r\n            />\r\n            {\r\n              showPointRecord &&\r\n              <React.Fragment>\r\n                <div className=\"input-group\">\r\n                  <FilterPeriod date={new Date(fieldsFilter['time>=d'])} onChange={(e) => this.updatePeriodFilter(e, 'time>=d')} />\r\n                </div>\r\n                <div className=\"input-group\">\r\n                  <FilterPeriod date={new Date(fieldsFilter['time<=d'])} onChange={(e) => this.updatePeriodFilter(e, 'time<=d')} />\r\n                </div>\r\n              </React.Fragment>\r\n            }\r\n          </FormGroup>\r\n          {\r\n            showPointRecord &&\r\n            <FormGroup>\r\n              {new Date(fieldsFilter['time>=d']).toDateString()} - {new Date(fieldsFilter['time<=d']).toDateString()}\r\n            </FormGroup>\r\n          }\r\n          <FormGroup>\r\n            <input type=\"submit\" className=\"btn btn-primary btn-sm\" value=\"Submit\" />\r\n          </FormGroup>\r\n        </form>\r\n        <p />\r\n        <NavigationButtons onClick={this.loadAtPage} activePage={filter.page ?? 0} limit={filter.limit ?? 10} totalData={totalData} />\r\n        <ItemsList showPointRecord={showPointRecord} loading={loading} inputPage={this.inputPage} startingNumber={(filter.page ?? 0) * (filter.limit ?? 10)} items={this.state.items} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst ItemsList = (props: { showPointRecord: boolean, loading: boolean, startingNumber: number, inputPage(type: string, s: Student): any, items: Student[] }) => {\r\n\r\n  return (\r\n    <div style={{ overflow: 'auto' }}>\r\n      <table className=\"table table-striped\">\r\n        {props.showPointRecord ? tableHeader(\"No\", \"\", \"Name\", \"Kelas\", \"Point\") : tableHeader(\"No\", \"\", \"Name\", \"Kelas\")}\r\n        <tbody>\r\n          {props.loading ?\r\n            <tr>\r\n              <td colSpan={5}><Spinner /></td>\r\n            </tr>\r\n\r\n            : props.items.map((student, i) => {\r\n              return (\r\n                <tr key={student.id}>\r\n                  <td>{i + 1 + props.startingNumber}</td>\r\n                  <td>\r\n                    <div style={{ width: '100px' }}>\r\n                      <AnchorWithIcon className=\"btn\" onClick={(e) => props.inputPage('pointrecord', student)} iconClassName=\"far fa-edit\" />\r\n                      {/* <AnchorWithIcon className=\"btn\" onClick={(e) => props.inputPage('medicalrecord', student)} iconClassName=\"fas fa-notes-medical\" /> */}\r\n                    </div>\r\n                  </td>\r\n                  <td>\r\n                    {student.name}\r\n                  </td>\r\n                  <td>\r\n                    {student.classLevel}{student.classLetter} {student.schoolName}\r\n                  </td>\r\n                  {props.showPointRecord && <td>{student.point}</td>}\r\n                </tr>\r\n              )\r\n            })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(connect(\r\n  mapCommonUserStateToProps\r\n)(StudentList));\r\n","\r\nimport BaseEntity from './BaseEntity';\r\nimport User from './User';\r\nimport Class from './Class';\r\nexport default class Student extends BaseEntity\r\n{\r\n    nis?:string;\r\n    kelas?:Class;\r\n    user?:User;\r\n\r\n    point?:number;\r\n    name?: string;\r\n    classLetter?: string;\r\n    classLevel?: number;\r\n    schoolName?: string;\r\n}","\nimport BaseEntity from './BaseEntity';\nimport { parseDate } from './../utils/DateUtil';\nimport { twoDigits as td } from './../utils/StringUtil';\nimport RulePoint from './RulePoint';\nimport Student from './Student';\nimport Pictures from './Pictures';\nimport { contextPath } from './../constant/Url';\nexport default class PointRecord extends BaseEntity {\n  setTime = (h: number, m: number, s: number) => {\n    this.time = new Date();\n    this.time.setFullYear(this.year);\n    this.time.setMonth(this.month - 1);\n    this.time.setDate(this.day);\n    this.time.setHours(h, m, s);\n  }\n  dateString = (): string => {\n    return `${this.year}-${td(this.month)}-${td(this.day)}`;\n  }\n  get timeString() {\n    return `${this.time.getHours()}:${this.time.getMinutes()}:${this.time.getSeconds()}`;\n  }\n  location?: string;\n  get day() { return this.time.getDate() };\n  get month() { return this.time.getMonth() + 1; }\n  get year() { return this.time.getFullYear(); }\n  set day(d: number) { this.time.setDate(d); }\n  set month(m: number) { this.time.setMonth(m - 1); }\n  set year(y: number) { this.time.setFullYear(y); }\n  time = new Date();\n  description?: string;\n  classMemberId?: number;\n  rulePointId?: number;\n  ruleCategoryId?: number;\n\n  student?: Student;\n  dropped?: Date;\n\n  pictures: Pictures[] = [];\n\n  // reponse fields\n  ruleCategoryName?: string;\n  ruleName?: string;\n  studentName?: string;\n  schoolName?: string;\n  classLevel?: number;\n  classLetter?: string;\n  point?: number;\n  droppable?: boolean;\n\n  /**\n   * get picture URL\n   */\n  getPicture = () => this.id ? contextPath(`api/public/asrama/broken-rule-img/${this.id}`) : undefined;\n\n  getDate = (): Date => {\n    return parseDate(this.dateString());\n  }\n\n  getTimestamp = (): string => {\n\n    const d = this.getDate();\n    const day = DAYS[d.getDay()];\n    return day + \", \" + [\n      td(d.getDate()), td(d.getMonth() + 1), d.getFullYear()\n    ].join(\"/\") + \" \" + this.time;\n  }\n\n  public static clone = (p: PointRecord) => {\n    p = Object.assign(new PointRecord(), p);\n    p.time = new Date(p.time);\n    return p;\n  }\n}\n\nconst DAYS = [\n  \"Ahad\", \"Senin\", \"Selasa\", \"Rabu\", \"Kamis\", \"Jumat\", \"Sabtu\"\n]","import React from 'react';\nimport { Component, ChangeEvent } from 'react';\nimport { twoDigits } from './../../utils/StringUtil';\ninterface Props{\n    onChange(h:number,m:number,s:number):any,\n    value:string,\n}\nclass State {\n    hour:number = new Date().getHours();\n    minute:number = new Date().getMinutes();\n    second:number = new Date().getSeconds();\n}\nconst hours:number[] = [\n    0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,\n];\nconst minutesOrSeconds = ()  : number[]=> {\n    const arr:number[]=  [];\n    for (let i = 1; i < 60; i++) {\n        arr.push(i);   \n    }\n    return arr; \n}\nexport default class InputTime extends Component<Props, any> {\n    state:State = new State();\n    minutes:number[];\n    seconds:number[] ;\n    constructor (props) {\n        super(props);\n        this.minutes = minutesOrSeconds();\n        this.seconds = minutesOrSeconds();\n    }\n    componentDidMount() {\n        this.updateFromProps();\n    }\n    updateFromProps = () => {\n        try {\n            const val = this.props.value.split(\":\");\n            this.setState({hour: parseInt(val[0]), minute: parseInt(val[1]), second: parseInt(val[2])});\n        } catch (error) {\n            \n        }\n    }\n    updateValue = (e:ChangeEvent) => {\n        const target = e.target as HTMLSelectElement;\n        if (target) {\n            const name = target.name;\n            this.setState({[name]: target.value}, this.onChange);\n        }\n        \n    }\n    setNow = () => {\n        const date = new Date();\n        this.setState({\n            hour: date.getHours(),\n            minute: date.getMinutes(),\n            second: date.getSeconds()\n        }, this.onChange)\n    }\n    onChange = () => {\n        this.props.onChange(this.state.hour, this.state.minute, this.state.second)\n    }\n    render() {\n         \n        return (<div className=\"form-control bg-light\">\n            <select name=\"hour\" style={{border:'none'}} value={this.state.hour} onChange={this.updateValue} >\n                {hours.map((hour)=>{\n                    return <option key={\"HOUR-\"+hour} value={hour} >{twoDigits(hour)}</option>\n                })}\n            </select>\n            <select name=\"minute\" style={{border:'none'}}  value={this.state.minute} onChange={this.updateValue}>\n                {this.minutes.map((min)=>{\n                    return <option key={\"MIN-\"+min} value={min} >{twoDigits(min)}</option>\n                })}\n            </select>\n            <select name=\"second\" style={{border:'none'}}  value={this.state.second} onChange={this.updateValue}>\n                {this.seconds.map((sec)=>{\n                    return <option key={\"SEC-\"+sec} value={sec} >{twoDigits(sec)}</option>\n                })}\n            </select>\n            <a style={{marginLeft: 5}}  onClick={this.setNow} ><i className=\"fas fa-history\"/></a>\n        </div>)\n    }\n}","import React, { ChangeEvent } from 'react'\nimport BaseComponent from '../../../BaseComponent';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\nimport RulePoint from '../../../../models/RulePoint';\nimport FormGroup from '../../../form/FormGroup';\nimport PointRecord from '../../../../models/PointRecord';\nimport { parseDate } from '../../../../utils/DateUtil';\nimport InputTime from '../../../form/InputTime';\nimport { getAttachmentInfoFromFile } from '../../../../utils/ComponentUtil';\nimport AttachmentInfo from '../../../../models/settings/AttachmentInfo';\nclass State {\n  pointRecord: PointRecord = new PointRecord();\n}\nclass FormStepThree extends BaseComponent<any, State> {\n  state = new State();\n  constructor(props) {\n    super(props, true);\n  }\n\n  onSubmit = () => {\n    this.showConfirmation(\"Submit Data?\")\n      .then(ok => {\n        if (ok) {\n          this.props.submit(this.state.pointRecord);\n        }\n      })\n  }\n  get rulePoint(): RulePoint {\n    return this.props.rulePoint;\n  }\n  updatePointRecord = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { target } = e;\n    const { pointRecord } = this.state;\n    pointRecord[target.name] = target.value;\n    this.setState({ pointRecord });\n\n  }\n  updateDate = (e: ChangeEvent<HTMLInputElement>) => {\n    const date = parseDate(e.target.value);\n    const { pointRecord } = this.state;\n    pointRecord.time = date;\n    this.setState({ pointRecord });\n  }\n  updateTime = (h: number, m: number, s: number) => {\n    const pointRecord = this.state.pointRecord;\n    pointRecord.setTime(h, m, s);\n    this.setState({ pointRecord: pointRecord });\n  }\n  setAttachment = (e: ChangeEvent) => {\n    const target = e.target as HTMLInputElement;\n    getAttachmentInfoFromFile(target).then((attachment: AttachmentInfo) => {\n      this.props.setAttachment(attachment);\n    });\n  }\n  removeAttachment = () => {\n    this.props.removeAttachment();\n  }\n  getAttachment = (): AttachmentInfo | undefined => {\n    return this.props.attachmentInfo;\n  }\n  render() {\n    const { rulePoint } = this;\n    const { pointRecord } = this.state;\n    const attachment = this.getAttachment();\n    return (\n      <form onSubmit={(e) => { e.preventDefault(); this.onSubmit() }}>\n        <FormGroup label=\"Category\">{rulePoint.ruleCategoryName} - {rulePoint.name} <span className=\"badge badge-dark\">{rulePoint.point}</span></FormGroup>\n        <FormGroup label=\"Date\">\n          <input type=\"date\" className=\"form-control\" onChange={this.updateDate} name=\"date\" value={pointRecord.dateString()} />\n        </FormGroup>\n        <FormGroup label=\"Time\">\n          <InputTime onChange={this.updateTime} value={pointRecord.timeString} />\n        </FormGroup>\n        <FormGroup label=\"Location\">\n          <input className=\"form-control\" onChange={this.updatePointRecord} name=\"location\" value={pointRecord.location ?? \"\"} />\n        </FormGroup>\n        <FormGroup label=\"Picture\">\n          {attachment ?\n            <>\n              <img style={{ marginRight: 10 }} className=\"border border-dark\" src={attachment.url} width={100} height={100} />\n              <AnchorWithIcon iconClassName=\"fas fa-times\" className=\"btn btn-danger\" onClick={this.removeAttachment}></AnchorWithIcon>\n            </>\n            : <input type=\"file\" accept={\"image/*\"} className=\"form-control\" onChange={this.setAttachment} name=\"attachment\" />\n          }\n        </FormGroup>\n        <FormGroup label=\"Description\">\n          <textarea value={pointRecord.description ?? ''} onChange={this.updatePointRecord} name=\"description\" className=\"form-control\"></textarea>\n        </FormGroup>\n        <AnchorWithIcon className=\"btn btn-secondary float-left\" iconClassName=\"fas fa-arrow-left\" onClick={this.props.onBack} >Back</AnchorWithIcon>\n        <button className=\"btn btn-success float-right\" >Submit</button>\n      </form>\n    )\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapCommonUserStateToProps\n  )(FormStepThree)\n)","\r\nimport React, { Component } from 'react';\r\nexport default class SimpleError extends Component<any, any>\r\n{\r\n\r\n    render() {\r\n        if (this.props.show == false) return null;\r\n        return (\r\n            <div style={ this.props.style} className=\"alert alert-danger\">\r\n                {this.props.children??\"Error Occured\"}\r\n            </div>\r\n        )\r\n    }\r\n}","\nimport React, { ChangeEvent } from 'react'\nimport { resolve } from 'inversify-react';\nimport BaseComponent from '../../../BaseComponent';\nimport MasterDataService from '../../../../services/MasterDataService';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\nimport FormGroup from '../../../form/FormGroup';\nimport Category from '../../../../models/Category';\nimport RulePoint from '../../../../models/RulePoint';\nimport WebRequest from '../../../../models/commons/WebRequest';\nimport WebResponse from '../../../../models/commons/WebResponse';\nimport Spinner from '../../../loader/Spinner';\nimport SimpleError from '../../../alert/SimpleError';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\nclass State {\n  rulePoints: RulePoint[] = [];\n  loading = false;\n}\nclass FormStepTwo extends BaseComponent<any, State> {\n  @resolve(MasterDataService)\n  private masterDataService: MasterDataService;\n  state = new State();\n  constructor(props) {\n    super(props, true);\n  }\n  startLoading = () => this.setState({ loading: true });\n  endLoading = () => this.setState({ loading: false });\n  rulePointsLoaded = (response: WebResponse) => {\n    this.setState({ rulePoints: response.result.items }, () => {\n      if (this.state.rulePoints.length > 0) {\n        if (!this.props.rulePoint) {\n          this.setRulePoint(this.state.rulePoints[0]);\n        }\n      }\n    });\n  }\n\n  loadRulePoints = () => {\n    if (null == this.getCategory()) return;\n    const req: WebRequest = {\n      filter: { limit: 0, fieldsFilter: { 'category.id=': this.getCategory().id } },\n      modelName: 'rule-points',\n    }\n    this.commonAjax(\n      this.masterDataService.list,\n      this.rulePointsLoaded,\n      this.showCommonErrorAlert,\n      req,\n      'asrama'\n    )\n  }\n  getCategory = (): Category => {\n    return this.props.category;\n  }\n  componentDidMount() {\n    super.componentDidMount();\n    this.loadRulePoints();\n  }\n  onSubmit = () => {\n    this.props.onSubmit();\n  }\n  setRulePoint = (r: RulePoint) => {\n    this.props.setRulePoint(r);\n  }\n  updateRulePoint = (e: ChangeEvent) => {\n    const select = (e.target as HTMLSelectElement);\n    const filtered = this.state.rulePoints.filter((r) => r.id?.toString() == select.value)\n    if (filtered.length == 0) return;\n    this.setRulePoint(filtered[0]);\n  }\n  render() {\n    const category = this.getCategory();\n\n    const { rulePoints, loading } = this.state;\n\n    if (null == category) {\n      return <SimpleError>Category not found</SimpleError>\n    }\n    if (loading) {\n      return <Spinner />\n    }\n    if (rulePoints.length == 0) {\n      return <SimpleError>Rule Points for {category.name} not found</SimpleError>\n    }\n    return (\n      <form onSubmit={e => { e.preventDefault(); this.onSubmit() }} >\n        <FormGroup label=\"Category\" children={category.name} />\n        <FormGroup label=\"Name\">\n          <select className=\"form-control\" onChange={this.updateRulePoint} value={this.props.rulePoint ? this.props.rulePoint.id : null} >\n            {rulePoints.map((r: RulePoint) => {\n              return <option key={`select-rulePoint-${r.id}`} value={r.id}>{r.name}</option>\n            })}\n          </select>\n        </FormGroup>\n        <FormGroup label=\"Point\" children={this.props.rulePoint?.point} />\n        <hr />\n        <AnchorWithIcon className=\"btn btn-secondary float-left\" iconClassName=\"fas fa-arrow-left\" onClick={this.props.onBack} >Back</AnchorWithIcon>\n        <AnchorWithIcon className=\"btn btn-info float-right\" iconClassName=\"fas fa-arrow-right\" onClick={this.onSubmit} >Next</AnchorWithIcon>\n      </form>\n    );\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapCommonUserStateToProps\n  )(FormStepTwo)\n)","import { resolve } from 'inversify-react';\nimport React, { ChangeEvent } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\nimport Category from '../../../../models/Category';\nimport Filter from '../../../../models/commons/Filter';\nimport WebRequest from '../../../../models/commons/WebRequest';\nimport WebResponse from '../../../../models/commons/WebResponse';\nimport MasterDataService from '../../../../services/MasterDataService';\nimport SimpleError from '../../../alert/SimpleError';\nimport BaseComponent from '../../../BaseComponent';\nimport FormGroup from '../../../form/FormGroup';\nimport Spinner from '../../../loader/Spinner';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\nclass State {\n  categories: Category[] = [];\n  loading = false;\n  categoriesLoaded = false;\n}\nclass FormStepOne extends BaseComponent<any, State> {\n  state = new State();\n\n  @resolve(MasterDataService)\n  private masterDataService: MasterDataService;\n  constructor(props) {\n    super(props, true);\n  }\n  categoriesLoaded = (response: WebResponse) => {\n    this.setState({ categories: response.result.items, categoriesLoaded: true }, () => {\n      if (this.state.categories.length > 0) {\n        if (!this.props.category) {\n          this.setCategory(this.state.categories[0]);\n        }\n      }\n    });\n  }\n  startLoading = () => this.setState({ loading: true });\n  endLoading = () => this.setState({ loading: false });\n  setCategory = (c: Category) => {\n    this.props.setSelectedCategory(c);\n  }\n  loadCategories = () => {\n    const req: WebRequest = {\n      filter: Filter.withLimit(0),\n      modelName: 'rule-categories'\n    }\n    this.commonAjax(\n      this.masterDataService.list,\n      this.categoriesLoaded,\n      this.showCommonErrorAlert,\n      req,\n      'asrama'\n    )\n  }\n  componentDidMount() {\n    super.componentDidMount();\n    this.loadCategories();\n  }\n  onSubmit = () => {\n    this.props.onSubmit();\n  }\n  updateCategory = (e: ChangeEvent<HTMLSelectElement>) => {\n    const select = e.target;\n    const filtered = this.state.categories.filter((c) => c.id?.toString() == select.value)\n    if (filtered.length == 0) return;\n    this.setCategory(filtered[0]);\n  }\n  render() {\n    const { categories, loading } = this.state;\n    const { category } = this.props;\n    if (loading) {\n      return <Spinner />\n    }\n    if (categories.length == 0) {\n      return <SimpleError>Categories not found</SimpleError>\n    }\n    return (\n      <form onSubmit={(e) => { e.preventDefault(); this.onSubmit() }}>\n        <FormGroup label=\"Category\">\n          <select className=\"form-control\" onChange={this.updateCategory} value={category ? category.id ?? \"\" : \"\"} >\n            {categories.map((c) => {\n              return <option key={`select-cat-${c.id}`} value={c.id}>{c.name}</option>\n            })}\n          </select>\n        </FormGroup>\n        <hr />\n        <AnchorWithIcon\n          className=\"btn btn-secondary float-left\"\n          iconClassName=\"fas fa-arrow-left\"\n          onClick={this.props.onBack}\n        >\n          Back\n        </AnchorWithIcon>\n        <AnchorWithIcon\n          className=\"btn btn-info float-right\"\n          iconClassName=\"fas fa-arrow-right\"\n          onClick={this.onSubmit}\n        >\n          Next\n        </AnchorWithIcon>\n      </form >\n\n\n    )\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapCommonUserStateToProps\n  )(FormStepOne)\n)","\nimport React from 'react'\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\nimport Student from '../../../models/Student';\nimport AnchorWithIcon from '../../navigation/AnchorWithIcon';\nimport Modal from '../../container/Modal';\nimport FormStepThree from './form/FormStepThree';\nimport FormStepTwo from './form/FormStepTwo';\nimport FormStepOne from './form/FormStepOne';\nimport Category from '../../../models/Category';\nimport RulePoint from '../../../models/RulePoint';\nimport SimpleError from '../../alert/SimpleError';\nimport PointRecord from '../../../models/PointRecord';\nimport StudentService from '../../../services/StudentService';\nimport WebResponse from '../../../models/commons/WebResponse';\nimport FormGroup from '../../form/FormGroup';\nimport { doItLater } from '../../../utils/EventUtil';\nimport AttachmentInfo from '../../../models/settings/AttachmentInfo';\nimport BasePage from '../BasePage';\nimport { resolve } from 'inversify-react';\nclass State {\n  student?: Student\n  category?: Category;\n  rulePoint?: RulePoint;\n  formStep: number = 0;\n  savedRecord?: PointRecord;\n  attachmentInfo?: AttachmentInfo;\n}\nclass InputPointForm extends BasePage<any, State> {\n  state: State = new State();\n  @resolve(StudentService)\n  private studentService: StudentService;\n  totalStep: number = 4;\n  constructor(props) {\n    super(props, 'Input Point Record', true);\n  }\n  validateStudentData = () => {\n    if (!this.props.location.state) {\n      return;\n    }\n    const student = this.props.location.state.student;\n    if (student) {\n      this.setState({ student: Object.assign(new Student(), student) });\n    }\n  }\n  componentDidMount() {\n    super.componentDidMount();\n    this.validateStudentData();\n    this.scrollTop();\n    doItLater(() => {\n      this.nextStep(1);\n    }, 200);\n\n  }\n  setAttachment = (attachmentInfo: AttachmentInfo | undefined) => {\n    this.setState({ attachmentInfo: attachmentInfo });\n  }\n  removeStudent = () => {\n    this.setState({ formStep: 0 }, () => {\n      doItLater(() => {\n        this.setState({ student: undefined })\n      }, 500);\n    })\n  }\n  removeAttachment = () => {\n    this.setAttachment(undefined);\n  }\n  setCategory = (c: Category) => {\n    this.setState({ category: c });\n  }\n  setRulePoint = (r: RulePoint) => {\n    this.setState({ rulePoint: r });\n  }\n  nextStep = (step: number) => {\n    this.setState({ formStep: step });\n  }\n  submitRecord = (record: PointRecord) => {\n\n    if (!this.state.student || !this.state.rulePoint) {\n      alert(\"ERROR: student or rulePoint missing!\");\n      return;\n    }\n    record.classMemberId = this.state.student?.id;\n    record.rulePointId = this.state.rulePoint?.id;\n    this.commonAjax(\n      this.studentService.insertPointRecord,\n      this.recordSubmitted,\n      this.showCommonErrorAlert,\n      record,\n      this.state.attachmentInfo\n    )\n  }\n  recordSubmitted = (response: WebResponse) => {\n    this.setState({ savedRecord: response.result, formStep: 4 }, this.scrollTop);\n  }\n  render() {\n    const student: Student | undefined = this.state.student;\n    if (!student) {\n      return <Warning />\n    }\n\n    return (\n      <div className=\"container-fluid section-body\">\n        <h2>Form Input Pelanggaran</h2>\n        <Modal title={student.name + \" - \" + student.classLevel + student.classLetter + \" \" + student.schoolName}>\n          <Progress step={this.state.formStep} totalStep={this.totalStep} />\n          {\n            this.state.formStep == 1 &&\n            <FormStepOne\n              category={this.state.category}\n              onBack={this.removeStudent}\n              setSelectedCategory={this.setCategory}\n              onSubmit={() => { this.nextStep(2) }}\n            />\n          }\n          {\n            this.state.formStep == 2 && this.state.category &&\n            <FormStepTwo\n              rulePoint={this.state.rulePoint}\n              setRulePoint={this.setRulePoint}\n              category={this.state.category}\n              onBack={() => this.nextStep(1)}\n              onSubmit={() => { this.nextStep(3) }}\n            />\n          }\n          {\n            this.state.formStep == 3 && this.state.category && this.state.rulePoint &&\n            <FormStepThree\n              submit={this.submitRecord}\n              attachmentInfo={this.state.attachmentInfo}\n              setAttachment={this.setAttachment}\n              removeAttachment={this.removeAttachment}\n              rulePoint={this.state.rulePoint}\n              onBack={() => this.nextStep(2)}\n            />\n          }\n          {\n            this.state.formStep == 4 &&\n            this.state.savedRecord &&\n            <Detail\n              back={() => this.setState({ student: undefined })}\n              record={this.state.savedRecord}\n            />\n          }\n\n        </Modal>\n      </div>\n    )\n  }\n}\n\nconst Progress = (props: { step: number, totalStep: number }) => {\n  return (\n    <div className=\"progress\" style={{ height: '5px', marginBottom: 15 }}>\n      <div className=\"bg-info\" style={{ transitionDuration: '500ms', width: (props.step / props.totalStep * 100) + '%' }}  ></div>\n    </div>\n  )\n}\n\nconst Detail = (props: { record: PointRecord, back(): any }) => {\n  const record = PointRecord.clone(props.record);\n  const date = record.getDate();\n  return (\n    <div>\n      <h4 className=\"text-center text-success\"><i className=\"fas fa-check\" style={{ marginRight: 5 }} />Record saved</h4>\n      <p />\n      <FormGroup label=\"Date\">{new Date(record.time).toLocaleString()}</FormGroup>\n      <FormGroup label=\"Category\">{record.ruleCategoryName}</FormGroup>\n      <FormGroup label=\"Name\">{record.ruleName}</FormGroup>\n      <FormGroup label=\"Point\">{record.point}</FormGroup>\n      <FormGroup label=\"Location\">{record.location}</FormGroup>\n      {\n        record.getPicture() &&\n        <FormGroup label=\"Picture\">\n          <img src={record.getPicture() ?? ''} width={200} height={200} />\n        </FormGroup>\n      }\n      <hr />\n      <FormGroup><a onClick={props.back} className=\"btn btn-dark\">Ok</a></FormGroup>\n    </div>\n  )\n}\n\nconst Warning = () => {\n  return (\n    <div className=\"container-fluid section-body\">\n      <h2>Form Input Pelanggaran</h2>\n      <SimpleError>\n        <i className=\"fas fa-exclamation-circle mr-2\" /><span>Please select student</span><hr />\n        <AnchorWithIcon to={\"/asrama/studentlist\"} iconClassName=\"fas fa-list\">Student List</AnchorWithIcon>\n      </SimpleError>\n    </div>\n  )\n}\n\nexport default withRouter(\n  connect(\n    mapCommonUserStateToProps\n  )(InputPointForm)\n)","\r\nimport React, { Component } from 'react';\r\nexport default class Card extends Component<any, any> {\r\n    constructor(props: any) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div {...this.props.attributes} className={\"card \" + this.props.className}>\r\n                {this.props.title ? <div className=\"card-header\">\r\n                    {this.props.title}\r\n                </div> : null}\r\n                <div className=\"card-body\">\r\n                    {this.props.children}\r\n                </div>\r\n                {this.props.footerContent != undefined ?\r\n                    <div className=\"card-footer\">\r\n                        {this.props.footerContent}\r\n                    </div>\r\n                    : null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","\nimport React, { Component } from 'react';\nimport PointRecord from '../../../../models/PointRecord';\nimport { doItLater } from '../../../../utils/EventUtil';\nimport Card from '../../../container/Card';\nimport FormGroup from '../../../form/FormGroup';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\n\ninterface IProps {\n  record: PointRecord;\n  close(): any;\n}\nexport default class PointRecordDetail extends Component<IProps, any> {\n\n  componentDidMount() {\n    const opt: ScrollToOptions = { top: 0, behavior: 'smooth' };\n    doItLater(() => {\n      window.scrollTo(opt);\n    }, 100);\n  }\n\n  render() {\n    const record = PointRecord.clone(this.props.record);\n    const pictureUrl = record.getPicture();\n    const timeStamp = new Date(record.time).toString();\n    return <Card title={\"Detail Pelanggaran\"} footerContent={<AnchorWithIcon className=\"btn btn-dark\" onClick={this.props.close} >Ok</AnchorWithIcon>}>\n      <FormGroup label=\"Nama\">{record.studentName} - {record.classLevel}{record.classLetter} {record.schoolName}</FormGroup>\n      <FormGroup label=\"Pelanggaran\">\n        <strong>{record.ruleCategoryName}</strong> - {record.ruleName} <span className=\"badge badge-dark\">{record.point}</span>\n      </FormGroup>\n      <FormGroup label=\"Waktu\" children={timeStamp} />\n      <FormGroup label=\"Lokasi\" children={record.location ?? '-'} />\n      <FormGroup label=\"Deskripsi\" children={record.description ?? '-'} />\n      <FormGroup label=\"Diputihkan\" children={record.dropped ? new Date(record.dropped).toString() : '-'} />\n\n      <FormGroup label=\"Gambar\">\n        {pictureUrl ?\n          <img src={pictureUrl} width={200} height={200} className=\"border border-dark\" /> : null}\n      </FormGroup>\n    </Card>\n  }\n}","import React from 'react'\nimport BaseComponent from '../../BaseComponent';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\nimport PointRecord from '../../../models/PointRecord';\nimport AnchorWithIcon from '../../navigation/AnchorWithIcon';\nimport StudentService from '../../../services/StudentService';\nimport { resolve } from 'inversify-react';\n\nclass State {\n  loading = false;\n}\nclass DropPointButtons extends BaseComponent<any, State> {\n  @resolve(StudentService)\n  private studentService: StudentService;\n  state: State = new State();\n  constructor(props) {\n    super(props, true);\n  }\n  startLoading = () => { this.setState({ loading: true }); }\n  endLoading = () => { this.setState({ loading: false }); }\n  getRecord = (): PointRecord => this.props.record;\n\n  setDropped = (isDropped: boolean) => {\n    const item = this.getRecord();\n    this.commonAjax(\n      this.studentService.setPointDropped,\n      this.props.onUpdated,\n      this.showCommonErrorAlert,\n      item.id, isDropped\n    );\n  }\n  render() {\n    const item = this.getRecord();\n    if (this.state.loading) {\n      return (\n        <button className=\"btn btn-info btn-sm\">\n          <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n        </button>\n      );\n    }\n    return (\n      item.dropped ?\n        <AnchorWithIcon onClick={(e) => this.setDropped(false)} className=\"btn btn-secondary btn-sm\" iconClassName=\"fas fa-arrow-up\">\n          Reset\n        </AnchorWithIcon> :\n        <AnchorWithIcon onClick={(e) => this.setDropped(true)} className=\"btn btn-success btn-sm\" iconClassName=\"fas fa-arrow-down\">\n          Putihkan\n        </AnchorWithIcon>\n    )\n  }\n}\n\nexport default withRouter(connect(\n  mapCommonUserStateToProps\n)(DropPointButtons))","import React, { ChangeEvent } from 'react'\nimport BaseManagementPage from './BaseManagementPage';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\nimport EditDeleteButton from './EditDeleteButton'\nimport PointRecord from '../../../models/PointRecord';\nimport Filter from '../../../models/commons/Filter';\nimport FormGroup from '../../form/FormGroup';\nimport NavigationButtons from '../../navigation/NavigationButtons';\nimport { tableHeader } from '../../../utils/CollectionUtil';\nimport FilterPeriod from '../../form/FilterPeriod';\nimport PointRecordDetail from '../asrama/point-record/PointRecordDetail';\nimport StudentService from '../../../services/StudentService';\nimport WebResponse from '../../../models/commons/WebResponse';\nimport Category from '../../../models/Category';\nimport Class from '../../../models/Class';\nimport { MONTHS, getInputReadableDate } from './../../../utils/DateUtil';\nimport DropPointButtons from '../asrama/DropPointButtons';\nimport { resolve } from 'inversify-react';\n\nclass State {\n  items: PointRecord[] = [];\n  filter: Filter = new Filter();\n  totalData: number = 0;\n  record?: PointRecord;\n  loading: boolean = false;\n  categories: Category[] = [];\n  classes: Class[] = [];\n  selectedCategory: Category | undefined;\n  showFilterDetail: boolean = false;\n}\nconst now = new Date();\nconst defaultFieldsFilter = {\n  'classMember.student.user.fullName': '',\n  dropped: '',\n  'classMember.classLevel.id=': '',\n  'rulePoint.name': '',\n  'rulePoint.category.name': '',\n  location: '',\n  'time>=d': getInputReadableDate(new Date(now.getFullYear(), 0, 1)),\n  'time<=d': getInputReadableDate(now),\n};\nconst MODEL_NAME = 'broken-rules';\nconst MENU = 'asrama';\nclass PointRecordSummary extends BaseManagementPage<any, State> {\n  state = new State();\n  @resolve(StudentService)\n  private studentService: StudentService;\n  constructor(props) {\n    super(props, MODEL_NAME, MENU, false);\n\n    const filter = new Filter();\n    filter.limit = 10;\n    filter.fieldsFilter = defaultFieldsFilter;\n    filter.orderBy = 'time';\n    filter.orderType = 'desc';\n\n    this.state.filter = filter;\n  }\n\n  componentDidMount() {\n    super.componentDidMount();\n    this.loadCategories();\n    this.loadClasses();\n  }\n  loadClasses = () => {\n    this.commonAjax(this.studentService.getClasses,\n      this.classessLoaded, console.error)\n  }\n  loadCategories = () => {\n    this.commonAjax(this.studentService.getCategories,\n      this.categoriesLoaded, console.error);\n  }\n  categoriesLoaded = (response: WebResponse) => this.setState({ categories: response.result.items });\n  classessLoaded = (response: WebResponse) => this.setState({ classes: response.result });\n\n  setSelectedCategory = (selectedCategory: Category) => {\n    const { filter } = this.state;\n    if (!selectedCategory.id || selectedCategory.id?.toString() === '') {\n      filter.fieldsFilter['rulePoint.name'] = '';\n    }\n    this.setState({ filter, selectedCategory });\n  }\n\n  showDetail = (item: PointRecord) => this.setState({ record: item });\n  hideDetail = () => this.setState({ record: undefined }, this.scrollTop);\n  showFilterDetail = () => this.setState({ showFilterDetail: true });\n  hideFilterDetail = () => this.setState({ showFilterDetail: false });\n\n  openEditPage = (p: PointRecord) => {\n    this.props.history.push({\n      pathname: '/asrama/pointrecordedit',\n      state: { record: p }\n    })\n  }\n\n  resetFilter = () => {\n    const { filter } = this.state;\n    this.setState({ filter: Filter.resetFieldsFilter(filter) });\n  }\n  followUp = (p: PointRecord) => {\n    this.commonAjax(\n      this.studentService.followUp,\n      this.showCommonSuccessAlert,\n      this.showCommonErrorAlert,\n      p.id\n    )\n  }\n  dropAll = (e) => {\n    this.showConfirmation(\"Putihkan \" + this.state.items.length + \" data?\")\n      .then(ok => {\n        if (ok) {\n          this.commonAjax(\n            this.studentService.dropAll,\n            this.reload,\n            this.showCommonErrorAlert,\n            this.itemsId\n          )\n        }\n      })\n  }\n  undropAll = (e) => {\n    this.showConfirmation(\"Reset pemutihan \" + this.state.items.length + \" data?\")\n      .then(ok => {\n        if (ok) {\n          this.commonAjax(\n            this.studentService.undropAll,\n            this.reload,\n            this.showCommonErrorAlert,\n            this.itemsId\n          )\n        }\n      })\n  }\n  updatePeriodFilter = (e: ChangeEvent<HTMLInputElement | HTMLSelectElement>, field: 'time<=d' | 'time>=d') => {\n    const { filter } = this.state;\n    Filter.updatePeriodFilter(filter, e, field);\n    this.setState({ filter });\n  }\n  updateDroppedOption = (e: ChangeEvent<HTMLSelectElement>) => {\n    const { filter } = this.state;\n    const { fieldsFilter } = filter;\n    for (const key in fieldsFilter) {\n      if (key.startsWith('dropped')) {\n        delete fieldsFilter[key];\n      }\n    }\n    const split = e.target.value.split(':');\n    if (split[0] === 'dropped') {\n      return;\n    }\n    fieldsFilter[split[0]] = 'Dummy';\n    this.setState({ filter });\n  }\n\n  get itemsId() { return this.state.items.map(i => i.id); }\n\n  render() {\n    const { filter, record } = this.state;;\n    const { fieldsFilter } = filter;\n\n    const title = \"Rekap Pelanggaran\";\n    if (record) {\n      return (\n        <div className=\"container-fluid section-body\">\n          <h2>{title}</h2>\n          <PointRecordDetail record={record} close={this.hideDetail} />\n        </div>\n      )\n    }\n    const defaultClass: Class = { id: '', level: 'Semua Kelas', sekolah: {} };\n    const selectedClassId = filter.fieldsFilter['classMember.classLevel.id='] ? filter.fieldsFilter['classMember.classLevel.id='] : '';\n\n    return (\n      <div className=\"container-fluid section-body\">\n        <h2>{title}</h2>\n        <hr />\n        <form className=\"form-filter\" onSubmit={this.reload}>\n          <FormGroup label=\"Cari\">\n            <div className=\"input-group\">\n              <input autoComplete=\"off\" name=\"classMember.student.user.fullName\" placeholder=\"Nama siswa\" className=\"form-control-sm\" value={fieldsFilter['classMember.student.user.fullName'] ?? ''} onChange={this.updateFieldsFilter} />\n              <select autoComplete=\"off\" value={selectedClassId} onChange={this.updateFieldsFilter} className=\"form-control-sm\" name=\"classMember.classLevel.id=\">\n                {[defaultClass, ...this.state.classes].map((c) => {\n                  return <option key={`class_${c.id}`} value={c.id}>{c.level}{c.letter} - {c.schoolName}</option>\n                })}\n              </select>\n            </div>\n          </FormGroup>\n          {this.state.showFilterDetail ?\n            <><div className=\"filter-sticky bg-white border border-gray pt-3 pb-3 pl-3 pr-3\">\n              <FormGroup label=\"Kategori\">\n                <select value={fieldsFilter['rulePoint.category.id=']} onChange={this.updateFieldsFilter} className=\"form-control-sm\" name=\"rulePoint.category.id=\">\n                  {[Category.clone({ id: '', name: 'Semua' }), ...this.state.categories].map((c) => {\n                    return <option onClick={() => this.setSelectedCategory(c)} key={`cat_${c.id}`} value={c.id}>{c.name}</option>\n                  })}\n                </select>\n              </FormGroup>\n              {\n                this.state.selectedCategory && this.state.selectedCategory.points &&\n                <FormGroup label=\"Pelanggaran\">\n                  <select value={fieldsFilter['rulePoint.name']} onChange={this.updateFieldsFilter} className=\"form-control-sm\" name=\"rulePoint.name\">\n                    {[{ id: '', name: 'Semua' }, ...this.state.selectedCategory.points].map((c) => {\n                      return <option key={`rp_${c.id}`} value={c.id == '' ? c.id : c.name}>{c.name}</option>\n                    })}\n                  </select>\n                </FormGroup>\n              }\n              <FormGroup label=\"Periode\">\n                <div className=\"input-group\">\n                  <FilterPeriod date={new Date(fieldsFilter['time>=d'])} onChange={(e) => this.updatePeriodFilter(e, 'time>=d')} />\n                </div>\n                <div className=\"input-group\">\n                  <FilterPeriod date={new Date(fieldsFilter['time<=d'])} onChange={(e) => this.updatePeriodFilter(e, 'time<=d')} />\n                </div>\n              </FormGroup>\n              <FormGroup label=\"Pemutihan\">\n                <select\n                  className=\"form-control-sm\"\n                  onChange={this.updateDroppedOption}\n                >\n                  <option value=\"dropped:\">Semua</option>\n                  <option value=\"dropped=null:\">Belum</option>\n                  <option value=\"dropped!null:\">Sudah</option>\n                </select>\n              </FormGroup>\n              <FormGroup label=\"Lokasi\">\n                <input name=\"location\" placeholder=\"Lokasi\" className=\"form-control-sm\" value={fieldsFilter['location'] ?? ''} onChange={this.updateFieldsFilter} />\n              </FormGroup>\n              <FormGroup label=\"Jumlah Tampilan\">\n                <input type=\"number\" name=\"limit\" className=\"form-control-sm\" value={filter.limit ?? 5} onChange={this.updateFilter} />\n              </FormGroup>\n              <FormGroup label=\"\">\n                <a className=\"btn btn-dark btn-sm\" onClick={this.hideFilterDetail}>Tutup</a>\n                <input className=\"ml-3 btn btn-primary btn-sm\" type=\"submit\" value=\"Cari\" />\n              </FormGroup>\n            </div>\n              <FormGroup label=\"\">\n                <a className=\"btn btn-dark btn-sm\" onClick={this.hideFilterDetail}>Tutup Detail Filter</a>\n              </FormGroup>\n            </>\n            : <FormGroup label=\"\">\n              <a className=\"btn btn-dark btn-sm\" onClick={this.showFilterDetail}>Tampil Detail Filter</a>\n            </FormGroup>}\n          <FormGroup label=\"Periode\">\n            {new Date(filter.fieldsFilter['time>=d']).toDateString()} - {new Date(filter.fieldsFilter['time<=d']).toDateString()}\n          </FormGroup>\n          <FormGroup>\n            <input className=\"btn btn-primary btn-sm\" type=\"submit\" value=\"Submit\" />\n            <a className=\"btn btn-secondary btn-sm ml-2\" onClick={this.resetFilter}>Reset</a>\n            <a onClick={this.dropAll} className=\"ml-2 btn btn-info btn-sm\" >Putihkan Semua</a>\n            <a onClick={this.undropAll} className=\"ml-2 btn btn-warning btn-sm\" >Reset Pemutihan Semua</a>\n          </FormGroup>\n        </form>\n        <NavigationButtons\n          activePage={filter.page ?? 0}\n          limit={filter.limit ?? 10}\n          totalData={this.state.totalData}\n          onClick={this.loadAtPage}\n        />\n        <ItemsList\n          isAdmin={this.isAdmin()}\n          startingNumber={(filter.page ?? 0) * (filter.limit ?? 10)}\n          recordLoadedForDetail={this.showDetail}\n          recordLoadedForEdit={this.openEditPage}\n          recordUpdated={this.loadItems}\n          followUp={this.followUp}\n          items={this.state.items}\n        />\n      </div>\n    )\n  }\n}\ninterface ItemProps {\n  isAdmin: boolean,\n  startingNumber: number,\n  items: PointRecord[],\n  recordLoadedForDetail(p: PointRecord): any,\n  recordLoadedForEdit(p: PointRecord): any,\n  recordUpdated(): any,\n  followUp(p: PointRecord): any\n}\nconst ItemsList = (props: ItemProps) => {\n  return (\n    <div style={{ overflow: 'auto' }}>\n      <table className=\"table \">\n        {tableHeader(\"No\", \"Siswa\", \"Kelas\", \"Tanggal\", \"Pelanggaran\", \"Poin\", \"Lokasi\", \"Gambar\", \"Pemutihan\", \"Opsi\")}\n        <tbody>\n          {props.items.map((item, i) => {\n            item = PointRecord.clone(item);\n            const optionTypes = props.isAdmin ?\n              ['detail', 'delete'] :\n              [(item.dropped ? null : 'edit'), 'detail'];\n            return (\n              <tr key={\"PointRecord-\" + i} className={item.dropped ? \"alert alert-success\" : ''}>\n                <td>{i + 1 + props.startingNumber}</td>\n                <td>{item.studentName}</td>\n                <td>{item.classLevel}{item.classLetter} {item.schoolName}</td>\n                <td>{new Date(item.time).toLocaleDateString()}</td>\n                <td>{item.ruleCategoryName} ({item.ruleName})</td>\n                <td>{item.point}</td>\n                <td>{item.location}</td>\n                <td>\n                  <img src={item.getPicture() ?? ''} width={50} height={50} />\n                </td>\n                <td>{item.dropped ? <i className=\"fas fa-check\" /> : \"-\"} </td>\n                <td>\n                  <div style={{ width: 'max-content' }}>\n                    {\n                      item.droppable ?\n                        <><DropPointButtons record={item} onUpdated={props.recordUpdated} /><p /></> :\n                        <p><i>Tidak ada pemutihan</i></p>\n                    }\n                    {/* {\n                      props.isAdmin ?\n                        <><DropPointButtons record={item} onUpdated={props.recordUpdated} /><p /></> :\n                        <a className=\"btn btn-dark btn-sm\" onClick={() => props.followUp(item)}>Follow Up</a>\n                    } */}\n                    <EditDeleteButton\n                      record={item}\n                      types={optionTypes}\n                      recordLoadedForDetail={props.recordLoadedForDetail}\n                      recordLoaded={props.recordLoadedForEdit}\n                      recordDeleted={props.recordUpdated}\n                      modelName={MODEL_NAME}\n                      menu={MENU}\n                    />\n                  </div>\n\n                </td>\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default withRouter(\n  connect(\n    mapCommonUserStateToProps\n  )(PointRecordSummary)\n)","\r\nimport School from './School';\r\nimport Student from './Student';\r\n\r\nexport default class Class {\r\n    static studentClassString(student: Student| undefined): string {\r\n        return (student?.kelas?.level??\"\") +(student?.kelas?.rombel??\"\") + \" \" + (student?.kelas?.sekolah?.nama??\"\");\r\n    }\r\n    id?:string;\r\n    name?:string;\r\n    level?:string;\r\n    rombel?:string;\r\n    sekolah?:School;\r\n    //\r\n    letter?:string;\r\n    schoolName?:string;\r\n}","import React, { FormEvent } from 'react'\nimport BaseComponent from '../../../BaseComponent';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\nimport Card from '../../../container/Card';\nimport FormGroup from '../../../form/FormGroup';\nimport Student from '../../../../models/Student';\nimport MasterDataService from '../../../../services/MasterDataService';\nimport WebRequest from '../../../../models/commons/WebRequest';\nimport WebResponse from '../../../../models/commons/WebResponse';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\nimport Class from '../../../../models/Class';\nimport { resolve } from 'inversify-react';\n\nclass State {\n  studentName?: string;\n  items: Student[] = [];\n  item?: Student;\n}\nclass StudentForm extends BaseComponent<any, State> {\n  state = new State();\n  @resolve(MasterDataService)\n  private masterDataService: MasterDataService;\n  constructor(props) {\n    super(props, true);\n  }\n  submit = (e: FormEvent) => {\n    e.preventDefault();\n    this.loadStudent();\n  }\n  itemsLoaded = (response: WebResponse) => {\n    this.setState({ items: response.items });\n  }\n  loadStudent = () => {\n    const request: WebRequest = {\n      modelName: 'student',\n      filter: {\n        limit: 15,\n        fieldsFilter: { name: this.state.studentName }\n      }\n    }\n    this.commonAjax(\n      this.masterDataService.list,\n      this.itemsLoaded,\n      this.showCommonErrorAlert,\n      request\n    )\n  }\n  setSelectedItem = (item: Student) => {\n    this.setState({ item: item, items: [], studentName: undefined }, () => {\n      if (this.props.setItem) {\n        this.props.setItem(item);\n      }\n    });\n  }\n  reset = () => {\n    this.setState({ item: undefined, items: [], studentName: undefined }, () => {\n      if (this.props.setItem) {\n        this.props.setItem(undefined);\n      }\n    });\n  }\n  render() {\n    const items: Student[] = this.state.items;\n    const selectedItem: Student | undefined = this.state.item;\n    return (\n      <form onReset={this.reset} onSubmit={this.submit}>\n        <Card title=\"Select Student\">\n          <FormGroup label=\"Search\">\n            <input placeholder=\"Name\" value={this.state.studentName ?? \"\"} className=\"form-control\" onChange={this.handleInputChange} name=\"studentName\" />\n            {items.length > 0 ? <div style={{ position: 'absolute', zIndex: 200 }} className=\"container-fluid bg-light rounded-sm border border-dark\">\n              {items.map(item => {\n                return (\n                  <div className=\"option-item\" onClick={() => {\n                    this.setSelectedItem(item);\n                  }} style={{ cursor: 'pointer' }} key={\"Student-\" + item.id} >{item.user?.fullName}</div>\n                )\n              })}\n              <a onClick={this.reset} className=\"option-item\">\n                <i className=\"fas fa-times mr-2\" />\n                <span>close</span>\n              </a>\n            </div> : null}\n          </FormGroup>\n          {selectedItem ?\n            <ItemDetail item={selectedItem} />\n            : null}\n          <hr />\n          <div className=\"btn-group float-right\">\n            <input type=\"submit\" className=\"btn btn-dark\" value=\"Search\" />\n            <input type=\"reset\" className=\"btn btn-secondary\" value=\"Reset\" />\n            <AnchorWithIcon to={\"/asrama/studentlist\"} iconClassName=\"fas fa-list\">Student List</AnchorWithIcon>\n          </div>\n        </Card>\n      </form>\n    )\n  }\n}\n\nconst ItemDetail = (props: { item: Student }) => {\n\n  return (\n    <>\n      <FormGroup label=\"Name\">{props.item.user?.fullName}</FormGroup>\n      <FormGroup label=\"Kelas\">{Class.studentClassString(props.item)}</FormGroup>\n\n    </>\n  )\n}\n\nexport default withRouter(\n  connect(\n    mapCommonUserStateToProps\n  )(StudentForm)\n)","\nimport BaseEntity from './BaseEntity';\nimport Student from './Student';\nexport default class MedicalRecord extends BaseEntity {\n  day: number = new Date().getDate();\n  month: number = new Date().getMonth();\n  year: number = new Date().getFullYear();\n  temperature_morning?: number;\n  temperature_afternoon?: number;\n  breakfast?: boolean;\n  lunch?: boolean;\n  dinner?: boolean;\n  medicine_consumption: boolean = false;\n  genose_test?: boolean;\n  antigen_test?: boolean;\n  pcr_test?: boolean;\n  description?: string\n  student_id;\n  student?: Student;\n\n  public static clone = (obj: MedicalRecord): MedicalRecord => {\n    return Object.assign(new MedicalRecord(), obj);\n  }\n  public static instance = (student_id: number, d: number, m: number, y: number): MedicalRecord => {\n    const obj = new MedicalRecord();\n    obj.day = d;\n    obj.month = m;\n    obj.year = y;\n    obj.student_id = student_id;\n    return obj;\n  }\n}","import React, { ChangeEvent, Component, FormEvent } from 'react'\nimport BaseComponent from '../../../BaseComponent';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\nimport MedicalRecord from '../../../../models/MedicalRecord';\nimport StudentService from '../../../../services/StudentService';\nimport WebResponse from '../../../../models/commons/WebResponse';\nimport { twoDigits, monthName } from '../../../../utils/StringUtil';\nimport { resolve } from 'inversify-react';\n\nclass State {\n  record: MedicalRecord = new MedicalRecord();\n}\nclass MedicalRecordDailyInput extends BaseComponent<any, State> {\n  state = new State();\n  @resolve(StudentService)\n  private studentService: StudentService;\n  constructor(props) {\n    super(props, true);\n    this.state.record = MedicalRecord.instance(props.student.id, props.day, props.month, props.year);\n  }\n  reset = () => {\n    const props = this.props;\n    this.setState({ record: MedicalRecord.instance(props.student.id, props.day, props.month, props.year) });\n  }\n  setRecord = (record: MedicalRecord) => {\n    this.setState({ record: MedicalRecord.clone(record) });\n  }\n\n  onChange = (e: ChangeEvent) => {\n    const record = this.state.record;\n    const target = e.target as HTMLInputElement;\n    record[target.name] = target.type == 'checkbox' ? target.checked : target.value;\n    this.setState({ record: MedicalRecord.clone(record) });\n  }\n\n  recordSubmitted = (response: WebResponse) => {\n    this.showInfo(\"Data has been submitted\");\n  }\n\n  onSubmit = (e: FormEvent) => {\n    e.preventDefault();\n    const record: MedicalRecord = this.state.record;\n    record.student_id = this.props.student.id;\n    this.commonAjax(\n      this.studentService.submitMedicalRecord,\n      this.recordSubmitted,\n      this.showCommonErrorAlert,\n      record\n    )\n  }\n\n  render() {\n    const record = this.state.record;\n    const period = twoDigits(record.day) + \" \" + monthName(record.month - 1);\n    return (\n      <form onSubmit={this.onSubmit}>\n        <table className=\"table table-bordered table-striped\" style={{ fontSize: '0.8em' }}>\n          <tbody>\n            <SingleRow><h5 className='text-center'> {period}</h5></SingleRow>\n            <SingleRow>\n              <input type='number' onChange={this.onChange} placeholder=\"Suhu Pagi\" className=\"form-control\" name=\"temperature_morning\" value={record.temperature_morning ?? \"\"} />\n            </SingleRow>\n            <SingleRow>\n              <input type='number' onChange={this.onChange} placeholder=\"Suhu Sore\" className=\"form-control\" name=\"temperature_afternoon\" value={record.temperature_afternoon ?? \"\"} />\n            </SingleRow>\n            <SingleRow>\n              <Checkbox label=\"Sarapan\" onChange={this.onChange} name=\"breakfast\" checked={record.breakfast ?? false} />\n            </SingleRow>\n            <SingleRow>\n              <Checkbox label=\"Makan Siang\" onChange={this.onChange} name=\"lunch\" checked={record.lunch ?? false} />\n            </SingleRow>\n            <SingleRow>\n              <Checkbox label=\"Makan Malam\" onChange={this.onChange} name=\"dinner\" checked={record.dinner ?? false} />\n            </SingleRow>\n            <SingleRow>\n              <Checkbox label=\"Konsumsi Obat\" onChange={this.onChange} name=\"medicine_consumption\" checked={record.medicine_consumption ?? false} />\n            </SingleRow>\n            <SingleRow>\n              <Checkbox label=\"Tes Genose\" onChange={this.onChange} name=\"genose_test\" checked={record.genose_test ?? false} />\n            </SingleRow>\n            <SingleRow>\n              <Checkbox label=\"Tes Antigen\" onChange={this.onChange} name=\"antigen_test\" checked={record.antigen_test ?? false} />\n            </SingleRow>\n            <SingleRow>\n              <Checkbox label=\"Tes PCR\" onChange={this.onChange} name=\"pcr_test\" checked={record.pcr_test ?? false} />\n            </SingleRow>\n            <SingleRow>\n              <textarea placeholder=\"Catatan\" onChange={this.onChange} style={{ fontSize: '0.9em' }} name=\"description\" value={record.description ?? \"\"}\n                className=\"form-control\" rows={3} />\n            </SingleRow>\n            <SingleRow>\n              <button className=\"btn btn-success\" type=\"submit\">\n                <i className=\"fas fa-save\" /> {period}\n              </button>\n            </SingleRow>\n          </tbody>\n        </table>\n      </form>\n    )\n  }\n}\n\nconst Checkbox = (props: { onChange(e: ChangeEvent): any, label: string, name: string, checked: boolean }) => {\n\n  return (\n    <>{props.label}\n      <input type=\"checkbox\" style={{ marginRight: 5 }} className=\"form-control\"\n        onChange={props.onChange}\n        name={props.name}\n        checked={props.checked} />\n    </>\n  )\n}\nconst SingleRow = (props: { children: any }) => {\n  return (\n    <tr><td>\n      <div className=\"text-center\" style={{ minHeight: 40 }}>{props.children}</div></td></tr>\n  )\n}\n\nexport default\n  connect(\n    mapCommonUserStateToProps, null, null, { forwardRef: true }\n  )(MedicalRecordDailyInput)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\nimport StudentForm from './StudentForm';\nimport Student from '../../../../models/Student';\nimport FilterPeriod from '../../../form/FilterPeriod';\nimport Filter from '../../../../models/commons/Filter';\nimport { getMonthDays } from '../../../../utils/DateUtil';\nimport Card from '../../../container/Card';\nimport MedicalRecord from '../../../../models/MedicalRecord';\nimport MedicalRecordDailyInput from './MedicalRecordDailyInput';\nimport StudentService from '../../../../services/StudentService';\nimport WebResponse from '../../../../models/commons/WebResponse';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\nimport { doItLater } from '../../../../utils/EventUtil';\nimport BasePage from '../../BasePage';\nimport { resolve } from 'inversify-react';\nimport SimpleError from '../../../alert/SimpleError';\nclass State {\n  student?: Student;\n  month: number = new Date().getMonth() + 1;\n  year: number = new Date().getFullYear();\n  mappedItems: Map<number, MedicalRecord> = new Map()\n}\nclass MedicalRecordForm extends BasePage<any, State> {\n  state = new State();\n  @resolve(StudentService)\n  private studentService: StudentService;\n  private inputRefs: Map<number, any> = new Map();\n  constructor(props) {\n    super(props, \"Medical Record\", true);\n  }\n  setStudent = (student: Student | undefined) => {\n    if (student) {\n      student = Object.assign(new Student(), student);\n    }\n    this.setState({ student: student }, this.loadMonthlyRecord);\n  }\n  validateStudentData = () => {\n    const student = this.props.location.state ? this.props.location.state.student : undefined;\n    if (student) {\n      this.setStudent(student);\n    }\n  }\n\n  reset = () => {\n    doItLater(() => {\n      if (this.state.student)\n        this.inputRefs.forEach((ref: any, day: number) => {\n          if (ref) { ref.reset(); }\n        })\n    }, 100);\n  }\n  recordsLoaded = (response: WebResponse) => {\n\n    const mappedItems: Map<number, MedicalRecord> = this.toMap(response.items);\n\n    this.setState({ mappedItems }, () => {\n      doItLater(() => {\n        this.inputRefs.forEach((ref: any, day: number) => {\n          let record = mappedItems.get(day);\n          if (!record) {\n            record = MedicalRecord.instance(this.state.student?.id ?? 0, day, this.state.month, this.state.year);\n          } else {\n            record = MedicalRecord.clone(record);\n          }\n          if (ref) {\n            ref.setRecord(record);\n          }\n        })\n      }, 100);\n    });\n  }\n\n\n  toMap = (items: MedicalRecord[]) => {\n    const map = new Map<number, MedicalRecord>();\n    for (let i = 0; i < items.length; i++) {\n      const item = items[i];\n      map.set(item.day, item);\n    }\n    return map;\n  }\n\n  loadMonthlyRecord = () => {\n    this.commonAjax(\n      this.studentService.loadMonthlyMedicalRecord,\n      this.recordsLoaded, this.showCommonErrorAlert,\n      this.state.student?.id, this.state.month, this.state.year\n    )\n  }\n\n  getFilter = (): Filter => {\n    const f = new Filter();\n    // f.month = this.state.month;\n    // f.year = this.state.year;\n    return f;\n  }\n\n  componentDidMount() {\n    this.validateLoginStatus(() => {\n      this.scrollTop();\n      this.validateStudentData();\n    });\n  }\n  dayCount = () => {\n    return getMonthDays(this.state.month, this.state.year);\n  }\n  render() {\n    const student = this.state.student;\n    const filter = this.getFilter();\n    const dayCount = this.dayCount();\n    const days: number[] = [];\n    for (let i = 1; i <= dayCount; i++) {\n      days.push(i);\n    }\n    const gridTemplateColumns = ('150px ').repeat(dayCount);\n\n    return (\n      <div className=\"container-fluid section-body\">\n        <h2> {student ? student.user?.fullName : this.title}</h2>\n        <hr />\n        <StudentForm setItem={this.setStudent} />\n        <p />\n        {student ?\n          <Card>\n            <div className=\"input-group\">\n              <FilterPeriod date={new Date()} disableDay onChange={this.handleInputChange} />\n              <div className=\"input-group-append\">\n                <AnchorWithIcon iconClassName=\"fas fa-redo\" onClick={this.loadMonthlyRecord}>Load Data</AnchorWithIcon>\n              </div>\n            </div>\n            <hr />\n            <div className=\"container-fluid  row\">\n              <div className=\"col-12\" style={{ overflow: 'auto' }}>\n                <div style={{ display: 'grid', gridTemplateColumns: gridTemplateColumns }}>\n\n                  {days.map(day =>\n                    <MedicalRecordDailyInput key={\"record-input-\" + day} student={student}\n                      ref={ref => { this.inputRefs.set(day, ref) }}\n                      year={this.state.year}\n                      month={this.state.month} day={day} />)}\n                </div>\n              </div>\n            </div>\n          </Card>\n          : <Warning />}\n      </div>\n    )\n  }\n\n}\n\n\nconst Warning = () => {\n  return (<SimpleError>\n    <i className=\"fas fa-exclamation-circle mr-2\" /><span>Please select student</span><hr />\n    <AnchorWithIcon to={\"/asrama/studentlist\"} iconClassName=\"fas fa-list\">Student List</AnchorWithIcon>\n  </SimpleError>)\n}\n\nexport default withRouter(\n  connect(\n    mapCommonUserStateToProps\n  )(MedicalRecordForm)\n)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport FormGroup from '../../form/FormGroup';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport Card from './../../container/Card';\r\n\r\nclass AboutUs extends BaseComponent<any, any> {\r\n  constructor(props) {\r\n    super(props, false);\r\n  }\r\n  componentDidMount() {\r\n    document.title = \"About Us\";\r\n  }\r\n  render() {\r\n    const appProfile = this.getApplicationProfile();\r\n    return (\r\n      <div className=\"section-body container-fluid mt-2\">\r\n        <h2>About Us</h2>\r\n        <Card title=\"Application\">\r\n          <FormGroup label=\"Name\">{appProfile.appName}</FormGroup>\r\n          <FormGroup><i>{appProfile.appDescription}</i></FormGroup>\r\n          <FormGroup label=\"Contact\">{appProfile.contact}</FormGroup>\r\n          <FormGroup label=\"Address\">{appProfile.address}</FormGroup>\r\n        </Card>\r\n        <p />\r\n        <Card title=\"Development Mode\">\r\n          {/* <FormGroup label=\"Repository\"><a target=\"_blank\" href=\"https://github.com/fajaralmu\">https://github.com/fajaralmu</a></FormGroup>\r\n                <FormGroup label=\"Front End\">React Js</FormGroup>\r\n                <FormGroup><a target=\"_blank\" href=\"https://github.com/fajaralmu/front-end-shopping-mart-v2\">https://github.com/fajaralmu/front-end-shopping-mart-v2</a></FormGroup>\r\n                <FormGroup label=\"Back End\">Java, Spring MVC</FormGroup>\r\n                <FormGroup><a target=\"_blank\" href=\"https://github.com/fajaralmu/universal-good-shop-v2\">https://github.com/fajaralmu/universal-good-shop-v2</a></FormGroup> */}\r\n        </Card>\r\n        <p />\r\n      </div>);\r\n  }\r\n}\r\nexport default withRouter(connect(\r\n  mapCommonUserStateToProps,\r\n)(AboutUs))","import React, { FormEvent } from 'react'\nimport BaseComponent from '../../BaseComponent';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\nimport MasterDataService from '../../../services/MasterDataService';\nimport Student from '../../../models/Student';\nimport WebRequest from '../../../models/commons/WebRequest';\nimport Filter from '../../../models/commons/Filter';\nimport WebResponse from '../../../models/commons/WebResponse';\nimport AnchorWithIcon from '../../navigation/AnchorWithIcon';\nimport './style.css'\nimport { resolve } from 'inversify-react';\n\nclass State {\n  items: Student[] = [];\n  keyword: string = \"\";\n}\nclass ClassMemberSearchForm extends BaseComponent<any, State> {\n  state = new State();\n  @resolve(MasterDataService)\n  private masterDataService: MasterDataService;\n  constructor(props) {\n    super(props, true);\n  }\n  itemsLoaded = (response: WebResponse) => {\n    this.setState({ items: response.result });\n  }\n\n  loadItems = (e: FormEvent) => {\n    e.preventDefault();\n    if (\"\" == this.state.keyword) return;\n    const req: WebRequest = {\n      filter: new Filter(),\n      modelName: 'classmembers',\n    }\n    if (req.filter)\n      req.filter.fieldsFilter = {\n        'student.user.fullName': this.state.keyword\n      }\n    this.commonAjax(\n      this.masterDataService.list,\n      this.itemsLoaded,\n      this.showCommonErrorAlert,\n      req,\n      'school-data'\n    )\n  }\n  select = (s: Student) => {\n    console.log('select', s);\n    this.props.selectItem(s);\n    this.setState({ items: [], keyword: \"\" });\n  }\n  reset = () => this.setState({ items: [] });\n\n  render() {\n\n    return (\n      <form id=\"form-search-student\" onSubmit={this.loadItems}>\n        <div className=\"mb-3\" style={{ position: 'absolute' }}>\n          <div className=\"input-group\">\n            <input name=\"keyword\" className=\"form-control\" onChange={this.handleInputChange} value={this.state.keyword}\n              placeholder=\"Cari Nama\" />\n            <input type=\"submit\" value=\"Cari\" className=\"btn btn-secondary\" />\n          </div>\n          {this.state.items.length > 0 ?\n            <div className=\"bg-light border rounded border-secondary\" style={{ position: 'relative', zIndex: 10, padding: 3 }}>\n              {this.state.items.map(s => {\n                return (\n                  <div onClick={() => this.select(s)} className=\"option-item\" key={`s_form_${s.id}`}>\n                    {s.name} {s.classLevel}{s.classLetter} {s.schoolName}\n                  </div>\n                )\n              })}\n              <AnchorWithIcon iconClassName=\"fas fa-times\" className=\"btn btn-dark w-100\" onClick={this.reset} >Tutup</AnchorWithIcon>\n            </div>\n            : null}\n        </div>\n      </form>\n    )\n  }\n\n}\n\nexport default withRouter(\n  connect(\n    mapCommonUserStateToProps\n  )(ClassMemberSearchForm)\n)","import React, { ChangeEvent, FormEvent } from 'react'\nimport BasePage from '../../BasePage';\nimport { withRouter, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\nimport PointRecord from '../../../../models/PointRecord';\nimport FormGroup from '../../../form/FormGroup';\nimport Class from '../../../../models/Class';\nimport StudentService from '../../../../services/StudentService';\nimport WebResponse from '../../../../models/commons/WebResponse';\nimport Category from '../../../../models/Category';\nimport WebRequest from '../../../../models/commons/WebRequest';\nimport RulePoint from '../../../../models/RulePoint';\nimport MasterDataService from '../../../../services/MasterDataService';\nimport InputTime from '../../../form/InputTime';\nimport { parseDate } from '../../../../utils/DateUtil';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\nimport AttachmentInfo from '../../../../models/settings/AttachmentInfo';\nimport { getAttachmentInfoFromFile } from '../../../../utils/ComponentUtil';\nimport Student from '../../../../models/Student';\nimport StudentSearchForm from '../../shared/StudentSearchForm';\nimport ClassMemberSearchForm from '../../shared/ClassMemberSearchForm';\nimport { resolve } from 'inversify-react';\n\nclass State {\n  record = new PointRecord();\n  categories: Category[] = [];\n  pointsMap: Record<number, RulePoint[]> = {};\n\n  selectedCategoryId?: number = 0;\n  selectedPointId?: number = 0;\n\n  attachment: AttachmentInfo | undefined;\n  editMode = false;\n  editModeRemoveImage = false;\n}\nclass PointRecordEdit extends BasePage<any, State> {\n  state = new State();\n  @resolve(StudentService)\n  private studentService: StudentService;\n  @resolve(MasterDataService)\n  private masterDataService: MasterDataService;\n  private inputTimeRef = React.createRef<InputTime>();\n  constructor(props) {\n    super(props, \"Edit Pelanggaran\", true);\n  }\n\n  componentReady() {\n    this.checkPassedData();\n    this.loadCategories();\n  }\n\n  categoriesLoaded = (response: WebResponse) => {\n    this.setState({ categories: response.result.items });\n  }\n\n  loadCategories = () => {\n    this.commonAjax(\n      this.studentService.getCategories,\n      this.categoriesLoaded,\n      this.showCommonErrorAlert\n    );\n  }\n  rulePointsLoaded = (categoryId: string, response: WebResponse) => {\n    const pointsMap = this.state.pointsMap;\n    pointsMap[categoryId.toString()] = response.result.items;\n    this.setState({ pointsMap });\n  }\n  loadRulePoints = (catId: string) => {\n    if (catId === '' || this.state.pointsMap[catId] != undefined) {\n      return;\n    }\n    const req: WebRequest = {\n      filter: { limit: 0, fieldsFilter: { 'category.id=': catId }, orderBy: 'name' },\n      modelName: 'rule-points',\n    }\n    this.commonAjax(\n      this.masterDataService.list,\n      (resp) => this.rulePointsLoaded(catId, resp),\n      this.showCommonErrorAlert,\n      req,\n      'asrama'\n    )\n  }\n  checkPassedData = () => {\n    if (this.props.location && this.props.location.state) {\n      const record = PointRecord.clone(this.props.location.state.record);\n      this.setState({\n        editMode: true,\n        record,\n        selectedCategoryId: record.ruleCategoryId,\n        attachment: this.props.location.state.attachment\n      }, this.updateInput);\n      this.loadRulePoints(record.ruleCategoryId?.toString() ?? '');\n    }\n  }\n  updateInput = () => {\n    /**\n     * time\n     */\n    if (this.inputTimeRef.current) {\n      this.inputTimeRef.current.updateFromProps();\n    }\n    /**\n     * etc\n     */\n  }\n  updateRecordField = (e: ChangeEvent) => {\n    const { record } = this.state;\n    const el = e.target as HTMLElement;\n    const name = el['name'];\n    const value = el['value']\n    record[name] = value;\n    this.setState({ record });\n  }\n  setSelectedRulePoint = (p: RulePoint) => {\n    const { record, selectedCategoryId } = this.state;\n    record.rulePointId = p.id;\n    record.point = p.point;\n    record.ruleName = p.name;\n    record.ruleCategoryId = selectedCategoryId;\n    this.setState({ record });\n  }\n  updateTime = (h: number, m: number, s: number) => {\n    const { record } = this.state;\n    record.setTime(h, m, s);\n    this.setState({ record });\n  }\n  updateDate = (e: ChangeEvent<HTMLInputElement>) => {\n    const date = parseDate(e.target.value);\n    const { record } = this.state;\n    record.time = date;\n    this.setState({ record: record });\n  }\n  submit = () => {\n    const { editMode, editModeRemoveImage } = this.state;\n    if (editMode) {\n      this.commonAjax(\n        this.studentService.updatePointRecord,\n        this.recordSubmitted,\n        this.showCommonErrorAlert,\n        this.state.record,\n        this.state.attachment,\n        editModeRemoveImage\n      )\n    } else {\n      this.commonAjax(\n        this.studentService.insertPointRecord,\n        this.recordSubmitted,\n        this.showCommonErrorAlert,\n        this.state.record,\n        this.state.attachment\n      )\n    }\n  }\n  recordSubmitted = (r: WebResponse) => {\n    this.setState({ record: new PointRecord(), attachment: undefined, selectedCategoryId: undefined }, () => {\n      this.showInfo(\"Data berhasil disimpan\");\n      this.scrollTop();\n    })\n  }\n  validateInput = () => {\n    const { classMemberId, rulePointId } = this.state.record;\n    return (classMemberId && rulePointId)\n  }\n  onSubmit = (e: FormEvent) => {\n    e.preventDefault();\n    if (!this.validateInput()) {\n      this.showError(\"Input tidak lengkap\");\n      return;\n    }\n    this.showConfirmation(\"Simpan data?\")\n      .then(ok => {\n        if (ok) { this.submit(); }\n      })\n  }\n  onRemoveImageOptionChanged = (e: ChangeEvent<HTMLInputElement>) => {\n    this.setState({ editModeRemoveImage: e.target.checked });\n  }\n  removeImage = () => {\n    this.showConfirmationDanger(\"Hapus gambar?\")\n      .then(ok => {\n        if (ok) {\n          const { record } = this.state;\n          record.pictures = [];\n          this.setState({ record, attachment: undefined });\n        }\n      })\n  }\n  updatePicture = (e: ChangeEvent) => {\n    getAttachmentInfoFromFile(e.target as HTMLInputElement)\n      .then(attachment => {\n        this.setState({ attachment });\n      }).catch(console.error)\n  }\n  setStudent = (s: Student) => {\n    const { record } = this.state;\n    record.studentName = s.name\n    record.classMemberId = s.id;\n    record.classLetter = s.classLetter;\n    record.classLevel = s.classLevel;\n    record.schoolName = s.schoolName;\n    this.setState({ record });\n  }\n\n  updateCategory = (e: ChangeEvent<HTMLSelectElement>) => {\n    this.handleInputChange(e);\n    this.loadRulePoints(e.target.value);\n  }\n\n  updateRulePoint = (e: ChangeEvent<HTMLSelectElement>) => {\n    const { selectedCategoryId, pointsMap } = this.state;\n    if (!selectedCategoryId) return;\n    const filtered = pointsMap[selectedCategoryId].filter((r) => r.id?.toString() == e.target.value);\n    if (filtered.length == 0) return;\n    this.setSelectedRulePoint(filtered[0]);\n  }\n\n  render() {\n    const { editMode, editModeRemoveImage, record, selectedCategoryId, pointsMap, attachment } = this.state;\n    const pictureUrl = attachment ? attachment.url : record.getPicture();\n\n    return (\n      <div className=\"section-body container-fluid\">\n        <h2>Form Input Pelanggaran</h2>\n        <hr />\n        <FormGroup label=\"Siswa\" >\n          <ClassMemberSearchForm selectItem={this.setStudent} />\n        </FormGroup>\n        {\n          record.classMemberId &&\n          <FormGroup>\n            <div>{record.studentName} {record.classLevel}{record.classLetter} {record.schoolName}\n            </div>\n          </FormGroup>\n        }\n        <form onSubmit={this.onSubmit}>\n          <FormGroup label=\"Pelanggaran\">\n            <p>{record.ruleName ?? '-'} {record.point ?? ''}</p>\n            <p />\n            <select value={selectedCategoryId} name=\"selectedCategoryId\" onChange={this.updateCategory} className=\"form-control\">\n              <option value=\"\">Pilih Kategori</option>\n              {this.state.categories.map((cat: Category) => {\n                return (\n                  <option key={`cat_ed_opt_${cat.id}`} value={cat.id}>\n                    {cat.name}\n                  </option>\n                )\n              })}\n            </select>\n            <p />\n            <select value={record.rulePointId} className=\"form-control\" onChange={this.updateRulePoint} >\n              <option value=\"\">Pilih Pelanggaran</option>\n              {\n                selectedCategoryId &&\n                pointsMap[selectedCategoryId] &&\n                pointsMap[selectedCategoryId].map(p => {\n                  return (\n                    <option key={`rp_ed_opt_${p.id}`} value={p.id}>\n                      {p.name} ({p.point})\n                    </option>\n                  );\n                })\n              }\n            </select>\n          </FormGroup>\n          <FormGroup label=\"Tanggal\">\n            <input type=\"date\" className=\"form-control\" onChange={this.updateDate} name=\"date\" value={record.dateString()} />\n          </FormGroup>\n          <FormGroup label=\"Waktu\">\n            <InputTime ref={this.inputTimeRef} onChange={this.updateTime} value={record.timeString} />\n          </FormGroup>\n          <FormGroup label=\"Lokasi\">\n            <input type=\"text\" name=\"location\" onChange={this.updateRecordField} className=\"form-control\" value={record.location ?? \"\"} />\n          </FormGroup>\n          <FormGroup label=\"Deskripsi\">\n            <textarea className=\"form-control\" name=\"description\" onChange={this.updateRecordField} value={record.description ?? \"\"} />\n          </FormGroup>\n          <FormGroup label=\"Gambar\">\n            <div>\n              <img\n                src={pictureUrl ?? ''}\n                width={200}\n                height={200}\n                className=\"border border-dark mb-2\"\n              />\n            </div>\n            {\n              attachment &&\n              <AnchorWithIcon className=\"btn btn-danger btn-sm\" onClick={this.removeImage} iconClassName=\"fas fa-times\"  >Hapus Gambar</AnchorWithIcon>\n            }\n            <div>\n              <input\n                onChange={this.updatePicture}\n                type=\"file\"\n                accept=\"image/*\"\n                className=\"form-control\"\n              />\n            </div>\n          </FormGroup>\n          {\n            editMode &&\n            <FormGroup label=\"Hapus Gambar\">\n              <input id=\"remove-img-check\" type=\"checkbox\" checked={editModeRemoveImage} onChange={this.onRemoveImageOptionChanged} />\n              <label htmlFor=\"remove-img-check\" className=\"ml-2\">Hapus Gambar</label>\n            </FormGroup>\n          }\n          <FormGroup>\n            <Link className=\"btn btn-dark\" to=\"/asrama/pointsummary\">Kembali</Link>\n            <input type=\"submit\" className=\"btn btn-primary ml-3\" value=\"Submit\" />\n          </FormGroup>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(connect(mapCommonUserStateToProps)(PointRecordEdit))\n","import React from 'react'\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from './../../../../constant/stores';\nimport BasePage from './../../BasePage';\nimport StudentService from './../../../../services/StudentService';\nimport Student from './../../../../models/Student';\nimport { tableHeader } from './../../../../utils/CollectionUtil';\nimport WebResponse from './../../../../models/commons/WebResponse';\nimport Class from './../../../../models/Class';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\nimport { resolve } from 'inversify-react';\n\ninterface FollowUpInfo {\n  student: Student,\n  TOTAL_POINT: any,\n  FOLLOW_UP_COUNT: number,\n}\nclass State {\n  followUpInfos: FollowUpInfo[] = [];\n}\nclass FollowUpReminder extends BasePage<any, State> {\n  state = new State();\n  @resolve(StudentService)\n  private studentService: StudentService;\n  constructor(props) {\n    super(props, \"Follow Up Pelanggaran\", true);\n  }\n  componentReady() {\n    // if (this.isAdmin()) return;\n    this.loadReminder();\n  }\n  loadReminder = () => {\n    this.commonAjax(\n      this.studentService.getFollowUpReminders,\n      this.recordsLoaded,\n      console.error\n    )\n  }\n  recordsLoaded = (r: WebResponse) => {\n    this.setState({ followUpInfos: r.items });\n  }\n\n  render() {\n\n    return (\n      <div className=\"section-body container-fluid\">\n        <h2>Follow Up Pelanggaran</h2>\n        <p>Pelanggaran dengan poin di bawah {this.getApplicationProfile().warningPointLimit}</p>\n        <AnchorWithIcon iconClassName=\"fas fa-redo\" onClick={this.loadReminder} children=\"Reload\" />\n        <table className=\"table\">\n          {tableHeader(\"No\", \"Siswa\", \"Kelas\", \"Poin\", \"Penanganan\", \"Opsi\")}\n          <tbody>\n            {this.state.followUpInfos.map((info, i) => {\n              return (\n                <tr key={`f-i-${i}`}>\n                  <td>{i + 1}</td>\n                  <td>{info.student.user?.fullName}</td>\n                  <td>{Class.studentClassString(info.student)}</td>\n                  <td>{info.TOTAL_POINT}</td>\n                  <td>{info.FOLLOW_UP_COUNT}</td>\n                  <td>\n                    <a className=\"btn btn-info btn-sm\" >\n                      Follow Up\n                    </a>\n                  </td>\n                </tr>\n              )\n            })}\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapCommonUserStateToProps\n  )(FollowUpReminder)\n)","\nimport BaseEntity from './BaseEntity';\n\nexport default class WarningAction extends BaseEntity {\n    name: string = \"SP1\";\n    description: string | undefined;\n    classMemberId?: number;\n    classLevel?: number;\n    classLetter?: string;\n    // time?: Date;\n    // location?: string;\n\n    classMemberName?: string;\n    schoolName?: string;\n}","import React, { ChangeEvent } from 'react'\nimport BaseManagementPage from './BaseManagementPage';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\nimport WarningAction from '../../../models/WarningAction';\nimport Filter from './../../../models/commons/Filter';\nimport WebRequest from './../../../models/commons/WebRequest';\nimport FormGroup from './../../form/FormGroup';\nimport NavigationButtons from './../../navigation/NavigationButtons';\nimport { tableHeader } from './../../../utils/CollectionUtil';\nimport EditDeleteButton from './EditDeleteButton';\nimport Class from './../../../models/Class';\nimport Modal from './../../container/Modal';\nimport StudentSearchForm from '../shared/StudentSearchForm';\nimport Student from './../../../models/Student';\nimport BaseEntity from './../../../models/BaseEntity';\nimport ClassMemberSearchForm from '../shared/ClassMemberSearchForm';\nclass State {\n  items: WarningAction[] = [];\n  filter: Filter = new Filter();\n  totalData: number = 0;\n  record: WarningAction = new WarningAction();\n}\nconst MODEL_NAME = 'warning-letters';\nconst MENU = 'asrama';\nclass WarningActionManagement extends BaseManagementPage<any, State> {\n  state = new State();\n  constructor(props) {\n    super(props, MODEL_NAME, MENU);\n  }\n  setStudent = (s: Student) => {\n    const { record } = this.state;\n    record.classMemberId = s.id;\n    record.classMemberName = s.name;\n    record.classLetter = s.classLetter;\n    record.classLevel = s.classLevel;\n    record.schoolName = s.schoolName;\n    this.setState({ record });\n  }\n  emptyRecord = () => new WarningAction();\n  onSubmit = () => {\n    if (!this.state.record.classMemberId) {\n      this.showError(\"Input tidak lengkap\");\n      return;\n    }\n    this.showConfirmation(\"Submit Data?\")\n      .then(ok => {\n        if (!ok) return;\n        if (this.state.record.id ?? 0 > 0) {\n          this.callApiUpdate(this.state.record.id, this.state.record);\n        } else {\n          this.callApiInsert(this.state.record);\n        }\n      })\n  }\n  render() {\n    const { filter } = this.state;\n    return (\n      <div className=\"container-fluid section-body\">\n        <h2>Peringatan</h2>\n        <hr />\n        {\n          this.isAdmin() &&\n          <RecordForm\n            formRef={this.formRef}\n            setStudent={this.setStudent}\n            resetForm={this.resetForm}\n            onSubmit={this.onSubmit}\n            record={this.state.record}\n            updateRecordProp={this.updateRecordProp}\n          />\n        }\n        <form onSubmit={this.reload}>\n          <FormGroup label=\"Cari\">\n            <select name=\"name\" className=\"form-control-sm\" value={filter.fieldsFilter['name'] ?? \"\"} onChange={this.updateFieldsFilter}>\n              <option value=\"\">Semua</option>\n              <option>SP1</option>\n              <option>SP2</option>\n              <option>SP3</option>\n            </select>\n            <input name=\"classMember.student.user.fullName\" placeholder=\"nama siswa\" className=\"form-control-sm\" value={filter.fieldsFilter['classMember.student.user.fullName'] ?? \"\"} onChange={this.updateFieldsFilter} />\n          </FormGroup>\n          <FormGroup label=\"Jumlah Tampilan\">\n            <input name=\"limit\" type=\"number\" className=\"form-control-sm\" value={filter.limit ?? 5} onChange={this.updateFilter} />\n          </FormGroup>\n          <FormGroup>\n            <input className=\"btn btn-primary btn-sm\" type=\"submit\" value=\"Submit\" />\n          </FormGroup>\n        </form>\n        <NavigationButtons\n          activePage={filter.page ?? 0}\n          limit={filter.limit ?? 10}\n          totalData={this.state.totalData}\n          onClick={this.loadAtPage}\n        />\n        <ItemsList\n          items={this.state.items}\n          isAdmin={this.isAdmin()}\n          recordLoaded={this.oneRecordLoaded}\n          recordDeleted={this.loadItems}\n          startingNumber={(filter.page ?? 0) * (filter.limit ?? 10)}\n        />\n      </div>\n    )\n  }\n\n}\ninterface ItemProps { isAdmin: boolean, startingNumber: number, items: WarningAction[], recordLoaded(item: any), recordDeleted() }\nconst ItemsList = (props: ItemProps) => {\n\n  return (\n    <div style={{ overflow: 'auto' }}>\n      <table className=\"table table-striped\">\n        {tableHeader(\"No\", \"Siswa\", \"Kelas\", \"Nama\", \"Deskripsi\", \"Tgl Simpan\", \"Opsi\")}\n        <tbody>\n          {props.items.map((item: WarningAction, i) => {\n            return (\n              <tr key={\"category-\" + i}>\n                <td>{i + 1 + props.startingNumber}</td>\n                <td>{item.classMemberName}</td>\n                <td>{item.classLevel}{item.classLetter} {item.schoolName}</td>\n                <td>{item.name}</td>\n                <td>{item.description}</td>\n                <td>{item.created_at}</td>\n                <td>{props.isAdmin &&\n                  <EditDeleteButton\n                    recordLoaded={props.recordLoaded}\n                    recordDeleted={props.recordDeleted}\n                    record={item}\n                    modelName={MODEL_NAME}\n                    menu={MENU}\n                  />\n                }\n                </td>\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n    </div>\n  )\n}\nconst RecordForm = (props: { formRef: React.RefObject<Modal>, setStudent(s: Student), updateRecordProp(e: ChangeEvent): any, resetForm(): any, onSubmit(): any, record: WarningAction }) => {\n  const record = props.record;\n  return (\n    <div className=\"record-form mb-3\" >\n      <Modal show={false} ref={props.formRef} toggleable={true} title=\"Record Form\" >\n        <FormGroup label=\"Siswa\">\n          <ClassMemberSearchForm selectItem={props.setStudent} />\n        </FormGroup>\n        <FormGroup>\n          {record.classMemberName ?? ''} {record.classLevel ?? ''}{record.classLetter ?? ''} {record.schoolName ?? ''}\n        </FormGroup>\n        <form onSubmit={(e) => { e.preventDefault(); props.onSubmit() }}>\n          <FormGroup label=\"Nama\">\n            <select required value={record.name} onChange={props.updateRecordProp} className=\"form-control\" name=\"name\" >\n              <option>SP1</option>\n              <option>SP2</option>\n              <option>SP3</option>\n            </select>\n          </FormGroup>\n          <FormGroup label=\"Deskripsi\">\n            <textarea required className=\"form-control\" name=\"description\" onChange={props.updateRecordProp} value={record.description ?? \"\"} />\n          </FormGroup>\n          <FormGroup>\n            <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-sm mr-2\" />\n            <input type=\"reset\" className=\"btn btn-secondary btn-sm\" onClick={(e) => props.resetForm()} />\n          </FormGroup>\n        </form>\n      </Modal>\n    </div>\n  )\n}\n\nexport default withRouter(\n  connect(\n    mapCommonUserStateToProps\n  )(WarningActionManagement)\n)","import 'reflect-metadata';\nimport { injectable } from 'inversify';\nimport { contextPath } from './../constant/Url';\nimport ApplicationProfile from './../models/ApplicationProfile';\nimport { commonAjaxGetCalls, commonAjaxPostCalls } from './Promises';\n\n@injectable()\nexport default class ConfigurationService {\n  update = (appProfile: ApplicationProfile) => {\n    const endpoint = contextPath().concat('api/admin/asrama/config');\n    return commonAjaxPostCalls(endpoint, appProfile);\n  }\n  loadConfig = () => {\n    const endpoint = contextPath().concat('api/admin/asrama/config');\n    return commonAjaxGetCalls(endpoint);\n  }\n}","import React, { ChangeEvent } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport FormGroup from '../../form/FormGroup';\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\nimport ApplicationProfile from './../../../models/ApplicationProfile';\nimport ConfigurationService from './../../../services/ConfigurationService';\nimport BasePage from './../BasePage';\nimport { resolve } from 'inversify-react';\n\nclass State {\n  applicationProfile: ApplicationProfile = {}\n}\nclass ConfigSettingPage extends BasePage<any, State> {\n  readonly state = new State();\n  @resolve(ConfigurationService)\n  readonly configService: ConfigurationService;\n  constructor(props) {\n    super(props, \"Konfigurasi\", true);\n  }\n\n  componentReady() {\n    const applicationProfile = Object.assign({}, this.getApplicationProfile());\n    this.setState({ applicationProfile });\n  }\n\n  submit = () => {\n    this.commonAjax(\n      this.configService.update,\n      this.configUpdated,\n      this.showCommonErrorAlert,\n      this.state.applicationProfile\n    )\n  }\n  updateField = (e: ChangeEvent<HTMLInputElement>) => {\n    const { applicationProfile } = this.state;\n    applicationProfile[e.target.name] = e.target.type === 'number' ? parseInt(e.target.value) : e.target.value;\n    this.setState({ applicationProfile });\n  }\n  configUpdated = () => {\n    this.showInfo(\"Sukses, silakan muat ulang halaman\");\n  }\n  render() {\n    const {applicationProfile: profile} = this.state;\n    return (\n      <div className=\"container-fluid section-body\" >\n        <h2>Konfigurasi</h2>\n        <hr />\n        <div style={{ padding: 20 }} className=\"border border-secondary rounded\">\n          <form>\n            <FormGroup label=\"Nama Aplikasi\">\n              <input name='appName' onChange={this.updateField} className=\"form-control\" value={profile.appName ?? \"\"} required />\n            </FormGroup>\n            <FormGroup label=\"Deskripsi Aplikasi\">\n              <input name='appDescription' onChange={this.updateField} className=\"form-control\" value={profile.appDescription ?? \"\"} />\n            </FormGroup>\n            <FormGroup label=\"Batas Poin Peringatan\">\n              <input name='warningPointLimit' onChange={this.updateField} className=\"form-control\" type=\"number\" value={profile.warningPointLimit ?? -30} required />\n            </FormGroup>\n            <FormGroup label=\"Tanggal Rapor\">\n              <input name='reportDate' onChange={this.updateField} className=\"form-control\" value={profile.reportDate ?? ''} required />\n            </FormGroup>\n          </form>\n          <FormGroup>\n            <button className=\"btn btn-primary\" onClick={this.submit} >\n              Simpan\n            </button>\n          </FormGroup>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapCommonUserStateToProps\n  )(ConfigSettingPage)\n);","import React from 'react'\nimport BasePage from './../BasePage';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\nimport StudentService from './../../../services/StudentService';\nimport Class from './../../../models/Class';\nimport WebResponse from './../../../models/commons/WebResponse';\nimport FormGroup from '../../form/FormGroup';\nimport AttachmentInfo from './../../../models/settings/AttachmentInfo';\nimport { tableHeader } from './../../../utils/CollectionUtil';\nimport { contextPath } from './../../../constant/Url';\nimport { resolve } from 'inversify-react';\nimport StudentReportSummary from './StudentReportSummary';\nimport './StudentSemesterReport.scss';\n\nclass State {\n  classes: Class[] = [];\n  items: StudentReportSummary[] = [];\n}\n\nclass StudentSemesterReport extends BasePage<any, State> {\n  state = new State();\n  @resolve(StudentService)\n  private studentService: StudentService;\n  selectClassRef = React.createRef<HTMLSelectElement>();\n  constructor(props) {\n    super(props, \"Rapor Semester\", true);\n  }\n\n  componentReady() {\n    this.commonAjax(\n      this.studentService.getClasses,\n      this.classesLoaded,\n      this.showCommonErrorAlert\n    );\n  }\n\n  loadRaporData = (e: any) => {\n    if (e && e.preventDefault) {\n      e.preventDefault();\n    }\n    if (!this.selectClassRef.current) {\n      return;\n    }\n    const { value: classId } = this.selectClassRef.current;\n    this.commonAjax(\n      this.studentService.getRaporData,\n      this.raporDataLoaded,\n      this.showCommonErrorAlert,\n      classId\n    )\n  }\n  downloadData = () => {\n    if (!this.selectClassRef.current) {\n      return;\n    }\n    const { value: classId } = this.selectClassRef.current;\n    this.commonAjax(\n      this.studentService.downloadRaporData,\n      this.reportCreated,\n      this.showCommonErrorAlert,\n      classId\n    )\n  }\n  downloadRapor = () => {\n    if (!this.selectClassRef.current) {\n      return;\n    }\n    const { value: classId } = this.selectClassRef.current;\n    window.open(contextPath(`pages/asrama/report/${classId}`));\n  }\n\n  reportCreated = (attachment: AttachmentInfo) => {\n    this.showConfirmation(`Save File ${attachment.name}?`)\n      .then((ok) => {\n        if (!ok) return;\n        Object.assign(document.createElement('a'), {\n          target: '_blank',\n          download: attachment.name,\n          style: { display: 'none' },\n          href: attachment.url,\n        }).click();\n      })\n\n  }\n\n  classesLoaded = (response: WebResponse) => {\n    this.setState({ classes: response.result });\n  }\n  raporDataLoaded = (response: WebResponse) => {\n    this.setState({ items: response.result });\n  }\n  get reportHeader() {\n    const headers = ['No', 'Siswa', 'Kelas']\n    const { items } = this.state;\n    if (items.length == 0) return [];\n\n    items[0].categories.forEach((cat) => {\n      headers.push(cat.name);\n      headers.push(\"Predikat\");\n      headers.push(\"Keterangan\");\n    });\n    return headers;\n  }\n  render() {\n    const { classes, items } = this.state;\n\n    return (\n      <div className=\"container-fluid section-body\">\n        <h2>{this.title}</h2>\n        <form onSubmit={this.loadRaporData} className=\"mt-5\">\n          <FormGroup label=\"Kelas\">\n            <select ref={this.selectClassRef} className=\"form-control\">\n              {classes.map((c) => {\n                const { level, letter, id, schoolName } = c;\n                return <option key={`rapor_class_${id}`} value={id}>{level}{letter} {schoolName}</option>\n              })}\n            </select>\n          </FormGroup>\n          <FormGroup>\n            <input type=\"submit\" className=\"btn btn-success\" value=\"Load Data\" />\n            <a className=\"btn btn-link ml-2\" onClick={this.downloadData} >Download Detail Data</a>\n            <a className=\"btn btn-link ml-2\" onClick={this.downloadRapor} >Download Rapor</a>\n          </FormGroup>\n        </form>\n        {\n          items.length == 0 ?\n            <div className=\"alert alert-warning\">Tidak ada data</div> :\n            <div className=\"mt-5 bg-white border border-secondary\" style={{ overflow: 'auto' }}>\n              <table id=\"table-report-summary\" className=\"table table-striped\">\n                {tableHeader(...this.reportHeader)}\n                <tbody>\n                  {items.map((item, i) => {\n                    const { classMember, categories } = item;\n                    return (\n                      <tr key={`report_sum_${classMember.id}`} >\n                        <td>{i + 1}</td>\n                        <td>{classMember.name}</td>\n                        <td>{classMember.classLevel}{classMember.classLetter}</td>\n                        {categories.map((c) => {\n                          return (\n                            <React.Fragment key={`cat_items_${c.categoryId}_${classMember.id}`}>\n                              <td>{c.score}</td>\n                              <td children={c.predicateLetter} />\n                              <td children={c.predicateDescription} />\n                            </React.Fragment>\n                          )\n                        })}\n                      </tr>\n                    )\n                  })}\n                </tbody>\n              </table>\n            </div>\n        }\n      </div>\n    )\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapCommonUserStateToProps\n  )(StudentSemesterReport)\n)","\nimport BaseEntity from './BaseEntity';\nimport Category from './Category';\nexport default class CategoryPredicate extends BaseEntity {\n    name: string | undefined;\n    code = 'A';\n    description: string | undefined;\n    ruleCategoryName;\n    ruleCategoryId: number | undefined;\n}","import React, { ChangeEvent } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport Category from '../../../models/Category';\r\nimport Filter from '../../../models/commons/Filter';\r\nimport WebRequest from '../../../models/commons/WebRequest';\r\nimport WebResponse from '../../../models/commons/WebResponse';\r\nimport { tableHeader } from '../../../utils/CollectionUtil';\r\nimport Modal from '../../container/Modal';\r\nimport FormGroup from '../../form/FormGroup';\r\nimport AnchorWithIcon from '../../navigation/AnchorWithIcon';\r\nimport NavigationButtons from '../../navigation/NavigationButtons';\r\nimport CategoryPredicate from './../../../models/CategoryPredicate';\r\nimport BaseManagementPage from './BaseManagementPage';\r\nimport EditDeleteButton from './EditDeleteButton';\r\nclass State {\r\n  items: CategoryPredicate[] = [];\r\n  filter: Filter = new Filter();\r\n  totalData: number = 0;\r\n  record: CategoryPredicate = new CategoryPredicate();\r\n  categories: Category[] = [];\r\n  categoriesLoaded: boolean = false;\r\n\r\n}\r\nconst MODEL_NAME = 'rule-category-predicates';\r\nconst MENU = 'asrama';\r\nclass CategoryPredicateManagement extends BaseManagementPage<any, State> {\r\n  state = new State();\r\n\r\n  constructor(props) {\r\n    super(props, MODEL_NAME, MENU);\r\n    this.state.filter.limit = 10;\r\n    this.state.filter.orderBy = 'name';\r\n  }\r\n\r\n  onSubmit = () => {\r\n    // console.debug(\"RECORD: \", this.state.record);\r\n    this.showConfirmation(\"Submit Data?\")\r\n      .then(ok => {\r\n        if (!ok) return;\r\n        if (this.state.record.id ?? 0 > 0) {\r\n          this.callApiUpdate(this.state.record.id, this.state.record);\r\n        } else {\r\n          this.callApiInsert(this.state.record);\r\n        }\r\n      })\r\n  }\r\n  componentDidMount() {\r\n    this.validateLoginStatus(() => {\r\n      this.scrollTop();\r\n      this.loadCategories();\r\n    });\r\n  }\r\n  categoriesLoaded = (response: WebResponse) => {\r\n    this.setState({ categories: response.result.items, categoriesLoaded: true }, () => { this.resetForm(); this.loadItems() });\r\n  }\r\n  categoriesNotLoaded = (response: WebResponse) => {\r\n    this.setState({ categories: [], categoriesLoaded: true }, this.resetForm);\r\n  }\r\n  loadCategories = () => {\r\n    const filter: Filter = new Filter();\r\n    filter.limit = 0;\r\n    const req: WebRequest = {\r\n      filter: filter,\r\n      modelName: 'rule-categories'\r\n    }\r\n    this.commonAjax(\r\n      this.masterDataService.list,\r\n      this.categoriesLoaded,\r\n      this.categoriesNotLoaded,\r\n      req,\r\n      'asrama'\r\n    )\r\n  }\r\n\r\n  emptyRecord = (): any => {\r\n    const record = new CategoryPredicate();\r\n    if (this.state.categories.length > 0) {\r\n      record.ruleCategoryId = this.state.categories[0].id;\r\n    }\r\n    return record;\r\n  }\r\n\r\n  render() {\r\n    const filter: Filter = this.state.filter;\r\n    const categories: Category[] = this.state.categories;\r\n    if (this.state.categoriesLoaded && categories.length == 0) {\r\n      return (\r\n        <div className=\"container-fluid section-body\">\r\n          <h2>Kategori belum ada</h2>\r\n        </div>\r\n      )\r\n    }\r\n    const selectedCategoryId = filter.fieldsFilter && filter.fieldsFilter['category_id'] ? filter.fieldsFilter['category_id'] : \"ALL\";\r\n    return (\r\n      <div className=\"container-fluid section-body\">\r\n        <h2>Predikat Rapor</h2>\r\n        <hr />\r\n        <RecordForm categories={categories} reloadCategories={this.loadCategories} formRef={this.formRef} resetForm={this.resetForm} onSubmit={this.onSubmit}\r\n          record={this.state.record} updateRecordProp={this.updateRecordProp} />\r\n        <form onSubmit={this.reload}>\r\n          <FormGroup label=\"Cari\">\r\n            <div className=\"input-group\">\r\n              <input name=\"name\" placeholder=\"nama\" className=\"form-control-sm\" value={filter.fieldsFilter ? filter.fieldsFilter['name'] : \"\"} onChange={this.updateFieldsFilter} />\r\n              <input name=\"code\" placeholder=\"kode\" className=\"form-control-sm\" value={filter.fieldsFilter ? filter.fieldsFilter['kode'] : \"\"} onChange={this.updateFieldsFilter} />\r\n              <select value={selectedCategoryId} className=\"form-control-sm\" name=\"category_id\" onChange={this.updateFieldsFilter} >\r\n                {[{ id: \"\", name: \"Semua Kategori\" }, ...categories].map((c) => {\r\n                  return <option key={\"filter-cat-\" + c.id} value={c.id}>{c.name}</option>\r\n                })}\r\n              </select>\r\n              <div className=\"input-group-append\">\r\n                <AnchorWithIcon className=\"btn btn-sm\" iconClassName=\"fas fa-redo\" onClick={this.loadCategories}>Reload</AnchorWithIcon>\r\n              </div>\r\n            </div>\r\n          </FormGroup>\r\n          <FormGroup label=\"Jumlah Tampilan\">\r\n            <input type=\"number\" name=\"limit\" className=\"form-control-sm\" value={filter.limit ?? 5} onChange={this.updateFilter} />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <input className=\"btn btn-primary btn-sm\" type=\"submit\" value=\"Submit\" />\r\n          </FormGroup>\r\n        </form>\r\n        <NavigationButtons activePage={filter.page ?? 0} limit={filter.limit ?? 5} totalData={this.state.totalData}\r\n          onClick={this.loadAtPage} />\r\n        <ItemsList\r\n          recordLoaded={this.oneRecordLoaded}\r\n          recordDeleted={this.loadItems}\r\n          startingNumber={(filter.page ?? 0) * (filter.limit ?? 10)} items={this.state.items} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\nconst ItemsList = (props: { startingNumber: number, items: CategoryPredicate[], recordLoaded(item: any), recordDeleted() }) => {\r\n\r\n  return (\r\n    <div style={{ overflow: 'auto' }}>\r\n      <table className=\"table table-striped\">\r\n        {tableHeader(\"No\", \"Kode\", \"Nama\", \"Deskripsi\", \"Kategori\", \"Opsi\")}\r\n        <tbody>\r\n          {props.items.map((item, i) => {\r\n            return (\r\n              <tr key={`RulePoint-${i}`}>\r\n                <td>{i + 1 + props.startingNumber}</td>\r\n                <td>{item.code}</td>\r\n                <td>{item.name}</td>\r\n                <td>{item.description}</td>\r\n                <td>{item.ruleCategoryName}</td>\r\n                <td>\r\n                  <EditDeleteButton\r\n                    recordLoaded={props.recordLoaded}\r\n                    recordDeleted={props.recordDeleted}\r\n                    record={item}\r\n                    modelName={MODEL_NAME}\r\n                    menu={MENU}\r\n                  />\r\n                </td>\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\nconst RecordForm = (props: {\r\n  categories: Category[], formRef: React.RefObject<Modal>,\r\n  updateRecordProp(e: ChangeEvent): any,\r\n  resetForm(): any, onSubmit(): any,\r\n  record: CategoryPredicate, reloadCategories(): any\r\n}) => {\r\n\r\n  return (\r\n    <form className=\"record-form mb-3\" onSubmit={(e) => { e.preventDefault(); props.onSubmit() }}>\r\n      <Modal show={false} ref={props.formRef} toggleable={true} title=\"Record Form\" >\r\n        <FormGroup label=\"Kode\">\r\n          <select required value={props.record.code} className=\"form-control-sm\" name=\"code\" onChange={props.updateRecordProp} >\r\n            <option>A</option>\r\n            <option>B</option>\r\n            <option>C</option>\r\n            <option>D</option>\r\n          </select>\r\n        </FormGroup>\r\n        <FormGroup label=\"Nama\">\r\n          <textarea className=\"form-control\" name=\"name\" onChange={props.updateRecordProp} value={props.record.name ?? \"\"} />\r\n        </FormGroup>\r\n        <FormGroup label=\"Deskripsi\">\r\n          <textarea className=\"form-control\" name=\"description\" onChange={props.updateRecordProp} value={props.record.description ?? \"\"} />\r\n        </FormGroup>\r\n        <FormGroup label=\"Category\">\r\n          <div className=\"input-group\">\r\n            <select required value={props.record.ruleCategoryId} className=\"form-control-sm\" name=\"ruleCategoryId\" onChange={props.updateRecordProp} >\r\n              {props.categories.map((c) => {\r\n                return <option key={\"cat-\" + c.id} value={c.id}>{c.name}</option>\r\n              })}\r\n            </select>\r\n            <div className=\"input-group-append\">\r\n              <AnchorWithIcon className=\"btn btn-sm\" iconClassName=\"fas fa-redo\" onClick={props.reloadCategories}>Reload</AnchorWithIcon>\r\n            </div>\r\n          </div>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-sm mr-2\" />\r\n          <input value=\"Reset\" type=\"reset\" className=\"btn btn-secondary btn-sm\" onClick={(e) => props.resetForm()} />\r\n        </FormGroup>\r\n      </Modal>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapCommonUserStateToProps\r\n  )(CategoryPredicateManagement)\r\n)","\nimport BaseEntity from './BaseEntity';\nimport Student from './Student';\nexport default class RuleViolation extends BaseEntity {\n    name: string = \"\";\n    description: string | undefined;\n    student: Student | undefined;\n    classMemberId?: number;\n\n    classMemberName?: string;\n    classLevel?: number;\n    classLetter?: string;\n    schoolName?: string;\n    point: number = 0;\n\n}","import React, { ChangeEvent } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\nimport RuleViolation from '../../../models/RuleViolation';\nimport ClassMemberSearchForm from '../shared/ClassMemberSearchForm';\nimport BaseEntity from './../../../models/BaseEntity';\nimport Class from './../../../models/Class';\nimport Filter from './../../../models/commons/Filter';\nimport Student from './../../../models/Student';\nimport { tableHeader } from './../../../utils/CollectionUtil';\nimport Modal from './../../container/Modal';\nimport FormGroup from './../../form/FormGroup';\nimport NavigationButtons from './../../navigation/NavigationButtons';\nimport BaseManagementPage from './BaseManagementPage';\nimport EditDeleteButton from './EditDeleteButton';\n\nclass State {\n  items: RuleViolation[] = [];\n  filter: Filter = new Filter();\n  totalData: number = 0;\n  record: RuleViolation = new RuleViolation();\n}\n\nconst MODEL_NAME = 'general-broken-rules';\nconst MENU = 'asrama';\n\nclass RuleViolationManagement extends BaseManagementPage<any, State> {\n  state = new State();\n  constructor(props) {\n    super(props, MODEL_NAME, MENU);\n    this.state.filter = new Filter();\n    this.state.filter.orderBy = 'classMember.student.user.fullName';\n  }\n  setStudent = (s: Student) => {\n    const record = this.state.record;\n    record.student = s;\n    record.classMemberId = s.id;\n    record.classMemberName = s.name;\n    record.classLetter = s.classLetter;\n    record.classLevel = s.classLevel;\n    record.schoolName = s.schoolName;\n    this.setState({ record });\n  }\n  emptyRecord = (): BaseEntity => {\n    return new RuleViolation();\n  }\n  onSubmit = () => {\n    if (!this.state.record.classMemberId) {\n      this.showError(\"Input tidak lengkap\");\n      return;\n    }\n    this.showConfirmation(\"Submit Data?\")\n      .then(ok => {\n        if (!ok) return;\n        if (this.state.record.id ?? 0 > 0) {\n          this.callApiUpdate(this.state.record.id, this.state.record);\n        } else {\n          this.callApiInsert(this.state.record);\n        }\n      })\n  }\n  render() {\n    const filter: Filter = this.state.filter;\n    return (\n      <div className=\"container-fluid section-body\">\n        <h2>Pelanggaran Umum</h2>\n        <hr />\n        <RecordForm formRef={this.formRef} setStudent={this.setStudent} resetForm={this.resetForm} onSubmit={this.onSubmit} record={this.state.record} updateRecordProp={this.updateRecordProp} />\n        <form onSubmit={this.reload}>\n          <FormGroup label=\"Cari\">\n            <input name=\"name\" placeholder=\"nama pelanggaran\" className=\"form-control-sm\" value={filter.fieldsFilter['name'] ?? \"\"} onChange={this.updateFieldsFilter} />\n            <input name=\"classMember.student.user.fullName\" placeholder=\"nama siswa\" className=\"form-control-sm\" value={filter.fieldsFilter['classMember.student.user.fullName'] ?? \"\"} onChange={this.updateFieldsFilter} />\n          </FormGroup>\n          <FormGroup label=\"Jumlah Tampilan\">\n            <input name=\"limit\" type=\"number\" className=\"form-control-sm\" value={filter.limit ?? 5} onChange={this.updateFilter} />\n          </FormGroup>\n          <FormGroup>\n            <input className=\"btn btn-primary btn-sm\" type=\"submit\" value=\"Submit\" />\n          </FormGroup>\n        </form>\n        <NavigationButtons\n          activePage={filter.page ?? 0}\n          limit={filter.limit ?? 10}\n          totalData={this.state.totalData}\n          onClick={this.loadAtPage}\n        />\n        <ItemsList\n          items={this.state.items}\n          isAdmin={this.isAdmin()}\n          recordLoaded={this.oneRecordLoaded}\n          recordDeleted={this.loadItems}\n          startingNumber={(filter.page ?? 0) * (filter.limit ?? 10)}\n        />\n      </div>\n    )\n  }\n\n}\ninterface ItemProps { isAdmin: boolean, startingNumber: number, items: RuleViolation[], recordLoaded(item: any), recordDeleted() }\nconst ItemsList = (props: ItemProps) => {\n\n  return (\n    <div style={{ overflow: 'auto' }}>\n      <table className=\"table table-striped\">\n        {tableHeader(\"No\", \"Siswa\", \"Kelas\", \"Nama\", \"Deskripsi\", \"Poin\", \"Opsi\")}\n        <tbody>\n          {props.items.map((item: RuleViolation, i) => {\n\n            return (\n              <tr key={\"category-\" + i}>\n                <td>{i + 1 + props.startingNumber}</td>\n                <td>{item.classMemberName}</td>\n                <td>{item.classLevel}{item.classLetter} {item.schoolName}</td>\n                <td>{item.name}</td>\n                <td>{item.description}</td>\n                <td>{item.point}</td>\n                <td>\n                  <EditDeleteButton\n                    recordLoaded={props.recordLoaded}\n                    recordDeleted={props.recordDeleted}\n                    record={item}\n                    menu={MENU}\n                    modelName={MODEL_NAME} />\n                </td>\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n    </div>\n  )\n}\nconst RecordForm = (props: { formRef: React.RefObject<Modal>, setStudent(s: Student), updateRecordProp(e: ChangeEvent): any, resetForm(): any, onSubmit(): any, record: RuleViolation }) => {\n  const record = props.record;\n  return (\n    <div className=\"record-form mb-3\" >\n      <Modal show={false} ref={props.formRef} toggleable={true} title=\"Record Form\" >\n        <FormGroup label=\"Siswa\">\n          <ClassMemberSearchForm selectItem={props.setStudent} />\n        </FormGroup>\n        <FormGroup>\n          {record.classMemberName} - {record.classLevel}{record.classLetter} {record.schoolName}\n        </FormGroup>\n        <form onSubmit={(e) => { e.preventDefault(); props.onSubmit() }}>\n          <FormGroup label=\"Pelanggaran\">\n            <input required value={record.name} onChange={props.updateRecordProp} className=\"form-control\" name=\"name\" />\n          </FormGroup>\n          <FormGroup label=\"Deskripsi\">\n            <textarea required className=\"form-control\" name=\"description\" onChange={props.updateRecordProp} value={record.description ?? \"\"} />\n          </FormGroup>\n          <FormGroup label=\"Poin\">\n            <input required className=\"form-control\" name=\"point\" onChange={props.updateRecordProp} value={record.point} />\n          </FormGroup>\n          <FormGroup>\n            <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-sm mr-2\" />\n            <input type=\"reset\" className=\"btn btn-secondary btn-sm\" onClick={(e) => props.resetForm()} />\n          </FormGroup>\n        </form>\n      </Modal>\n    </div>\n  )\n}\n\nexport default withRouter(\n  connect(\n    mapCommonUserStateToProps\n  )(RuleViolationManagement)\n)","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../constant/stores';\r\nimport { withRouter, Switch, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Login from '../pages/login/Login';\r\nimport DashboardMain from '../pages/dashboard/main/DashboardMain';\r\nimport HomeMain from '../pages/home/HomeMain';\r\nimport Menu from '../../models/settings/Menu';\r\nimport MusyrifManagement from '../pages/management/MusyrifManagement';\r\nimport ManagementMain from '../pages/management/ManagementMain';\r\nimport CategoryManagement from '../pages/management/CategoryManagement';\r\nimport RulePointManagement from '../pages/management/RulePointManagement';\r\nimport StudentList from '../pages/asrama/StudentList';\r\nimport InputPointForm from '../pages/asrama/InputPointForm';\r\nimport PointRecordsManagement from '../pages/management/PointRecordsSummary';\r\nimport MedicalRecordForm from '../pages/asrama/medicalrecord/MedicalRecordForm';\r\nimport AboutUs from './../pages/home/AboutUs';\r\nimport Register from '../pages/login/Register';\r\nimport PointRecordEdit from '../pages/asrama/point-record/PointRecordEdit';\r\nimport FollowUpReminder from '../pages/dashboard/main/FollowUpReminder';\r\nimport WarningActionManagement from '../pages/management/WarningActionManagement';\r\nimport ConfigSettingPage from '../pages/settings/ConfigSettingPage';\r\nimport StudentSemesterReport from '../pages/report/StudentSemesterReport';\r\nimport CategoryPredicateManagement from '../pages/management/CategoryPredicateManagement';\r\nimport RuleViolationManagement from '../pages/management/RuleViolationManagement';\r\n\r\nclass ApplicationContent extends BaseComponent<any, any> {\r\n\r\n  constructor(props: any) {\r\n    super(props, false);\r\n  }\r\n  setSidebarMenus = (menus: Menu[]) => {\r\n    this.props.setSidebarMenus(menus);\r\n  }\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Switch>\r\n\r\n          {/* -------- home -------- */}\r\n          <Route exact path=\"/home\" render={\r\n            (props: any) => {\r\n              return <HomeMain />\r\n            }\r\n          } />\r\n          <Route exact path=\"/\" render={\r\n            (props: any) =>\r\n              <HomeMain />\r\n          } />\r\n          <Route exact path=\"/about\" render={\r\n            (props: any) =>\r\n              <AboutUs />\r\n          } />\r\n\r\n          {/* \r\n                     \r\n                    <Route exact path=\"/management\" render={\r\n                        (props: any) => {\r\n                            console.debug(\"MANAGEMENTS path\")\r\n                            return <MasterDataMain setSidebarMenus={this.setSidebarMenus} />\r\n                        }\r\n                    } />\r\n                    <Route exact path=\"/management/:code\" render={\r\n                        (props: any) =>\r\n                            <MasterDataMain setSidebarMenus={this.setSidebarMenus} />\r\n                    } /> */}\r\n\r\n\r\n          {/* ///////// PUBLIC ///////// */}\r\n\r\n        </Switch>\r\n        <LoginRoute />\r\n        <Asrama />\r\n        <Management />\r\n        <Dashboard />\r\n        <Setting />\r\n        <Report />\r\n      </Fragment>\r\n    )\r\n  }\r\n  componentDidMount() {\r\n    // document.title = \"Login\";\r\n  }\r\n\r\n}\r\n\r\nconst Setting = (props) => {\r\n\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/settings/config\" render={\r\n        (props: any) => <ConfigSettingPage />\r\n      } />\r\n    </Switch>\r\n  )\r\n}\r\nconst Report = (props) => {\r\n\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/report/studentreport\" render={\r\n        (props: any) => <StudentSemesterReport />\r\n      } />\r\n    </Switch>\r\n  )\r\n}\r\nconst Management = (props) => {\r\n\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/management\" render={\r\n        (props: any) => <ManagementMain />\r\n      } />\r\n      <Route exact path=\"/management/musyrifmanagement\" render={\r\n        (props: any) => <MusyrifManagement />\r\n      } />\r\n      <Route exact path=\"/management/rule_category\" render={\r\n        (props: any) => <CategoryManagement />\r\n      } />\r\n      <Route exact path=\"/management/rule_point\" render={\r\n        (props: any) => <RulePointManagement />\r\n      } />\r\n      <Route exact path=\"/management/warning_action\" render={\r\n        (props: any) => <WarningActionManagement />\r\n      } />\r\n      <Route exact path=\"/management/category_predicate\" render={\r\n        (props: any) => <CategoryPredicateManagement />\r\n      } />\r\n      <Route exact path=\"/management/rule_violation\" render={\r\n        (props: any) => <RuleViolationManagement />\r\n      } />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nconst Asrama = (proos) => {\r\n\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/asrama/studentlist\" render={\r\n        (props: any) => <StudentList />\r\n      } />\r\n      <Route exact path=\"/asrama/inputpoint\" render={\r\n        (props: any) => <InputPointForm />\r\n      } />\r\n      <Route exact path=\"/asrama/pointsummary\" render={\r\n        (props: any) => <PointRecordsManagement />\r\n      } />\r\n      <Route exact path=\"/asrama/pointrecordedit\" render={\r\n        (props: any) => <PointRecordEdit />\r\n      } />\r\n      <Route exact path=\"/asrama/medicalrecord\" render={\r\n        (props: any) => <MedicalRecordForm />\r\n      } />\r\n\r\n    </Switch>\r\n  )\r\n}\r\nconst LoginRoute = (props) => {\r\n\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/login\" render={\r\n        (props: any) =>\r\n          <Login />\r\n      } />\r\n    </Switch>\r\n  )\r\n}\r\n\r\n\r\nconst Dashboard = (props) => {\r\n  return (\r\n    <Switch>\r\n      {/* -------- dashboard -------- */}\r\n      <Route exact path=\"/dashboard\" render={\r\n        (props: any) => {\r\n\r\n          console.debug(\"dashboard path\")\r\n          return <DashboardMain />\r\n        }\r\n\r\n      } />\r\n      <Route exact path=\"/dashboard/followup\" render={\r\n        (props: any) =>\r\n          <FollowUpReminder />\r\n      } />\r\n    </Switch>\r\n  )\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => ({})\r\n\r\n\r\nexport default withRouter(connect(\r\n  mapCommonUserStateToProps,\r\n  mapDispatchToProps\r\n)(ApplicationContent))","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../constant/stores';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { performLogout } from './../../redux/actionCreators';\r\nimport Menu from '../../models/settings/Menu';\r\nimport './SideBar.css'\r\n\r\nclass SideBar extends BaseComponent<{ sidebarMenus?: Menu[], parentMenu: Menu }, any> {\r\n  constructor(props: { sidebarMenus?: Menu[] }) {\r\n    super(props, false);\r\n  }\r\n  isSidebarActive = (menu: Menu) => {\r\n    const parentMenu: Menu = this.props.parentMenu;\r\n    if (null == parentMenu) { return false; }\r\n    const pathName = (this.props as any).location.pathname;\r\n    return parentMenu.url + \"/\" + menu.url == pathName;\r\n  }\r\n  componentDidMount() {\r\n    window.addEventListener('scroll', this.handleScroll);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('scroll', this.handleScroll);\r\n  }\r\n\r\n  handleScroll(event) {\r\n    let scrollTop = event.srcElement.body.scrollTop,\r\n      itemTranslate = Math.min(0, scrollTop / 3 - 60);\r\n    // console.debug(\"scrollTop: \", scrollTop);\r\n\r\n  }\r\n  render() {\r\n    const parentMenu: Menu = this.props.parentMenu;\r\n    if (null == parentMenu) { return null }\r\n    const menus: Menu[] = this.props.sidebarMenus == null ? [] : this.props.sidebarMenus;\r\n    const user = this.getLoggedUser();\r\n    return (\r\n      <ul id=\"sidebar\" className=\"sidebar-nav bg-light\">\r\n        <Brand show={parentMenu != null} brand={parentMenu} />\r\n\r\n        {menus.map(menu => {\r\n          if (menu.userAuthorized && !menu.userAuthorized(user)) return null;\r\n          const isActive: boolean = this.isSidebarActive(menu);\r\n          const menuClassName = isActive ? 'menu-active' : 'regular-menu';\r\n          return (\r\n            <li className={\"sidebar-item \" + menuClassName} key={\"SIDEBAR_\" + menu.code}><Link to={parentMenu.url + \"/\" + menu.url}>\r\n              <span className=\"sidebar-icon\"><i className={Menu.getIconClassName(menu)}></i></span>\r\n              <span className={'menu-label'} >{menu.name}</span>\r\n            </Link></li>\r\n          )\r\n        })\r\n        }\r\n      </ul >\r\n    )\r\n  }\r\n\r\n}\r\nconst Brand = (props) => {\r\n  if (props.show == false) return null;\r\n  return (\r\n    <Fragment>\r\n      <li id=\"sidebar-brand\" className=\"sidebar-brand\" style={{ marginBottom: '20px' }}>\r\n        <div style={{\r\n          textAlign: 'center', paddingTop: '10px',\r\n          paddingBottom: '10px'\r\n        }}>\r\n          <h3 className=\"text-dark\">\r\n            <i className={Menu.getIconClassName(props.brand)}></i>\r\n          </h3>\r\n          <Link to={props.brand.url} style={{ textDecoration: 'none' }}><h4 className=\"text-dark\">{props.brand.name}</h4></Link>\r\n        </div>\r\n      </li>\r\n      <li className={\"sidebar-item-brand \"} >\r\n        <Link to={props.brand.url}>\r\n          <span className=\"sidebar-icon\"><i className={Menu.getIconClassName(props.brand)}></i></span>\r\n        </Link>\r\n      </li>\r\n    </Fragment>\r\n  )\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n  performLogout: (app: any) => dispatch(performLogout(app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n  mapCommonUserStateToProps,\r\n  mapDispatchToProps\r\n)(SideBar))","import React, { Fragment } from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../constant/stores';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { performLogout } from './../../redux/actionCreators';\r\nimport Header from '../navigation/Header';\r\nimport ApplicationContent from './ApplicationContent';\r\nimport SideBar from '../navigation/SideBar';\r\nimport './Layout.css';\r\nimport Menu from '../../models/settings/Menu';\r\nimport { getMenuByMenuPath, extractMenuPath } from './../../constant/Menus';\r\nclass IState {\r\n    showSidebar?: boolean = false;\r\n    activeMenuCode: any = null;\r\n    menu?: Menu;\r\n    sidebarMenus?: Menu[]\r\n};\r\nclass MainLayout extends BaseComponent<any, IState> {\r\n    state: IState = new IState();\r\n    currentPathName: string = \"\";\r\n    constructor(props: any) {\r\n        super(props, false);\r\n        this.state = {\r\n            ...this.state,\r\n        }\r\n    }\r\n    setMenuNull = () => {\r\n        this.setState({ menu: undefined, showSidebar: false, activeMenuCode: null, sidebarMenus: undefined });\r\n    }\r\n    setMenu = (menu: Menu) => {\r\n        if (menu == null) {\r\n            return;\r\n        }\r\n        this.setState({ menu: menu, sidebarMenus: undefined, showSidebar: menu.showSidebar, activeMenuCode: menu.code });\r\n    }\r\n    setSidebarMenus = (menus: Menu[]) => {\r\n        // console.debug(\"Set sidebar menus: \", menus);\r\n        this.setState({ sidebarMenus: menus });\r\n    }\r\n    componentDidMount() {\r\n        this.setCurrentMenu();\r\n    }\r\n    componentDidUpdate() {\r\n        this.setCurrentMenu();\r\n    }\r\n    setCurrentMenu = () => {\r\n        const pathName = extractMenuPath(this.props.location.pathname);\r\n\r\n        if (pathName == this.currentPathName) {\r\n            return;\r\n        }\r\n        this.currentPathName = pathName;\r\n        const menu = getMenuByMenuPath(pathName);\r\n        if (menu == null) {\r\n            this.setMenuNull();\r\n        } else {\r\n            this.setMenu(menu);\r\n        }\r\n    }\r\n    getSubMenus = () :Menu[]|null => {\r\n        const menuState:Menu|undefined = this.state.menu;\r\n        if (menuState && menuState.subMenus != null && menuState.subMenus?.length > 0) {\r\n            return menuState.subMenus;\r\n        }\r\n        if (this.state.sidebarMenus) {\r\n            return this.state.sidebarMenus;\r\n        }\r\n        return null;\r\n    }\r\n    render() {\r\n        const showSidebar: boolean = this.state.showSidebar == true;\r\n        const className = showSidebar ? \"app-content\" : \"content\";\r\n        return (\r\n            <Fragment>\r\n                <Header setMenuNull={this.setMenuNull} activeMenuCode={this.state.activeMenuCode} setMenu={this.setMenu} />\r\n                <div id=\"content-wrapper\" className={\"container-fluid  \" + className}>\r\n                    <ApplicationContent setSidebarMenus={this.setSidebarMenus} />\r\n                </div>\r\n                {showSidebar ?\r\n                    <SideBar sidebarMenus={this.getSubMenus()} parentMenu={this.state.menu} />\r\n                    : null}\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    performLogout: (app: any) => dispatch(performLogout(app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(MainLayout))","import React, { Component } from 'react'\r\nimport './Loader.css'\r\n\r\nclass Loader extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            timer: 130,\r\n            intervalId: 0\r\n        }\r\n        this.update = () => {\r\n            if (this.state.timer < 0) {\r\n                clearInterval(this.state.intervalId);\r\n            }\r\n            console.log(\"tick\")\r\n            this.setState({ timer: this.state.timer - 1 })\r\n            if (this.state.timer < 0 && this.props.endMessage) {\r\n                this.props.endMessage();\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.withTimer == true) {\r\n            let intervalId = setInterval(this.update, 1, null);\r\n            this.setState({ intervalId: intervalId });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let className = \"message message-\" + this.props.type;\r\n\r\n        if (this.props.realtime == true) {\r\n            return <LoaderContent progress={this.props.progress} realtime={this.props.realtime} />\r\n        }\r\n\r\n        return (\r\n            <div className={className} >\r\n                <LoaderContent progress={this.props.progress} realtime={this.props.realtime} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nfunction LoaderContent(props) {\r\n    if (props.realtime) {\r\n        return (\r\n            <div className=\"row container-fluid bg-light\" style={{margin:0, position: 'fixed', zIndex: 100 }}>\r\n                <div className=\"col-1\">\r\n                <span style={{marginBottom:'3px'}} className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                </div>\r\n                <div className=\"col-11 progress\" style={{padding:0, marginTop: '7px', height:'10px'}}  >\r\n                    <div className=\"bg-primary\" style={{\r\n                        width: props.progress + \"%\",\r\n                        transitionDuration: '50ms',\r\n                        margin: 0,\r\n                    }}>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <button className=\"btn btn-dark \" type=\"button\" disabled>\r\n            <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n            <span className=\" \">Loading...</span>\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Loader;","import 'reflect-metadata';\r\nimport { injectable } from 'inversify';\r\nimport { AxiosResponse } from 'axios';\r\nimport WebResponse from '../models/commons/WebResponse';\r\nimport { contextPath } from './../constant/Url';\r\nimport { updateAccessToken } from './../middlewares/Common';\r\nimport { commonAjaxGetCalls, commonAjaxPublicGetCalls } from './Promises';\r\n\r\n@injectable()\r\nexport default class UserService {\r\n  requestApplicationId = (callbackSuccess: (response: WebResponse) => any, callbackError: () => any) => {\r\n    const url = contextPath() + 'api/public/asrama/config';\r\n    commonAjaxGetCalls(url).then((data) => {\r\n      if (data.code != '00') {\r\n        alert('Error requesting app ID');\r\n        return;\r\n      }\r\n      const response = data.rawAxiosResponse as AxiosResponse;\r\n      if (!response.headers['access-token'] || response.headers['access-token'] == '') {\r\n        throw new Error('Unauthenticated');\r\n      }\r\n      updateAccessToken(response);\r\n      console.debug('Header.AccessToken:', response.headers['access-token']);\r\n      callbackSuccess(data);\r\n    }).catch(e => {\r\n      console.error('Req app id: ', e);\r\n      callbackError();\r\n    });\r\n  }\r\n  getLoggedUser = (callbackSuccess: (data) => any, callbackError: () => any) => {\r\n    const url = contextPath() + 'api/user';\r\n    commonAjaxGetCalls(url).then(callbackSuccess)\r\n      .catch(e => {\r\n        console.error('ERROR requestApplicationId: ', e);\r\n        callbackError();\r\n      });\r\n  }\r\n  requestApplicationIdNoAuth = (callbackSuccess: (response: WebResponse) => any, callbackError: () => any) => {\r\n    const url = contextPath() + 'api/public/asrama/config';\r\n    commonAjaxPublicGetCalls(url).then(data => {\r\n      if (data.code != '00') {\r\n        alert('Error requesting app ID');\r\n        return;\r\n      }\r\n      callbackSuccess(data);\r\n    }).catch(e => {\r\n      console.error('ERROR requestApplicationId No Auth: ', e);\r\n      //   alert('Error, please reload OR try again');\r\n      callbackError();\r\n    });\r\n  }\r\n}\r\n","\nimport React, { Component, Fragment, RefObject } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport SockJsClient from 'react-stomp';\nimport './App.css';\nimport Alert from './component/alert/Alert';\nimport MainLayout from './component/layout/MainLayout';\nimport Loader from './component/loader/Loader';\nimport Spinner from './component/loader/Spinner';\nimport AnchorWithIcon from './component/navigation/AnchorWithIcon';\nimport { mapCommonUserStateToProps } from './constant/stores';\nimport * as url from './constant/Url';\nimport WebResponse from './models/commons/WebResponse';\nimport User from './models/User';\nimport * as actions from './redux/actionCreators';\nimport UserService from './services/UserService';\nimport { doItLater, updateFavicon } from './utils/EventUtil';\nimport { performWebsocketConnection, registerWebSocketCallbacks, setWebSocketUrl } from './utils/websockets';\nimport { resolve } from 'inversify-react';\n\nclass IState {\n  loading: boolean = false;\n  loadingPercentage: number = 0;\n  requestId?: string;\n  mainAppUpdated: Date = new Date();\n  showAlert: boolean = false;\n  realtime: boolean = false;\n  appIdStatus: string = \"Loading App Id\";\n  errorAuthenticatingApp: boolean = false;\n}\nclass App extends Component<any, IState> {\n  private wsConnected = false;\n  private loadings = 0;\n  private alertTitle = \"Info\";\n  private alertBody: any = null;\n  private alertIsYesOnly = true;\n  private alertIsError = false;\n  private alertOnYesCallback = function (e) { };\n  private alertOnCancelCallback = function (e) { };\n  private wsUpdateHandler: Function | undefined = undefined;\n  private clientRef = React.createRef<SockJsClient>();\n\n  @resolve(UserService)\n  private userService: UserService;\n  // alertRef: RefObject<Alert> = React.createRef();\n  alertCallback = {\n    title: \"Info\", message: \"Info\", yesOnly: false,\n    onOk: () => { }, onNo: () => { }\n  }\n\n  constructor(props: any) {\n    super(props);\n    this.state = new IState();\n    this.props.setMainApp(this);\n  }\n  refresh = () => { this.setState({ mainAppUpdated: new Date() }); }\n\n  requestAppId = () => {\n    this.setState({ appIdStatus: \"Authenticating application\", errorAuthenticatingApp: false });\n    this.userService.requestApplicationId((reqIdResp) => {\n      this.getLoggedUser(reqIdResp);\n    }, this.retryRequestAppId)\n  }\n  getLoggedUser = (reqIdResp) => {\n    const onSuccess = (data) => {\n      this.setState({ errorAuthenticatingApp: false }, () => {\n        this.props.setRequestId(reqIdResp, this);\n        this.props.setLoggedUser(data.result);\n        this.refresh();\n      });\n    }\n    this.userService.getLoggedUser(onSuccess, console.error);\n  }\n  retryRequestAppId = () => {\n    this.setState({ appIdStatus: \"Authenticating application (Retrying)\", errorAuthenticatingApp: false });\n    this.userService.requestApplicationIdNoAuth((response) => {\n      this.props.setRequestId(response, this);\n      this.setState({ errorAuthenticatingApp: false });\n    }, () => this.setState({ errorAuthenticatingApp: true }))\n\n  }\n  incrementLoadings() {\n    this.loadings++;\n  }\n\n  decrementLoadings() {\n    this.loadings--;\n    if (this.loadings < 0) {\n      this.loadings = 0;\n    }\n  }\n\n  startLoading(realtime: boolean = false) {\n    this.incrementLoadings();\n    this.setState({ loading: true, realtime: realtime });\n  }\n\n  endLoading() {\n    this.decrementLoadings();\n    if (this.loadings == 0) {\n      if (this.state.realtime) {\n        this.setState({ loadingPercentage: 100 }, this.smoothEndLoading);\n      } else {\n        this.setState({ loading: false, loadingPercentage: 0 });\n      }\n    }\n  }\n\n  smoothEndLoading = () => {\n    doItLater(() => {\n      this.setState({ loading: false, loadingPercentage: 0 });\n    }, 100);\n  }\n\n  handleProgress = (msg: WebResponse) => {\n    const percentageFloat: number = msg.percentage ?? 0;\n    let percentage = Math.floor(percentageFloat);\n    if (percentageFloat < 0 || percentageFloat > 100) {\n      this.endLoading();\n    }\n    this.setState({ loadingPercentage: percentage });\n  }\n\n  showAlert(title: string, body: any, yesOnly: boolean, yesCallback: Function, noCallback?: Function) {\n    this.alertTitle = title;\n    this.alertBody = body;\n    this.alertIsYesOnly = yesOnly;\n    const app = this;\n    this.alertOnYesCallback = function (e) {\n      app.dismissAlert();\n      yesCallback(e);\n    }\n    if (!yesOnly) {\n      this.alertOnCancelCallback = function (e) {\n        app.dismissAlert();\n        if (noCallback != null) {\n          noCallback(e);\n        }\n      };\n    }\n    this.setState({ showAlert: true });\n  }\n\n  dismissAlert() {\n    this.alertIsError = false;\n    this.setState({ showAlert: false })\n  }\n  showAlertError(title: string, body: any, yesOnly: boolean, yesCallback: Function, noCallback?: Function) {\n    this.alertIsError = true;\n    this.showAlert(title, body, yesOnly, yesCallback, noCallback)\n  }\n\n  componentDidUpdate() {\n    // console.debug(\"APP UPDATED\");\n    if (this.props.applicationProfile) {\n      updateFavicon(this.props.applicationProfile);\n    }\n    if (this.props.requestId && !this.wsConnected) {\n      this.initWebsocket();\n    }\n  }\n\n  componentDidMount() {\n    this.requestAppId();\n    this.setState({ loadingPercentage: 0 });\n  }\n\n  initWebsocket = () => {\n    setWebSocketUrl(url.contextPath() + 'realtime-app');\n    registerWebSocketCallbacks({\n      subscribeUrl: \"/wsResp/progress/\" + this.props.requestId,\n      callback: this.handleProgress  //must use lambda\n    },\n      {\n        subscribeUrl: \"/wsResp/\" + this.props.requestId + \"/update\",\n        callback: (response) => this.handleWsUpdate(response)\n      });\n    performWebsocketConnection();\n    this.wsConnected = true;\n  }\n\n  private handleWsUpdate = (response: any) => {\n\n    if (this.wsUpdateHandler) {\n      this.wsUpdateHandler(response);\n    }\n  }\n\n  setWsUpdateHandler = (handler: Function | undefined) => {\n    this.wsUpdateHandler = handler;\n  }\n  resetWsUpdateHandler = () => {\n    this.setWsUpdateHandler(undefined);\n  }\n\n  render() {\n    if (!this.props.requestId) {\n      return (\n        <div className=\"text-center\" style={{ paddingTop: '10%' }}>\n          <h2>{this.state.appIdStatus}</h2>\n          {this.state.errorAuthenticatingApp ?\n            <AnchorWithIcon iconClassName=\"fas fa-redo\" onClick={this.retryRequestAppId} children=\"Retry\" /> :\n            <Spinner />}\n        </div>\n      )\n    }\n    return (\n      <Fragment>\n        <Loading realtime={this.state.realtime} loading={this.state.loading} loadingPercentage={this.state.loadingPercentage} />\n        {this.state.showAlert ?\n          <Alert title={this.alertTitle}\n            isError={this.alertIsError}\n            onClose={(e) => this.setState({ showAlert: false })}\n            yesOnly={this.alertIsYesOnly}\n            onYes={this.alertOnYesCallback} onNo={this.alertOnCancelCallback}\n          >{this.alertBody}</Alert> :\n          null}\n        <MainLayout />\n        {/* <SockJsClient url={usedHost + 'realtime-app'} topics={['/wsResp/progress/' + this.props.requestId]}\n\n          onMessage={(msg: WebResponse) => { this.handleMessage(msg) }}\n          ref={this.clientRef} /> */}\n      </Fragment>\n    )\n  }\n}\n\nfunction Loading(props) {\n  if (props.loading == true) {\n    return (\n      <Loader realtime={props.realtime} progress={props.loadingPercentage} text=\"Please wait...\" type=\"loading\" />\n    );\n  }\n  return null;\n}\n\n\nconst mapDispatchToProps = (dispatch: Function) => ({\n  setLoggedUser: (user: User) => dispatch(actions.setLoggedUser(user)),\n  setMainApp: (app: App) => dispatch(actions.setMainApp(app)),\n  setRequestId: (response: WebResponse, app: App) => dispatch(actions.setRequestId(response, app)),\n})\n\nexport default withRouter(connect(\n  mapCommonUserStateToProps,\n  mapDispatchToProps\n)(App))\n","import { Container } from 'inversify';\nimport 'reflect-metadata'; \nimport ConfigurationService from './services/ConfigurationService';\nimport MasterDataService from './services/MasterDataService';\nimport StudentService from './services/StudentService';\nimport UserService from './services/UserService';\nimport MusyrifManagementService from './services/MusyrifManagementService';\n\nlet inversifyContainer = new Container();\n\ninversifyContainer.bind(ConfigurationService).toSelf().inSingletonScope();\ninversifyContainer.bind(MasterDataService).toSelf().inSingletonScope();\ninversifyContainer.bind(StudentService).toSelf().inSingletonScope();\ninversifyContainer.bind(UserService).toSelf().inSingletonScope();\ninversifyContainer.bind(MusyrifManagementService).toSelf().inSingletonScope();\n\nexport { inversifyContainer };\n\n","import React from 'react'\r\nimport App from './App'\r\nimport configureStore from './redux/configureStore'\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { Provider as InvesifyProvider } from 'inversify-react';\r\nimport { inversifyContainer } from './inversify.config';\r\n\r\nconst Root = (props: any) => {\r\n  const store = configureStore();\r\n  return (\r\n    <Provider store={store}>\r\n      <InvesifyProvider container={inversifyContainer} >\r\n        <HashRouter>\r\n          <App />\r\n        </HashRouter>\r\n      </InvesifyProvider>\r\n    </Provider>\r\n\r\n  );\r\n}\r\n\r\n\r\nexport default Root;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './Root.tsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}