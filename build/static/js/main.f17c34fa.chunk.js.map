{"version":3,"sources":["models/AuthorityType.ts","redux/appReducer.js","redux/types.js","models/BaseEntity.ts","utils/StringUtil.ts","models/User.ts","models/settings/Menu.ts","constant/Menus.ts","redux/userReducer.js","models/settings/AttachmentInfo.ts","services/Promises.ts","services/MasterDataService.ts","services/UserService.ts","services/MusyrifManagementService.ts","services/StudentService.ts","services/ConfigurationService.ts","redux/servicesReducer.ts","redux/reducers.js","middlewares/UserMiddleware.ts","middlewares/RealtimeChatMiddleware.js","redux/configureStore.js","middlewares/Common.ts","constant/Url.js","redux/actionCreators.ts","constant/stores.js","component/loader/Loader.js","utils/EventUtil.ts","component/alert/Alert.js","models/ApplicationProfile.ts","utils/websockets.js","component/BaseComponent.tsx","component/navigation/Header.tsx","component/loader/Spinner.tsx","component/pages/login/Login.tsx","component/pages/BasePage.tsx","utils/ComponentUtil.ts","component/pages/dashboard/main/DashboardMain.tsx","component/pages/home/HomeMain.tsx","models/Employee.ts","utils/CollectionUtil.tsx","models/commons/Filter.ts","component/form/FormGroup.tsx","component/navigation/NavigationButtons.tsx","component/navigation/AnchorWithIcon.tsx","component/pages/management/EmployeeRow.tsx","component/navigation/AnchorButton.tsx","component/navigation/ToggleButton.tsx","component/pages/management/BaseManagementPage.tsx","component/pages/management/MusyrifManagement.tsx","component/pages/management/ManagementMain.tsx","models/Category.ts","component/container/Modal.tsx","component/pages/management/EditDeleteButton.tsx","component/pages/management/CategoryManagement.tsx","models/RulePoint.ts","component/pages/management/RulePointManagement.tsx","utils/DateUtil.ts","component/form/FilterPeriod.tsx","component/pages/asrama/StudentList.tsx","models/Student.ts","models/PointRecord.ts","component/form/InputTime.tsx","component/pages/asrama/form/FormStepThree.tsx","component/alert/SimpleError.tsx","component/pages/asrama/form/FormStepTwo.tsx","component/pages/asrama/form/FormStepOne.tsx","component/pages/asrama/InputPointForm.tsx","component/container/Card.tsx","models/Class.ts","component/pages/asrama/point-record/PointRecordDetail.tsx","component/pages/asrama/DropPointButtons.tsx","component/pages/management/PointRecordsSummary.tsx","component/pages/asrama/medicalrecord/StudentForm.tsx","models/MedicalRecord.ts","component/pages/asrama/medicalrecord/MedicalRecordDailyInput.tsx","component/pages/asrama/medicalrecord/MedicalRecordForm.tsx","component/pages/home/AboutUs.tsx","component/pages/login/Register.tsx","component/pages/shared/StudentSearchForm.tsx","component/pages/asrama/point-record/PointRecordEdit.tsx","component/pages/dashboard/main/FollowUpReminder.tsx","models/WarningAction.ts","component/pages/management/WarningActionManagement.tsx","component/pages/settings/ConfigSettingPage.tsx","component/pages/report/StudentSemesterReport.tsx","models/CategoryPredicate.ts","component/pages/management/CategoryPredicateManagement.tsx","component/layout/ApplicationContent.tsx","component/navigation/SideBar.tsx","component/layout/MainLayout.tsx","App.tsx","Root.tsx","serviceWorker.js","index.js"],"names":["AuthorityType","initState","mainApp","undefined","reducer","state","action","type","payload","BaseEntity","id","created_at","updated_at","index","uniqueId","string","String","Date","getUTCMilliseconds","toString","months","twoDigits","value","User","nickname","name","email","password","profileImage","roles","user","requestId","nip","role","i","this","length","Object","assign","Menu","code","description","url","pathVariables","iconUrl","color","fontColor","active","menuClass","authenticated","showSidebar","subMenus","userAuthorized","clone","element","hasRole","defaultMenuIconClassName","getIconClassName","menu","getMenus","menuSet","_menus","subMenu","push","admin_asrama","musyrif_asrama","loginKey","loginStatus","loginFailed","menus","menuData","loggedUser","loginAttempt","applicationProfile","assetsPath","result","message","profile","referer","refresh","setLoginKeyCookie","data","AttachmentInfo","blob","Blob","arg0","split","info","axios","require","commonAjaxPostCalls","endpoint","request","Promise","resolve","reject","post","headers","commonAuthorizedHeader","then","axiosResponse","updateAccessToken","response","rawAxiosResponse","catch","e","console","error","commonAjaxPublicPostCalls","commonHeader","commonAjaxPostCallsWithBlob","responseType","debug","fileName","rawSplit","extension","window","URL","createObjectURL","attachmentInfo","MasterDataService","getOne","contextPath","concat","delete","list","update","updateApplicationProfile","instance","UserService","updateProfile","saveUser","requestApplicationId","callbackSuccess","callbackError","alert","requestApplicationIdNoAuth","MusyrifManagementService","filter","emp","employee_id","StudentService","followUp","pointRecordId","record_id","getFollowUpReminders","getRaporData","classId","downloadRaporData","submitMedicalRecord","record","req","medicalRecord","loadMonthlyMedicalRecord","studentId","month","year","fieldsFilter","student_id","setPointDropped","dropped","pointRecord","dropped_at","dropAll","recordIdArray","items","undropAll","ConfigurationService","appProfile","services","userService","getInstance","masterDataService","musyrifManagementService","studentService","configurationService","rootReducer","combineReducers","appState","appReducer","userState","userReducer","servicesState","servicesReducers","initialState","performLoginMiddleware","store","next","meta","app","responseJson","loginSuccess","newAction","common","dispatch","log","finally","endLoading","getLoggedUserMiddleware","param","performLogoutMiddleware","logoutSuccess","setLoggedUserMiddleware","getMessagesMiddleware","fetch","method","body","JSON","stringify","json","err","storeChatMessageLocallyMiddleware","getStore","configureStore","createStore","applyMiddleware","userMiddleware","realtimeChatMiddleware","getRequestId","getLoginKey","LOGIN_KEY","getAssetsPath","getState","getCookie","accessToken","setCookie","cookieValue","cname","cvalue","exdays","d","setTime","getTime","expires","toUTCString","document","cookie","ca","decodeURIComponent","c","charAt","substring","indexOf","devMode","getElementById","rootValue","baseImageUrl","usedHost","apiAccount","performLogout","startLoading","mapCommonUserStateToProps","LoaderContent","props","realtime","className","style","margin","position","zIndex","marginBottom","aria-hidden","padding","marginTop","height","width","progress","transitionDuration","disabled","Loader","timer","intervalId","clearInterval","setState","endMessage","withTimer","setInterval","Component","doItLater","callback","intervalMs","timeout","setTimeout","clearTimeout","State","backColor","Backdrop","backgroundColor","bgColor","Footer","ref","yesButtonRef","onClick","onYes","yesOnly","noButtonRef","onNo","Header","fontClassName","title","onClose","Alert","close","React","createRef","isError","current","focus","headerClassName","display","children","ApplicationProfile","about","welcoming_message","pageIcon","backgroundUrl","contact","address","warning_point","stompClient","wsConnected","subscriptionCallbacks","Array","sendToWebsocket","requestObject","send","BaseComponent","parentApp","updated","validateLoginStatus","isUserLoggedIn","backToLogin","sendWebSocket","setWsUpdateHandler","handler","resetWsUpdateHandler","getApplicationProfile","handleInputChange","event","stateFieldName","target","checked","parseInt","el","doAjax","withProgress","successCallback","errorCallback","params","commonAjax","commonAjaxWithProgress","getLoggedUser","isAdmin","scrollTop","opt","top","behavior","scrollTo","showConfirmation","showAlert","showConfirmationDanger","showAlertError","showInfo","showError","showCommonSuccessAlert","showCommonErrorAlert","getServices","history","IState","showNavLinks","buttonToggleNavRef","toggleNavLinks","onLogout","ok","setMenu","click","label","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","map","isActive","activeMenuCode","key","to","setMenuNull","NavBarTop","paddingLeft","fontSize","UserIcon","marginRight","withRouter","connect","Spinner","innerDivs","visibility","show","loading","editPassword","Login","updateCredentialProperty","getAttribute","preventDefault","performLogin","onSubmit","login","onChange","PasswordField","placeholder","required","EmailField","autoFocus","username","BasePage","componentReady","getAttachmentInfoFromFile","fileInput","files","file","reader","FileReader","readAsDataURL","onload","setUrl","onerror","Error","attachment","DashboardMain","addPointRecord","pathname","updateImage","accept","src","HomeMain","imageUrl","backgroundImage","backgroundSize","Employee","tableHeader","values","Filter","limit","page","orderType","orderBy","contains","exacts","day","module","dayTo","monthTo","yearTo","maxValue","availabilityCheck","resetFieldsFilter","f","withLimit","FormGroup","orientation","NavigationButtons","buttonIndexes","generateButtonValues","totalData","activePage","lastIndex","nextPage","previusPage","currentPage","displayed_buttons","buttonCount","Math","ceil","min","max","AnchorWithIcon","btnClassName","attributes","iconClassName","tyle","EmployeeRow","getEmployee","employee","activeStatusUpdate","onUpdated","activateMusyrif","activate","isMusyrif","startingNumber","AnchorButton","ToggleButton","yesLabel","noLabel","BaseManagementPage","modelName","overrideLoading","formRef","emptyRecord","loadItems","itemsLoaded","updateFilter","dataset","updateFieldsFilter","loadAtPage","updateRecordProp","resetForm","oneRecordLoaded","item","showModal","recordUpdated","hideModal","callApiSubmit","reload","MusyrifManagement","setMusyrifOnly","musyrifOnly","onEmployeeStatusUpdate","EmployeeList","overflow","ManagementMain","Category","points","object","Modal","toggleable","footerContent","showFooter","EditDeleteButton","getRecord","rec","recordLoaded","recordLoadedForDetail","recordDeleted","loadRecord","loadRecordRequest","loadRecordForDetail","deleteRecord","hasType","types","CategoryManagement","category","ItemsList","RecordForm","RulePoint","category_id","point","droppable","categories","categoriesLoaded","RulePointManagement","rulePoint","categoriesNotLoaded","loadCategories","selectedCategoryId","reloadCategories","data-type","MONTHS","leapMonths","regularMonths","parseDate","s","b","m","days","arr","FilterPeriod","mode","Fragment","showlabel","hideDay","classes","StudentList","classesLoaded","loadClasses","getClasses","updateSelectedClass","inputPage","inputPoint","inputMedicalRecord","student","updateWithPointRecord","val","getDate","getMonth","getFullYear","selectedClassId","showPointRecord","level","sekolah","rombel","nama","colSpan","kelas","Student","nis","PointRecord","setDate","dateString","td","location","time","point_id","rule_point","pictures","getPicture","getTimestamp","DAYS","getDay","join","getHours","getMinutes","getSeconds","h","hour","minute","second","hours","minutesOrSeconds","InputTime","minutes","seconds","updateFromProps","updateValue","setNow","date","border","sec","marginLeft","FormStepThree","submit","updatePointRecord","updateDate","updateTime","setAttachment","removeAttachment","getAttachment","onBack","SimpleError","rulePoints","FormStepTwo","rulePointsLoaded","setRulePoint","loadRulePoints","getCategory","r","updateRulePoint","select","filteredItems","FormStepOne","setCategory","setSelectedCategory","updateCategory","formStep","savedRecord","InputPointForm","totalStep","validateStudentData","removeStudent","nextStep","step","submitRecord","submitPointRecord","recordSubmitted","back","Progress","Detail","toDateString","Warning","Card","Class","PointRecordDetail","pictureUrl","timeStamp","studentClassString","DropPointButtons","setDropped","isDropped","selectedCategory","showFilterDetail","defaultFieldsFilter","class_id","point_name","category_name","PointRecordSummary","classessLoaded","getCategories","cat","showDetail","hideDetail","hideFilterDetail","openEditPage","p","resetFilter","itemIdArray","autoComplete","recordLoadedForEdit","forEach","optionTypes","studentName","StudentForm","loadStudent","setSelectedItem","setItem","reset","selectedItem","onReset","cursor","ItemDetail","MedicalRecord","temperature_morning","temperature_afternoon","breakfast","lunch","dinner","medicine_consumption","genose_test","antigen_test","pcr_test","obj","y","MedicalRecordDailyInput","setRecord","period","monthName","rows","Checkbox","SingleRow","minHeight","forwardRef","mappedItems","Map","MedicalRecordForm","inputRefs","setStudent","loadMonthlyRecord","recordsLoaded","toMap","get","set","getFilter","dayCount","getMonthDays","gridTemplateColumns","repeat","AboutUs","displayName","editPasswordRepeat","Register","UserModel","trim","userSaved","passwordMatch","fieldComplete","register","borderColor","CommonField","keyword","StudentSearchForm","selectItem","pointsMap","selectedPointId","PointRecordEdit","inputTimeRef","categoryId","catId","resp","checkPassedData","updateInput","updateRecordField","setSelectedRulePoint","validateInput","removeImage","updatePicture","categoryID","followUpInfos","FollowUpReminder","loadReminder","TOTAL_POINT","FOLLOW_UP_COUNT","WarningAction","WarningActionManagement","warningAction","ConfigSettingPage","configService","configUpdated","StudentSemesterReport","selectClassRef","loadRaporData","raporDataLoaded","downloadData","reportCreated","createElement","download","reportHeader","class","ci","total_point","predicate_letter","predicate_desc","CategoryPredicate","CategoryPredicateManagement","categoryPredicate","ApplicationContent","setSidebarMenus","exact","path","render","Setting","Report","Management","Asrama","proos","LoginRoute","Dashboard","SideBar","isSidebarActive","parentMenu","pathName","addEventListener","handleScroll","removeEventListener","srcElement","sidebarMenus","brand","menuClassName","Brand","textAlign","paddingTop","paddingBottom","textDecoration","MainLayout","currentPathName","setCurrentMenu","pathRaw","firstPath","extractMenuPath","getMenuByMenuPath","getSubMenus","menuState","loadingPercentage","mainAppUpdated","appIdStatus","errorAuthenticatingApp","App","loadings","alertTitle","alertBody","alertIsYesOnly","alertIsError","alertOnYesCallback","alertOnCancelCallback","wsUpdateHandler","clientRef","alertCallback","onOk","requestAppId","setRequestId","retryRequestAppId","smoothEndLoading","handleProgress","msg","percentageFloat","percentage","floor","initWebsocket","callBackObjects","registerWebSocketCallbacks","subscribeUrl","handleWsUpdate","setMainApp","incrementLoadings","decrementLoadings","yesCallback","noCallback","dismissAlert","link","querySelector","setAttribute","head","appendChild","updateFavicon","Loading","text","loggedIn","actions","Root","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f17c34fa.chunk.js","sourcesContent":["\nexport   enum AuthorityType{\n    \n    admin_asrama = \"admin_asrama\",\n    musyrif_asrama = \"musyrif_asrama\",\n    user = \"user\"\n}\n","import * as types from './types'\r\n\r\nexport const initState = { \r\n    mainApp: undefined\r\n\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case types.SET_MAIN_APP:\r\n              \r\n            return { ...state, mainApp: action.payload }; \r\n       \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","/**\r\n * \r\n */\r\n \r\nexport const REMOVE_SHOP_ENTITY= \"remove_shop_entity\"; \r\nexport const FETCH_PRODUCT_CATEGORIES_ALL = \"all_product_categories\";\r\nexport const DO_LOGIN = \"do_login\";\r\nexport const DO_LOGOUT = \"do_logout\";    \r\nexport const SET_REQUEST_ID = \"SET_REQUEST_ID\"; \r\nexport const STORE_MESSAGE = \"store_message\";\r\nexport const GET_ENTITY_PROPERTY = \"get_entity_config\";\r\nexport const GET_MANAGEMENT_MENUS = \"GET_MANAGEMENT_MENUS\";\r\nexport const GET_MESSAGE = \"GET_MESSAGE\";\r\nexport const SET_MAIN_APP = \"SET_MAIN_APP\"; \r\nexport const GET_ENTITY_BY_ID = \"get_entity_by_id\";\r\nexport const UPDATE_ENTITY = \"update_entity\"; \r\nexport const REFRESH_LOGIN = \"refresh_login\";\r\nexport const GET_LOGGED_USER = \"get_logged_user\";\r\nexport const SET_LOGGED_USER = \"set_logged_user\";\r\nexport const SET_APPLICATION_PROFILE = \"SET_APPLICATION_PROFILE\";","\nexport default class BaseEntity{\n\tid?:any; \n\n\tcreated_at?:string;\n\tupdated_at?:string;\n\t \n\n}\n","let index = 1;\r\nexport const uniqueId = function () {\r\n\tlet string = new String(new Date().getUTCMilliseconds()).toString();\r\n\tindex++;\r\n\treturn index + \"-\" + string;\r\n}\r\n\r\nexport function beautifyNominal(val:any) {\r\n\tif (val == \"\" || val == null) return \"0\";\r\n\tconst isDecimal:boolean = new String(val).includes(\".\");\r\n\tconst isNegative:boolean = new String(val).startsWith(\"-\");\r\n\tif (isNegative) {\r\n\t\tval = new String(val).replace(\"-\",\"\");\r\n\t}\r\n\tconst rawVal = isDecimal? parseInt( new String(val).split(\".\")[0]) : parseInt(val);\r\n\tlet nominal = Math.abs(rawVal).toString();\r\n\tlet result = \"\";\r\n\tif (nominal.length > 3) { \r\n\t\tlet zeroIndex: number = 0;\r\n\t\tfor (let i = nominal.length - 1; i > 0; i--) {\r\n\t\t\tzeroIndex++; \r\n\t\t\tresult = nominal[i] + result;\r\n\t\t\tif (zeroIndex == 3 ) {\r\n\t\t\t\tresult = \".\" + result;\r\n\t\t\t\tzeroIndex = 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tresult = nominal[0] + result;\r\n\t} else {\r\n\t\tresult = val;\r\n\t}\r\n\tif (rawVal < 0) {\r\n\t\treturn rawVal;\r\n\t}\r\n\tif (isDecimal) {\r\n\t\tresult+= \",\"+ new String(val).split(\".\")[1];\r\n\t}\r\n\tif (isNegative) {\r\n\t\tresult = \"-\"+result;\r\n\t}\r\n\treturn result;\r\n}\r\n \r\n\r\nconst months = [\r\n\t\"Januari\", \"Ferbuari\", \"Maret\", \"April\", \"Mei\", \"Juni\",\r\n\t\"Juli\", \"Agustus\", \"September\", \"Oktober\", \"November\", \"Desember\"\r\n]\r\n\r\nexport const monthName = (index:number) => {\r\n\treturn months[index];\r\n}\r\n\r\nexport const monthYearString = function (m, y) {\r\n\tif (m == null || y == null) {\r\n\t\treturn \"-\";\r\n\t}\r\n\treturn months[m - 1] + \" \" + y;\r\n}\r\nexport const twoDigits = (value:number) :string => {\r\n    if (value >= 10) {\r\n        return   value.toString();\r\n    }\r\n    return \"0\"+value;\r\n}","import { AuthorityType } from './AuthorityType';\nimport BaseEntity from './BaseEntity';\n\nexport default class User extends BaseEntity{\n\tstatic clone(user: User): User {\n\t\t return Object.assign(new User(), user);\n\t}\n    hasRole(role: AuthorityType): boolean {\n        for (let i = 0; i < this.roles.length; i++) {\n\t\t\tconst element = this.roles[i];\n\t\t\tif (element == role) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n    }\n\tnickname?:string;\n\tname?:string;\n\temail?:string;\n\tpassword?:string;\n\tprofileImage?:string;\n\troles:AuthorityType[] = [AuthorityType.user];\n\trequestId?:string; \n\tnip?:string;\n\n}\n","import BaseEntity from '../BaseEntity'; \nimport { uniqueId } from '../../utils/StringUtil';\nimport { AuthorityType } from '../AuthorityType';\nimport User from './../User';\n\nexport default class Menu extends BaseEntity{\n\tstatic defaultMenuIconClassName:string = \"fas fa-folder\";\n\n\tcode:string = uniqueId();\n\tname?:string;\n\tdescription?:string;\n\turl?:string;\n\tpathVariables?:string; \n\ticonUrl?:string;\n\tcolor?:string;\n\tfontColor?:string;\n\trole:AuthorityType[] = [];\n\n\t//\n\tactive?:boolean = false;\n\tmenuClass?:string = \"fas fa-folder\";\n\tauthenticated?:boolean = false;\n\tshowSidebar?:boolean  = false;\n\tsubMenus?:Menu[] = undefined;\n\n\tstatic getIconClassName = (menu:Menu) => {\n\t\tif (undefined == menu.menuClass) {\n\t\t\treturn Menu.defaultMenuIconClassName;\n\t\t}\n\t\treturn menu.menuClass;\n\t}\n\n\tuserAuthorized? = (user?:User) : boolean => {\n\t\tif (this.role.length == 0) return true;\n\t\tif (!user) return false;\n\t\tuser = User.clone(user);\n\t\tfor (let i = 0; i < this.role.length; i++) {\n\t\t\tconst element = this.role[i];\n\t\t\tif (user.hasRole(element)){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n","\r\nimport { AuthorityType } from '../models/AuthorityType';\r\nimport Menu from '../models/settings/Menu';\r\n \r\n\r\nexport const getMenus = () => {\r\n    let menuSet: Menu[] = [];\r\n    for (let i = 0; i < _menus.length; i++) {\r\n        const element: Menu = _menus[i];\r\n        const menu:Menu = Object.assign(new Menu, element);\r\n        const subMenus:Menu[] = [];\r\n        if (element.subMenus) {\r\n            for (let i = 0; i < element.subMenus.length; i++) {\r\n                const subMenu = element.subMenus[i];\r\n                subMenus.push(Object.assign(new Menu, subMenu));\r\n            }\r\n            menu.subMenus = subMenus;\r\n        }\r\n        menuSet.push(menu);\r\n    }\r\n    \r\n    return menuSet;\r\n}\r\nexport const extractMenuPath = (pathName: string) => {\r\n    const pathRaw = pathName.split('/');\r\n   \r\n    let firstPath = pathRaw[0];\r\n    if (firstPath.trim() == \"\") {\r\n        firstPath = pathRaw[1];\r\n    }\r\n    return firstPath;\r\n}\r\nexport const getMenuByMenuPath = (pathName: string): Menu | null => {\r\n    const menus = getMenus();\r\n    try {\r\n        for (let i = 0; i < menus.length; i++) {\r\n            const menu: Menu = menus[i];\r\n            if (menu.url == \"/\" + pathName) {\r\n                return menu;\r\n            }\r\n        }\r\n        return null;\r\n    } catch (error) {\r\n        return null;\r\n    }\r\n}\r\n\r\nconst _menus: Menu[] = [\r\n    {\r\n        code: 'home',\r\n        name: \"Home\",\r\n        url: \"/home\",\r\n        menuClass: \"fa fa-home\",\r\n        active: false,\r\n        authenticated: false,\r\n        showSidebar: false,\r\n        role : []\r\n    },\r\n    \r\n    {\r\n        code: 'dashboard',\r\n        name: \"Dashboard\",\r\n        url: \"/dashboard\",\r\n        menuClass: \"fas fa-tachometer-alt\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true,\r\n        role: [AuthorityType.admin_asrama, AuthorityType.musyrif_asrama],\r\n        subMenus: [\r\n            {\r\n                code: 'followup',\r\n                name: 'Follow Up',\r\n                url: 'followup',\r\n                menuClass: 'fas fa-history',\r\n                role: [ AuthorityType.musyrif_asrama],\r\n            },\r\n            // {\r\n            //     code: 'dashboard_productsales',\r\n            //     name: 'Product Sales',\r\n            //     url: 'productsales',\r\n            //     menuClass: 'fas fa-chart-line',\r\n            //     role: [],\r\n            // }\r\n        ]\r\n    }, \r\n    {\r\n        code: 'management',\r\n        name: \"Manajemen\",\r\n        url: \"/management\",\r\n        menuClass: \"fas fa-mail-bulk\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true,\r\n        role: [AuthorityType.admin_asrama, AuthorityType.musyrif_asrama],\r\n        subMenus: [\r\n            {\r\n                code: 'musyrifmanagement',\r\n                name: 'Musyrif',\r\n                url: 'musyrifmanagement',\r\n                menuClass: 'fas fa-users',\r\n                role: [AuthorityType.admin_asrama],\r\n            },\r\n            {\r\n                code: 'rule_category',\r\n                name: 'Kategori Pelanggaran',\r\n                url: 'rule_category',\r\n                menuClass: 'fas fa-tags',\r\n                role: [AuthorityType.admin_asrama],\r\n            },\r\n            {\r\n                code: 'rule_point',\r\n                name: 'Poin Pelanggaran',\r\n                url: 'rule_point',\r\n                menuClass: 'fas fa-puzzle-piece',\r\n                role: [AuthorityType.admin_asrama],\r\n            }, \r\n            {\r\n                code: 'warning_action',\r\n                name: 'Peringatan',\r\n                url: 'warning_action',\r\n                menuClass: 'fas fa-exclamation-triangle',\r\n                role: [AuthorityType.admin_asrama, AuthorityType.musyrif_asrama],\r\n            }, \r\n            {\r\n                code: 'category_predicate',\r\n                name: 'Predikat Rapor',\r\n                url: 'category_predicate',\r\n                menuClass: 'fas fa-exclamation-triangle',\r\n                role: [AuthorityType.admin_asrama, ],\r\n            }, \r\n        ]\r\n    }, \r\n    {\r\n        code: 'asrama',\r\n        name: \"Asrama\",\r\n        url: \"/asrama\",\r\n        menuClass: \"fas fa-school\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true,\r\n        role: [  AuthorityType.musyrif_asrama, AuthorityType.admin_asrama],\r\n        subMenus: [\r\n            {\r\n                code: 'studentlist',\r\n                name: 'Siswa',\r\n                url: 'studentlist',\r\n                menuClass: 'fas fa-users',\r\n                role: [ AuthorityType.musyrif_asrama],\r\n            },\r\n            {\r\n                code: 'input_point',\r\n                name: 'Form Pelanggaran Tipe 1',\r\n                url: 'inputpoint',\r\n                menuClass: 'fas fa-edit',\r\n                role: [ AuthorityType.musyrif_asrama],\r\n            }, \r\n            {\r\n                code: 'pointrecordedit',\r\n                name: 'Form Pelanggaran Tipe 2',\r\n                url: 'pointrecordedit',\r\n                menuClass: 'fas fa-edit',\r\n                role: [ AuthorityType.musyrif_asrama],\r\n            },\r\n            // {\r\n            //     code: 'medicalrecord',\r\n            //     name: 'Medical Record',\r\n            //     url: 'medicalrecord',\r\n            //     menuClass: 'fas fa-briefcase-medical',\r\n            //     role: [ AuthorityType.musyrif_asrama],\r\n            // },\r\n            {\r\n                code: 'pointsummary',\r\n                name: 'Rekap Pelanggaran',\r\n                url: 'pointsummary',\r\n                menuClass: 'fas fa-clipboard',\r\n                role: [ AuthorityType.musyrif_asrama, AuthorityType.admin_asrama],\r\n            },\r\n           \r\n            \r\n        ]\r\n    }, \r\n    {\r\n        code: 'report',\r\n        name: \"Laporan\",\r\n        url: \"/report\",\r\n        menuClass: \"fas fa-file\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true,\r\n        role: [  AuthorityType.musyrif_asrama],\r\n        subMenus: [\r\n            {\r\n                code: 'studentreport',\r\n                name: 'Rapor',\r\n                url: 'studentreport',\r\n                menuClass: 'fas fa-file',\r\n                role: [ AuthorityType.musyrif_asrama],\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        code: 'settings',\r\n        name: \"Setting\",\r\n        url: \"/settings\",\r\n        menuClass: \"fas fa-cogs\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true,\r\n        role: [  AuthorityType.admin_asrama],\r\n        subMenus: [\r\n            {\r\n                code: 'config',\r\n                name: 'Konfigurasi',\r\n                url: 'config',\r\n                menuClass: 'fas fa-cog',\r\n                role: [ AuthorityType.admin_asrama],\r\n            },\r\n        ]\r\n    }\r\n    \r\n];\r\n","import * as types from './types'\r\nimport * as menuData from '../constant/Menus' \r\nimport { setLoginKeyCookie } from './../middlewares/Common';\r\n\r\nexport const initState = {\r\n    loginKey: null,\r\n    loginStatus: false,\r\n    loginFailed: false,\r\n    menus: menuData.getMenus(),\r\n    loggedUser: null,\r\n    loginAttempt: false,\r\n    requestId: null,\r\n    applicationProfile: {},\r\n    assetsPath: \"\"\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    \r\n    let result = {};\r\n    switch (action.type) { \r\n        case types.SET_REQUEST_ID:\r\n            \r\n            result = {\r\n                ...state, requestId: action.payload.message,\r\n                applicationProfile: action.payload.profile ?? {},\r\n                assetsPath: action.payload.profile.assetsPath\r\n            };\r\n            \r\n            if (action.payload.loginStatus == true) {\r\n                result.loggedUser = action.payload.user;\r\n                result.loginStatus = true;\r\n            } else {\r\n                result.loginStatus = false;\r\n                result.loggedUser = null;\r\n            }\r\n            // console.debug(\"result\");\r\n            // console.debug(\"action.payload.requestId: \",action.payload.message); \r\n            // console.debug(\"REQUEST_ID result.loginStatus:\", result.loginStatus)\r\n            action.payload.referer.refresh();\r\n\r\n            return result;\r\n        case types.DO_LOGIN:\r\n            result = {\r\n                ...state,\r\n                loginAttempt: true,\r\n                loginStatus: action.payload.loginStatus,\r\n                loginKey: action.payload.loginKey,\r\n                loginFailed: action.payload.loginStatus == false,\r\n                loggedUser: action.payload.loggedUser\r\n            };\r\n            return result;\r\n        case types.DO_LOGOUT:\r\n            result = {\r\n                ...state,\r\n                loginStatus: false,\r\n                loggedUser: null\r\n            };\r\n            setLoginKeyCookie(null);\r\n            return result;\r\n        case types.REFRESH_LOGIN:\r\n            result = {\r\n                ...state,\r\n                loginStatus: action.payload.loginStatus,\r\n                loggedUser: action.payload.loggedUser,\r\n                requestId: action.payload.requestId,\r\n            };\r\n            return result;\r\n        case types.GET_LOGGED_USER:\r\n            result = {\r\n                ...state, loggedUser: action.payload.data\r\n            };\r\n            return result;\r\n        case types.SET_LOGGED_USER:\r\n            result = {\r\n                ...state, loggedUser: action.payload.user\r\n            };\r\n            return result;\r\n        case types.SET_APPLICATION_PROFILE:\r\n            result = {\r\n                ...state, applicationProfile: action.payload.applicationProfile\r\n            };\r\n            return result;\r\n        default:\r\n            return { ...state };\r\n\r\n    }\r\n}\r\n\r\nexport default reducer;","export default class AttachmentInfo {\r\n    setUrl(arg0: string) {\r\n        this.url = arg0;\r\n        this.data = arg0.split(\",\")[1];\r\n    }\r\n    static nameOnly(name: any): AttachmentInfo {\r\n        const info = new AttachmentInfo();\r\n        info.name = name;\r\n        return info;\r\n    }\r\n    static instance(name: any, url:string): AttachmentInfo {\r\n        const info = new AttachmentInfo();\r\n        info.name = name;\r\n        info.url = url;\r\n        return info;\r\n    }\r\n    name: string = \"\";\r\n    blob: Blob = new Blob();\r\n    url: string = \"\";\r\n    data: string = \"\";\r\n}","\r\nimport { commonAuthorizedHeader, commonHeader } from '../middlewares/Common';\r\nimport WebResponse from '../models/commons/WebResponse';\r\nimport { updateAccessToken } from './../middlewares/Common';\r\nimport AttachmentInfo from '../models/settings/AttachmentInfo';\r\n\r\nconst axios = require('axios');\r\n\r\nexport const rejectedPromise = (message: any) => {\r\n    return new Promise((res, rej) => {\r\n        rej(message);\r\n    });\r\n}\r\n\r\nexport const emptyPromise = (defaultResponse: any) => new Promise(function (res, rej) {\r\n    res(defaultResponse);\r\n});\r\n\r\nexport const commonAjaxPostCalls = (endpoint: string, payload?: any) => {\r\n    const request = payload == null ? {} : payload;\r\n    return new Promise<WebResponse>(function (resolve, reject) {\r\n        axios.post(endpoint, request, {\r\n            headers: commonAuthorizedHeader()\r\n        })\r\n            .then(axiosResponse => {\r\n                updateAccessToken(axiosResponse);\r\n                const response: WebResponse = axiosResponse.data;\r\n                response.rawAxiosResponse = axiosResponse;\r\n                if (response.code == \"00\") {\r\n\r\n                    resolve(response);\r\n                }\r\n                else { reject(response); }\r\n            })\r\n            .catch((e: any) => { \r\n                \r\n                console.error(e); \r\n                reject(e); \r\n            });\r\n    })\r\n}\r\n\r\n\r\nexport const commonAjaxPublicPostCalls = (endpoint: string, payload?: any) => {\r\n    const request = payload == null ? {} : payload;\r\n    return new Promise<WebResponse>(function (resolve, reject) {\r\n        axios.post(endpoint, request, {\r\n            headers: commonHeader()\r\n        })\r\n            .then(axiosResponse => {\r\n                \r\n                const response: WebResponse = axiosResponse.data;\r\n                response.rawAxiosResponse = axiosResponse;\r\n                if (response.code == \"00\") {\r\n                    resolve(response);\r\n                }\r\n                else { reject(response); }\r\n            })\r\n            .catch((e: any) => { \r\n                \r\n                console.error(e); \r\n                reject(e); \r\n            });\r\n    })\r\n}\r\n\r\nexport const commonAjaxPostCallsWithBlob = (endpoint: string, payload?: any) => {\r\n    const request = payload == null ? {} : payload;\r\n    return new Promise<AttachmentInfo>(function (resolve, reject) {\r\n        axios.post(endpoint, request, {\r\n            responseType: 'blob' ,\r\n            headers: commonAuthorizedHeader()\r\n        })\r\n            .then(axiosResponse => {\r\n                updateAccessToken(axiosResponse);\r\n                \r\n                const response: any = axiosResponse.data;\r\n                response.rawAxiosResponse = axiosResponse;\r\n                console.debug(\"axiosResponse.headers: \", axiosResponse.headers);\r\n                let contentDisposition = axiosResponse.headers[\"content-disposition\"];\r\n                let fileName = contentDisposition.split(\"filename=\")[1];\r\n                let rawSplit = fileName.split(\".\");\r\n                let extension = rawSplit[rawSplit.length - 1];\r\n                let blob = new Blob([response], { type: extension });\r\n                let url = window.URL.createObjectURL(blob);\r\n                // let a = document.createElement(\"a\");\r\n\r\n                // document.body.appendChild(a);\r\n\r\n                // a.href = url;\r\n                // a.style.display = 'none';\r\n                // a.download = fileName;\r\n                // a.click();\r\n\r\n                // window.URL.revokeObjectURL(url);\r\n                const attachmentInfo:AttachmentInfo = new AttachmentInfo();\r\n                attachmentInfo.name = fileName;\r\n                attachmentInfo.blob = blob;\r\n                attachmentInfo.url = url;\r\n                resolve(attachmentInfo);\r\n                \r\n            })\r\n            .catch((e: any) => { console.error(e); reject(e); });\r\n    })\r\n}","\r\nimport Filter from '../models/commons/Filter';\r\nimport WebRequest from '../models/commons/WebRequest';\r\nimport { contextPath } from './../constant/Url';\r\nimport { commonAjaxPostCalls, commonAjaxPostCallsWithBlob } from './Promises';\r\nimport ApplicationProfile from './../models/ApplicationProfile';\r\n\r\nexport default class MasterDataService { \r\n    private static instance?: MasterDataService;\r\n\r\n    static getInstance(): MasterDataService {\r\n        if (this.instance == null) {\r\n            this.instance = new MasterDataService();\r\n        }\r\n        return this.instance;\r\n    }\r\n    /**\r\n     * Get one by ID\r\n     * @param request \r\n     */\r\n    getOne = (request:WebRequest) => {\r\n        const endpoint: string = contextPath().concat(\"api/masterdata/getbyid\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    delete = (request:WebRequest) => {\r\n        const endpoint: string = contextPath().concat(\"api/masterdata/delete\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    list = (request: WebRequest)  => {\r\n        const endpoint: string = contextPath().concat(\"api/masterdata/list\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n\r\n    }\r\n\r\n    update = (request: WebRequest) => {\r\n        const endpoint: string = contextPath().concat(\"api/masterdata/update\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n   \r\n    updateApplicationProfile = (applicationProfile: ApplicationProfile) => {\r\n        const request: WebRequest = {\r\n            profile: applicationProfile\r\n        }\r\n        const endpoint = contextPath().concat(\"api/app/setting/updateprofile\");\r\n        return commonAjaxPostCalls(endpoint, request)\r\n    }\r\n\r\n    generateReport(request: WebRequest) {\r\n        const endpoint: string = contextPath().concat(\"api/app/report/records\");\r\n        return commonAjaxPostCallsWithBlob(endpoint, request);\r\n\r\n    }\r\n}","\r\nimport User from './../models/User';\r\nimport WebRequest from '../models/commons/WebRequest';\r\nimport { contextPath } from './../constant/Url';\r\nimport { commonAjaxPostCalls, commonAjaxPublicPostCalls } from './Promises';\r\nimport WebResponse from '../models/commons/WebResponse';\r\nimport { updateAccessToken } from './../middlewares/Common';\r\nexport default class UserService {\r\n    private static instance?: UserService;\r\n\r\n    static getInstance(): UserService {\r\n        if (this.instance == null) {\r\n            this.instance = new UserService();\r\n        }\r\n        return this.instance;\r\n    }\r\n    updateProfile = (user: User) => {\r\n\r\n        const request: WebRequest = {\r\n            user: user\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/member/account/updateprofile\")\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    saveUser = (user: User) => {\r\n\r\n        const request: WebRequest = {\r\n            user: user\r\n        } \r\n        const endpoint = contextPath().concat(\"api/public/register\")\r\n        return commonAjaxPublicPostCalls(endpoint, request);\r\n    }\r\n    requestApplicationId = (callbackSuccess: (response: WebResponse) => any, callbackError: ()=>any) => {\r\n        const url = contextPath() + \"api/accountdashboard/requestid\";\r\n        commonAjaxPostCalls(url, {}).then(data => {\r\n            if (data.code != \"00\") {\r\n                alert(\"Error requesting app ID\");\r\n                return;\r\n            }\r\n            const response = data.rawAxiosResponse;\r\n            updateAccessToken(response);\r\n            console.debug(\"response header:\", response.headers['api_token']);\r\n            callbackSuccess(data);\r\n        }).catch(e => {\r\n            console.error(\"ERROR requestApplicationId: \", e);\r\n            callbackError();\r\n        })\r\n\r\n    }\r\n    requestApplicationIdNoAuth = (callbackSuccess: (response:WebResponse)=>any, callbackError: ()=>any) => {\r\n        const url =   contextPath() + \"api/account/requestid\";\r\n        commonAjaxPublicPostCalls(url, {}).then(data => {\r\n          if (data.code != \"00\") {\r\n              alert(\"Error requesting app ID\");\r\n              return;\r\n          } \r\n          callbackSuccess(data);\r\n      }).catch(e=>{\r\n          console.error(\"ERROR requestApplicationId No Auth: \", e);\r\n        //   alert(\"Error, please reload OR try again\");\r\n            callbackError();\r\n      })\r\n          \r\n      }\r\n\r\n}","\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport { contextPath } from './../constant/Url';\r\nimport Filter from '../models/commons/Filter';\r\nimport Employee from '../models/Employee';\r\nimport WebRequest from '../models/commons/WebRequest';\r\nexport default class MusyrifManagementService {\r\n\r\n    private static instance?: MusyrifManagementService;\r\n\r\n    static getInstance(): MusyrifManagementService {\r\n        if (this.instance == null) {\r\n            this.instance = new MusyrifManagementService();\r\n        }\r\n        return this.instance;\r\n    }\r\n    public employeeList(filter: Filter) {\r\n        return commonAjaxPostCalls(contextPath() + \"/api/musyrifmanagement/employees\", {\r\n            filter: filter\r\n        });\r\n    }\r\n    activate(emp: Employee, active: boolean) {\r\n        const request:WebRequest = {\r\n            employee_id : emp.id,\r\n            active : active,\r\n        }\r\n        return commonAjaxPostCalls(contextPath() + \"/api/musyrifmanagement/activate\", request);\r\n    }\r\n}","import { commonAjaxPostCalls, commonAjaxPostCallsWithBlob } from './Promises';\r\nimport { contextPath } from '../constant/Url';\r\nimport PointRecord from './../models/PointRecord';\r\nimport AttachmentInfo from './../models/settings/AttachmentInfo';\r\nimport WebRequest from './../models/commons/WebRequest';\r\nimport MedicalRecord from './../models/MedicalRecord';\r\nimport WebResponse from '../models/commons/WebResponse';\r\nexport default class StudentService {\r\n    \r\n   \r\n\r\n    private static instance?: StudentService;\r\n\r\n    static getInstance(): StudentService {\r\n        if (this.instance == null) {\r\n            this.instance = new StudentService();\r\n        }\r\n        return this.instance;\r\n    }\r\n    public submitPointRecord(pointRecord: PointRecord, attachmentInfo?:AttachmentInfo|undefined) {\r\n        if (attachmentInfo) {\r\n            attachmentInfo.data = \"\";\r\n        }\r\n        const req:WebRequest = {\r\n            pointRecord: pointRecord,\r\n            attachmentInfo: attachmentInfo\r\n        }\r\n        return commonAjaxPostCalls(contextPath() + \"api/dormitorymanagement/submitpointrecord\", req);\r\n    }\r\n    public getClasses() :Promise<WebResponse> {\r\n        return commonAjaxPostCalls(contextPath() + \"api/dormitorymanagement/classes\", {});\r\n    }\r\n    public getCategories() :Promise<WebResponse> {\r\n        return commonAjaxPostCalls(contextPath() + \"api/dormitorymanagement/rulecategories\", {});\r\n    }\r\n    public followUp = (pointRecordId:number):Promise<WebResponse> => {\r\n        return commonAjaxPostCalls(contextPath() + \"api/dormitorymanagement/followup\", {\r\n            record_id:pointRecordId\r\n        });\r\n    }\r\n    public getFollowUpReminders = ():Promise<WebResponse> => {\r\n        return commonAjaxPostCalls(contextPath() + \"api/dormitorymanagement/followupreminders\", {});\r\n    }\r\n    public getRaporData = (classId: string) :Promise<WebResponse> => {\r\n        return commonAjaxPostCalls(contextPath() + `api/report/studentdata/${classId}`, {});\r\n    }\r\n    public downloadRaporData = (classId: string) :Promise<any> => {\r\n        // return commonAjaxPostCallsWithBlob(endpoint, request);\r\n        return commonAjaxPostCallsWithBlob(contextPath() + `api/report/downloaddata/${classId}`, {});\r\n    }\r\n    \r\n\r\n    public submitMedicalRecord = (record:MedicalRecord) => {\r\n        const req:WebRequest = {\r\n            medicalRecord: record\r\n        }\r\n        return commonAjaxPostCalls(contextPath() + \"api/dormitorymanagement/submitmedicalrecord\", req)\r\n    }\r\n    public loadMonthlyMedicalRecord = (studentId:number, month:number, year:number) => {\r\n        const req:WebRequest = {\r\n            filter: {\r\n                year:year, month:month,\r\n                fieldsFilter: {student_id:studentId}\r\n            }\r\n        }\r\n        return commonAjaxPostCalls(contextPath() + \"api/dormitorymanagement/monthlymedicalrecord\", req)\r\n    }\r\n\r\n    public setPointDropped = (id: number, dropped: boolean) => {\r\n        return commonAjaxPostCalls(contextPath() + \"api/dormitorymanagement/droppoint\", { \r\n            pointRecord : {\r\n                id: id,\r\n                dropped_at: dropped?new Date():null\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * pemutihan\r\n     * @param recordIdArray \r\n     */\r\n    public dropAll = (recordIdArray: any[]) => {\r\n        return commonAjaxPostCalls(contextPath() + \"api/dormitorymanagement/droppointall\", { \r\n            items : recordIdArray});\r\n    }\r\n    /**\r\n     * reset pemutihan\r\n     * @param recordIdArray \r\n     */\r\n    public undropAll = (recordIdArray: any[]) => {\r\n        return commonAjaxPostCalls(contextPath() + \"api/dormitorymanagement/undroppointall\", { \r\n            items : recordIdArray});\r\n    }\r\n     \r\n}","\nimport { contextPath } from './../constant/Url';\nimport { commonAjaxPostCalls } from './Promises';\nimport ApplicationProfile from './../models/ApplicationProfile';\nexport default class ConfigurationService { \n    private static instance?: ConfigurationService;\n    static getInstance(): ConfigurationService {\n        if (this.instance == null) {\n            this.instance = new ConfigurationService();\n        }\n        return this.instance;\n    }\n    update = (appProfile:ApplicationProfile) => {\n        const endpoint: string = contextPath().concat(\"api/setting/updateconfig\");\n        return commonAjaxPostCalls(endpoint, {applicationProfile: appProfile });\n    }\n}","\r\nimport MasterDataService from '../services/MasterDataService';\r\nimport UserService from '../services/UserService';\r\n\r\nimport Services from './../services/Services';\r\nimport MusyrifManagementService from './../services/MusyrifManagementService';\r\nimport StudentService from '../services/StudentService';\r\nimport ConfigurationService from '../services/ConfigurationService';\r\n\r\nexport const initState: { services: Services } = {\r\n    services: {\r\n        userService: UserService.getInstance(), \r\n        masterDataService: MasterDataService.getInstance(),\r\n        musyrifManagementService: MusyrifManagementService.getInstance(),\r\n        studentService: StudentService.getInstance(),\r\n        configurationService: ConfigurationService.getInstance()\r\n    }\r\n\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default reducer;","import * as appReducer from \"./appReducer\"\r\nimport * as userReducer from \"./userReducer\" \r\nimport  * as servicesReducers from './servicesReducer';\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport const rootReducer = combineReducers(\r\n    {\r\n        appState: appReducer.reducer,\r\n        userState: userReducer.reducer, \r\n        servicesState: servicesReducers.reducer\r\n    }\r\n);\r\n\r\nexport const initialState = {\r\n    appState: appReducer.initState,\r\n    userState: userReducer.initState, \r\n    servicesState: servicesReducers.initState\r\n}\r\n\r\nexport default rootReducer;","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\nconst axios = require('axios');\r\nexport const performLoginMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGIN) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n    axios.post(action.meta.url, 'email='+action.meta.email+ '&password='+action.meta.password, {\r\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\r\n    }).then(axiosResponse => {\r\n        const responseJson = axiosResponse.data;\r\n        let loginKey: string = \"\";\r\n        let loginSuccess: boolean = false;\r\n       \r\n        if (responseJson.code != null && responseJson.code == \"00\") {\r\n            loginKey = axiosResponse.headers['api_token'];\r\n            // console.log(\"api_token: \", loginKey);\r\n            loginSuccess = true;\r\n        } else {\r\n        }\r\n        let newAction = Object.assign({}, action, {\r\n            payload: {\r\n                loginStatus: loginSuccess,\r\n                loginKey: loginKey,\r\n                loggedUser: responseJson.user\r\n            }\r\n        });\r\n        common.updateAccessToken(axiosResponse);\r\n        delete newAction.meta;\r\n        store.dispatch(newAction);\r\n    })\r\n        .catch(console.log)\r\n        .finally(() => { app.endLoading(); });\r\n\r\n}\r\n \r\n\r\nexport const getLoggedUserMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_LOGGED_USER) { return next(action); }\r\n\r\n    let headers = common.commonAuthorizedHeader();\r\n\r\n    axios.post(action.meta.url, (action.payload), {\r\n        headers: headers\r\n    }).then(response => {\r\n        const data = response.data;\r\n\r\n        if (!data) {\r\n            alert(\"Error performing request\");\r\n            return;\r\n        }\r\n\r\n        let newAction = Object.assign({}, action, { payload: { data } });\r\n        delete newAction.meta;\r\n        store.dispatch(newAction);\r\n    })\r\n        .catch(console.log).finally(param => {\r\n            action.meta.app.endLoading();\r\n            action.meta.app.refresh();\r\n        });\r\n}\r\n\r\n\r\nexport const performLogoutMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGOUT) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n\r\n    axios.post(action.meta.url, (action.payload), {\r\n        headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => {\r\n            const responseJson = response.data;\r\n            let logoutSuccess = false;\r\n            if (responseJson.code == \"00\") {\r\n                logoutSuccess = true;\r\n            } else {\r\n                alert(\"Logout Failed\");\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    loginStatus: !logoutSuccess\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(console.log).finally(param => app.endLoading());\r\n}\r\n\r\nexport const setLoggedUserMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.SET_LOGGED_USER) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\n\r\nconst POST_METHOD = \"post\"; \r\n\r\nexport const getMessagesMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_MESSAGE) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: common.commonAuthorizedHeader()\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"sendChatMessageMiddleware Response:\", data);\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n \r\nexport const storeChatMessageLocallyMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.STORE_MESSAGE) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n} \r\n\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport { initialState, rootReducer } from './reducers' \r\nimport * as userMiddleware from '../middlewares/UserMiddleware' \r\nimport * as realtimeChatMiddleware from '../middlewares/RealtimeChatMiddleware' \r\n \r\nlet store = null;\r\nexport const getStore = () => {\r\n    return store;\r\n}\r\nexport const configureStore = () => {\r\n    store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        applyMiddleware(   \r\n\r\n            //user related\r\n            userMiddleware.performLoginMiddleware,\r\n            userMiddleware.performLogoutMiddleware,  \r\n            userMiddleware.getLoggedUserMiddleware, \r\n            userMiddleware.setLoggedUserMiddleware,\r\n \r\n\r\n            /*realtime chat*/\r\n            realtimeChatMiddleware.storeChatMessageLocallyMiddleware,\r\n            realtimeChatMiddleware.getMessagesMiddleware,\r\n\r\n        )\r\n    );\r\n\r\n    return store;\r\n}\r\n   \r\n\r\nexport default configureStore;","import {  getStore } from '../redux/configureStore';\r\nexport const commonAuthorizedHeader = () => {\r\n    return {\r\n        'Content-Type': 'application/json',\r\n        'requestId': getRequestId(),//'localStorage.getItem(\"requestId\")',\r\n        'Authorization': 'Bearer '+getLoginKey()\r\n    }\r\n};\r\nexport const commonHeader = () => {\r\n    return {\r\n        'Content-Type': 'application/json',\r\n        'requestId': getRequestId(), \r\n    }\r\n};\r\n\r\nconst LOGIN_KEY:string = \"dormitory-app-login-key-2\";\r\n \r\nexport const getAssetsPath = () :string => {\r\n    const store = getStore(); \r\n    if (null == store) return \"\";\r\n    const state = store.getState();\r\n    return state.userState.assetsPath;\r\n}\r\n\r\nexport const getRequestId = () :string => {\r\n    const store = getStore();\r\n    if (null == store) return \"\";\r\n    const state = store.getState();\r\n    return state.userState.requestId;\r\n}\r\nexport const getLoginKey = () => {\r\n    return getCookie(LOGIN_KEY);\r\n}\r\n\r\nexport const updateAccessToken = (axiosResponse) => {\r\n    if (axiosResponse && axiosResponse.headers && axiosResponse.headers['api_token']) {\r\n        const accessToken = axiosResponse.headers['api_token'];\r\n        // console.debug(\"update access token: \", accessToken);\r\n        setCookie(LOGIN_KEY, accessToken);\r\n    }\r\n} \r\nexport const setLoginKeyCookie = (cookieValue:any) => {\r\n    setCookie(LOGIN_KEY, cookieValue);\r\n}\r\nexport const setCookie = function (cname, cvalue, exdays=1) {\r\n    var d = new Date();\r\n    d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\r\n    var expires = \"expires=\" + d.toUTCString();\r\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n}\r\nexport const getCookie = function (cname) {\r\n    var name = cname + \"=\";\r\n    var decodedCookie = decodeURIComponent(document.cookie);\r\n    var ca = decodedCookie.split(';');\r\n    for (var i = 0; i < ca.length; i++) {\r\n        var c = ca[i];\r\n        while (c.charAt(0) == ' ') {\r\n            c = c.substring(1);\r\n        }\r\n        if (c.indexOf(name) == 0) {\r\n            return c.substring(name.length, c.length);\r\n        }\r\n    }\r\n    return \"\";\r\n}","import { getAssetsPath } from \"../middlewares/Common\";\r\n\r\nconst devMode = \r\n    document.getElementById(\"rootPath\").value == \"${contextPath}\" || \r\n    document.getElementById(\"rootPath\").value == \"\";\r\nconst rootValue = devMode ?\r\n     \"/universal-good-shop/\" : document.getElementById(\"rootPath\").value+\"/\";\r\n\r\nexport const contextPath = function(){\r\n    const contextPath = devMode? \"http://localhost:8080\".concat(rootValue):rootValue;\r\n    //console.debug(\"contextPath: \",contextPath,document.getElementById(\"rootPath\").value);\r\n    return contextPath;\r\n}\r\n\r\n// export const baseImageUrl() = contextPath()+\"assets/images/\"; \r\n// export const baseImageUrl() = \"https://developmentmode.000webhostapp.com/uploaded_storage/\"; \r\n// export const baseImageUrl() = \"http://localhost/storage/images/\"; \r\nexport const baseImageUrl = () => getAssetsPath()+ \"images/\"; \r\nexport const baseDocumentUrl = () => getAssetsPath()+ \"documents/\"; \r\n// export const baseImageUrl() = contextPath()+\"WebAsset/Shop1/Images/\"; \r\n\r\nexport const POST = \"post\";\r\n","import * as types from './types'\r\nimport * as url from '../constant/Url'\r\nimport { contextPath } from '../constant/Url'; \r\nimport User from './../models/User';\r\nimport ApplicationProfile from './../models/ApplicationProfile';\r\nimport WebResponse from '../models/commons/WebResponse';\r\n\r\nconst usedHost = url.contextPath();\r\nconst apiBaseUrl = usedHost + \"api/public/\"\r\nconst apiEntityBaseUrl = usedHost + \"api/app/entity/\"\r\nconst apiAccount = usedHost + \"api/accountdashboard/\"\r\nconst apiAdmin = usedHost + \"api/app/admin/\"    \r\n\r\nexport const getEntityProperty = (entityName, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_PROPERTY,\r\n        payload: {\r\n            entity: entityName\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_PROPERTY,\r\n            url: apiEntityBaseUrl.concat(\"config\"),\r\n            app: app,\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\n\r\nexport const getManagementMenus = (app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_MANAGEMENT_MENUS,\r\n        payload: {},\r\n        meta: {\r\n            type: types.GET_MANAGEMENT_MENUS,\r\n            url: apiEntityBaseUrl.concat(\"managementpages\"),\r\n            app: app,\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n \r\n\r\nexport const setRequestId = (data:WebResponse, app) => {\r\n   \r\n    const ret= {\r\n        type: types.SET_REQUEST_ID,\r\n        payload: { loginStatus: data.loggedIn, referer:app, ...data },\r\n        meta: {\r\n            type: types.SET_REQUEST_ID, \r\n        }\r\n    };\r\n    // console.debug(\"setRequestId: \", ret);\r\n    return ret;\r\n}\r\n\r\nexport const getMessageList = (app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.GET_MESSAGE,\r\n        payload: {},\r\n        meta: {\r\n            type: types.GET_MESSAGE, app: app,\r\n            url: apiAdmin.concat(\"getmessages\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const storeMessageLocally = (messages) => {\r\n\r\n    return {\r\n        type: types.STORE_MESSAGE,\r\n        payload: {\r\n            entities: messages\r\n        },\r\n        meta: {\r\n            type: types.STORE_MESSAGE,\r\n        }\r\n    };\r\n}\r\n    \r\n\r\nexport const performLogout = (app) => {\r\n    app.startLoading();\r\n    let loginRequest = {\r\n        type: types.DO_LOGOUT,\r\n        payload: {},\r\n        meta: { app: app, type: types.DO_LOGOUT, url: apiAccount.concat(\"logout\") }\r\n    };\r\n    return loginRequest;\r\n}\r\n\r\nexport const performLogin = (email, password, app) => {\r\n    app.startLoading();\r\n    let loginRequest = {\r\n        type: types.DO_LOGIN,\r\n        payload: {},\r\n        meta: {\r\n            type: types.DO_LOGIN, \r\n            url: contextPath().concat(\"api/account/login\"),\r\n                email: email, password: password,\r\n                app: app\r\n        }\r\n    };\r\n    return loginRequest;\r\n}\r\n\r\nexport const getLoggedUser = (app) => {\r\n    app.startLoading();\r\n    let request = {\r\n        type: types.GET_LOGGED_USER,\r\n        payload: {},\r\n        meta: { type: types.GET_LOGGED_USER, url: apiAccount.concat(\"user\"), app: app }\r\n    };\r\n    return request;\r\n}\r\n\r\nexport const setLoggedUser = (user: User) => {\r\n\r\n    let request = {\r\n        type: types.SET_LOGGED_USER,\r\n        payload: { user: Object.assign(new User(), user) },\r\n        meta: { type: types.SET_LOGGED_USER }\r\n    };\r\n    return request;\r\n}\r\n\r\nexport const setApplicationProfile = (applicationProfile: ApplicationProfile) => {\r\n\r\n    let request = {\r\n        type: types.SET_APPLICATION_PROFILE,\r\n        payload: { applicationProfile: applicationProfile },\r\n        meta: { type: types.SET_APPLICATION_PROFILE }\r\n    };\r\n    return request;\r\n}\r\n\r\nexport const removeEntity = () => ({\r\n    type: types.REMOVE_SHOP_ENTITY,\r\n    payload: {},\r\n    meta: { type: types.REMOVE_SHOP_ENTITY }\r\n})\r\n\r\n\r\nexport const  setMainApp = (mainApp:any) => ({\r\n    type: types.SET_MAIN_APP,\r\n    payload: mainApp,\r\n    meta: { type: types.SET_MAIN_APP }\r\n})\r\n\r\n","\r\nexport const mapCommonUserStateToProps = (state) => {\r\n    return {\r\n        applicationProfile: state.userState.applicationProfile,\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n        requestId: state.userState.requestId, \r\n        services: state.servicesState.services,\r\n        mainApp: state.appState.mainApp\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport './Loader.css'\r\n\r\nclass Loader extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            timer: 130,\r\n            intervalId: 0\r\n        }\r\n        this.update = () => {\r\n            if (this.state.timer < 0) {\r\n                clearInterval(this.state.intervalId);\r\n            }\r\n            console.log(\"tick\")\r\n            this.setState({ timer: this.state.timer - 1 })\r\n            if (this.state.timer < 0 && this.props.endMessage) {\r\n                this.props.endMessage();\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.withTimer == true) {\r\n            let intervalId = setInterval(this.update, 1, null);\r\n            this.setState({ intervalId: intervalId });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let className = \"message message-\" + this.props.type;\r\n\r\n        if (this.props.realtime == true) {\r\n            return <LoaderContent progress={this.props.progress} realtime={this.props.realtime} />\r\n        }\r\n\r\n        return (\r\n            <div className={className} >\r\n                <LoaderContent progress={this.props.progress} realtime={this.props.realtime} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nfunction LoaderContent(props) {\r\n    if (props.realtime) {\r\n        return (\r\n            <div className=\"row container-fluid bg-light\" style={{margin:0, position: 'fixed', zIndex: 100 }}>\r\n                <div className=\"col-1\">\r\n                <span style={{marginBottom:'3px'}} className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                </div>\r\n                <div className=\"col-11 progress\" style={{padding:0, marginTop: '7px', height:'10px'}}  >\r\n                    <div className=\"bg-primary\" style={{\r\n                        width: props.progress + \"%\",\r\n                        transitionDuration: '50ms',\r\n                        margin: 0,\r\n                    }}>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <button className=\"btn btn-dark \" type=\"button\" disabled>\r\n            <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n            <span className=\" \">Loading...</span>\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Loader;","\r\nimport ApplicationProfile from './../models/ApplicationProfile';\r\nimport { baseImageUrl } from './../constant/Url';\r\nexport const doItLater = (callback:()=>any, intervalMs:number) => {\r\n    const timeout = setTimeout(()=>{\r\n       callback();\r\n        clearTimeout(timeout);\r\n      }, intervalMs)\r\n}\r\n\r\n\r\nexport const  updateFavicon = (profile: ApplicationProfile) => {\r\n    if (profile.pageIcon) {\r\n      let link = document.querySelector('link[rel=\"shortcut icon\"]') ||\r\n        document.querySelector('link[rel=\"icon\"]');\r\n      if (!link) {\r\n        link = document.createElement('link');\r\n        link.id = 'favicon';\r\n        link.setAttribute(\"rel\", 'shortcut icon');\r\n        document.head.appendChild(link);\r\n      }\r\n      link.setAttribute(\"href\", baseImageUrl() + profile.pageIcon);\r\n    }\r\n  }","import React, { Component } from 'react'\r\nimport { doItLater } from './../../utils/EventUtil';\r\nconst initialMargin = '-200px';\r\nconst transitionDuration = '200ms';\r\nclass State {\r\n    backColor  = 'transparent';\r\n    marginTop = initialMargin;\r\n}\r\nclass Alert extends Component  {\r\n    yesButtonRef;\r\n    noButtonRef;\r\n    state  = new State();\r\n    constructor(props) {\r\n        super(props);\r\n        this.yesButtonRef = React.createRef();\r\n        this.noButtonRef = React.createRef();\r\n    }\r\n    onYes = (e) => {\r\n        \r\n        this.close(()=>{\r\n            if (this.props.onYes) {\r\n                this.props.onYes(e);\r\n            }\r\n        });\r\n    }\r\n    close = (callback)=> {\r\n        doItLater(()=>{\r\n            this.setState({backColor:'transparent', marginTop: initialMargin}, ()=>{\r\n                doItLater(callback, 100);\r\n                \r\n            });\r\n        }, 100);\r\n    }\r\n    onNo = (e) => {\r\n        \r\n        this.close(()=>{\r\n            if (this.props.onNo) {\r\n                this.props.onNo(e);\r\n            }\r\n        });\r\n    }\r\n    onClose = (e) => {\r\n       \r\n        this.close(()=>{\r\n            if (this.props.onClose) {\r\n                this.props.onClose(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        const isError = this.props.isError == true;\r\n        if (!isError && this.yesButtonRef.current) {\r\n            this.yesButtonRef.current.focus();\r\n        } else if (isError && this.noButtonRef.current) {\r\n            this.noButtonRef.current.focus();\r\n        } else if (isError && this.yesButtonRef.current) {\r\n            this.yesButtonRef.current.focus();\r\n        }\r\n\r\n        doItLater(()=>{\r\n            this.setState({backColor:'rgba(100,100,100,0.7)', marginTop:'30vh'})\r\n        }, 100);\r\n    }\r\n\r\n    render() {\r\n        const title = this.props.title ? this.props.title : \"Info\";\r\n        const yesOnly = this.props.yesOnly == true;\r\n        const isError = this.props.isError == true;\r\n        const headerClassName = isError ? 'bg-danger' : 'bg-info';\r\n        const headerFontClassName = 'text-light';\r\n        return (\r\n            <>\r\n                <Backdrop bgColor={this.state.backColor} />\r\n                <div className=\"modal show\" style={{ display: 'block' }}  >\r\n                    <div className=\"modal-dialog -modal-dialog-centered\" \r\n                        style={{\r\n                            transitionDuration:  transitionDuration,\r\n                            marginTop: this.state.marginTop\r\n                        }}\r\n                    >\r\n                        <div className=\"modal-content\" style={{marginTop:'5px',}} >\r\n                            <Header fontClassName={headerFontClassName} className={headerClassName} title={title} onClose={this.onClose} />\r\n                            <div className=\"modal-body\" > {this.props.children} </div>\r\n                            <Footer noButtonRef={this.noButtonRef} yesButtonRef={this.yesButtonRef} yesOnly={yesOnly} onYes={this.onYes} onNo={this.onNo} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction Backdrop(props ) {\r\n    return (\r\n        <div className=\"modal-backdrop\" style={{ transitionDuration:transitionDuration, backgroundColor: props.bgColor }\r\n        } > </div>\r\n    );\r\n}\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <div className={\"modal-footer \" + props.className} >\r\n            <button ref={props.yesButtonRef} type=\"button\"\r\n                onClick={props.onYes} className=\"btn btn-outline-primary\" > Yes </button>\r\n            {props.yesOnly ? \r\n                null : \r\n                <button ref={props.noButtonRef} type=\"button\"\r\n                    onClick={props.onNo} className=\"btn btn-outline-secondary\" > No \r\n                </button>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Header(props) {\r\n    return (<div className={\"modal-header \" + props.className} >\r\n        <h5 className={\"modal-title \" + props.fontClassName} id=\"exampleModalCenterTitle\" > {props.title} </h5>\r\n        < button onClick={props.onClose} type=\"button\" className=\"close\" >\r\n            <span aria-hidden=\"true\" className={props.fontClassName} > <i className=\"fas fa-times\" /> </span>\r\n        </button>\r\n    </div>)\r\n}\r\n\r\nexport default Alert;","import BaseEntity from './BaseEntity';\n\nexport default class ApplicationProfile extends BaseEntity{\n\tname?:string;\n\tcode?:string;\n\tdescription?:string;\n\tabout?:string;\n\twelcoming_message?:string;\n\ticonUrl?:string;\n\tpageIcon?:string;\n\tbackgroundUrl?:string;\n\tcolor?:string;\n\tfontColor?:string;\n\tcontact?:string;\n\taddress?:string;\n    warning_point: number|undefined;\n\n}\n","import { doItLater } from './EventUtil';\r\nlet stompClient = undefined;\r\nlet wsConnected = false;\r\nlet websocketUrl = undefined;\r\nconst onConnectCallbacks = new Array();\r\nconst subscriptionCallbacks = new Array();\r\nexport const isWsConnected = () => {\r\n\treturn wsConnected == true;\r\n}\r\nexport const setWebSocketUrl = (url) => {\r\n\twebsocketUrl = url;\r\n}\r\nexport const sendToWebsocket = (url, requestObject) => {\r\n\tif (!wsConnected || !stompClient) {\r\n\t\tconsole.info(\"Connecting\");\r\n\t\treturn false;\r\n\t}\r\n\tconsole.debug(\"SEND WEBSOCKET\")\r\n\tstompClient.send(url, {}, JSON.stringify(requestObject));\r\n\treturn true;\r\n}\r\n\r\nexport const addOnWsConnectCallbacks = (...callbacks) => {\r\n\tfor (let i = 0; i < callbacks.length; i++) {\r\n\t\tconst element = callbacks[i];\r\n\t\tonConnectCallbacks.push(element);\r\n\t}\r\n}\r\n\r\nexport const performWebsocketConnection = () => {\r\n\r\n\treturn;\r\n\tvar socket = new window.SockJS(websocketUrl);\r\n\tstompClient  = window.Stomp.over(socket);\r\n\tstompClient .connect({}, function (frame) {\r\n\t\twsConnected = true;\r\n\t\t// setConnected(true);\r\n\t\tconsole.log('Websocket CONNECTED: ', websocketUrl, 'frame :', frame, stompClient.ws._transport.ws.url);\r\n\t\tconsole.debug(\"subscriptionCallbacks :\", subscriptionCallbacks.length);\r\n\t\t// document.getElementById(\"ws-info\").innerHTML =\r\n\t\t// stompClients.ws._transport.ws.url;\r\n\t\tfor (let i = 0; i < subscriptionCallbacks.length; i++) {\r\n\t\t\tconst callBackObject = subscriptionCallbacks[i];\r\n\r\n\t\t\tif (callBackObject) {\r\n\r\n\t\t\t\tstompClient.subscribe(callBackObject.subscribeUrl, (response) => {\r\n\t\t\t\t\tvar respObject = JSON.parse(response.body);\r\n\t\t\t\t\tcallBackObject.callback(respObject);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < onConnectCallbacks.length; i++) {\r\n\t\t\tconst callback = onConnectCallbacks[i];\r\n\t\t\tcallback(frame);\r\n\t\t}\r\n\r\n\t}, (e) => {\r\n\t\tconsole.warn(\"Error connection websocket, reconnect\");\r\n\t\tdoItLater(performWebsocketConnection, 2000);\r\n\t});\r\n\r\n\t \r\n}\r\n\r\n /**\r\n  * \r\n  * @param  {...WsCallback} callBackObjects \r\n  */\r\nexport const registerWebSocketCallbacks = (...callBackObjects) => {\r\n\r\n\tif (null == callBackObjects) {\r\n\t\treturn;\r\n\t}\r\n\tfor (var i = 0; i < callBackObjects.length; i++) {\r\n\t\tsubscriptionCallbacks.push(callBackObjects[i]);\r\n\t}\r\n}\r\n","import { Component } from 'react';\r\nimport WebResponse from '../models/commons/WebResponse';\r\nimport ApplicationProfile from './../models/ApplicationProfile';\r\nimport User from './../models/User';\r\nimport Services from './../services/Services';\r\nimport { AuthorityType } from '../models/AuthorityType';\r\nimport WebRequest from '../models/commons/WebRequest';\r\nimport { sendToWebsocket } from './../utils/websockets';\r\nimport { doItLater } from './../utils/EventUtil';\r\n\r\nexport default class BaseComponent extends Component<any, any> {\r\n    parentApp: any;\r\n    authenticated: boolean = true;\r\n    state: any = { updated: new Date() };\r\n    constructor(props: any, authenticated = false) {\r\n        super(props);\r\n\r\n        this.authenticated = authenticated\r\n        this.parentApp = props.mainApp;\r\n    }\r\n\r\n    validateLoginStatus = (callback ?:() => any) => {\r\n        if (this.authenticated == false) { \r\n            if (callback) {\r\n                callback();\r\n            }\r\n            return true; }\r\n        if (this.isUserLoggedIn() == false) {\r\n            this.backToLogin();\r\n            return false;\r\n        }\r\n        if (callback) {\r\n            callback();\r\n        }\r\n        return true;\r\n    }\r\n\r\n    protected sendWebSocket = (url: string, payload: WebRequest) => {\r\n        sendToWebsocket(url, payload);\r\n    }\r\n\r\n    protected setWsUpdateHandler = (handler: Function | undefined) => {\r\n        if (this.parentApp) {\r\n            this.parentApp.setWsUpdateHandler(handler);\r\n        }\r\n    }\r\n    protected resetWsUpdateHandler = () => {\r\n        if (this.parentApp) {\r\n            this.parentApp.resetWsUpdateHandler();\r\n        }\r\n    }\r\n\r\n    getApplicationProfile = (): ApplicationProfile => {\r\n        return this.props.applicationProfile == null ? new ApplicationProfile() : this.props.applicationProfile;\r\n    }\r\n\r\n    handleInputChange = (event: any, stateFieldName?:string|undefined) => {\r\n        const target = event.target;\r\n        let value = target.type == 'checkbox' ? target.checked : target.value;\r\n        if (target.type == 'number') {\r\n            value = parseInt(value);\r\n        }\r\n        if (stateFieldName) {\r\n            const el = this.state[stateFieldName];\r\n            el[target.name] = value;\r\n            this.setState({ [stateFieldName]: el});\r\n        } else {\r\n            this.setState({ [target.name]: value });\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n     * @param {boolean} withProgress \r\n     */\r\n    startLoading(withProgress: boolean) {\r\n        this.parentApp.startLoading(withProgress);\r\n    }\r\n\r\n    endLoading() {\r\n        this.parentApp.endLoading();\r\n    }\r\n    /**\r\n     * api response must be instance of WebResponse\r\n     * @param method returning Promise\r\n     * @param withProgress \r\n     * @param successCallback \r\n     * @param errorCallback \r\n     * @param params \r\n     */\r\n    doAjax = (method: Function, withProgress: boolean, successCallback: Function, errorCallback?: Function, ...params: any) => {\r\n        this.startLoading(withProgress);\r\n        \r\n        method(...params).then( (response: WebResponse) => {\r\n            if (successCallback) {\r\n                successCallback(response);\r\n            }\r\n        }).catch( (e) => {\r\n            if (errorCallback) {\r\n                errorCallback(e);\r\n            } else {\r\n                if (typeof (e) == 'string') {\r\n                    alert(\"Operation Failed: \" + e);\r\n                }\r\n                alert(\"resource not found\");\r\n            }\r\n        }).finally(() => {\r\n            this.endLoading();\r\n        })\r\n    }\r\n\r\n    commonAjax = (method: Function, successCallback: Function, errorCallback: Function, ...params: any) => {\r\n        this.doAjax(method, false, successCallback, errorCallback, ...params);\r\n    }\r\n    commonAjaxWithProgress = (method: Function, successCallback: Function, errorCallback: Function, ...params: any) => {\r\n        this.doAjax(method, true, successCallback, errorCallback, ...params);\r\n    }\r\n    getLoggedUser = (): User | undefined => {\r\n        const user: User | undefined = this.props.loggedUser;\r\n        if (!user) return undefined;\r\n        user.password = \"^_^\";\r\n        return Object.assign(new User(), user);\r\n    }\r\n    isAdmin = (): boolean => {\r\n        const user = this.getLoggedUser();\r\n        if (!user) return false;\r\n        return user.hasRole(AuthorityType.admin_asrama);\r\n    }\r\n    scrollTop = () => {\r\n        // console.info(\"SCROLL TOP\");\r\n        const opt:ScrollToOptions = { top:0,  behavior: 'smooth' };\r\n        doItLater(()=>{\r\n        window.scrollTo(opt);\r\n        }, 100);\r\n    }\r\n    isUserLoggedIn = (): boolean => {\r\n        const loggedIn = true == this.props.loginStatus && null != this.props.loggedUser;\r\n        return loggedIn;\r\n    }\r\n    showConfirmation = (body: any): Promise<boolean> => {\r\n        const app = this;\r\n        return new Promise(function (resolve, reject) {\r\n            const onYes = function (e) {\r\n                resolve(true);\r\n            }\r\n            const onNo = function (e) {\r\n                resolve(false);\r\n            }\r\n            app.parentApp.showAlert(\"Konfirmasi\", body, false, onYes, onNo);\r\n        });\r\n\r\n    }\r\n    showConfirmationDanger = (body: any): Promise<any> => {\r\n        const app = this;\r\n        return new Promise(function (resolve, reject) {\r\n            const onYes = function (e) {\r\n                resolve(true);\r\n            }\r\n            const onNo = function (e) {\r\n                resolve(false);\r\n            }\r\n            app.parentApp.showAlertError(\"Konfirmasi\", body, false, onYes, onNo);\r\n        });\r\n\r\n    }\r\n    showInfo = (body: any) => {\r\n        this.parentApp.showAlert(\"Info\", body, true, function () { });\r\n    }\r\n    showError = (body: any) => {\r\n        this.parentApp.showAlertError(\"Error\", body, true, function () { });\r\n    }\r\n\r\n    backToLogin() {\r\n        if (!this.authenticated || this.props.history == null) {\r\n            return;\r\n        }\r\n        this.props.history.push(\"/login\");\r\n    }\r\n    refresh() {\r\n        this.setState({ updated: new Date() });\r\n    }\r\n    showCommonSuccessAlert = () => {\r\n        this.showInfo(\"Success\");\r\n    }\r\n    showCommonErrorAlert = (e: any) => {\r\n        console.error(e);\r\n\r\n        let message;\r\n        if (e.response && e.response.data) {\r\n            message = e.response.data.message;\r\n        } else {\r\n            message = e;\r\n        }\r\n        this.showError(\"Operasi Gagal: \" + message);\r\n    }\r\n    componentDidMount() {\r\n        if (this.validateLoginStatus()) {\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.authenticated == true && this.isUserLoggedIn() == false) {\r\n            console.debug(typeof this, \"BACK TO LOGIN\");\r\n            this.validateLoginStatus();\r\n        }\r\n    }\r\n\r\n    getServices = (): Services => {\r\n        return this.props.services;\r\n    }\r\n}","\r\nimport React, { useRef, Fragment } from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../constant/stores';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { performLogout } from './../../redux/actionCreators';\r\nimport { getMenus } from '../../constant/Menus';\r\nimport './Header.css';\r\nimport User from './../../models/User';\r\nimport { baseImageUrl } from './../../constant/Url';\r\nimport Menu from './../../models/settings/Menu';\r\nclass IState {\r\n    showNavLinks: boolean = false;\r\n}\r\nclass Header extends BaseComponent {\r\n    state: IState = new IState();\r\n    buttonToggleNavRef: React.RefObject<HTMLButtonElement> = React.createRef();\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    toggleNavLinks = () => {\r\n        this.setState({ showNavLinks: !this.state.showNavLinks });\r\n    }\r\n    onLogout = (e: any) => {\r\n        const app = this;\r\n        app.showConfirmation(\"Logout?\").then(\r\n            function (ok) {\r\n                if (ok) {\r\n                    app.props.performLogout(app.parentApp);\r\n                }\r\n            }\r\n        )\r\n    }\r\n    setMenu = (menu: Menu) => {\r\n        if (this.state.showNavLinks && this.buttonToggleNavRef.current) {\r\n            this.buttonToggleNavRef.current.click();\r\n        }\r\n        this.props.setMenu(menu);\r\n\r\n    }\r\n    render() {\r\n        const showNavLinks: boolean = this.state.showNavLinks;\r\n        const menus = getMenus();\r\n        const user = this.getLoggedUser();\r\n        return (\r\n            <div className=\"bg-dark container-fluid\" style={{ position: 'fixed', zIndex: 55, padding: 0, margin: 0 }}>\r\n                <NavBarTop label={this.getApplicationProfile().name} />\r\n                <nav id=\"navbar\" className=\"navbar navbar-expand-lg navbar-dark bg-dark\" style={{ width: '100%' }}>\r\n                    {/* <div className=\"container-fluid\"></div> */}\r\n                    <a id=\"navbar-brand\" className=\"navbar-brand\" href=\"#\">{this.getApplicationProfile().name}</a>\r\n                    <button ref={this.buttonToggleNavRef} onClick={this.toggleNavLinks} className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target=\"#navbarToggler\" aria-controls=\"navbarToggler\"\r\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <i className={showNavLinks ? \"fas fa-times\" : \"fas fa-bars\"} />\r\n                    </button>\r\n                    <div className={\"collapse navbar-collapse\"} id=\"navbarToggler\">\r\n                        <ul id=\"navbar-top\" className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n                            {menus.map(menu => {\r\n                                if (menu == null || (menu.authenticated && !user)) return null;\r\n                                if (menu.userAuthorized && menu.userAuthorized(user) == false) return null;\r\n                                const isActive = this.props.activeMenuCode == menu.code;\r\n                                return (\r\n                                    <li key={\"header-menu-\" + new String(menu.code)} className={\"nav-item \" + (isActive ? \"active nav-active\" : \"nav-inactive\")}>\r\n                                        <Link onClick={() => this.setMenu(menu)} className={\"nav-link  \"}\r\n                                            to={menu.url}><span>{menu.name}</span>\r\n                                        </Link></li>\r\n                                )\r\n                            })}\r\n                        </ul >\r\n                        <form className=\"form-inline my-2 my-lg-0\">\r\n                            <UserIcon setMenuNull={this.props.setMenuNull}\r\n                                onLogout={this.onLogout} user={user} />\r\n                        </form >\r\n                    </div >\r\n                </nav >\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst NavBarTop = (props) => {\r\n    return (\r\n        <div id=\"navbar-brand-top\" style={{ paddingLeft: '0.5rem' }} className=\"container-fluid\">\r\n            <a style={{ fontSize: '15px' }} className=\"text-white navbar-brand\" href=\"#\">\r\n                <strong>{props.label}</strong>\r\n            </a>\r\n        </div>\r\n    );\r\n}\r\nconst UserIcon = (props: { user: User | undefined, setMenuNull(): any, onLogout(e): any }) => {\r\n    if (props.user) {\r\n        return (\r\n            <Fragment>\r\n                <Link onClick={props.setMenuNull} style={{ marginRight: \"5px\" }} className=\"btn btn-light btn-sm my-2 my-sm-0\"\r\n                    to='/settings/user-profile'>\r\n                    <i className=\"fas fa-user-circle\"/>\r\n                        &nbsp;{props.user.name}\r\n                </Link>\r\n                <a style={{ marginRight: '5px' }} className=\"btn btn-danger btn-sm  my-2 my-sm-0\"\r\n                    onClick={props.onLogout}><i className=\"fas fa-sign-out-alt\"></i>&nbsp;Logout\r\n\t\t\t\t</a>\r\n            </Fragment>);\r\n    }\r\n    return (\r\n\r\n        <Link style={{ marginRight: '5px' }} onClick={props.setMenuNull} className=\"btn btn-sm btn-info my-2 my-sm-0\"\r\n            to='/login'> <i className=\"fas fa-sign-in-alt\"></i>&nbsp;Login\r\n        </Link>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    performLogout: (app: any) => dispatch(performLogout(app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(Header))","\r\nimport React, { Component } from 'react';\r\nimport './Spinner.css';\r\nexport default class Spinner extends Component<any, any>{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const innerDivs:JSX.Element[] = new Array<JSX.Element>();\r\n        for (let i = 0; i <= 11; i++) {\r\n            innerDivs.push(<div key={\"spinner-item-\"+i}></div>);\r\n        }\r\n        return (\r\n            <div style={{width:'85px', height:'85px', display:'block'}} className=\"container-fluid text-center\" >\r\n                 <div style={{visibility:this.props.show == false?'hidden':'visible'}} className=\"lds-spinner\">\r\n                  {innerDivs}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","\r\n\r\nimport React, { RefObject, Component, FormEvent, Fragment, ChangeEvent } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport './Login.css';\r\nimport { performLogin } from '../../../redux/actionCreators';\r\nimport Spinner from './../../loader/Spinner';\r\nimport AnchorWithIcon from './../../navigation/AnchorWithIcon';\r\nclass IState {\r\n    loading: boolean = false; email: string = \"\"; editPassword: string = \"\";\r\n}\r\nclass Login extends BaseComponent {\r\n    state: IState = new IState();\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    startLoading = () => this.setState({ loading: true });\r\n    endLoading = () => this.setState({ loading: false });\r\n    login(e: FormEvent) {\r\n        e.preventDefault();\r\n        this.props.performLogin(this.state.email, this.state.editPassword, this);\r\n    }\r\n    componentDidMount() {\r\n        document.title = \"Login\";\r\n        if (this.isUserLoggedIn()) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n\r\n        if (this.isUserLoggedIn()) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n    updateCredentialProperty = (e: ChangeEvent) => {\r\n        const target = e.target as HTMLInputElement;\r\n        const name: string | null = target.getAttribute(\"name\");\r\n        if (null == name) return;\r\n        this.setState({ [name]: target.value });\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"Login\" style={{ marginTop: '20px' }} >\r\n                <form name='login' onSubmit={(e) => { this.login(e) }}\r\n                    method='POST' className=\"form-signin\">\r\n                    <div className=\"text-center\">\r\n                        <h2><i className=\"fas fa-user-circle\"></i></h2>\r\n                        <h1 className=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\r\n                    </div>\r\n                    <EmailField value={this.state.email} onChange={this.updateCredentialProperty} />\r\n                    <PasswordField value={this.state.editPassword} onChange={this.updateCredentialProperty} />\r\n                    {this.state.loading ? <Spinner /> :\r\n\r\n                        <Fragment>\r\n                            <button className=\"btn text-light\" style={{ marginRight: '5px', backgroundColor: 'rgb(9,26,78)' }} type=\"submit\">\r\n                                Sign in\r\n                            </button>\r\n                            {/* <AnchorWithIcon className=\"btn btn-light border border-dark \" to=\"register\" children=\"Register\" /> */}\r\n                        </Fragment>}\r\n                    <input name=\"transport_type\" type=\"hidden\" value=\"rest\" />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst PasswordField = ({ value, onChange }) => {\r\n    return <Fragment>\r\n        <label className=\"sr-only\">Password</label>\r\n        <input name=\"editPassword\" value={value} onChange={onChange} type=\"password\" id=\"inputPassword\" className=\"form-control\"\r\n            placeholder=\"Password\" required />\r\n    </Fragment>\r\n}\r\nconst EmailField = ({ value, onChange }) => {\r\n    return (<Fragment>\r\n        <label className=\"sr-only\">Email</label>\r\n        <input name=\"email\" value={value} onChange={onChange} type=\"text\"  className=\"form-control\"\r\n            placeholder=\"Email\" required autoFocus />\r\n    </Fragment>)\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    performLogin: (username: string, password: string, app: any) => dispatch(performLogin(username, password, app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(Login))","\nimport BaseComponent from './../BaseComponent';\nexport default class BasePage extends BaseComponent{\n    constructor(props, protected title:string | undefined|null= undefined, authenticated:boolean = false) {\n        super(props, authenticated);\n        if (title !== undefined && title !== null) {\n            document.title = title;\n        } else {\n            document.title = \"Asrama KIIS\";\n        }\n    }\n\n    componentDidMount() {\n        this.validateLoginStatus(()=>{\n            this.scrollTop();\n            this.componentReady();\n        })\n    }\n\n    protected componentReady() {\n\n    }\n    // componentWillUnmount() {\n    //     document.title = \"Asrama KIIS\";\n    // }\n}","import AttachmentInfo from '../models/settings/AttachmentInfo';\r\n \r\n  \r\nexport const getAttachmentInfoFromFile = (fileInput:HTMLInputElement): Promise<AttachmentInfo> => {\r\n    return new Promise<AttachmentInfo>((resolve, reject) =>{\r\n        if (null == fileInput.files || !fileInput.files[0]) {\r\n            reject(new Error(\"No file\"));\r\n            return;\r\n        }\r\n        try { \r\n            const file:File = fileInput.files[0]; \r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            console.debug(\"fileInput.files[0]: \", file);\r\n            reader.onload = function () { \r\n                const info:AttachmentInfo = new AttachmentInfo();\r\n                info.setUrl(new String(reader.result).toString());\r\n                // info.\r\n                info.name = file.name;\r\n                resolve(info);\r\n             }\r\n            reader.onerror = function (error) {\r\n                reject(error);\r\n            }\r\n        } catch (e) {\r\n            reject(e);\r\n        }\r\n    });\r\n\r\n}\r\n \r\n\r\n/**\r\n * \r\n * @param {Number} totalButton \r\n * @param {Number} currentPage \r\n */\r\nexport const createNavButtons = (totalButton, currentPage) => {\r\n    totalButton = Math.ceil(totalButton);\r\n    if (!currentPage) { currentPage = 0 }\r\n    let buttonData = new Array();\r\n    let min = currentPage - 3 < 0 ? 0 : currentPage - 3;\r\n    let max = currentPage + 3 > totalButton ? totalButton : currentPage + 3;\r\n\r\n    if (min != 0) {\r\n        buttonData.push({\r\n            text: 1,\r\n            value: 0\r\n        });\r\n    }\r\n\r\n    for (let index = min; index < max; index++) {\r\n        buttonData.push({\r\n            text: index + 1,\r\n            value: index\r\n        });\r\n    }\r\n\r\n    if (max != totalButton) {\r\n        buttonData.push({\r\n            text: totalButton,\r\n            value: totalButton - 1\r\n        });\r\n    }\r\n\r\n\r\n    return buttonData;\r\n}\r\n\r\n ","\r\n\r\nimport React, { ChangeEvent, FormEvent } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../../constant/stores'; \r\nimport User from './../../../../models/User';\r\nimport BasePage from './../../BasePage';\r\nimport AttachmentInfo from './../../../../models/settings/AttachmentInfo';\r\nimport { getAttachmentInfoFromFile } from './../../../../utils/ComponentUtil';\r\nimport StudentService from './../../../../services/StudentService';\r\nimport { AuthorityType } from '../../../../models/AuthorityType';\r\n\r\nclass State {\r\n    attachment:AttachmentInfo | undefined;\r\n}\r\nclass DashboardMain extends BasePage {\r\n    state:State = new State();\r\n    studentService:StudentService;\r\n    constructor(props: any) {\r\n        super(props, \"Dashboard\", true);\r\n        this.studentService = this.getServices().studentService;\r\n    }\r\n\r\n    addPointRecord = (e:FormEvent) => {\r\n        e.preventDefault();\r\n        if (!this.state.attachment) return;\r\n        \r\n        this.props.history.push({\r\n            pathname: '/asrama/pointrecordedit',\r\n              state: {attachment: this.state.attachment }\r\n         })\r\n    }\r\n    updateImage = (e:ChangeEvent) => {\r\n        getAttachmentInfoFromFile(e.target as HTMLInputElement) \r\n            .then(attachment=>{\r\n                this.setState({attachment:attachment});\r\n            }).catch(console.error)\r\n    }\r\n    render() {\r\n        const user: User | undefined = this.getLoggedUser();\r\n        if (!user) return null;\r\n        return (\r\n            <div  className=\" section-body container-fluid\">\r\n                <h2>Dashboard</h2>\r\n                <div className=\"alert alert-info\">\r\n                    Welcome, <strong>{user.name}  </strong>\r\n                    <hr/>\r\n                    {/* <p className=\"badge badge-dark text-capitalize\">{(user.roles).join(\", \")}</p> */}\r\n                   \r\n                </div>\r\n                { !this.getLoggedUser()?.hasRole(AuthorityType.musyrif_asrama) ? null :\r\n                    <form className=\"mt-10 text-center\" onSubmit={this.addPointRecord}>\r\n                        <h1><i className=\"fas fa-camera\" /></h1>\r\n                        <h3> Input Pelanggaran</h3>\r\n                        <input onChange={this.updateImage} type=\"file\" accept=\"image/*\" className=\"form-control mt-3\" />\r\n                        <p/>\r\n                        {this.state.attachment?\r\n                        <div>\r\n                            <input type=\"submit\" className=\"btn btn-dark btn-large\" value=\"Selanjutnya\" />\r\n                            <img className=\"w-100 mt-5\" src={this.state.attachment.url}/>\r\n                            \r\n                        </div>\r\n                        : null}\r\n                    </form>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps\r\n)(DashboardMain))","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from '../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport ApplicationProfile from '../../../models/ApplicationProfile';\r\nimport { baseImageUrl } from '../../../constant/Url';\r\n\r\nclass HomeMain extends BaseComponent {\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Home\";\r\n    }\r\n    render() {\r\n        const applicationProfile: ApplicationProfile = this.getApplicationProfile();\r\n        const imageUrl: string = baseImageUrl() + applicationProfile.backgroundUrl;\r\n        return (\r\n            <div className=\"section-body container-fluid\" style={{padding:0}}>\r\n                <div className=\"jumbotron\"\r\n                    style={{\r\n                        margin:'0px',\r\n                        marginTop: '20px',\r\n                        backgroundImage: 'url(\"' + imageUrl + '\")',\r\n                        backgroundSize: 'cover',\r\n                        color: applicationProfile.fontColor??\"rgb(0,0,0)\"\r\n                    }}\r\n                >\r\n                    <h1 className=\"display-4\">{applicationProfile.name}</h1>\r\n                    <p className=\"lead\">{applicationProfile.description}</p>\r\n                    <hr className=\"my-4\" />\r\n                    <p>{applicationProfile.welcoming_message}</p>\r\n                    <Link className=\"btn btn-primary btn-lg\" to=\"/about\" role=\"button\">About Us</Link>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n} \r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps, \r\n)(HomeMain))","\r\nimport BaseEntity from './BaseEntity';\r\nimport User from './User';\r\nexport default class Employee extends BaseEntity\r\n{\r\n    user?:User;\r\n}","import React from 'react'\r\nimport { uniqueId } from './StringUtil';\r\nexport const tableHeader = (...values:string[]) => {\r\n   \r\n    return (<thead>\r\n        <tr>\r\n            {values.map((value)=>{\r\n\r\n                return <th key={uniqueId()}>{value}</th>\r\n            })}\r\n        </tr>\r\n    </thead>)\r\n}\r\nexport const groupArray = function (array, division) {\r\n    if (null == array || array.length == 0) { return [] }\r\n    const groupedArray = new Array();\r\n    const itemPerDivision = Math.ceil(array.length / division)\r\n\r\n    if (itemPerDivision == 1) {\r\n        groupedArray.push(array);\r\n        return groupedArray;\r\n    }\r\n\r\n    for (let i = 0; i < division; i++) {\r\n        groupedArray.push(new Array());\r\n    }\r\n\r\n    let index = 1;\r\n    let divisionIndex = 0;\r\n    for (let i = 0; i < array.length; i++) {\r\n        const element = array[i];\r\n        groupedArray[divisionIndex].push(element);\r\n\r\n        index++;\r\n        if (index > itemPerDivision) {\r\n            divisionIndex++;\r\n            index = 1;\r\n        }\r\n    }\r\n\r\n    return groupedArray;\r\n}\r\n","\nexport default class Filter{\n    static resetFieldsFilter = (f:Filter) : Filter => {\n        for (const key in f.fieldsFilter) {\n\t\t\tf.fieldsFilter[key] = \"\";\n\t\t}\n\t\treturn f;\n    }\n    static withLimit = (arg0: number): Filter => {\n\t\tconst f =new Filter();\n\t\tf.limit = arg0;\n        return f;\n    }\n\tlimit? :number = 5; \n\tpage? :number = 0;\n\torderType?:string;\n\torderBy?:string;\n\tcontains?:boolean; \n\texacts?:boolean;\n\tday?:number;\n\tyear?:number;\n\tmonth?:number;\n\tmodule?:string;\n\tfieldsFilter:Record<string, any> = {};\n\tdayTo?:number;\n\tmonthTo?:number;\n\tyearTo?:number;\n\tmaxValue?:number;\n\tavailabilityCheck?:boolean;\n\t \n\n}\n","\r\nimport React, { Component } from 'react';\r\ninterface Props {\r\n    orientation?:string,\r\n    show?:boolean,\r\n    children:any,\r\n    label?:any,\r\n    className?:string,\r\n}\r\nexport default class FormGroup extends Component<Props, any>\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        if (false == this.props.show) return null;\r\n        const orientation = this.props.orientation == 'vertical' ? 'vertical' : 'horizontal';\r\n        return (\r\n            <div className={`form-group ${this.props.className} ` + (orientation == 'vertical' ? '' : 'row')}>\r\n                <label className={(orientation == 'vertical' ? '' : 'col-sm-3')}><strong>{this.props.label ? this.props.label : null}</strong></label>\r\n                <div className={(orientation == 'vertical' ? '' : 'col-sm-9')}>\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nimport { uniqueId } from './../../utils/StringUtil';\r\ninterface IProps {\r\n    limit: number,\r\n    totalData: number,\r\n    activePage: number,\r\n    onClick: any\r\n}\r\nexport default class NavigationButtons extends Component<IProps, any> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        const buttonIndexes = generateButtonValues(this.props.limit, this.props.totalData, this.props.activePage);\r\n        if (buttonIndexes.length == 0) { return null }\r\n        const lastIndex = buttonIndexes[buttonIndexes.length - 1];\r\n        const nextPage = this.props.activePage + 1 >= lastIndex  ? 0 : this.props.activePage + 1;\r\n        const previusPage = this.props.activePage - 1 < 0? lastIndex-1 : this.props.activePage - 1;\r\n        return (<div>\r\n            <nav aria-label=\"Page navigation example\">\r\n                <ul className=\"pagination\">\r\n                    <li className=\"page-item\"><a className=\"page-link\" onClick={(e) => this.props.onClick(previusPage)}>Previous</a></li>\r\n                    {buttonIndexes.map((page, i) => {\r\n                        return <li key={\"NAV-\"+uniqueId()} className={\"page-item \"+(page-1 == this.props.activePage?\"active\":\"\")}><a className=\"page-link \" onClick={(e) => this.props.onClick(page - 1)} >{page}</a></li>\r\n                    })}\r\n                    <li className=\"page-item\"><a className=\"page-link\" onClick={(e) => this.props.onClick(nextPage)}>Next</a></li>\r\n                </ul>\r\n            </nav>\r\n        </div>)\r\n    }\r\n}\r\n\r\nconst generateButtonValues = (limit: number, totalData: number, currentPage: number) => {\r\n\r\n    /* DISPLAYED BUTTONS */\r\n    const displayed_buttons: number[] = [];\r\n    const buttonCount = Math.ceil(totalData / limit);\r\n\r\n    // console.debug(\"current page:\", currentPage);\r\n    const min = (currentPage) - 1;\r\n    const max = (currentPage) + 3;\r\n    // const min = (currentPage) - 2;\r\n    // const max = (currentPage) + 2;\r\n\r\n    // console.debug(\"min\", min, \"current page:\", currentPage, \"max\", max);\r\n    if (buttonCount > 1) {\r\n        displayed_buttons.push(1);\r\n    }\r\n    for (let i = min; i <= max; i++) {\r\n        if (i > 1 && i <= buttonCount) {\r\n            (displayed_buttons.push(i));\r\n        }\r\n    }\r\n    if (max < buttonCount) {\r\n        displayed_buttons.push(buttonCount);\r\n    }\r\n    return displayed_buttons;\r\n}\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\ninterface IProps{\r\n    show?:boolean, attributes?:any, iconClassName?:string, to?:string, className?:string,\r\n    style?:any, onClick?(e:any):any, children?:any\r\n}\r\nexport default class AnchorWithIcon extends Component<IProps, any>\r\n{\r\n    constructor(props: any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        if (this.props.show == false) return null;\r\n        const btnClassName = this.props.className ?? \"btn btn-outline-secondary\";\r\n        if (this.props.to) {\r\n            return <Link {...this.props.attributes} to={this.props.to} style={this.props.style} onClick={this.props.onClick} className={btnClassName} >\r\n                {this.props.iconClassName ?\r\n                    <span style={{ marginRight: this.props.children?'5px':'0px' }}><i className={this.props.iconClassName} /></span>\r\n                    :\r\n                    null}\r\n                {this.props.children}\r\n            </Link>\r\n        }\r\n        return (\r\n            <a {...this.props.attributes} tyle={this.props.style} onClick={this.props.onClick} className={btnClassName} >\r\n                {this.props.iconClassName ?\r\n                    <span style={{ marginRight: this.props.children?'5px':'0px' }}><i className={this.props.iconClassName} /></span>\r\n                    :\r\n                    null}\r\n                {this.props.children}\r\n            </a>\r\n        )\r\n    }\r\n}","\r\nimport BaseComponent from './../../BaseComponent';\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport Employee from './../../../models/Employee';\r\nimport { AuthorityType } from '../../../models/AuthorityType';\r\nimport MusyrifManagementService from './../../../services/MusyrifManagementService';\r\nimport ToggleButton from './../../navigation/ToggleButton';\r\nimport WebResponse from '../../../models/commons/WebResponse';\r\nimport AnchorWithIcon from './../../navigation/AnchorWithIcon';\r\nclass EmployeeRow extends BaseComponent {\r\n    musyrifManagementService: MusyrifManagementService;\r\n    constructor(props) {\r\n        super(props, true);\r\n        this.musyrifManagementService = this.getServices().musyrifManagementService;\r\n    }\r\n\r\n    getEmployee = (): Employee => {\r\n        return this.props.employee;\r\n    }\r\n    activeStatusUpdate = (response: WebResponse) => {\r\n        // this.showInfo(\"Success\");\r\n        if (this.props.onUpdated) {\r\n            this.props.onUpdated();\r\n        }\r\n    }\r\n    activateMusyrif = (active: boolean) => {\r\n        const emp = this.getEmployee();\r\n        this.commonAjax(\r\n            this.musyrifManagementService.activate,\r\n            this.activeStatusUpdate,\r\n            this.showCommonErrorAlert,\r\n            emp, active);\r\n\r\n    }\r\n    render() {\r\n        const props = this.props;\r\n        const emp = this.getEmployee();\r\n        const isMusyrif = emp.user?.hasRole(AuthorityType.musyrif_asrama);\r\n        return (\r\n            <tr key={emp.id} >\r\n                <td>{props.startingNumber + 1}</td>\r\n                <td>{emp.user?.name}</td>\r\n                <td>{emp.user?.email}</td>\r\n                <td>{emp.user?.nip}</td>\r\n                <td><i className={isMusyrif ? \"fas fa-check text-success\" : \"fas fa-times\"} /></td>\r\n                <td> {isMusyrif == true ?\r\n                    <AnchorWithIcon className=\"btn btn-danger btn-sm\" onClick={(e) => this.activateMusyrif(false)} >\r\n                        Nonaktifkan\r\n                    </AnchorWithIcon> :\r\n                    <AnchorWithIcon className=\"btn btn-success btn-sm\" onClick={(e) => this.activateMusyrif(true)} >\r\n                        Jadikan musyrif\r\n                    </AnchorWithIcon>\r\n                }\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps\r\n)(EmployeeRow))","\r\nimport React, { Component } from 'react';\r\ninterface IProps {\r\n    show?:boolean;\r\n    className?:string;\r\n    style?:any;\r\n    onClick?:any;\r\n    iconClassName?:string;\r\n    attributes?:any;\r\n}\r\nexport default class AnchorButton extends Component<IProps, any>\r\n{\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        if (this.props.show == false) return null;\r\n        const btnClassName = this.props.className??\"btn btn-outline-secondary\";\r\n        return (\r\n            <a style={this.props.style} {...this.props.attributes} onClick={this.props.onClick} className={btnClassName} >\r\n                {this.props.iconClassName?\r\n                <span style={this.props.children?{marginRight:'5px'}:{}}><i className={this.props.iconClassName}/></span>\r\n                :\r\n                null}\r\n                {this.props.children}\r\n            </a>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport AnchorButton from './AnchorButton';\r\ninterface Props {\r\n    onClick(val:boolean):void,\r\n    active:boolean,\r\n    yesLabel?:string,\r\n    noLabel?:string\r\n}\r\nexport default class ToggleButton extends Component<Props, any>{\r\n    \r\n    render() {\r\n        const props = this.props;\r\n        const active = this.props.active;\r\n        return (\r\n            <div className=\"btn-group\">\r\n                <AnchorButton className={\"btn  btn-sm \" + (active ? \"btn-dark\" : \"btn-outline-dark\")} onClick={(e) => this.props.onClick(true)} >\r\n                    {props.yesLabel??\"Yes\"}</AnchorButton>\r\n                <AnchorButton className={\"btn  btn-sm \" + (active == false ? \"btn-dark\" : \"btn-outline-dark\")} onClick={(e) => this.props.onClick(false)}  >\r\n                    {props.noLabel??\"No\"}</AnchorButton>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}","import React, { ChangeEvent } from 'react'\r\nimport BaseComponent from './../../BaseComponent';\r\nimport Modal from './../../container/Modal';\r\nimport MasterDataService from './../../../services/MasterDataService';\r\nimport WebResponse from '../../../models/commons/WebResponse';\r\nimport WebRequest from '../../../models/commons/WebRequest';\r\nimport BasePage from './../BasePage';\r\nimport './Management.css'\r\nimport BaseEntity from './../../../models/BaseEntity';\r\n\r\nexport default  class BaseManagementPage extends BasePage {\r\n    protected masterDataService: MasterDataService;\r\n    protected modelName: string = \"undefined\";\r\n    protected formRef: React.RefObject<Modal> = React.createRef(); \r\n\r\n    emptyRecord = () : BaseEntity => { \r\n        throw new Error(\"Empty Record Method is Not Implemented....\");\r\n    }\r\n\r\n    constructor(props, modelName?: string, protected overrideLoading: boolean = false) {\r\n        super(props, \"Asrama KIIS\", true);\r\n        if (modelName) {\r\n            this.modelName = modelName;\r\n        }\r\n        this.masterDataService = this.getServices().masterDataService;\r\n         \r\n    }\r\n    startLoading = (withProgress: boolean = false) => {\r\n        if (this.overrideLoading) {\r\n            this.setState({ loading: true });\r\n        } else {\r\n            super.startLoading(withProgress);\r\n        }\r\n    }\r\n    endLoading = () => {\r\n        if (this.overrideLoading) {\r\n            this.setState({ loading: false });\r\n        } else {\r\n            super.endLoading();\r\n        }\r\n    }\r\n    loadItems = () => {\r\n        const request: WebRequest = {\r\n            filter: this.state.filter,\r\n            modelName: this.modelName\r\n        }\r\n        this.commonAjax(\r\n            this.masterDataService.list,\r\n            this.itemsLoaded,\r\n            this.showCommonErrorAlert,\r\n            request\r\n        )\r\n    }\r\n    itemsLoaded = (response: WebResponse) => {\r\n        this.setState({ items: response.items, totalData: response.totalData });\r\n    }\r\n    \r\n    updateFilter = (e: ChangeEvent) => {\r\n        const filter = this.state.filter;\r\n        const target = (e.target as any);\r\n\r\n        if (!target.value || target.value == \"\") {\r\n            return;\r\n        }\r\n\r\n        let value:any;\r\n        if (target.type == 'number' || (target.dataset && target.dataset['type'] == 'number')) {\r\n            value = parseInt(target.value);\r\n        } else {\r\n            value = target.value;\r\n        }\r\n        filter[target.name] = value;\r\n        this.setState({ filter: filter })\r\n    }\r\n    updateFieldsFilter = (e: ChangeEvent) => {\r\n        const filter = this.state.filter;\r\n        const target = (e.target as any);\r\n        if (!filter.fieldsFilter) {\r\n            filter.fieldsFilter = {};\r\n        }\r\n        filter.fieldsFilter[target.name] = target.value;\r\n        this.setState({ filter: filter })\r\n    }\r\n    loadAtPage = (page: number) => {\r\n        const filter = this.state.filter;\r\n        filter.page = page;\r\n        this.setState({ filter: filter }, this.loadItems);\r\n    }\r\n    updateRecordProp = (e: ChangeEvent) => {\r\n        const target = e.target as any;\r\n        const dataset = target.dataset;\r\n        let value:any;\r\n        if (dataset['type'] && dataset['type'] == 'boolean') {\r\n            value = target.value == \"true\" ? true : false;\r\n        } else {\r\n            value =  target.value;\r\n        }\r\n        const record = this.state.record;\r\n        record[target.name] = value;\r\n        this.setState({ record: record });\r\n    }\r\n    resetForm = (callback?: () => any) => {\r\n        this.setState({ record: this.emptyRecord() }, callback);\r\n    }\r\n    oneRecordLoaded =  (item: any) => {\r\n        this.setState({ record: item }, () => {\r\n            if (this.formRef.current) {\r\n                this.formRef.current.showModal();\r\n            }\r\n            this.scrollTop();\r\n        });\r\n    }\r\n    componentDidMount() {\r\n        super.componentDidMount();\r\n        this.scrollTop();\r\n        this.loadItems();\r\n    }\r\n    recordUpdated = (response: WebResponse) => {\r\n        this.resetForm(() => {\r\n            if (this.formRef.current) {\r\n                this.formRef.current.hideModal();\r\n            }\r\n            this.showInfo(\"Success Update\");\r\n            this.loadItems();\r\n        });\r\n    }\r\n    protected callApiSubmit = (request: WebRequest) => {\r\n        this.commonAjax(\r\n            this.masterDataService.update,\r\n            this.recordUpdated,\r\n            this.showCommonErrorAlert,\r\n            request\r\n        )\r\n    }\r\n\r\n    reload = (e:any) => {\r\n        if (e && e.preventDefault) {\r\n            e.preventDefault();\r\n        }\r\n        this.loadAtPage(0);\r\n    }\r\n}","import React, { ChangeEvent } from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport Employee from './../../../models/Employee';\r\nimport { tableHeader } from './../../../utils/CollectionUtil';\r\nimport Filter from '../../../models/commons/Filter'; \r\nimport FormGroup from './../../form/FormGroup';\r\nimport NavigationButtons from './../../navigation/NavigationButtons';\r\nimport EmployeeRow from './EmployeeRow';\r\nimport User from '../../../models/User';\r\nimport ToggleButton from './../../navigation/ToggleButton';\r\nimport BaseManagementPage from './BaseManagementPage';\r\nclass State {\r\n    items:Employee[] = [];\r\n    filter:Filter = new Filter();\r\n    totalData:number = 0;\r\n}\r\nclass MusyrifManagement extends BaseManagementPage{\r\n    state:State = new State();\r\n    constructor(props) {\r\n        super(props, 'employee');\r\n        this.state.filter.limit = 10;\r\n        this.state.filter.fieldsFilter = {\r\n            'musyrif_only':true\r\n        }\r\n    }\r\n    emptyRecord = () => new Employee();\r\n    setMusyrifOnly = (musyrifOnly:boolean) => {\r\n        const filter = this.state.filter;\r\n        if (!filter.fieldsFilter) {\r\n            filter.fieldsFilter = {};\r\n        }\r\n        filter.fieldsFilter['musyrif_only'] = musyrifOnly;\r\n        this.setState({filter: filter}, ()=> this.loadAtPage(0))\r\n    }\r\n    onEmployeeStatusUpdate = () => {\r\n        this.loadItems();\r\n    }\r\n    render() {\r\n        const filter = this.state.filter;\r\n        const musyrifOnly :boolean = filter.fieldsFilter && filter.fieldsFilter['musyrif_only']&&filter.fieldsFilter['musyrif_only'] == true;\r\n        return (\r\n            <div  className=\"section-body container-fluid\">\r\n                <h2>Musyrif</h2>\r\n                <hr/>\r\n               \r\n                <form onSubmit={this.reload}>\r\n                    <FormGroup label=\"Cari\">\r\n                        <input name=\"name\" placeholder=\"Nama atau email\" className=\"form-control-sm\" value={filter.fieldsFilter?filter.fieldsFilter['name']:\"\"} onChange={this.updateFieldsFilter} />\r\n                    </FormGroup>\r\n                    <FormGroup label=\"Jumlah Tampilan\">\r\n                        <input name=\"limit\" type=\"number\" className=\"form-control-sm\" value={filter.limit??5} onChange={this.updateFilter} />\r\n                    </FormGroup>\r\n                    <FormGroup label=\"Opsi\">\r\n                        <ToggleButton active={musyrifOnly} onClick={this.setMusyrifOnly} noLabel=\"Semua pegawai\" yesLabel=\"Hanya musyrif\" />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <input className=\"btn btn-primary btn-sm\" type=\"submit\" value=\"Submit\"/>\r\n                    </FormGroup>\r\n                </form>\r\n                <NavigationButtons activePage={filter.page??0} limit={filter.limit??5} totalData={this.state.totalData}\r\n                    onClick={this.loadAtPage} />\r\n                <EmployeeList onUpdated={this.onEmployeeStatusUpdate} startingNumber={(filter.page??0) *( filter.limit?? 5)} items={this.state.items} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst EmployeeList = (props:{onUpdated:()=>void,startingNumber:number, items:Employee[]}) => {\r\n    const items = props.items;\r\n    return (\r\n        <div className=\"container-fluid\" style={{overflow:'scroll'}}>\r\n        <table className=\"table table-striped\" >\r\n            {tableHeader(\"No\", \"Nama\", \"Email\", \"NIP\", \"Role: Musyrif\", \"Opsi\")}\r\n            <tbody>\r\n                {items.map((emp,i)=>{\r\n                    if (emp.user) {\r\n                        emp.user = User.clone(emp.user);\r\n                    }\r\n                    return (\r\n                        <EmployeeRow onUpdated={props.onUpdated} employee={emp} startingNumber={props.startingNumber+i} key={emp.id} />\r\n                    )\r\n                })}\r\n            </tbody>\r\n        </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(\r\n    connect(\r\n        mapCommonUserStateToProps\r\n    )(MusyrifManagement)\r\n)","import React from 'react'\r\nimport BaseComponent from './../../BaseComponent';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport BasePage from './../BasePage';\r\nclass ManagementMain extends BasePage\r\n{\r\n    constructor(props) {\r\n        super(props, \"Management\", true);\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container-fluid section-body\">\r\n                <h2>Halaman Manajemen</h2>\r\n                <div className=\"alert alert-info\">\r\n                    Welcome, <strong>{this.getLoggedUser()?.name}</strong>\r\n                    <hr/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(\r\n    connect(\r\n        mapCommonUserStateToProps\r\n    )(ManagementMain)\r\n)","\r\nimport BaseEntity from './BaseEntity';\r\nimport RulePoint from './RulePoint';\r\nexport default class Category extends BaseEntity\r\n{\r\n    name?:string;\r\n    description?:string;\r\n\r\n    points:RulePoint[] | undefined;\r\n\r\n    static clone = (object:any) : Category => {\r\n        return Object.assign(new Category, object);\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nimport AnchorButton from '../navigation/AnchorButton';\r\nclass IState {\r\n    show:boolean = true\r\n}\r\ninterface IProps {\r\n    toggleable?:boolean, show?:boolean, title?:string, style?:any, footerContent?:any,showFooter?:boolean\r\n}\r\nexport default class Modal extends Component<IProps, IState> {\r\n    state:IState = new IState();\r\n    constructor(props: any) {\r\n        super(props);\r\n    }\r\n    hideModal = () => {\r\n        this.setState({show:false});\r\n    }\r\n    showModal = () => {\r\n        this.setState({show:true});\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.show == false) { this.setState({show:false}); }\r\n    }\r\n    render() {\r\n    //    if (this.props.show == false) { return null; }\r\n        const title = this.props.title?? \"Title\"; \r\n        if (this.props.toggleable == true && this.state.show == false) {\r\n            return (\r\n                <AnchorButton style={{marginBottom:'10px'}} onClick={this.showModal} iconClassName=\"fas fa-angle-down\" >Show {title}</AnchorButton>\r\n            )\r\n        }\r\n        const props = (({ style, show, footerContent, toggleable, ...props }) => props)(this.props) // remove b and c\r\n        return (\r\n            <div {...props} className=\"modal-content \" style={{...this.props.style, marginBottom:'10px'}}>\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">{title}</h5>\r\n                    {this.props.toggleable?\r\n                    <button type=\"button\" className=\"btn btn-sm\" onClick={this.hideModal} aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\">\r\n                            <i className='fas fa-times'/>\r\n                        </span>\r\n                    </button>\r\n                    :\r\n                    null}\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    {this.props.children}\r\n                </div>\r\n                {this.props.footerContent || this.props.showFooter == true?\r\n                <div className=\"modal-footer\">\r\n                    {this.props.footerContent}\r\n                </div>\r\n                :null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React from 'react'\r\nimport BaseComponent from './../../BaseComponent';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport AnchorWithIcon from './../../navigation/AnchorWithIcon';\r\nimport BaseEntity from './../../../models/BaseEntity';\r\nimport MasterDataService from './../../../services/MasterDataService';\r\nimport WebRequest from '../../../models/commons/WebRequest';\r\nimport WebResponse from '../../../models/commons/WebResponse'; \r\nclass EditDeleteButton extends BaseComponent\r\n{\r\n    masterDataService:MasterDataService;\r\n    constructor(props) {\r\n        super(props, true);\r\n        this.masterDataService = this.getServices().masterDataService;\r\n    }\r\n\r\n    get modelName  () : string   {\r\n        return this.props.modelName;\r\n    }\r\n    getRecord = () : BaseEntity => {\r\n        const rec = this.props.record;\r\n        if (!rec) {\r\n            alert(\"this.props.record undefined\");\r\n            return {};\r\n        }\r\n        return rec;\r\n    }\r\n    recordLoaded = (response:WebResponse) => {\r\n        if (this.props.recordLoaded) {\r\n            this.props.recordLoaded(response.item);\r\n        }\r\n    }\r\n    recordLoadedForDetail = (response:WebResponse) => {\r\n        if (this.props.recordLoadedForDetail) {\r\n            this.props.recordLoadedForDetail(response.item);\r\n        }\r\n    }\r\n    recordDeleted = (response:WebResponse) => {\r\n        this.showInfo(\"Record has been deleted\");\r\n        if (this.props.recordDeleted) {\r\n            this.props.recordDeleted(response.item);\r\n        }\r\n    }\r\n    get loadRecordRequest():WebRequest {\r\n        const req :WebRequest = {\r\n            record_id : this.getRecord().id,\r\n            modelName : this.modelName\r\n        }\r\n        return req;\r\n    }\r\n    loadRecord = () => {\r\n        \r\n        this.commonAjax(\r\n            this.masterDataService.getOne,\r\n            this.recordLoaded,\r\n            this.showCommonErrorAlert,\r\n            this.loadRecordRequest\r\n        )\r\n    }\r\n    loadRecordForDetail = () => {\r\n\r\n        this.commonAjax(\r\n            this.masterDataService.getOne,\r\n            this.recordLoadedForDetail,\r\n            this.showCommonErrorAlert,\r\n            this.loadRecordRequest\r\n        )\r\n    }\r\n    deleteRecord = () => {\r\n        this.showConfirmationDanger(\"Delete record?\")\r\n        .then(ok=>{\r\n            if (!ok) return;\r\n            this.commonAjax(\r\n                this.masterDataService.delete,\r\n                this.recordDeleted,\r\n                this.showCommonErrorAlert,\r\n                this.loadRecordRequest\r\n            )\r\n        })\r\n    }\r\n    hasType = (type:string):boolean => {\r\n        if (!this.props.types) return false;\r\n        return  (this.props.types as string[]).indexOf(type) >= 0;\r\n    }\r\n    render() {\r\n        const types:string[] | undefined = this.props.types ?? undefined;\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {this.hasType('detail') ?\r\n                    <AnchorWithIcon onClick={this.loadRecordForDetail} iconClassName=\"fas fa-info-circle\" className=\"btn btn-info btn-sm\"/>\r\n                    :\r\n                    null}\r\n                {types === undefined || this.hasType('edit') ?\r\n                    <AnchorWithIcon onClick={this.loadRecord} iconClassName=\"fas fa-edit\" className=\"btn btn-warning btn-sm\"/>\r\n                    :\r\n                    null}\r\n                {types === undefined || this.hasType('delete') ?\r\n                    <AnchorWithIcon onClick={this.deleteRecord} iconClassName=\"fas fa-times\" className=\"btn btn-danger btn-sm\"/>\r\n                    :\r\n                    null}\r\n               \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(\r\n    connect(\r\n        mapCommonUserStateToProps\r\n    )(EditDeleteButton)\r\n)","\r\nimport React, { ChangeEvent } from 'react'\r\nimport BaseComponent from './../../BaseComponent';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport Filter from '../../../models/commons/Filter';\r\nimport Category from './../../../models/Category';\r\nimport WebRequest from '../../../models/commons/WebRequest';\r\nimport FormGroup from './../../form/FormGroup';\r\nimport NavigationButtons from './../../navigation/NavigationButtons';\r\nimport Modal from './../../container/Modal';\r\nimport EditDeleteButton from './EditDeleteButton'\r\nimport { tableHeader } from './../../../utils/CollectionUtil';\r\nimport BaseManagementPage from './BaseManagementPage';\r\nimport BaseEntity from './../../../models/BaseEntity';\r\nclass State {\r\n    items: Category[] = [];\r\n    filter: Filter = new Filter();\r\n    totalData: number = 0;\r\n    record: Category = new Category();\r\n\r\n}\r\nclass CategoryManagement extends BaseManagementPage {\r\n    state: State = new State();\r\n    constructor(props) {\r\n        super(props, 'category');\r\n        this.state.filter.limit = 10;\r\n    }\r\n    \r\n    onSubmit = () => {\r\n        // console.debug(\"RECORD: \", this.state.record);\r\n        this.showConfirmation(\"Submit Data?\")\r\n            .then(ok => {\r\n                if (!ok) return;\r\n\r\n                const request: WebRequest = {\r\n                    category: this.state.record,\r\n                    modelName: this.modelName\r\n                }\r\n                this.callApiSubmit(request);\r\n            })\r\n    }\r\n    \r\n    emptyRecord = ():BaseEntity => new Category(); \r\n    render() {\r\n        const filter: Filter = this.state.filter;\r\n        return (\r\n            <div className=\"container-fluid section-body\">\r\n                <h2>Kategori Pelanggaran</h2>\r\n                <hr />\r\n                <RecordForm formRef={this.formRef} resetForm={this.resetForm} onSubmit={this.onSubmit} record={this.state.record} updateRecordProp={this.updateRecordProp} />\r\n                <form onSubmit={this.reload}>\r\n                    <FormGroup label=\"Cari\">\r\n                        <input name=\"name\" placeholder=\"nama\" className=\"form-control-sm\" value={filter.fieldsFilter ? filter.fieldsFilter['name'] : \"\"} onChange={this.updateFieldsFilter} />\r\n                    </FormGroup>\r\n                    <FormGroup label=\"Jumlah Tampilan\">\r\n                        <input name=\"limit\" type=\"number\" className=\"form-control-sm\" value={filter.limit ?? 5} onChange={this.updateFilter} />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <input className=\"btn btn-primary btn-sm\" type=\"submit\" value=\"Submit\" />\r\n                    </FormGroup>\r\n                </form>\r\n                <NavigationButtons activePage={filter.page ?? 0} limit={filter.limit ?? 5} totalData={this.state.totalData}\r\n                    onClick={this.loadAtPage} />\r\n                <ItemsList \r\n                    recordLoaded={this.oneRecordLoaded}\r\n                    recordDeleted={this.loadItems}\r\n                    startingNumber={(filter.page??0)*(filter.limit??10)} items={this.state.items} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst ItemsList = (props: {startingNumber:number, items:Category[], recordLoaded(item:any), recordDeleted()}) => {\r\n\r\n    return (\r\n        <div style={{overflow:'scroll'}}>\r\n        <table className=\"table table-striped\">\r\n            {tableHeader(\"No\", \"Nama\", \"Deskripsi\", \"Opsi\")}\r\n            <tbody>\r\n                    {props.items.map((item, i)=>{\r\n\r\n                        return (\r\n                            <tr key={\"category-\"+i}>\r\n                                <td>{i+1+props.startingNumber}</td>\r\n                                <td>{item.name}</td>\r\n                                <td>{item.description}</td>\r\n                                <td><EditDeleteButton \r\n                                    recordLoaded={props.recordLoaded}\r\n                                    recordDeleted={props.recordDeleted}\r\n                                    record={item} modelName={'category'}/></td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n        </table>\r\n        </div>\r\n    )\r\n}\r\nconst RecordForm = (props: { formRef:React.RefObject<Modal>, updateRecordProp(e: ChangeEvent): any, resetForm():any, onSubmit(): any, record: Category }) => {\r\n\r\n    return (\r\n        <form className=\"record-form mb-3\" onSubmit={(e) => { e.preventDefault(); props.onSubmit() }}>\r\n            <Modal show={false} ref={props.formRef} toggleable={true} title=\"Record Form\" >\r\n                <FormGroup label=\"Nama\"><input required value={props.record.name ?? \"\"} onChange={props.updateRecordProp} className=\"form-control-sm\" name=\"name\" /></FormGroup>\r\n                <FormGroup label=\"Deskripsi\">\r\n                    <textarea required className=\"form-control\" name=\"description\" onChange={props.updateRecordProp} value={props.record.description ?? \"\"} />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-sm\" />\r\n                    &nbsp;\r\n                    <input type=\"reset\"   className=\"btn btn-secondary btn-sm\" onClick={(e)=>props.resetForm()} />\r\n                </FormGroup>\r\n            </Modal>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default withRouter(\r\n    connect(\r\n        mapCommonUserStateToProps\r\n    )(CategoryManagement)\r\n)","\r\nimport BaseEntity from './BaseEntity';\r\nimport Category from './Category';\r\nexport default class RulePoint extends BaseEntity\r\n{\r\n    \r\n    category?:Category;\r\n    category_id?:any;\r\n    name?:string;\r\n    description?:string;\r\n    point:number = 1;\r\n    droppable?:boolean = true;\r\n}","import React, { ChangeEvent } from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport RulePoint from './../../../models/RulePoint';\r\nimport Filter from '../../../models/commons/Filter';\r\nimport Modal from './../../container/Modal';\r\nimport FormGroup from './../../form/FormGroup';\r\nimport WebRequest from '../../../models/commons/WebRequest';\r\nimport NavigationButtons from './../../navigation/NavigationButtons';\r\nimport EditDeleteButton from './EditDeleteButton';\r\nimport { tableHeader } from './../../../utils/CollectionUtil';\r\nimport BaseManagementPage from './BaseManagementPage';\r\nimport Category from './../../../models/Category';\r\nimport WebResponse from '../../../models/commons/WebResponse';\r\nimport AnchorWithIcon from './../../navigation/AnchorWithIcon';\r\nclass State {\r\n    items: RulePoint[] = [];\r\n    filter: Filter = new Filter();\r\n    totalData: number = 0;\r\n    record: RulePoint = new RulePoint();\r\n    categories: Category[] = [];\r\n    categoriesLoaded:boolean = false;\r\n\r\n}\r\nclass RulePointManagement extends BaseManagementPage\r\n{\r\n    state: State = new State();\r\n    \r\n    constructor(props) {\r\n        super(props, 'rulepoint');\r\n        this.state.filter.limit = 10;\r\n    }\r\n\r\n    onSubmit = () => {\r\n        // console.debug(\"RECORD: \", this.state.record);\r\n        this.showConfirmation(\"Submit Data?\")\r\n            .then(ok => {\r\n                if (!ok) return;\r\n\r\n                const request: WebRequest = {\r\n                    rulePoint: this.state.record,\r\n                    modelName: this.modelName\r\n                }\r\n                this.callApiSubmit(request);\r\n            })\r\n    }\r\n    componentDidMount() {\r\n        this.validateLoginStatus(()=>{\r\n            this.scrollTop();\r\n            this.loadCategories();\r\n        });\r\n    }\r\n    categoriesLoaded = (response: WebResponse) => {\r\n        this.setState({categories:response.items, categoriesLoaded: true}, ()=>{ this.resetForm(); this.loadItems() });\r\n    }\r\n    categoriesNotLoaded = (response: WebResponse) => {\r\n        this.setState({categories: [], categoriesLoaded: true}, this.resetForm);\r\n    }\r\n    loadCategories = () => {\r\n        const filter:Filter = new Filter();\r\n        filter.limit = 0;\r\n        const req:WebRequest = {\r\n            filter: filter,\r\n            modelName: 'category'\r\n        }\r\n        this.commonAjax(\r\n            this.masterDataService.list,\r\n            this.categoriesLoaded,\r\n            this.categoriesNotLoaded,\r\n            req\r\n        )\r\n    }\r\n    \r\n    emptyRecord = ():any => {\r\n        const record = new RulePoint();\r\n        if (this.state.categories.length > 0) {\r\n            record.category_id = this.state.categories[0].id;\r\n        }\r\n        return record;\r\n    }\r\n    \r\n    render() {\r\n        const filter: Filter = this.state.filter;\r\n        const categories: Category[] = this.state.categories;\r\n        if (this.state.categoriesLoaded && categories.length == 0) {\r\n            return (\r\n                <div className=\"container-fluid section-body\">\r\n                    <h2>Kategori pelanggaran belum ada</h2>\r\n                </div>\r\n            )\r\n        }\r\n        const selectedCategoryId = filter.fieldsFilter && filter.fieldsFilter['category_id'] ? filter.fieldsFilter['category_id'] : \"ALL\";\r\n        return (\r\n            <div className=\"container-fluid section-body\">\r\n                <h2>Poin Pelanggaran</h2>\r\n                <hr />\r\n                <RecordForm categories={categories} reloadCategories={this.loadCategories} formRef={this.formRef} resetForm={this.resetForm} onSubmit={this.onSubmit} record={this.state.record} updateRecordProp={this.updateRecordProp} />\r\n                <form onSubmit={this.reload}>\r\n                <FormGroup label=\"Cari\">\r\n                    <div className=\"input-group\">\r\n                        <input name=\"name\" placeholder=\"nama\" className=\"form-control-sm\" value={filter.fieldsFilter ? filter.fieldsFilter['name'] : \"\"} onChange={this.updateFieldsFilter} />\r\n                        <select value={selectedCategoryId} className=\"form-control-sm\" name=\"category_id\" onChange={this.updateFieldsFilter} >\r\n                            {[{id:\"\", name:\"Semua Kategori\"},...categories].map((c)=>{\r\n                                return <option key={\"filter-cat-\"+c.id} value={c.id}>{c.name}</option>\r\n                            })}\r\n                        </select>\r\n                        <div className=\"input-group-append\">\r\n                            <AnchorWithIcon className=\"btn btn-sm\" iconClassName=\"fas fa-redo\" onClick={this.loadCategories}>Reload</AnchorWithIcon>\r\n                        </div>\r\n                    </div>\r\n                </FormGroup>\r\n                    <FormGroup label=\"Jumlah Tampilan\">\r\n                        <input type=\"number\" name=\"limit\" className=\"form-control-sm\" value={filter.limit ?? 5} onChange={this.updateFilter} />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <input className=\"btn btn-primary btn-sm\" type=\"submit\" value=\"Submit\" />\r\n                    </FormGroup>\r\n                </form>\r\n                <NavigationButtons activePage={filter.page ?? 0} limit={filter.limit ?? 5} totalData={this.state.totalData}\r\n                    onClick={this.loadAtPage} />\r\n                <ItemsList \r\n                    recordLoaded={this.oneRecordLoaded}\r\n                    recordDeleted={this.loadItems}\r\n                    startingNumber={(filter.page??0)*(filter.limit??10)} items={this.state.items} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst ItemsList = (props: {startingNumber:number, items:RulePoint[], recordLoaded(item:any), recordDeleted()}) => {\r\n\r\n    return (\r\n        <div style={{overflow:'scroll'}}>\r\n        <table className=\"table table-striped\">\r\n            {tableHeader(\"No\", \"Nama\", \"Poin\", \"Deskripsi\", \"Kategori\", \"Pemutihan\", \"Opsi\")}\r\n            <tbody>\r\n                    {props.items.map((item, i)=>{\r\n                        return (\r\n                            <tr key={`RulePoint-${i}`}>\r\n                                <td>{i+1+props.startingNumber}</td>\r\n                                <td>{item.name}</td>\r\n                                <td>{item.point}</td>\r\n                                <td>{item.description}</td>\r\n                                <td>{item.category?.name}</td>\r\n                                <td>{item.droppable ? \"Ya\" : \"TIdak\"}</td>\r\n                                <td><EditDeleteButton \r\n                                    recordLoaded={props.recordLoaded}\r\n                                    recordDeleted={props.recordDeleted}\r\n                                    record={item} modelName={'rulepoint'}/></td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n        </table>\r\n        </div>\r\n    )\r\n}\r\nconst RecordForm = (props: { categories:Category[], formRef:React.RefObject<Modal>, \r\n    updateRecordProp(e: ChangeEvent): any, \r\n    resetForm():any, onSubmit(): any,\r\n    record: RulePoint, reloadCategories():any }) => {\r\n\r\n    return (\r\n        <form className=\"record-form mb-3\" onSubmit={(e) => { e.preventDefault(); props.onSubmit() }}>\r\n            <Modal show={false} ref={props.formRef} toggleable={true} title=\"Record Form\" >\r\n                <FormGroup label=\"Nama\"><input value={props.record.name ?? \"\"} onChange={props.updateRecordProp} className=\"form-control-sm\" name=\"name\" required/></FormGroup>\r\n                <FormGroup label=\"Poin\"><input type=\"number\" value={props.record.point} onChange={props.updateRecordProp} className=\"form-control-sm\" name=\"point\" required/></FormGroup>\r\n                <FormGroup label=\"Deskripsi\">\r\n                    <textarea className=\"form-control\" name=\"description\" onChange={props.updateRecordProp} value={props.record.description ?? \"\"}  />\r\n                </FormGroup>\r\n                <FormGroup label=\"Dapat diputihkan\">\r\n                    <select className=\"form-control-sm\" data-type=\"boolean\" name=\"droppable\" onChange={props.updateRecordProp} value={props.record.droppable == true ? \"true\":\"false\"} required>\r\n                        <option value={\"true\"} >Ya</option>\r\n                        <option value={\"false\"}>Tidak</option>\r\n                    </select>\r\n                </FormGroup>\r\n                <FormGroup label=\"Category\">\r\n                    <div className=\"input-group\">\r\n                        <select required value={props.record.category_id} className=\"form-control-sm\" name=\"category_id\" onChange={props.updateRecordProp} >\r\n                            {props.categories.map((c)=>{\r\n\r\n                                return <option key={\"cat-\"+c.id} value={c.id}>{c.name}</option>\r\n                            })}\r\n                        </select>\r\n                        <div className=\"input-group-append\">\r\n                        <AnchorWithIcon className=\"btn btn-sm\" iconClassName=\"fas fa-redo\" onClick={props.reloadCategories}>Reload</AnchorWithIcon>\r\n                        </div>\r\n                    </div>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-sm\" />\r\n                    &nbsp;\r\n                    <input value=\"Reset\" type=\"reset\" className=\"btn btn-secondary btn-sm\" onClick={(e)=>props.resetForm()} />\r\n                </FormGroup>\r\n            </Modal>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default withRouter(\r\n    connect(\r\n        mapCommonUserStateToProps\r\n    )(RulePointManagement)\r\n)","import { join } from \"path\";\r\nimport { twoDigits } from './StringUtil';\r\n\r\nexport const MONTHS = [\r\n    \"Januari\",\r\n    \"Februari\",\r\n    \"Maret\",\r\n    \"April\",\r\n    \"Mei\",\r\n    \"Juni\",\r\n    \"Juli\",\r\n    \"Agustus\",\r\n    \"September\",\r\n    \"Oktober\",\r\n    \"November\",\r\n    \"Desember\"\r\n]\r\n\r\nconst leapMonths = [ 31, (  29  ), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\r\nconst regularMonths = [ 31, (  28  ), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\r\n/**\r\n * \r\n * @param {Number} month starts at 0\r\n */\r\nexport const getMonthDays = (month:number, year:number = new Date().getFullYear()) : number=> {\r\n    if(year % 4 == 0){\r\n        return leapMonths[month];\r\n    }\r\n    return regularMonths[month];\r\n}\r\n\r\nexport const getInputReadableDate = (date:Date) :string => {\r\n    const year = date.getFullYear();\r\n\r\n    const arr = [year, twoDigits(date.getMonth()+1), twoDigits(date.getDate())];\r\n    return arr.join(\"-\");\r\n}\r\nexport function addDays(date:Date, days:number) :Date{\r\n    const result:Date = new Date(date);\r\n    result.setDate(result.getDate() + days);\r\n    return result;\r\n  }\r\n  export const getDiffDays = (a:Date, b:Date) : number => {\r\n    // Discard the time and time-zone information.\r\n\r\n    console.debug(\"DIFF DATE \",a,\" vs \", b);\r\n    const _MS_PER_DAY = 1000 * 60 * 60 * 24;\r\n    const utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());\r\n    const utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate()); \r\n    return Math.floor((utc2 - utc1) / _MS_PER_DAY);\r\n}\r\n\r\nexport const parseDate = (s:string) :Date => {\r\n    var b:string[] = s.split(/\\D/);\r\n    var m = parseInt(b[1]);\r\n    return new Date(parseInt(b[0]), --m, parseInt(b[2]));\r\n  }\r\nexport const timerString = (inputSeconds:number ) => {\r\n    let hour = 0;\r\n    let minutes:number = 0;\r\n    let seconds = 0;\r\n    let totalSeconds = inputSeconds;\r\n    if (totalSeconds >= 3600) {\r\n        hour = totalSeconds/ 3600;\r\n        totalSeconds = totalSeconds % 3600;\r\n    }\r\n    if (totalSeconds >= 60) {\r\n        minutes = totalSeconds/60;\r\n        totalSeconds = totalSeconds%60;\r\n    }\r\n    seconds = totalSeconds; \r\n\r\n    return  twoDigits(hour)+\":\"+twoDigits(Math.floor(minutes))+\":\"+twoDigits(seconds);\r\n}\r\n\r\n\r\n\r\n","import React, { ChangeEvent } from 'react';\nimport Filter from '../../models/commons/Filter';\nimport { MONTHS } from './../../utils/DateUtil';\n\nconst days = (): number[] => {\n    const arr: number[] = [];\n    for (let i = 1; i <= 31; i++) {\n        arr.push(i);\n    }\n    return arr;\n}\nconst  FilterPeriod = (props: { showlabel?:boolean, hideDay?:boolean, mode?: string, filter: Filter, onChange(e: ChangeEvent): any, }) => {\n    const filter: Filter = props.filter;\n    if (props.mode == \"to\") {\n        return (\n            <React.Fragment>\n                {props.showlabel === true? <input className=\"form-control-sm\" value=\"Sampai tanggal\" disabled /> :null}\n                {props.hideDay != true?\n                <select data-type=\"number\" className=\"form-control-sm\" name=\"dayTo\" value={filter.dayTo ?? 0} onChange={props.onChange}>\n                    {days().map((d) => {\n                        return <option key={\"f-d-\" + d} value={d}>{d == 0 ? 'day' : d}</option>\n                    })}\n                </select> :null}\n                <select data-type=\"number\" className=\"form-control-sm\" name=\"monthTo\" value={filter.monthTo ?? 0} onChange={props.onChange}>\n                    {MONTHS.map((m, i) => {\n                        return <option key={\"f-m-\" + i} value={(i + 1)}>{m}</option>\n                    })}\n                </select>\n                <input name=\"yearTo\" placeholder=\"year\" className=\"form-control-sm\" value={filter.yearTo ?? \"\"} onChange={props.onChange} />\n            </React.Fragment>\n\n        )\n    }\n    return (\n        <React.Fragment>\n            {props.showlabel === true?<input className=\"form-control-sm\" value=\"Dari tanggal\" disabled /> :null}\n            {props.hideDay != true?<select data-type=\"number\" className=\"form-control-sm\" name=\"day\" value={filter.day ?? 0} onChange={props.onChange}>\n                {days().map((d) => {\n                    return <option key={\"f-d-\" + d} value={d}>{d == 0 ? 'day' : d}</option>\n                })}\n            </select>: null}\n            <select data-type=\"number\" className=\"form-control-sm\" name=\"month\" value={filter.month ?? 0} onChange={props.onChange}>\n                {MONTHS.map((m, i) => {\n                    return <option key={\"f-m-\" + i} value={(i + 1)}>{m}</option>\n                })}\n            </select>\n            <input name=\"year\" placeholder=\"year\" className=\"form-control-sm\" value={filter.year?? \"\"} onChange={props.onChange} />\n        </React.Fragment>\n    )\n}\n\nexport default  FilterPeriod;","import React, { ChangeEvent } from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport Student from '../../../models/Student';\r\nimport StudentService from '../../../services/StudentService';\r\nimport Filter from '../../../models/commons/Filter';\r\nimport WebResponse from '../../../models/commons/WebResponse';\r\nimport Class from '../../../models/Class';\r\nimport FormGroup from '../../form/FormGroup';\r\nimport NavigationButtons from '../../navigation/NavigationButtons';\r\nimport { tableHeader } from '../../../utils/CollectionUtil';\r\nimport AnchorWithIcon from '../../navigation/AnchorWithIcon';\r\nimport MasterDataService from '../../../services/MasterDataService';\r\nimport BaseManagementPage from '../management/BaseManagementPage';\r\nimport Spinner from '../../loader/Spinner';\r\nimport FilterPeriod from '../../form/FilterPeriod';\r\nimport { MONTHS } from '../../../utils/DateUtil';\r\nimport ToggleButton from '../../navigation/ToggleButton';\r\nclass State {\r\n    items: Student[] = [];\r\n    classes: Class[] = [];\r\n    totalData: number = 0;\r\n    filter: Filter = new Filter();\r\n    loading: boolean = false;\r\n}\r\nclass StudentList extends BaseManagementPage {\r\n    state: State = new State();\r\n    studentService: StudentService;\r\n    masterDataService: MasterDataService;\r\n    constructor(props) {\r\n        super(props, 'student');\r\n        this.studentService = this.getServices().studentService;\r\n        this.masterDataService = this.getServices().masterDataService;\r\n        this.state.filter.limit = 10;\r\n        this.state.filter.day = this.state.filter.dayTo = new Date().getDate();\r\n        this.state.filter.month = this.state.filter.monthTo = new Date().getMonth() + 1;\r\n        this.state.filter.year = this.state.filter.yearTo = new Date().getFullYear();\r\n        this.state.filter.fieldsFilter = {\r\n            'class_id': '',\r\n            'with_point_record': false\r\n        }\r\n    } \r\n    itemsLoaded = (response: WebResponse) => {\r\n        this.setState({ items: response.items, totalData: response.totalData });\r\n    }\r\n    classesLoaded = (response: WebResponse) => {\r\n        this.setState({ classes: response.items }, this.loadItems);\r\n    }\r\n    loadItems = () => {\r\n        this.commonAjax(\r\n            this.masterDataService.list,\r\n            this.itemsLoaded,\r\n            this.showCommonErrorAlert,\r\n            { modelName: 'student', filter: this.state.filter }\r\n        )\r\n    }\r\n    loadAtPage = (page: number) => {\r\n        const filter = this.state.filter;\r\n        filter.page = page;\r\n        this.setState({ filter: filter }, this.loadItems);\r\n    }\r\n    loadClasses = () => {\r\n        this.commonAjax(\r\n            this.studentService.getClasses,\r\n            this.classesLoaded,\r\n            this.showCommonErrorAlert,\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.validateLoginStatus(() => {\r\n            this.scrollTop();\r\n            this.loadClasses();\r\n        })\r\n    }\r\n    updateSelectedClass = (e: ChangeEvent) => {\r\n        const target = e.target as HTMLSelectElement;\r\n        const filter = this.state.filter;\r\n        if (!filter.fieldsFilter) {\r\n            filter.fieldsFilter = {};\r\n        }\r\n        filter.fieldsFilter['class_id'] = target.value;\r\n        this.setState({ filter: filter });\r\n    }\r\n    inputPage = (type: string, s: Student) => {\r\n        switch (type) {\r\n            case 'pointrecord':\r\n                this.inputPoint(s);\r\n                break;\r\n            case 'medicalrecord':\r\n                this.inputMedicalRecord(s);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    inputPoint = (student: Student) => {\r\n        this.props.history.push({\r\n            pathname: \"/asrama/inputpoint\",\r\n            state: { student: student }\r\n        })\r\n    }\r\n    inputMedicalRecord = (student: Student) => {\r\n        this.props.history.push({\r\n            pathname: \"/asrama/medicalrecord\",\r\n            state: { student: student }\r\n        })\r\n    }\r\n    updateWithPointRecord = (val: boolean) => {\r\n        const filter = this.state.filter;\r\n        if (filter.fieldsFilter) {\r\n            filter.fieldsFilter['with_point_record'] = val;\r\n        }\r\n        this.setState({ filter: filter });\r\n    }\r\n    onSubmit = (e) => { e.preventDefault(); this.loadAtPage(0) }\r\n    render() {\r\n\r\n        const filter = this.state.filter;\r\n        const classes = this.state.classes;\r\n        const defaultClass: Class = { id: \"\", level: \"Semua Kelas\", sekolah: {} };\r\n        const selectedClassId = filter.fieldsFilter && filter.fieldsFilter['class_id'] ? filter.fieldsFilter['class_id'] : \"\";\r\n        const showPointRecord = filter.fieldsFilter && filter.fieldsFilter['with_point_record'] && filter.fieldsFilter['with_point_record'] == true;\r\n        return (\r\n            <div className=\"container-fluid section-body\">\r\n                <h2>Siswa</h2>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                    <FormGroup label=\"Cari\">\r\n                        <div className=\"input-group\">\r\n                            <input name=\"name\" placeholder=\"Nama\" className=\"form-control-sm\" value={filter.fieldsFilter ? filter.fieldsFilter['name'] : \"\"} onChange={this.updateFieldsFilter} />\r\n                            <select value={selectedClassId} onChange={this.updateFieldsFilter} className=\"form-control-sm\" name=\"class_id\">\r\n                                {[defaultClass, ...classes].map((c) => {\r\n                                    return <option key={'class_' + c.id} value={c.id}>{c.level}{c.rombel} - {c.sekolah?.nama}</option>\r\n                                })}\r\n                            </select>\r\n                        </div>\r\n                    </FormGroup>\r\n                    <FormGroup label=\"Jumlah Tampilan\">\r\n                        <input name=\"limit\" type=\"number\" className=\"form-control-sm\" value={filter.limit ?? 5} onChange={this.updateFilter} />\r\n                    </FormGroup>\r\n                    <FormGroup label=\"Periode\">\r\n                        <ToggleButton active={showPointRecord}\r\n                            yesLabel={\"tampilkan poin\"} noLabel=\"tanpa poin\"\r\n                            onClick={this.updateWithPointRecord}\r\n                        />\r\n                        {showPointRecord ?\r\n                            <React.Fragment>\r\n                                <div className=\"input-group\">\r\n                                    <FilterPeriod filter={filter} onChange={this.updateFilter} />\r\n                                </div>\r\n                                <div className=\"input-group\">\r\n                                    <FilterPeriod mode={\"to\"} filter={filter} onChange={this.updateFilter} />\r\n                                </div>\r\n                            </React.Fragment> : null}\r\n                    </FormGroup>\r\n                    {showPointRecord ?\r\n                        <FormGroup>\r\n                            {filter.day} {MONTHS[(filter.month ?? 1) - 1]} {filter.year} - {filter.dayTo} {MONTHS[(filter.monthTo ?? 1) - 1]} {filter.yearTo}\r\n                        </FormGroup>\r\n                        : null}\r\n                    <FormGroup>\r\n                        <input type=\"submit\" className=\"btn btn-primary btn-sm\" value=\"Submit\" />\r\n                    </FormGroup>\r\n\r\n                </form>\r\n                <p />\r\n                <NavigationButtons onClick={this.loadAtPage} activePage={filter.page ?? 0} limit={filter.limit ?? 10} totalData={this.state.totalData} />\r\n                <ItemsList showPointRecord={showPointRecord} loading={this.state.loading} inputPage={this.inputPage} startingNumber={(filter.page ?? 0) * (filter.limit ?? 10)} items={this.state.items} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst ItemsList = (props: { showPointRecord: boolean, loading: boolean, startingNumber: number, inputPage(type: string, s: Student): any, items: Student[] }) => {\r\n\r\n    return (\r\n        <div style={{ overflow: 'scroll' }}>\r\n            <table className=\"table table-striped\">\r\n                {props.showPointRecord ? tableHeader(\"No\", \"\", \"Name\", \"Kelas\", \"Point\") : tableHeader(\"No\", \"\", \"Name\", \"Kelas\")}\r\n                <tbody>\r\n                    {props.loading ?\r\n                        <tr><td colSpan={5}><Spinner /></td></tr>\r\n\r\n                        : props.items.map((student, i) => {\r\n\r\n                            return (\r\n                                <tr key={\"student-\" + i}>\r\n                                    <td>{i + 1 + props.startingNumber}</td>\r\n                                    <td>\r\n                                        <div style={{ width: '100px' }}>\r\n                                            <AnchorWithIcon className=\"btn\" onClick={(e) => props.inputPage('pointrecord', student)} iconClassName=\"far fa-edit\" />\r\n                                            <AnchorWithIcon className=\"btn\" onClick={(e) => props.inputPage('medicalrecord', student)} iconClassName=\"fas fa-notes-medical\" />\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        {student.user?.name}</td>\r\n                                    <td>{student.kelas?.level} {student.kelas?.rombel} {student.kelas?.sekolah?.nama}</td>\r\n                                    {props.showPointRecord ? <td>{student.point}</td> : null}\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps\r\n)(StudentList))","\r\nimport BaseEntity from './BaseEntity';\r\nimport User from './User';\r\nimport Class from './Class';\r\nexport default class Student extends BaseEntity\r\n{\r\n    nis?:string;\r\n    kelas?:Class;\r\n    user?:User;\r\n\r\n    point?:number;\r\n}","\nimport BaseEntity from './BaseEntity';\nimport { parseDate } from './../utils/DateUtil';\nimport { twoDigits as td } from './../utils/StringUtil';\nimport RulePoint from './RulePoint';\nimport Student from './Student';\nimport Pictures from './Pictures';\nimport { contextPath } from './../constant/Url';\nexport default class PointRecord extends BaseEntity\n{\n    setTime(h: number, m: number, s: number) {\n        this.time = [td(h), td(m), td(s)].join(\":\");\n    }\n    setDate = (d: Date) => {\n        this.day = d.getDate();\n        this.month = d.getMonth() + 1;\n        this.year = d.getFullYear();\n    }\n    dateString = () :string=>{\n        return `${this.year}-${td(this.month)}-${td(this.day)}`;\n    }\n    location?:string;\n    day:number = new Date().getDate();\n    month:number = new Date().getMonth()+1;\n    year:number = new Date().getFullYear();\n    time:string;\n    description?:string;\n    student_id?:string;\n    point_id?:number;\n\n    rule_point?:RulePoint;\n    student?:Student;\n    dropped_at?:Date;\n\n    pictures:Pictures[] = [];\n\n    constructor() {\n        super();\n        const d = new Date();\n        this.time =  [td(d.getHours()), td(d.getMinutes()), td(d.getSeconds())].join(\":\");\n    }\n\n    /**\n     * get picture URL\n     */\n    getPicture = () :string|null => {\n        if (this.pictures.length == 0) {\n            return null;\n        }\n        return  contextPath()+'upload/POINT_RECORD/'+this.pictures[0].name;\n    }\n\n    getDate = ():Date => {\n        return parseDate(this.dateString());\n    }\n\n    getTimestamp = () :string => {\n\n        const d = this.getDate();\n        const day = DAYS[d.getDay()];\n        return day+\", \"+[\n            td(d.getDate()), td(d.getMonth()+1), d.getFullYear()\n        ].join(\"/\")+\" \"+this.time;\n    }\n\n    public static clone = (object:PointRecord) => {\n        return Object.assign(new PointRecord(), object);\n    }\n}\n\nconst DAYS = [\n    \"Ahad\", \"Senin\", \"Selasa\", \"Rabu\", \"Kamis\", \"Jumat\", \"Sabtu\"\n]","import React from 'react';\nimport { Component, ChangeEvent } from 'react';\nimport { twoDigits } from './../../utils/StringUtil';\ninterface Props{\n    onChange(h:number,m:number,s:number):any,\n    value:string,\n}\nclass State {\n    hour:number = new Date().getHours();\n    minute:number = new Date().getMinutes();\n    second:number = new Date().getSeconds();\n}\nconst hours:number[] = [\n    0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,\n];\nconst minutesOrSeconds = ()  : number[]=> {\n    const arr:number[]=  [];\n    for (let i = 1; i < 60; i++) {\n        arr.push(i);   \n    }\n    return arr; \n}\nexport default class InputTime extends Component<Props, any> {\n    state:State = new State();\n    minutes:number[];\n    seconds:number[] ;\n    constructor (props) {\n        super(props);\n        this.minutes = minutesOrSeconds();\n        this.seconds = minutesOrSeconds();\n    }\n    componentDidMount() {\n        this.updateFromProps();\n    }\n    updateFromProps = () => {\n        try {\n            const val = this.props.value.split(\":\");\n            this.setState({hour: parseInt(val[0]), minute: parseInt(val[1]), second: parseInt(val[2])});\n        } catch (error) {\n            \n        }\n    }\n    updateValue = (e:ChangeEvent) => {\n        const target = e.target as HTMLSelectElement;\n        if (target) {\n            const name = target.name;\n            this.setState({[name]: target.value}, this.onChange);\n        }\n        \n    }\n    setNow = () => {\n        const date = new Date();\n        this.setState({\n            hour: date.getHours(),\n            minute: date.getMinutes(),\n            second: date.getSeconds()\n        }, this.onChange)\n    }\n    onChange = () => {\n        this.props.onChange(this.state.hour, this.state.minute, this.state.second)\n    }\n    render() {\n         \n        return (<div className=\"form-control bg-light\">\n            <select name=\"hour\" style={{border:'none'}} value={this.state.hour} onChange={this.updateValue} >\n                {hours.map((hour)=>{\n                    return <option key={\"HOUR-\"+hour} value={hour} >{twoDigits(hour)}</option>\n                })}\n            </select>\n            <select name=\"minute\" style={{border:'none'}}  value={this.state.minute} onChange={this.updateValue}>\n                {this.minutes.map((min)=>{\n                    return <option key={\"MIN-\"+min} value={min} >{twoDigits(min)}</option>\n                })}\n            </select>\n            <select name=\"second\" style={{border:'none'}}  value={this.state.second} onChange={this.updateValue}>\n                {this.seconds.map((sec)=>{\n                    return <option key={\"SEC-\"+sec} value={sec} >{twoDigits(sec)}</option>\n                })}\n            </select>\n            <a style={{marginLeft: 5}}  onClick={this.setNow} ><i className=\"fas fa-history\"/></a>\n        </div>)\n    }\n}","import React, { ChangeEvent } from 'react'\nimport BaseComponent from '../../../BaseComponent';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\nimport RulePoint from '../../../../models/RulePoint';\nimport FormGroup from '../../../form/FormGroup';\nimport PointRecord from '../../../../models/PointRecord';\nimport { parseDate } from '../../../../utils/DateUtil';\nimport InputTime from '../../../form/InputTime';\nimport { getAttachmentInfoFromFile } from '../../../../utils/ComponentUtil';\nimport AttachmentInfo from '../../../../models/settings/AttachmentInfo';\nclass State {\n    pointRecord: PointRecord = new PointRecord();\n}\nclass FormStepThree extends BaseComponent {\n    state: State = new State();\n    constructor(props) {\n        super(props, true);\n    }\n\n    onSubmit = () => {\n        this.showConfirmation(\"Submit Data?\")\n            .then(ok => {\n                if (ok) {  \n                    this.props.submit(this.state.pointRecord);\n                }\n            })\n    }\n    get rulePoint (): RulePoint  {\n        return this.props.rulePoint;\n    }\n    updatePointRecord = (e: ChangeEvent) => {\n        const target = e.target as any;\n        const pointRecord = this.state.pointRecord;\n        pointRecord[target.name] = target.value;\n        this.setState({ pointRecord: pointRecord });\n\n    }\n    updateDate = (e: ChangeEvent) => {\n        const date: Date = parseDate((e.target as HTMLInputElement).value);\n        const pointRecord = this.state.pointRecord;\n        pointRecord.setDate(date);\n        this.setState({ pointRecord: pointRecord });\n    }\n    updateTime = (h: number, m: number, s: number) => {\n        const pointRecord = this.state.pointRecord;\n        pointRecord.setTime(h, m, s);\n        this.setState({ pointRecord: pointRecord });\n    }\n    setAttachment = (e: ChangeEvent) => {\n        const target = e.target as HTMLInputElement;\n        getAttachmentInfoFromFile(target).then((attachment: AttachmentInfo) => {\n            this.props.setAttachment(attachment);\n        });\n    }\n    removeAttachment = () => {\n        this.props.removeAttachment();\n    }\n    getAttachment = (): AttachmentInfo | undefined => {\n        return this.props.attachmentInfo;\n    }\n    render() {\n        const rulePoint: RulePoint = this.rulePoint;\n        const pointRecord: PointRecord = this.state.pointRecord;\n        const attachment = this.getAttachment();\n        return (\n            <form onSubmit={(e) => { e.preventDefault(); this.onSubmit() }}>\n                <FormGroup label=\"Category\">{rulePoint.category?.name} - {rulePoint.name} <span className=\"badge badge-dark\">{rulePoint.point}</span></FormGroup>\n                <FormGroup label=\"Date\">\n                    <input type=\"date\" className=\"form-control\" onChange={this.updateDate} name=\"date\" value={pointRecord.dateString()} />\n                </FormGroup>\n                <FormGroup label=\"Time\">\n                    <InputTime onChange={this.updateTime} value={pointRecord.time} />\n                </FormGroup>\n                <FormGroup label=\"Location\">\n                    <input className=\"form-control\" onChange={this.updatePointRecord} name=\"location\" value={pointRecord.location ?? \"\"} />\n                </FormGroup>\n                <FormGroup label=\"Picture\">\n                    {attachment ?\n                        <>\n                            <img style={{marginRight:10}} className=\"border border-dark\" src={attachment.url} width={100} height={100} />\n                            <AnchorWithIcon iconClassName=\"fas fa-times\" className=\"btn btn-danger\" onClick={this.removeAttachment}></AnchorWithIcon>\n                        </>\n                        : <input type=\"file\" accept={\"image/*\"} className=\"form-control\" onChange={this.setAttachment} name=\"attachment\" />\n                    }\n                </FormGroup>\n                <FormGroup label=\"Description\">\n                    <textarea value={pointRecord.description ?? \"\"} onChange={this.updatePointRecord} name=\"description\" className=\"form-control\"></textarea>\n                </FormGroup>\n                <AnchorWithIcon className=\"btn btn-secondary float-left\" iconClassName=\"fas fa-arrow-left\" onClick={this.props.onBack} >Back</AnchorWithIcon>\n                <button className=\"btn btn-success float-right\" >Submit</button>\n            </form>\n        )\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(FormStepThree)\n)","\r\nimport React, { Component } from 'react';\r\nexport default class SimpleError extends Component<any, any>\r\n{\r\n\r\n    render() {\r\n        if (this.props.show == false) return null;\r\n        return (\r\n            <div style={ this.props.style} className=\"alert alert-danger\">\r\n                {this.props.children??\"Error Occured\"}\r\n            </div>\r\n        )\r\n    }\r\n}","\nimport React, { ChangeEvent } from 'react'\nimport BaseComponent from '../../../BaseComponent';\nimport MasterDataService from '../../../../services/MasterDataService';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\nimport FormGroup from '../../../form/FormGroup';\nimport Category from '../../../../models/Category';\nimport RulePoint from '../../../../models/RulePoint';\nimport WebRequest from '../../../../models/commons/WebRequest';\nimport WebResponse from '../../../../models/commons/WebResponse';\nimport Spinner from '../../../loader/Spinner';\nimport SimpleError from '../../../alert/SimpleError';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\nclass State { \n    rulePoints: RulePoint[]  = []; \n    loading:boolean = false;\n}\nclass FormStepTwo extends BaseComponent {\n    masterDataService: MasterDataService;\n    state:State = new State();\n    constructor(props) {\n        super(props, true);\n        this.masterDataService = this.getServices().masterDataService;\n    }\n    startLoading = () => this.setState({loading:true});\n    endLoading = () => this.setState({loading:false});\n    rulePointsLoaded = (response: WebResponse) => {\n        this.setState({ rulePoints: response.items }, () => {\n            if (response.items.length > 0) {\n                if (!this.props.rulePoint) {\n                    this.setRulePoint(response.items[0]);\n                }\n            }\n        });\n    }\n    \n    loadRulePoints = () => {\n        if (null == this.getCategory()) return;\n        const req: WebRequest = {\n            filter: {limit:0, fieldsFilter:{category_id:this.getCategory().id}},\n            modelName: 'rulepoint',\n        }\n        this.commonAjax(\n            this.masterDataService.list,\n            this.rulePointsLoaded,\n            this.showCommonErrorAlert,\n            req\n        )\n    }\n    getCategory = ()  : Category => {\n        return this.props.category;\n    }\n    componentDidMount() {\n        super.componentDidMount();\n        this.loadRulePoints();\n    }\n    onSubmit = () => {\n        this.props.onSubmit();\n    }\n    setRulePoint = (r:RulePoint) => {\n        this.props.setRulePoint(r);\n    }\n    updateRulePoint = (e:ChangeEvent) => {\n        const select = (e.target as HTMLSelectElement);\n        const filteredItems = this.state.rulePoints.filter((r:RulePoint)=>{\n            return r.id.toString() == select.value;\n        })\n        if (filteredItems.length == 0) return;\n\n        this.setRulePoint(filteredItems[0]);\n    }\n    render() {\n        const category = this.getCategory();\n\n        if (null == category) {\n            return <SimpleError>Category not found</SimpleError>\n        }\n        if (this.state.loading) {\n            return <Spinner/>\n        }\n        if (this.state.rulePoints.length == 0) {\n            return <SimpleError>Rule Points for {category.name} not found</SimpleError>\n        }\n\n        const rulePoints =this.state.rulePoints;\n        return (\n            <form onSubmit={e => { e.preventDefault(); this.onSubmit() }} >\n                <FormGroup label=\"Category\" children={category.name}/>\n                <FormGroup label=\"Name\">\n                <select className=\"form-control\" onChange={this.updateRulePoint} value={this.props.rulePoint ? this.props.rulePoint.id : null} >\n                    {rulePoints.map((r:RulePoint) => {\n                        return <option key={`select-rulePoint-${r.id}`} value={r.id}>{r.name}</option>\n                    })}\n                </select>\n                </FormGroup>\n                <FormGroup label=\"Point\" children={this.props.rulePoint?.point}/>\n                <hr/>\n                <AnchorWithIcon className=\"btn btn-secondary float-left\"  iconClassName=\"fas fa-arrow-left\" onClick={this.props.onBack} >Back</AnchorWithIcon>\n                <AnchorWithIcon className=\"btn btn-info float-right\" iconClassName=\"fas fa-arrow-right\" onClick={this.onSubmit} >Next</AnchorWithIcon>\n            </form>\n        );\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(FormStepTwo)\n)","\nimport React, { ChangeEvent } from 'react'\nimport BaseComponent from '../../../BaseComponent';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\nimport WebResponse from '../../../../models/commons/WebResponse';\nimport WebRequest from '../../../../models/commons/WebRequest';\nimport Category from '../../../../models/Category';\nimport MasterDataService from '../../../../services/MasterDataService';\nimport FormGroup from '../../../form/FormGroup';\nimport SimpleError from '../../../alert/SimpleError';\nimport Spinner from '../../../loader/Spinner';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\nimport Filter from '../../../../models/commons/Filter';\nclass State {\n    categories: Category[] = [];\n    loading: boolean = false;\n}\nclass FormStepOne extends BaseComponent {\n    state: State = new State();\n    masterDataService: MasterDataService;\n    constructor(props) {\n        super(props, true);\n        this.masterDataService = this.getServices().masterDataService;\n    }\n    categoriesLoaded = (response: WebResponse) => {\n        this.setState({ categories: response.items, categoriesLoaded: true }, () => {\n            if (response.items.length > 0) {\n                if (!this.props.category) {\n                    this.setCategory(response.items[0]);\n                }\n            }\n        });\n    }\n    startLoading = () => this.setState({ loading: true });\n    endLoading = () => this.setState({ loading: false });\n    setCategory = (c: Category) => {\n        this.props.setSelectedCategory(c);  \n    }\n    loadCategories = () => {\n        const req: WebRequest = {\n            filter: Filter.withLimit(0),\n            modelName: 'category'\n        }\n        this.commonAjax(\n            this.masterDataService.list,\n            this.categoriesLoaded,\n            this.showCommonErrorAlert,\n            req\n        )\n    }\n    componentDidMount() {\n        super.componentDidMount();\n        this.loadCategories();\n    }\n    onSubmit = () => {\n        this.props.onSubmit();\n    }\n    updateCategory = (e:ChangeEvent) => {\n        const select = (e.target as HTMLSelectElement);\n        const filteredItems = this.state.categories.filter((c:Category)=>{\n            return c.id.toString() == select.value;\n        })\n        if (filteredItems.length == 0) return;\n\n        this.setCategory(filteredItems[0]);\n    }\n    render() {\n        const categories = this.state.categories;\n        const category = this.props.category;\n        if (this.state.loading) {\n            return <Spinner />\n        }\n        if (categories.length == 0) {\n            return <SimpleError>Categories not found</SimpleError>\n        }\n        return (\n            <form onSubmit={(e) => { e.preventDefault(); this.onSubmit() }}>\n                <FormGroup label=\"Category\">\n                    <select className=\"form-control\" onChange={this.updateCategory} value={category ? category.id??\"\" : \"\"} >\n                        {categories.map((c) => {\n                            return <option key={`select-cat-${c.id}`} value={c.id}>{c.name}</option>\n                        })}\n                    </select>\n                </FormGroup>\n                <hr/>\n                <AnchorWithIcon className=\"btn btn-secondary float-left\" iconClassName=\"fas fa-arrow-left\" onClick={this.props.onBack} >Back</AnchorWithIcon>\n                \n                <AnchorWithIcon className=\"btn btn-info float-right\" iconClassName=\"fas fa-arrow-right\" onClick={this.onSubmit}>Next</AnchorWithIcon>\n            </form >\n\n\n        )\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(FormStepOne)\n)","\nimport React from 'react'\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\nimport Student from '../../../models/Student';\nimport AnchorWithIcon from '../../navigation/AnchorWithIcon';\nimport Modal from '../../container/Modal';\nimport FormStepThree from './form/FormStepThree';\nimport FormStepTwo from './form/FormStepTwo';\nimport FormStepOne from './form/FormStepOne';\nimport Category from '../../../models/Category';\nimport RulePoint from '../../../models/RulePoint';\nimport SimpleError from '../../alert/SimpleError';\nimport PointRecord from '../../../models/PointRecord';\nimport StudentService from '../../../services/StudentService';\nimport WebResponse from '../../../models/commons/WebResponse';\nimport FormGroup from '../../form/FormGroup';\nimport { doItLater } from '../../../utils/EventUtil';\nimport AttachmentInfo from '../../../models/settings/AttachmentInfo';\nimport BasePage from '../BasePage';\n\nclass State {\n    student?: Student\n    category?: Category;\n    rulePoint?: RulePoint;\n    formStep: number = 0;\n    savedRecord?: PointRecord;\n    attachmentInfo?:AttachmentInfo;\n}\nclass InputPointForm extends BasePage {\n    state: State = new State();\n    studentService: StudentService;\n    totalStep: number = 4;\n    constructor(props) {\n        super(props, \"Input Point Record\", true);\n        this.studentService = this.getServices().studentService;\n    }\n    validateStudentData = () => {\n        if (!this.props.location.state) {\n            return;\n        }\n        const student = this.props.location.state.student;\n        if (student) {\n            this.setState({ student: Object.assign(new Student(), student) });\n        }\n    }\n    componentDidMount() {\n        super.componentDidMount();\n        this.validateStudentData();\n        this.scrollTop();\n        doItLater(()=>{\n            this.nextStep(1);\n        }, 200);\n        \n    }\n    setAttachment = (attachmentInfo:AttachmentInfo|undefined) => {\n        this.setState({attachmentInfo:attachmentInfo});\n    }\n    removeStudent = () => {\n       this.setState({formStep: 0}, ()=>{\n           doItLater(()=>{\n               this.setState({student:undefined})\n           }, 500); \n       })\n    }\n    removeAttachment = () => {\n        this.setAttachment(undefined);\n    }\n    setCategory = (c: Category) => {\n        this.setState({ category: c });\n    }\n    setRulePoint = (r: RulePoint) => {\n        this.setState({ rulePoint: r });\n    }\n    nextStep = (step: number) => {\n        this.setState({ formStep: step });\n    }\n    submitRecord = (record: PointRecord) => {\n        \n        if (!this.state.student || !this.state.rulePoint) {\n            alert(\"ERROR: student or rulePoint missing!\");\n            return;\n        }\n        record.student_id = this.state.student?.id;\n        record.point_id = this.state.rulePoint?.id;\n        this.commonAjax(\n            this.studentService.submitPointRecord,\n            this.recordSubmitted,\n            this.showCommonErrorAlert,\n            record, this.state.attachmentInfo\n        )\n    }\n    recordSubmitted = (response: WebResponse) => {\n        this.setState({ savedRecord: response.item, formStep: 4 }, this.scrollTop);\n    }\n    render() {\n        const student: Student | undefined = this.state.student;\n        if (!student) {\n            return <Warning />\n        }\n\n        return (\n            <div className=\"container-fluid section-body\">\n                <h2>Form Input Pelanggaran</h2>\n                <Modal title={student.user?.name + \" - \" + student.kelas?.level + student.kelas?.rombel + \" \" + student.kelas?.sekolah?.nama}>\n\n                    <Progress step={this.state.formStep} totalStep={this.totalStep} />\n                    {this.state.formStep == 1 ?\n                         <FormStepOne category={this.state.category} \n                            onBack={this.removeStudent}\n                            setSelectedCategory={this.setCategory}\n                            onSubmit={() => { this.nextStep(2) }} />\n                        : null}\n                    {this.state.formStep == 2 && this.state.category ?\n                        <FormStepTwo\n                            rulePoint={this.state.rulePoint}\n                            \n                            setRulePoint={this.setRulePoint}\n                            category={this.state.category} onBack={() => this.nextStep(1)} onSubmit={() => { this.nextStep(3) }}\n                        /> : null}\n                    {this.state.formStep == 3 && this.state.category && this.state.rulePoint ?\n                        <FormStepThree submit={this.submitRecord}\n                            attachmentInfo={this.state.attachmentInfo}\n                            setAttachment={this.setAttachment}\n                            removeAttachment={this.removeAttachment} \n                            rulePoint={this.state.rulePoint}\n                            onBack={() => this.nextStep(2)}\n                        /> : null}\n                    {this.state.formStep == 4 && this.state.savedRecord ?\n                        <Detail back={() => this.setState({ student: null })} record={this.state.savedRecord} />\n                        : null\n                    }\n                    \n                </Modal>\n            </div>\n        )\n    }\n}\n\nconst Progress = (props: { step: number, totalStep: number }) => {\n    return (\n        <div className=\"progress\" style={{ height:'5px', marginBottom: 15}}>\n            <div className=\"bg-info\" style={{transitionDuration: '500ms', width: (props.step / props.totalStep * 100) + '%' }}  ></div>\n        </div>\n    )\n}\n\nconst Detail = (props: { record: PointRecord, back(): any }) => {\n    const record = PointRecord.clone(props.record);\n    const date = record.getDate();\n    return (\n        <div>\n            <h4 className=\"text-center text-success\"><i className=\"fas fa-check\" style={{ marginRight: 5 }} />Record saved</h4>\n            <p />\n            <FormGroup label=\"Date\">{date.toDateString()} {record.time}</FormGroup>\n            <FormGroup label=\"Category\">{record.rule_point?.category?.name}</FormGroup>\n            <FormGroup label=\"Name\">{record.rule_point?.name}</FormGroup>\n            <FormGroup label=\"Point\">{record.rule_point?.point}</FormGroup>\n            <FormGroup label=\"Location\">{record.location}</FormGroup>\n            {record.getPicture()?\n            <FormGroup label=\"Picture\">\n                <img src={record.getPicture()??\"\"} width={200} height={200} />\n            </FormGroup>\n            :null}\n            <hr />\n            <FormGroup><a onClick={props.back} className=\"btn btn-dark\">Ok</a></FormGroup>\n        </div>\n    )\n}\n\nconst Warning = () => {\n    return (\n        <div className=\"container-fluid section-body\">\n            <h2>Form Input Pelanggaran</h2>\n            <SimpleError>\n                <i className=\"fas fa-exclamation-circle\" />&nbsp;Please select student <hr />\n                <AnchorWithIcon to={\"/asrama/studentlist\"} iconClassName=\"fas fa-list\">Student List</AnchorWithIcon>\n            </SimpleError>\n        </div>\n    )\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(InputPointForm)\n)","\r\nimport React, { Component } from 'react';\r\nexport default class Card extends Component<any, any> {\r\n    constructor(props: any) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div {...this.props.attributes} className={\"card \" + this.props.className}>\r\n                {this.props.title ? <div className=\"card-header\">\r\n                    {this.props.title}\r\n                </div> : null}\r\n                <div className=\"card-body\">\r\n                    {this.props.children}\r\n                </div>\r\n                {this.props.footerContent != undefined ?\r\n                    <div className=\"card-footer\">\r\n                        {this.props.footerContent}\r\n                    </div>\r\n                    : null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","\r\nimport School from './School';\r\nimport Student from './Student';\r\n\r\nexport default class Class {\r\n    static studentClassString(student: Student| undefined): string {\r\n        return (student?.kelas?.level??\"\") +(student?.kelas?.rombel??\"\") + \" \" + (student?.kelas?.sekolah?.nama??\"\");\r\n    }\r\n    id?:string;\r\n    name?:string;\r\n    level?:string;\r\n    rombel?:string;\r\n    sekolah?:School;\r\n}","\nimport React, { Component } from 'react'\nimport PointRecord from '../../../../models/PointRecord';\nimport Card from '../../../container/Card';\nimport FormGroup from '../../../form/FormGroup';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\nimport Class from '../../../../models/Class';\nimport { doItLater } from '../../../../utils/EventUtil';\n\ninterface IProps {\n    record:PointRecord;\n    close():any;\n}\nexport default class PointRecordDetail extends Component<IProps, any> {\n\n    componentDidMount() {\n        const opt:ScrollToOptions = { top:0,  behavior: 'smooth' };\n        doItLater(()=>{\n            window.scrollTo(opt);\n        }, 100);\n    }\n\n    render() {\n        const record = PointRecord.clone(this.props.record);\n        const pictureUrl = record.getPicture();\n        const timeStamp = record.getTimestamp();\n        return <Card title={\"Detail Pelanggaran\"} footerContent={<AnchorWithIcon className=\"btn btn-dark\" onClick={this.props.close} >Ok</AnchorWithIcon>}>\n            <FormGroup label=\"Nama\">{record.student?.user?.name} - {Class.studentClassString(record.student)}</FormGroup>\n            <FormGroup label=\"Pelanggaran\">\n                <strong>{record.rule_point?.category?.name}</strong> - {record.rule_point?.name} <span className=\"badge badge-dark\">{record.rule_point?.point}</span>\n            </FormGroup>\n            <FormGroup label=\"Waktu\" children={timeStamp} />\n            <FormGroup label=\"Lokasi\" children={record.location??\"-\"} />\n            <FormGroup label=\"Deskripsi\" children={record.description??\"-\"} />\n            <FormGroup label=\"Diputihkan\" children={record.dropped_at??\"-\"} />\n            \n            <FormGroup label=\"Gambar\">\n                {pictureUrl?\n                <img src={pictureUrl} width={200} height={200} className=\"border border-dark\" />:null}\n            </FormGroup>\n        </Card>\n    }\n}","import React from 'react'\nimport BaseComponent from '../../BaseComponent';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\nimport PointRecord from '../../../models/PointRecord';\nimport AnchorWithIcon from '../../navigation/AnchorWithIcon';\nimport StudentService from '../../../services/StudentService';\n\nclass State {\n    loading: boolean = false;\n}\nclass DropPointButtons extends BaseComponent {\n    studentService: StudentService;\n    state: State = new State();\n    constructor(props) {\n        super(props, true);\n        this.studentService = this.getServices().studentService;\n    }\n    startLoading = () => { this.setState({ loading: true }); }\n    endLoading = () => { this.setState({ loading: false }); }\n    getRecord = (): PointRecord => {\n        return this.props.record;\n    }\n\n    setDropped = (isDropped: boolean) => {\n        const item = this.getRecord();\n        this.commonAjax(this.studentService.setPointDropped,\n            this.props.onUpdated,\n            this.showCommonErrorAlert,\n            item.id, isDropped);\n    }\n    render() {\n        const item = this.getRecord();\n        if (this.state.loading) {\n\n            return <button className=\"btn btn-info btn-sm\">\n                <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n            </button>\n        }\n        return (\n            item.dropped_at ?\n                <AnchorWithIcon onClick={(e) => this.setDropped(false)} className=\"btn btn-secondary btn-sm\" iconClassName=\"fas fa-arrow-up\">\n                    Reset\n                </AnchorWithIcon> :\n                <AnchorWithIcon onClick={(e) => this.setDropped(true)} className=\"btn btn-success btn-sm\" iconClassName=\"fas fa-arrow-down\">\n                    Putihkan\n                </AnchorWithIcon>\n        )\n    }\n}\n\nexport default withRouter(connect(\n    mapCommonUserStateToProps\n)(DropPointButtons))","import React  from 'react'\nimport BaseManagementPage from './BaseManagementPage';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\nimport EditDeleteButton from './EditDeleteButton'\nimport PointRecord from '../../../models/PointRecord';\nimport Filter from '../../../models/commons/Filter';\nimport FormGroup from '../../form/FormGroup';\nimport NavigationButtons from '../../navigation/NavigationButtons';\nimport { tableHeader } from '../../../utils/CollectionUtil';\nimport FilterPeriod from '../../form/FilterPeriod';\nimport PointRecordDetail from '../asrama/point-record/PointRecordDetail';\nimport StudentService from '../../../services/StudentService';\nimport WebResponse from '../../../models/commons/WebResponse';\nimport Category from '../../../models/Category';\nimport Class from '../../../models/Class';\nimport { MONTHS } from './../../../utils/DateUtil';\nimport DropPointButtons from '../asrama/DropPointButtons';\nclass State {\n    items: PointRecord[] = [];\n    filter: Filter = new Filter();\n    totalData: number = 0;\n    record?: PointRecord;\n    loading: boolean = false;\n    categories: Category[] = [];\n    classes: Class[] = [];\n    selectedCategory:Category| undefined;\n    showFilterDetail:boolean = false;\n}\nconst defaultFieldsFilter = {name:'', dropped : '',  class_id : '', point_name : '', category_name:'',location: ''  }\n\nclass PointRecordSummary extends BaseManagementPage {\n    state: State = new State();\n    private studentService:StudentService;\n    constructor(props) {\n        super(props, 'pointrecord', false);\n         \n        this.studentService = this.getServices().studentService;\n\n        const f = new Filter();\n        const d = new Date();\n        \n        f.limit = 10;\n        f.day = f.dayTo = d.getDate();\n        f.month = 1; //January\n        f.monthTo = d.getMonth() + 1;\n        f.year = f.yearTo = d.getFullYear();\n        f.fieldsFilter =  defaultFieldsFilter;\n\n        this.state.filter = f;  \n    }\n \n    componentDidMount() {\n        super.componentDidMount();\n        this.loadCategories();\n        this.loadClasses();\n    }\n    loadClasses = () => {\n        this.commonAjax(this.studentService.getClasses,\n            this.classessLoaded, console.error)\n    }\n    loadCategories = () => {\n        this.commonAjax(this.studentService.getCategories,\n            this.categoriesLoaded, console.error);\n    }\n    categoriesLoaded = (response:WebResponse) => this.setState({categories: response.items}); \n    classessLoaded = (response:WebResponse) =>  this.setState({classes: response.items}); \n\n    setSelectedCategory = (cat:Category) => {\n        const filter = this.state.filter;\n        if (cat.id == \"\") {\n            filter.fieldsFilter['point_name'] = '';\n        }\n        this.setState({filter: filter, selectedCategory:cat});\n    }\n\n    showDetail = (item:PointRecord) => this.setState({record: item}); \n    hideDetail = () => this.setState({record: undefined}, this.scrollTop);\n    showFilterDetail = () =>  this.setState({showFilterDetail: true}); \n    hideFilterDetail = () =>  this.setState({showFilterDetail: false}); \n    \n    openEditPage = (p:PointRecord) => {\n        this.props.history.push({\n            pathname: '/asrama/pointrecordedit',\n              state: {record: p }\n         })\n    }\n\n    resetFilter = () => {\n        const f = this.state.filter;\n        this.setState({filter: Filter.resetFieldsFilter(f)});\n    }\n    followUp = (p:PointRecord) => {\n        this.commonAjax(\n            this.studentService.followUp,\n            this.showCommonSuccessAlert,\n            this.showCommonErrorAlert,\n            p.id\n        )\n    }\n    dropAll = (e) => {\n        this.showConfirmation(\"Putihkan \"+this.state.items.length+\" data?\")\n        .then(ok=>{\n            if (ok) {\n                this.commonAjax(\n                    this.studentService.dropAll,\n                    this.reload,\n                    this.showCommonErrorAlert,\n                    this.itemIdArray\n                )\n            }\n        })\n    }\n    undropAll = (e) => {\n        this.showConfirmation(\"Reset pemutihan \"+this.state.items.length+\" data?\")\n        .then(ok=>{\n            if (ok) {\n                this.commonAjax(\n                    this.studentService.undropAll,\n                    this.reload,\n                    this.showCommonErrorAlert,\n                    this.itemIdArray\n                )\n            }\n        })\n    }\n    \n    get itemIdArray() {\n        const arr:any[] = [];\n        this.state.items.forEach((item:PointRecord)=>{\n            if (item.id)\n                arr.push(item.id);\n        })\n        return arr;\n    }\n\n    render() {\n        const filter = this.state.filter;\n        const fieldsFilter = filter.fieldsFilter;\n        \n        const title = \"Rekap Pelanggaran\";\n        if (this.state.record) {\n            return (\n                <div className=\"container-fluid section-body\">\n                    <h2>{title}</h2>\n                    <PointRecordDetail record={this.state.record} close={this.hideDetail} />\n                </div>\n            )\n        }\n        const defaultClass: Class = { id: \"\", level: \"Semua Kelas\", sekolah: {} };\n        const selectedClassId =  filter.fieldsFilter['class_id'] ? filter.fieldsFilter['class_id'] : \"\";\n\n        return (\n            <div className=\"container-fluid section-body\">\n                <h2>{title}</h2>\n                <hr />\n                <form className=\"form-filter\" onSubmit={this.reload}>\n                    <FormGroup label=\"Cari\">\n                        <div className=\"input-group\">\n                            <input autoComplete=\"off\" name=\"name\" placeholder=\"Nama siswa\" className=\"form-control-sm\" value={fieldsFilter['name'] ?? \"\"} onChange={this.updateFieldsFilter} />\n                            <select  autoComplete=\"off\" value={selectedClassId} onChange={this.updateFieldsFilter} className=\"form-control-sm\" name=\"class_id\">\n                                {[defaultClass, ...this.state.classes].map((c) => {\n                                    return <option key={`class_${c.id}`} value={c.id}>{c.level}{c.rombel} - {c.sekolah?.nama}</option>\n                                })}\n                            </select>  \n                        </div>\n                    </FormGroup>\n                    {this.state.showFilterDetail?\n                    <><div  className=\"filter-sticky bg-white border border-gray pt-3 pb-3 pl-3 pr-3\">\n                        <FormGroup label=\"Kategori\"> \n                                <select value={fieldsFilter['category_name']} onChange={this.updateFieldsFilter} className=\"form-control-sm\" name=\"category_name\">\n                                    {[Category.clone({id:\"\", name:\"Semua\"}), ...this.state.categories].map((c) => {\n                                        return <option onClick={()=> this.setSelectedCategory(c)}  key={`cat_${c.id}`} value={c.id == \"\" ? c.id :c.name}>{c.name}</option>\n                                    })}\n                                </select> \n                        </FormGroup>\n                        {this.state.selectedCategory && this.state.selectedCategory.points?\n                            <FormGroup label=\"Pelanggaran\">\n                                <select value={fieldsFilter['point_name']} onChange={this.updateFieldsFilter} className=\"form-control-sm\" name=\"point_name\">\n                                    {[{id:\"\", name:\"Semua\"}, ...this.state.selectedCategory.points].map((c) => {\n                                        return <option key={`rp_${c.id}`} value={c.id == \"\" ? c.id :c.name}>{c.name}</option>\n                                    })}\n                                </select>\n                            </FormGroup>:\n                        null}\n                        <FormGroup label=\"Periode\">\n                            <div className=\"input-group\">\n                                <FilterPeriod filter={filter} onChange={this.updateFilter} />\n                            </div>\n                            <div className=\"input-group\">\n                                <FilterPeriod mode={\"to\"} filter={filter} onChange={this.updateFilter} />\n                            </div> \n                        </FormGroup>\n                        <FormGroup label=\"Pemutihan\">\n                            <select name=\"dropped\" className=\"form-control-sm\" value={fieldsFilter['dropped']?? ''} onChange={this.updateFieldsFilter}>\n                                <option value=\"\">Semua</option>\n                                <option value=\"false\">Belum</option>\n                                <option value=\"true\">Sudah</option>\n                            </select>\n                        </FormGroup>\n                        <FormGroup label=\"Lokasi\">\n                            <input name=\"location\" placeholder=\"Lokasi\" className=\"form-control-sm\" value={fieldsFilter['location']??\"\"} onChange={this.updateFieldsFilter} />\n                        </FormGroup>\n                        <FormGroup label=\"Jumlah Tampilan\">\n                            <input type=\"number\" name=\"limit\" className=\"form-control-sm\" value={filter.limit ?? 5} onChange={this.updateFilter} />\n                        </FormGroup>\n                        <FormGroup label=\"\">\n                            <a className=\"btn btn-dark btn-sm\" onClick={this.hideFilterDetail}>Tutup</a>\n                            <input className=\"ml-3 btn btn-primary btn-sm\" type=\"submit\" value=\"Cari\" />\n                        </FormGroup>\n                    </div>\n                    <FormGroup label=\"\">\n                        <a className=\"btn btn-dark btn-sm\" onClick={this.hideFilterDetail}>Tutup Detail Filter</a>\n                    </FormGroup>\n                    </>\n                    :<FormGroup label=\"\">\n                        <a className=\"btn btn-dark btn-sm\" onClick={this.showFilterDetail}>Tampil Detail Filter</a>\n                    </FormGroup> }\n                    <FormGroup label=\"Periode\">\n                        {filter.day} {MONTHS[(filter.month ?? 1) - 1]} {filter.year} - {filter.dayTo} {MONTHS[(filter.monthTo ?? 1) - 1]} {filter.yearTo}\n                    </FormGroup>\n                    <FormGroup>\n                        <input className=\"btn btn-primary btn-sm\" type=\"submit\" value=\"Submit\" />\n                        <a className=\"btn btn-secondary btn-sm ml-2\" onClick={this.resetFilter}>Reset</a>\n                        <a onClick={this.dropAll} className=\"ml-2 btn btn-info btn-sm\" >Putihkan Semua</a>\n                        <a onClick={this.undropAll} className=\"ml-2 btn btn-warning btn-sm\" >Reset Pemutihan Semua</a>\n                    </FormGroup>\n                </form>\n                <NavigationButtons activePage={filter.page ?? 0} limit={filter.limit ?? 10} totalData={this.state.totalData}\n                    onClick={this.loadAtPage} />\n                <ItemsList isAdmin={this.isAdmin()} startingNumber={(filter.page ?? 0) * (filter.limit ?? 10)}  \n                    recordLoadedForDetail={this.showDetail}\n                    recordLoadedForEdit={this.openEditPage}\n                    recordUpdated={this.loadItems} followUp={this.followUp}\n                    items={this.state.items} />\n            </div>\n        )\n    }\n}\ninterface ItemProps { \n    isAdmin:boolean,  startingNumber: number, \n    items: PointRecord[], recordLoadedForDetail(p: PointRecord):any,\n    recordLoadedForEdit(p: PointRecord):any, recordUpdated():any, followUp(p:PointRecord):any\n}\nconst ItemsList = (props: ItemProps) => {\n\n    return (\n        <div style={{ overflow: 'scroll' }}>\n            <table className=\"table \">\n                {tableHeader(\"No\", \"Siswa\", \"Kelas\", \"Tanggal\", \"Pelanggaran\", \"Poin\", \"Lokasi\", \"Gambar\", \"Pemutihan\", \"Opsi\")}\n                <tbody>\n                    {props.items.map((item, i) => {\n                            item = PointRecord.clone(item);\n                            const student = item.student;\n                            const optionTypes = props.isAdmin?\n                                                    ['detail', 'delete'] :\n                                                    [ (item.dropped_at?null:'edit'),'detail'];\n                            return (\n                                <tr key={\"PointRecord-\" + i}  className={item.dropped_at?\"alert alert-success\":\"\" }>\n                                    <td>{i + 1 + props.startingNumber}</td>\n                                    <td>{student?.user?.name}</td>\n                                    <td>{Class.studentClassString(student)}</td>\n                                    <td>{item.getTimestamp()}</td>\n                                    <td>{item.rule_point?.name} ({item.rule_point?.category?.name})</td>\n                                    <td>{item.rule_point?.point}</td>\n                                    <td>{item.location}</td>\n                                    <td>{item.getPicture() ?\n                                        <img src={item.getPicture() ?? \"\"} width={50} height={50} />: null}</td>\n                                    <td>{item.dropped_at ? <i className=\"fas fa-check\"/>  : \"-\"} </td>\n                                    <td>\n                                        <div style={{width:'max-content'}}>\n                                            {item.rule_point?.droppable == true ?\n                                            <><DropPointButtons record={item} onUpdated={props.recordUpdated} /><p/></>\n                                            :\n                                            <p><i>Tidak ada pemutihan</i></p>\n                                            }\n                                            {/* {props.isAdmin? <><DropPointButtons record={item} onUpdated={props.recordUpdated} /><p/></> : \n                                            <a className=\"btn btn-dark btn-sm\" onClick={()=>props.followUp(item)}>Follow Up</a>} */}\n                                            <EditDeleteButton record={item} \n                                                types={optionTypes}\n                                                recordLoadedForDetail={props.recordLoadedForDetail}\n                                                recordLoaded={props.recordLoadedForEdit} \n                                                modelName={'pointrecord'} />\n                                        </div>\n                                       \n                                    </td>\n                                </tr>\n                            )\n                        })}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(PointRecordSummary)\n)","import React, { FormEvent } from 'react'\nimport BaseComponent from '../../../BaseComponent';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\nimport Card from '../../../container/Card';\nimport FormGroup from '../../../form/FormGroup';\nimport Student from '../../../../models/Student';\nimport MasterDataService from '../../../../services/MasterDataService';\nimport WebRequest from '../../../../models/commons/WebRequest';\nimport WebResponse from '../../../../models/commons/WebResponse';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\nimport Class from '../../../../models/Class';\nclass State {\n    studentName?:string;\n    items:Student[] = [];\n    item?:Student;\n}\nclass StudentForm extends BaseComponent{\n\n    state:State = new State();\n    masterDataService:MasterDataService;\n    constructor(props) {\n        super(props, true);\n        this.masterDataService = this.getServices().masterDataService;\n    }\n\n    submit = (e:FormEvent) => {\n        e.preventDefault();\n        this.loadStudent();\n    }\n    itemsLoaded = (response: WebResponse) => {\n        this.setState({items: response.items});\n    }\n    loadStudent = () => {\n        const request:WebRequest = {\n            modelName:'student',\n            filter:{\n                limit: 15,\n                fieldsFilter: {  name:this.state.studentName  }\n            }\n        }\n        this.commonAjax(\n            this.masterDataService.list,\n            this.itemsLoaded,\n            this.showCommonErrorAlert,\n            request\n        )\n    }\n    setSelectedItem = (item:Student) => {\n        this.setState({item:item,  items:[], studentName:undefined}, ()=> {\n            if (this.props.setItem) {\n                this.props.setItem(item);\n            }\n        });\n    }\n    reset = () => {\n        this.setState({item:undefined, items:[], studentName:undefined}, () => {\n            if (this.props.setItem) {\n                this.props.setItem(undefined);\n            }\n        });\n    }\n    render() {\n        const items:Student[] = this.state.items;\n        const selectedItem:Student | undefined = this.state.item;\n        return (\n            <form onReset={this.reset} onSubmit={this.submit}>\n                <Card title=\"Select Student\">\n                    <FormGroup label=\"Search\">\n                        <input placeholder=\"Name\" value={this.state.studentName??\"\"} className=\"form-control\" onChange={this.handleInputChange} name=\"studentName\" />\n                        {items.length > 0?<div style={{position:'absolute', zIndex: 200}} className=\"container-fluid bg-light rounded-sm border border-dark\">\n                                {items.map(item=>{\n                                    return (\n                                        <div className=\"option-item\"onClick={()=>{\n                                            this.setSelectedItem(item);\n                                        }} style={{cursor: 'pointer'}} key={\"Student-\"+item.id} >{item.user?.name}</div>\n                                    )\n                                })}\n                                <a onClick={this.reset} className=\"option-item\"><i className=\"fas fa-times\"/>&nbsp;close</a>\n                            </div>:null}\n                    </FormGroup>\n                    {selectedItem?\n                    <ItemDetail item={selectedItem} />\n                    :null}\n                    <hr/>\n                    <div className=\"btn-group float-right\">\n                        <input type=\"submit\" className=\"btn btn-dark\" value=\"Search\" />\n                        <input type=\"reset\" className=\"btn btn-secondary\" value=\"Reset\" />\n                        <AnchorWithIcon to={\"/asrama/studentlist\"} iconClassName=\"fas fa-list\">Student List</AnchorWithIcon>\n                    </div>\n                </Card>\n            </form>\n        )\n    }\n}\n\nconst ItemDetail = (props:{item:Student}) => {\n\n    return (\n        <>\n            <FormGroup label=\"Name\">{props.item.user?.name}</FormGroup>\n            <FormGroup label=\"Kelas\">{Class.studentClassString(props.item)}</FormGroup>\n            \n        </>\n    )\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(StudentForm)\n)","\nimport BaseEntity from './BaseEntity';\nimport Student from './Student';\nexport default class MedicalRecord extends BaseEntity {\n      day: number = new Date().getDate();\n      month: number = new Date().getMonth();\n      year: number = new Date().getFullYear();\n      temperature_morning?: number;\n      temperature_afternoon?: number;\n      breakfast?: boolean;\n      lunch?: boolean;\n      dinner?: boolean;\n      medicine_consumption: boolean = false;\n      genose_test?: boolean;\n      antigen_test?: boolean;\n      pcr_test?: boolean;\n      description?: string\n      student_id;\n      student?: Student;\n\n      public static clone = (obj:MedicalRecord) : MedicalRecord => {\n            return Object.assign(new MedicalRecord(), obj);\n      }\n      public static instance = (student_id:string, d: number, m: number, y: number): MedicalRecord => {\n            const obj = new MedicalRecord();\n            obj.day = d;\n            obj.month = m;\n            obj.year = y;\n            obj.student_id = student_id;\n            return obj;\n      }\n}","import React, { ChangeEvent, Component, FormEvent } from 'react'\nimport BaseComponent from '../../../BaseComponent';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\nimport MedicalRecord from '../../../../models/MedicalRecord';\nimport StudentService from '../../../../services/StudentService';\nimport WebResponse from '../../../../models/commons/WebResponse';\nimport { twoDigits, monthName } from '../../../../utils/StringUtil';\n\nclass State {\n    record: MedicalRecord = new MedicalRecord();\n}\nclass MedicalRecordDailyInput extends BaseComponent {\n    state: State = new State();\n    studentService: StudentService;\n    constructor(props) {\n        super(props, true);\n        this.studentService = this.getServices().studentService;\n        this.state.record = MedicalRecord.instance(props.student.id, props.day, props.month, props.year);\n    }\n    reset = () => {\n        const props = this.props;\n        this.setState({ record: MedicalRecord.instance(props.student.id, props.day, props.month, props.year) });\n    }\n    setRecord = (record: MedicalRecord) => {\n        this.setState({ record: MedicalRecord.clone(record) });\n    }\n\n    onChange = (e: ChangeEvent) => {\n        const record = this.state.record;\n        const target = e.target as HTMLInputElement;\n        record[target.name] = target.type == 'checkbox' ? target.checked : target.value;\n        this.setState({ record: MedicalRecord.clone(record) });\n    }\n\n    recordSubmitted = (response: WebResponse) => {\n        this.showInfo(\"Data has been submitted\");\n    }\n\n    onSubmit = (e: FormEvent) => {\n        e.preventDefault();\n        const record: MedicalRecord = this.state.record;\n        record.student_id = this.props.student.id;\n        this.commonAjax(\n            this.studentService.submitMedicalRecord,\n            this.recordSubmitted,\n            this.showCommonErrorAlert,\n            record\n        )\n    }\n\n    render() {\n        const record = this.state.record;\n        const period = twoDigits(record.day) + \" \" + monthName(record.month - 1);\n        return (\n            <form onSubmit={this.onSubmit}>\n                <table className=\"table table-bordered table-striped\" style={{ fontSize: '0.8em' }}>\n                    <tbody>\n                        <SingleRow><h5 className='text-center'> {period}</h5></SingleRow>\n                        <SingleRow>\n                            <input type='number' onChange={this.onChange} placeholder=\"Suhu Pagi\" className=\"form-control\" name=\"temperature_morning\" value={record.temperature_morning ?? \"\"} />\n                        </SingleRow>\n                        <SingleRow>\n                            <input type='number' onChange={this.onChange} placeholder=\"Suhu Sore\" className=\"form-control\" name=\"temperature_afternoon\" value={record.temperature_afternoon ?? \"\"} />\n                        </SingleRow>\n                        <SingleRow>\n                            <Checkbox label=\"Sarapan\" onChange={this.onChange} name=\"breakfast\" checked={record.breakfast ?? false} />\n                        </SingleRow>\n                        <SingleRow>\n                            <Checkbox label=\"Makan Siang\" onChange={this.onChange} name=\"lunch\" checked={record.lunch ?? false} />\n                        </SingleRow>\n                        <SingleRow>\n                            <Checkbox label=\"Makan Malam\" onChange={this.onChange} name=\"dinner\" checked={record.dinner ?? false} />\n                        </SingleRow>\n                        <SingleRow>\n                            <Checkbox label=\"Konsumsi Obat\" onChange={this.onChange} name=\"medicine_consumption\" checked={record.medicine_consumption ?? false} />\n                        </SingleRow>\n                        <SingleRow>\n                            <Checkbox label=\"Tes Genose\" onChange={this.onChange} name=\"genose_test\" checked={record.genose_test ?? false} />\n                        </SingleRow>\n                        <SingleRow>\n                            <Checkbox label=\"Tes Antigen\" onChange={this.onChange} name=\"antigen_test\" checked={record.antigen_test ?? false} />\n                        </SingleRow>\n                        <SingleRow>\n                            <Checkbox label=\"Tes PCR\" onChange={this.onChange} name=\"pcr_test\" checked={record.pcr_test ?? false} />\n                        </SingleRow>\n                        <SingleRow>\n                            <textarea placeholder=\"Catatan\" onChange={this.onChange} style={{ fontSize: '0.9em' }} name=\"description\" value={record.description ?? \"\"}\n                                className=\"form-control\" rows={3} />\n                        </SingleRow>\n                        <SingleRow>\n                            <button className=\"btn btn-success\" type=\"submit\">\n                                <i className=\"fas fa-save\" /> {period}\n                            </button>\n                        </SingleRow>\n                    </tbody>\n                </table>\n            </form>\n        )\n    }\n}\n\nconst Checkbox = (props: { onChange(e: ChangeEvent): any, label: string, name: string, checked: boolean }) => {\n\n    return (\n        <>{props.label}\n            <input type=\"checkbox\" style={{ marginRight: 5 }} className=\"form-control\"\n                onChange={props.onChange}\n                name={props.name}\n                checked={props.checked} />\n        </>\n    )\n}\nconst SingleRow = (props: { children: any }) => {\n    return (\n        <tr><td>\n            <div className=\"text-center\" style={{ minHeight: 40 }}>{props.children}</div></td></tr>\n    )\n}\n\nexport default\n    connect(\n        mapCommonUserStateToProps, null, null, { forwardRef: true }\n    )(MedicalRecordDailyInput)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\nimport StudentForm from './StudentForm';\nimport Student from '../../../../models/Student';\nimport FilterPeriod from '../../../form/FilterPeriod';\nimport Filter from '../../../../models/commons/Filter';\nimport { getMonthDays } from '../../../../utils/DateUtil';\nimport Card from '../../../container/Card';\nimport MedicalRecord from '../../../../models/MedicalRecord';\nimport MedicalRecordDailyInput from './MedicalRecordDailyInput';\nimport StudentService from '../../../../services/StudentService';\nimport WebResponse from '../../../../models/commons/WebResponse';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\nimport { doItLater } from '../../../../utils/EventUtil';\nimport BasePage from '../../BasePage';\nimport SimpleError from '../../../alert/SimpleError';\nclass State {\n    student?: Student;\n    month: number = new Date().getMonth() + 1;\n    year: number = new Date().getFullYear();\n    mappedItems: Map<number, MedicalRecord> = new Map()\n}\nclass MedicalRecordForm extends BasePage {\n    state: State = new State();\n    studentService: StudentService;\n    inputRefs: Map<number, any> = new Map();\n    constructor(props) {\n        super(props, \"Medical Record\", true);\n        this.studentService = this.getServices().studentService;\n    }\n    setStudent = (student: Student | undefined) => {\n        if (student) {\n            student = Object.assign(new Student(), student);\n        }\n        this.setState({ student: student }, this.loadMonthlyRecord);\n    }\n    validateStudentData = () => {\n        const student = this.props.location.state?this.props.location.state.student : undefined;\n        if (student) {\n            this.setStudent(student);\n        }\n    }\n    \n    reset = () => {\n        doItLater(() => {\n            if (this.state.student)\n            this.inputRefs.forEach((ref: any, day: number) => {\n                if (ref) { ref.reset(); }\n            })\n        }, 100);\n    }\n    recordsLoaded = (response: WebResponse) => {\n\n        const mappedItems:Map<String, MedicalRecord> = this.toMap(response.items);\n        \n        this.setState({ mappedItems: mappedItems }, () => {\n            doItLater(() => {\n                this.inputRefs.forEach((ref: any, day: number) => {\n                    let record = mappedItems.get(day.toString());\n                    if (!record) {\n                        record = MedicalRecord.instance(this.state.student?.id, day, this.state.month, this.state.year);\n                    } else {\n                        record = MedicalRecord.clone(record);\n                    }\n                    if (ref) {\n                        ref.setRecord(record);\n                    }\n                })\n            }, 100);\n        });\n    }\n\n\n    toMap = (items: MedicalRecord[]): Map<String, MedicalRecord> => {\n        const map: Map<String, MedicalRecord> = new Map();\n        for (let i = 0; i < items.length; i++) {\n            const item = items[i];\n            map.set(item.day.toString(), item);\n        }\n        return map;\n    }\n\n    loadMonthlyRecord = () => {\n        this.commonAjax(\n            this.studentService.loadMonthlyMedicalRecord,\n            this.recordsLoaded, this.showCommonErrorAlert,\n            this.state.student?.id, this.state.month, this.state.year\n        )\n    }\n\n    getFilter = (): Filter => {\n        const f = new Filter();\n        f.month = this.state.month;\n        f.year = this.state.year;\n        return f;\n    }\n\n    componentDidMount() {\n        this.validateLoginStatus(()=>{\n            this.scrollTop();\n            this.validateStudentData();\n        });\n    }\n    dayCount = () => {\n        return getMonthDays(this.state.month, this.state.year);\n    }\n    render() {\n        const student = this.state.student;\n        const filter = this.getFilter();\n        const dayCount = this.dayCount();\n        const days: number[] = [];\n        for (let i = 1; i <= dayCount; i++) {\n            days.push(i);\n        }\n        const gridTemplateColumns = ('150px ').repeat(dayCount);\n\n        return (\n            <div className=\"container-fluid section-body\">\n                <h2> {student ? student.user?.name: this.title}</h2> \n                <hr/>\n                <StudentForm setItem={this.setStudent} />\n                <p />\n                {student ?\n                    <Card>\n                        <div className=\"input-group\">\n                            <FilterPeriod filter={filter} hideDay onChange={this.handleInputChange} />\n                            <div className=\"input-group-append\">\n                            <AnchorWithIcon iconClassName=\"fas fa-redo\" onClick={this.loadMonthlyRecord}>Load Data</AnchorWithIcon>\n                            </div>\n                        </div>\n                        <hr/>\n                        <div className=\"container-fluid  row\"> \n                            <div className=\"col-12\" style={{ overflow: 'scroll' }}>\n                                <div style={{ display: 'grid', gridTemplateColumns: gridTemplateColumns }}>\n\n                                    {days.map(day =>\n                                        <MedicalRecordDailyInput key={\"record-input-\" + day} student={student}\n                                            ref={ref => {this.inputRefs.set(day, ref)}}\n                                            year={this.state.year}\n                                            month={this.state.month} day={day} />)}\n                                </div>\n                            </div>\n                        </div>\n                    </Card>\n                    : <Warning/>}\n            </div>\n        )\n    }\n\n}\n\n\nconst Warning = () => {\n    return (<SimpleError>\n                <i className=\"fas fa-exclamation-circle\" />&nbsp;Please select student <hr />\n                <AnchorWithIcon to={\"/asrama/studentlist\"} iconClassName=\"fas fa-list\">Student List</AnchorWithIcon>\n            </SimpleError> )\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(MedicalRecordForm)\n)","import React from 'react';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport Card from './../../container/Card';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport ApplicationProfile from './../../../models/ApplicationProfile';\r\nimport FormGroup from '../../form/FormGroup';\r\nclass AboutUs extends BaseComponent {\r\n    constructor(props) {\r\n        super(props, false);\r\n    }\r\n    componentDidMount() {\r\n        document.title = \"About Us\";\r\n    }\r\n    render() {\r\n        const appProfile:ApplicationProfile = this.getApplicationProfile();\r\n        return (<div className=\"section-body container-fluid\" style={{marginTop:'20px'}}>\r\n            <h2>About Us</h2>\r\n            <Card title=\"Application\">\r\n                <FormGroup label=\"Name\">{appProfile.name}</FormGroup>\r\n                <FormGroup  ><i>{appProfile.description}</i></FormGroup>\r\n                <FormGroup label=\"Contact\">{appProfile.contact}</FormGroup>\r\n                <FormGroup label=\"Address\">{appProfile.address}</FormGroup>\r\n            </Card>\r\n            <p/>\r\n            <Card title=\"Development Mode\">\r\n                {/* <FormGroup label=\"Repository\"><a target=\"_blank\" href=\"https://github.com/fajaralmu\">https://github.com/fajaralmu</a></FormGroup>\r\n                <FormGroup label=\"Front End\">React Js</FormGroup>\r\n                <FormGroup><a target=\"_blank\" href=\"https://github.com/fajaralmu/front-end-shopping-mart-v2\">https://github.com/fajaralmu/front-end-shopping-mart-v2</a></FormGroup>\r\n                <FormGroup label=\"Back End\">Java, Spring MVC</FormGroup>\r\n                <FormGroup><a target=\"_blank\" href=\"https://github.com/fajaralmu/universal-good-shop-v2\">https://github.com/fajaralmu/universal-good-shop-v2</a></FormGroup> */}\r\n            </Card>\r\n            <p/>\r\n        </div>);\r\n    }\r\n}\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps, \r\n)(AboutUs))","\r\n\r\nimport React, { FormEvent, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from '../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport './Login.css';\r\nimport Spinner from '../../loader/Spinner';\r\nimport UserService from './../../../services/UserService';\r\nimport UserModel from './../../../models/User';\r\nimport WebResponse from '../../../models/commons/WebResponse'; \r\nclass IState {\r\n    loading: boolean = false; displayName: string = \"\";\r\n    username: string = \"\";\r\n    editPassword: string = \"\";\r\n    editPasswordRepeat: string = \"\";\r\n}\r\nclass Register extends BaseComponent {\r\n    state: IState = new IState();\r\n    userService: UserService;\r\n    constructor(props: any) {\r\n        super(props, false);\r\n        this.userService = this.getServices().userService;\r\n    }\r\n    startLoading = () => this.setState({ loading: true });\r\n    endLoading = () => this.setState({ loading: false });\r\n    register(e: FormEvent) {\r\n        e.preventDefault();\r\n        if (this.fieldComplete()) {\r\n            if (this.passwordMatch() == false) {\r\n                this.showCommonErrorAlert(\"Password mismatch\");\r\n                return;\r\n            }\r\n            this.saveUser();\r\n        } else {\r\n            this.showCommonErrorAlert(\"Field is not complete\");\r\n        }\r\n    }\r\n    saveUser = () => {\r\n        const user = new UserModel();\r\n        user.password = this.state.editPassword.trim();\r\n        user.nickname = this.state.username.trim();\r\n        user.name = this.state.displayName.trim();\r\n        this.commonAjax(\r\n            this.userService.saveUser,\r\n            this.userSaved,\r\n            this.showCommonErrorAlert,\r\n            user\r\n        );\r\n    }\r\n    userSaved = (response: WebResponse) => {\r\n        this.showConfirmation(\"Success\")\r\n            .then((ok) => {\r\n                this.backToLogin();\r\n            })\r\n    }\r\n    passwordMatch = () => {\r\n        return this.state.editPassword.trim() != \"\" && this.state.editPassword.trim() == this.state.editPasswordRepeat.trim();\r\n    }\r\n    fieldComplete = () => {\r\n        return this.state.displayName.trim() != \"\"\r\n            && this.state.username.trim() != \"\"\r\n            && this.state.editPassword.trim() != \"\"\r\n            && this.state.editPasswordRepeat.trim() != \"\";\r\n    }\r\n    componentDidMount() {\r\n        document.title = \"Register\";\r\n        if (this.isUserLoggedIn()) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.isUserLoggedIn()) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"RegisterForm\" className=\"Register-wrapper\" style={{ margin: 0, padding: 0 }}>\r\n                <div className=\"text-center\" style={{ marginTop: '25px' }}>\r\n                    <h1>Register</h1>\r\n                </div>\r\n                <form name='Register' onSubmit={(e) => { this.register(e) }}\r\n                    method='POST' className=\"form-signin text-center\">\r\n                    <CommonField name=\"username\" value={this.state.username} onChange={this.handleInputChange} />\r\n                    <CommonField name=\"displayName\" value={this.state.displayName} onChange={this.handleInputChange} />\r\n\r\n                    <PasswordField name=\"editPassword\" value={this.state.editPassword} onChange={this.handleInputChange} />\r\n                    <PasswordField name=\"editPasswordRepeat\" value={this.state.editPasswordRepeat} onChange={this.handleInputChange} />\r\n\r\n                    {this.state.loading ? <Spinner /> :\r\n                        <button className=\"btn text-light\" style={{ backgroundColor: 'rgb(9,26,78)' }} type=\"submit\">\r\n                            Register\r\n                        </button>}\r\n                    <p />\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst PasswordField = ({ name, value, onChange }) => {\r\n    return <Fragment>\r\n        <label className=\"sr-only\">Password</label>\r\n        <input style={{ borderColor: 'rgb(9,26,78)' }} name={name} value={value} onChange={onChange} type=\"password\" id=\"inputPassword\" className=\"form-control\"\r\n            placeholder={name} required />\r\n        <p />\r\n    </Fragment>\r\n}\r\nconst CommonField = ({ name, value, onChange }) => {\r\n    return (<Fragment>\r\n        <label className=\"sr-only\">Username</label>\r\n        <input style={{ borderColor: 'rgb(9,26,78)' }} name={name} value={value} onChange={onChange} type=\"text\" id=\"username\" className=\"form-control\"\r\n            placeholder={name} required autoFocus />\r\n        <p />\r\n    </Fragment>)\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    //  performRegister: (username: string, password: string, app: any) => dispatch(performRegister(username, password, app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(Register))","import React, { FormEvent } from 'react'\nimport BaseComponent from './../../BaseComponent';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\nimport MasterDataService from './../../../services/MasterDataService';\nimport Student from './../../../models/Student';\nimport WebRequest from './../../../models/commons/WebRequest';\nimport Filter from '../../../models/commons/Filter';\nimport WebResponse from './../../../models/commons/WebResponse';\nimport AnchorWithIcon from './../../navigation/AnchorWithIcon';\nimport './style.css'\nimport Class from './../../../models/Class';\n\nclass State {\n    items:Student[] = [];\n    keyword:string = \"\";\n}\nclass StudentSearchForm extends BaseComponent\n{\n\n    state:State = new State();\n    private masterDataService:MasterDataService;\n    constructor(props) {\n        super(props, true);\n        this.masterDataService = this.getServices().masterDataService;\n    }\n    itemsLoaded = (response: WebResponse) => {\n        this.setState({items: response.items});\n    }\n    \n    loadItems = (e:FormEvent) => {\n        e.preventDefault();\n        if (\"\" == this.state.keyword) return;\n        const req:WebRequest = {\n            filter:new Filter(),\n            modelName:'student',\n        }\n        if (req.filter)\n            req.filter.fieldsFilter = {\n                'name':this.state.keyword\n            }\n        this.commonAjax(\n            this.masterDataService.list,\n            this.itemsLoaded,  this.showCommonErrorAlert,\n            req\n        )\n    }\n    select = (s:Student) => {\n        this.props.selectItem(s);\n        this.setState({items: [], keyword: \"\"});\n    }\n    reset = () => this.setState({items: []});\n\n    render() {\n\n        return (\n            <form id=\"form-search-student\" onSubmit={this.loadItems}>\n            <div className=\"mb-3\" style={{position:'absolute'}}>\n                <div className=\"input-group\">\n                    <input name=\"keyword\" className=\"form-control\" onChange={this.handleInputChange} value={this.state.keyword}\n                        placeholder=\"Cari Nama\" />\n                    <input type=\"submit\" value=\"Cari\" className=\"btn btn-secondary\" />\n                </div>\n                {this.state.items.length > 0?\n                <div className=\"bg-light border rounded border-secondary\" style={{position:'relative', zIndex: 10, padding: 3}}>\n                    {this.state.items.map(s=>{\n                        return (\n                            <div onClick={()=> this.select(s)} className=\"option-item\" key={`s_form_${s.id}`}>\n                                {s.user?.name} {Class.studentClassString(s)}\n                            </div>\n                        )\n                    })}\n                    <AnchorWithIcon iconClassName=\"fas fa-times\" className=\"btn btn-dark w-100\" onClick={this.reset} >Tutup</AnchorWithIcon>\n                </div>\n                :null}\n            </div>\n            </form>\n        )\n    }\n\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(StudentSearchForm)\n)","import React, { ChangeEvent, FormEvent } from 'react'\nimport BasePage from '../../BasePage';\nimport { withRouter, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\nimport PointRecord from '../../../../models/PointRecord';\nimport FormGroup from '../../../form/FormGroup';\nimport Class from '../../../../models/Class';\nimport StudentService from '../../../../services/StudentService';\nimport WebResponse from '../../../../models/commons/WebResponse';\nimport Category from '../../../../models/Category';\nimport WebRequest from '../../../../models/commons/WebRequest';\nimport RulePoint from '../../../../models/RulePoint';\nimport MasterDataService from '../../../../services/MasterDataService';\nimport InputTime from '../../../form/InputTime';\nimport { parseDate } from '../../../../utils/DateUtil';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\nimport AttachmentInfo from '../../../../models/settings/AttachmentInfo';\nimport { getAttachmentInfoFromFile } from '../../../../utils/ComponentUtil';\nimport Student from '../../../../models/Student'; \nimport StudentSearchForm from '../../shared/StudentSearchForm';\n\nclass State {\n    record : PointRecord  = new PointRecord();\n    categories:Category[] = [];\n    pointsMap:Record<string, RulePoint[]> = {}; \n\n    selectedCategoryId:string = \"\";\n    selectedPointId:string = \"\";\n\n    attachment:AttachmentInfo|undefined;\n}\nclass PointRecordEdit extends BasePage{\n    \n    state:State = new State();\n    studentService:StudentService;\n    masterDataService:MasterDataService;\n    inputTimeRef:React.RefObject<InputTime> = React.createRef();\n    constructor(props) {\n        super(props, \"Edit Pelanggaran\", true);\n        this.studentService = this.getServices().studentService;\n        this.masterDataService = this.getServices().masterDataService;\n    }\n\n    componentReady() {\n        this.checkPassedData();\n        this.loadCategories();\n    }\n\n    categoriesLoaded = (response: WebResponse) => {\n        this.setState({categories: response.items});\n    }\n    \n    loadCategories = () => {\n        this.commonAjax(\n            this.studentService.getCategories,\n            this.categoriesLoaded,  this.showCommonErrorAlert\n        )\n    }\n     \n    rulePointsLoaded = (categoryId:string, response:WebResponse) => {\n        const pointsMap = this.state.pointsMap;\n        pointsMap[categoryId.toString()] = response.items;\n        this.setState({pointsMap: pointsMap});\n    }\n    loadRulePoints = (catId:string) => { \n        if (catId === \"\" || this.state.pointsMap[catId] != undefined) {\n            return;\n        }\n        const req: WebRequest = {\n            filter: {limit:0, fieldsFilter:{category_id: catId}},\n            modelName: 'rulepoint',\n        }\n        this.commonAjax(\n            this.masterDataService.list,\n            (resp) => this.rulePointsLoaded(catId, resp),\n            this.showCommonErrorAlert,\n            req\n        )\n    }\n\n    checkPassedData = () => {\n        if (this.props.location &&  this.props.location.state) { \n            this.setState({\n                record: PointRecord.clone(this.props.location.state.record),\n                attachment: this.props.location.state.attachment\n             }, this.updateInput);\n        }\n    }\n    updateInput = () => {\n        /**\n         * time\n         */\n        if (this.inputTimeRef.current) {\n            this.inputTimeRef.current.updateFromProps();\n        }\n        /**\n         * etc\n         */\n    }\n\n    updateRecordField =(e:ChangeEvent) => {\n        const record = this.state.record;\n        const el = e.target as HTMLElement;\n        const name = el['name'];\n        const value = el['value']\n        record[name] =  value;\n        this.setState({record: record});\n    }\n    setSelectedRulePoint = (p:RulePoint) => {\n        const record = this.state.record;\n        record.rule_point = p;\n        record.point_id = p.id;\n        this.setState({record: record});\n    }\n\n    updateTime = (h: number, m: number, s: number) => {\n        const record = this.state.record;\n        record.setTime(h, m, s);\n        this.setState({ record: record });\n    }\n    updateDate = (e: ChangeEvent) => {\n        const date: Date = parseDate((e.target as HTMLInputElement).value);\n        const record = this.state.record;\n        record.setDate(date);\n        this.setState({ pointRecord: record });\n    }\n    submit = () => {\n        this.commonAjax(\n            this.studentService.submitPointRecord,\n            this.recordSubmitted,\n            this.showCommonErrorAlert,\n            this.state.record, this.state.attachment\n        )\n    }\n    recordSubmitted = (r:WebResponse) => {\n        this.setState({record : new PointRecord(), attachment: undefined, selectedCategoryId: \"\"}, ()=> {\n            this.showInfo(\"Data berhasil disimpan\");\n            this.scrollTop();\n        })\n    }\n\n    validateInput = () => {\n        const rec = this.state.record;\n        return ( rec.student_id && rec.point_id  )\n    }\n\n    onSubmit = (e:FormEvent) => {\n        e.preventDefault();\n        if (!this.validateInput()) {\n            this.showError(\"Input tidak lengkap\");\n            return;\n        }\n        this.showConfirmation(\"Simpan data?\")\n        .then(ok=>{\n            if (ok) {  this.submit();  }\n        })\n    }\n    removeImage = () => {\n        this.showConfirmationDanger(\"Hapus gambar?\")\n        .then(ok=>{\n            if (ok) {\n                const record = this.state.record;\n                record.pictures = [];\n                this.setState({record: record, attachment: undefined});\n            }\n        })\n    }\n    updatePicture = (e:ChangeEvent) => {\n        getAttachmentInfoFromFile(e.target as HTMLInputElement)\n        .then(attachment=>{ \n            this.setState({attachment:attachment});\n        }).catch(console.error)\n    }\n    setStudent = (s:Student) => {\n        const record = this.state.record;\n        record.student = s;\n        record.student_id = s.id;\n        this.setState({record: record, });\n    }\n\n    updateCategory = (e:ChangeEvent) => {\n        this.handleInputChange(e);\n        this.loadRulePoints((e.target as HTMLSelectElement).value);\n    }\n\n    updateRulePoint = (e:ChangeEvent) => {\n        const catId =  this.state.selectedCategoryId;\n        const p = this.state.pointsMap[catId].filter((r:RulePoint)=>{\n            return r.id.toString() == (e.target as HTMLSelectElement).value;\n        })\n        if (p.length == 0) return;\n        this.setSelectedRulePoint(p[0]);\n    }\n    \n    render() {\n\n        const record = this.state.record;\n        const categoryID = this.state.selectedCategoryId;\n        const pointsMap = this.state.pointsMap;\n        const pictureUrl = this.state.attachment?this.state.attachment.url : record.getPicture();\n\n        return (\n            <div className=\"section-body container-fluid\">\n                <h2>Form Input Pelanggaran</h2>\n                <hr/>\n                <FormGroup  label=\"Siswa\" >\n                    <StudentSearchForm selectItem={this.setStudent} />\n                </FormGroup>\n                {record.student? <FormGroup>\n                    <div  >{record.student.user?.name ?? \"\"} {Class.studentClassString(record.student)}\n                    </div> \n                </FormGroup>\n                : null}\n                 \n                <form onSubmit={this.onSubmit}>\n                    <FormGroup label=\"Pelanggaran\">\n                        <p>{record.rule_point?.name??\"-\"} {record.rule_point? `(${record.rule_point.point})` :\"\"}</p>\n                        <p/>\n                        <select value={categoryID} name=\"selectedCategoryId\" onChange={this.updateCategory} className=\"form-control\">\n                             <option value=\"\">Pilih Kategori</option>\n                             {this.state.categories.map((cat:Category)=>{\n                                 return (\n                                    <option key={`cat_ed_opt_${cat.id}`} value={cat.id}>\n                                        {cat.name}\n                                    </option>\n                                 )\n                             })}\n                         </select>\n                         <p/>\n                         <select className=\"form-control\" onChange={this.updateRulePoint} >\n                             <option value=\"\">Pilih Pelanggaran</option>\n                             {pointsMap[categoryID]?\n                                pointsMap[categoryID].map(p=>{\n                                 return (\n                                    <option  key={`rp_ed_opt_${p.id}`} value={p.id}>\n                                        {p.name} ({p.point})\n                                    </option>\n                                 )\n                             }) : null}\n                         </select>\n                    </FormGroup>\n                    <FormGroup label=\"Tanggal\">\n                        <input type=\"date\" className=\"form-control\" onChange={this.updateDate} name=\"date\" value={record.dateString()} />\n                    </FormGroup>\n                    <FormGroup label=\"Waktu\">\n                        <InputTime ref={this.inputTimeRef} onChange={this.updateTime} value={record.time} />\n                    </FormGroup>\n                    <FormGroup label=\"Lokasi\">\n                        <input type=\"text\" name=\"location\" onChange={this.updateRecordField} className=\"form-control\" value={record.location??\"\"} />\n                    </FormGroup>\n                    <FormGroup label=\"Deskripsi\">\n                        <textarea className=\"form-control\" name=\"description\" onChange={this.updateRecordField} value={record.description??\"\"} />\n                    </FormGroup>\n                    <FormGroup label=\"Gambar\">\n                        {pictureUrl?\n                            <>\n                                <img src={pictureUrl} width={200} height={200} className=\"border border-dark\" />\n                                <p/> \n                                <AnchorWithIcon className=\"btn btn-danger btn-sm\"  onClick={this.removeImage} iconClassName=\"fas fa-times\"  >Hapus Gambar</AnchorWithIcon>\n                            </>:\n                            <div>\n                                <input onChange={this.updatePicture} type=\"file\" accept=\"image/*\" className=\"form-control\" />\n                            </div>\n                        }\n                    </FormGroup>\n                    <FormGroup>\n                        <Link className=\"btn btn-dark\" to=\"/asrama/pointsummary\">Kembali</Link>\n                        <input type=\"submit\" className=\"btn btn-primary ml-3\" value=\"Submit\" />\n                    </FormGroup>\n                    {/* <FormGroup label=\"Siswa\">\n                        <input type=\"text\" className=\"form-control\" value={record.student?.user?.name} />\n                    </FormGroup> */}\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    \n)(PointRecordEdit))\n","import React from 'react' \nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from './../../../../constant/stores';\nimport BasePage from './../../BasePage';\nimport StudentService from './../../../../services/StudentService';\nimport Student from './../../../../models/Student';\nimport { tableHeader } from './../../../../utils/CollectionUtil';\nimport WebResponse from './../../../../models/commons/WebResponse';\nimport Class from './../../../../models/Class';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\ninterface FollowUpInfo {\n    student:Student,\n    TOTAL_POINT:any,\n    FOLLOW_UP_COUNT:number,\n}\nclass State {\n    followUpInfos:FollowUpInfo[] = [];\n}\nclass FollowUpReminder extends BasePage\n{\n    state:State = new State();\n    private studentService:StudentService;\n    constructor(props) {\n        super(props, \"Follow Up Pelanggaran\",true);\n        this.studentService = this.getServices().studentService;\n    }\n    componentReady(){\n        // if (this.isAdmin()) return;\n        this.loadReminder();\n    }\n    loadReminder = () => {\n        this.commonAjax(\n            this.studentService.getFollowUpReminders,\n            this.recordsLoaded,\n            console.error\n        )\n    }\n    recordsLoaded = (r:WebResponse) => {\n        this.setState({followUpInfos:r.items});\n    }\n\n    render(){\n\n        return (\n            <div className=\"section-body container-fluid\">\n                <h2>Follow Up Pelanggaran</h2>\n                <p>Pelanggaran dengan poin di bawah {this.getApplicationProfile().warning_point}</p>\n                <AnchorWithIcon iconClassName=\"fas fa-redo\" onClick={this.loadReminder} children=\"Reload\"/>\n                <table className=\"table\">\n                    {tableHeader(\"No\", \"Siswa\", \"Kelas\", \"Poin\", \"Penanganan\", \"Opsi\")}\n                    <tbody>\n                        {this.state.followUpInfos.map((info, i)=>{\n                            return (\n                                <tr key={`f-i-${i}`}>\n                                    <td>{i+1}</td>\n                                    <td>{info.student.user?.name}</td>\n                                    <td>{Class.studentClassString(info.student)}</td>\n                                    <td>{info.TOTAL_POINT}</td>\n                                    <td>{info.FOLLOW_UP_COUNT}</td>\n                                    <td>\n                                        <a className=\"btn btn-info btn-sm\" >\n                                            Follow Up\n                                        </a>\n                                    </td>\n                                </tr>\n                            )\n                        })}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(FollowUpReminder)\n)","\nimport BaseEntity from './BaseEntity';\nimport Student from './Student';\nexport default class WarningAction extends BaseEntity\n{\n    name:string = \"SP1\";\n    description:string|undefined;\n    student:Student|undefined;\n    student_id:string| undefined;\n    \n}","import React, { ChangeEvent } from 'react'\nimport BaseManagementPage from './BaseManagementPage';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\nimport WarningAction from '../../../models/WarningAction';\nimport Filter from './../../../models/commons/Filter';\nimport WebRequest from './../../../models/commons/WebRequest';\nimport FormGroup from './../../form/FormGroup';\nimport NavigationButtons from './../../navigation/NavigationButtons';\nimport { tableHeader } from './../../../utils/CollectionUtil';\nimport EditDeleteButton from './EditDeleteButton';\nimport Class from './../../../models/Class';\nimport Modal from './../../container/Modal';\nimport StudentSearchForm from '../shared/StudentSearchForm';\nimport Student from './../../../models/Student';\nimport BaseEntity from './../../../models/BaseEntity';\nclass State {\n    items: WarningAction[] = [];\n    filter: Filter = new Filter();\n    totalData: number = 0;\n    record: WarningAction = new WarningAction();\n\n}\nclass WarningActionManagement extends BaseManagementPage {\n\n    state:State = new State();\n    constructor(props) {\n        super(props, 'warningaction');\n    }\n    setStudent = (s:Student) => {\n        const record = this.state.record;\n        record.student = s;\n        record.student_id = s.id;\n        this.setState({record: record});\n    }\n    emptyRecord = (): BaseEntity => {\n        return new WarningAction();\n    }\n    onSubmit = () => {\n        if (!this.state.record.student_id) {\n            this.showError(\"Input tidak lengkap\");\n            return;\n        }\n        this.showConfirmation(\"Submit Data?\")\n            .then(ok => {\n                if (!ok) return;\n                this.callApiSubmit({\n                    warningAction: this.state.record,\n                    modelName: this.modelName\n                });\n            })\n    }\n    render() {\n        const filter: Filter = this.state.filter;\n        return (\n            <div className=\"container-fluid section-body\">\n                <h2>Daftar Peringatan</h2>\n                <hr />\n                {this.isAdmin()?\n                <RecordForm formRef={this.formRef} setStudent={this.setStudent} resetForm={this.resetForm} onSubmit={this.onSubmit} record={this.state.record} updateRecordProp={this.updateRecordProp} />\n                :null}\n                <form onSubmit={this.reload}>\n                    <FormGroup label=\"Cari\">\n                        <select name=\"name\"   className=\"form-control-sm\" value={filter.fieldsFilter['name']?? \"\"} onChange={this.updateFieldsFilter}>\n                            <option value=\"\">Semua</option>\n                            <option>SP1</option>\n                            <option>SP2</option>\n                            <option>SP3</option>\n                        </select>\n                        <input name=\"student_name\" placeholder=\"nama siswa\" className=\"form-control-sm\" value={filter.fieldsFilter['student_name']?? \"\"} onChange={this.updateFieldsFilter} />\n                    </FormGroup>\n                    <FormGroup label=\"Jumlah Tampilan\">\n                        <input name=\"limit\" type=\"number\" className=\"form-control-sm\" value={filter.limit ?? 5} onChange={this.updateFilter} />\n                    </FormGroup>\n                    <FormGroup>\n                        <input className=\"btn btn-primary btn-sm\" type=\"submit\" value=\"Submit\" />\n                    </FormGroup>\n                </form>\n                <NavigationButtons activePage={filter.page ?? 0} limit={filter.limit ?? 10} totalData={this.state.totalData}\n                    onClick={this.loadAtPage} />\n                <ItemsList  items={this.state.items}  isAdmin={this.isAdmin()}\n                    recordLoaded={this.oneRecordLoaded} recordDeleted={this.loadItems}\n                    startingNumber={(filter.page??0)*(filter.limit ?? 10)} />\n            </div>\n        )\n    }\n\n}\ninterface ItemProps {isAdmin:boolean ,startingNumber:number, items:WarningAction[], recordLoaded(item:any), recordDeleted()}\nconst ItemsList = (props: ItemProps) => {\n\n    return (\n        <div style={{overflow:'scroll'}}>\n        <table className=\"table table-striped\">\n            {tableHeader(\"No\", \"Siswa\", \"Kelas\", \"Nama\", \"Deskripsi\", \"Tgl Simpan\", \"Opsi\")}\n            <tbody>\n                    {props.items.map((item:WarningAction, i)=>{\n\n                        return (\n                            <tr key={\"category-\"+i}>\n                                <td>{i+1+props.startingNumber}</td>\n                                <td>{item.student?.user?.name}</td>\n                                <td>{Class.studentClassString(item.student)}</td>\n                                <td>{item.name}</td>\n                                <td>{item.description}</td>\n                                <td>{item.created_at}</td>\n                                <td>{props.isAdmin?\n                                    <EditDeleteButton \n                                        recordLoaded={props.recordLoaded}\n                                        recordDeleted={props.recordDeleted}\n                                        record={item} modelName={'warningaction'}/>:null}\n                                </td>\n                            </tr>\n                        )\n                    })}\n                </tbody>\n        </table>\n        </div>\n    )\n}\nconst RecordForm = (props: { formRef:React.RefObject<Modal>, setStudent(s:Student), updateRecordProp(e: ChangeEvent): any, resetForm():any, onSubmit(): any, record: WarningAction }) => {\n    const record = props.record;\n    return (\n        <div className=\"record-form mb-3\" >\n            <Modal show={false} ref={props.formRef} toggleable={true} title=\"Record Form\" >\n                <FormGroup label=\"Siswa\">\n                    <StudentSearchForm selectItem={props.setStudent} />\n                    \n                </FormGroup>\n                {record.student?\n                        <FormGroup children={record.student.user?.name+ \" \" +Class.studentClassString(record.student)} />:null\n                    }\n                <form onSubmit={(e) => { e.preventDefault(); props.onSubmit() }}>\n                <FormGroup label=\"Nama\">\n                    <select required value={record.name  } onChange={props.updateRecordProp} className=\"form-control\" name=\"name\" >\n                        <option>SP1</option>\n                        <option>SP2</option>\n                        <option>SP3</option>\n                    </select>\n                </FormGroup>\n                <FormGroup label=\"Deskripsi\">\n                    <textarea required className=\"form-control\" name=\"description\" onChange={props.updateRecordProp} value={record.description ?? \"\"} />\n                </FormGroup>\n                <FormGroup>\n                    <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-sm\" />\n                    &nbsp;\n                    <input type=\"reset\"   className=\"btn btn-secondary btn-sm\" onClick={(e)=>props.resetForm()} />\n                </FormGroup>\n                </form>\n            </Modal>\n        </div>\n    )\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(WarningActionManagement)\n)","import React, { FormEvent } from 'react'\nimport BasePage from './../BasePage';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\nimport ApplicationProfile from './../../../models/ApplicationProfile';\nimport FormGroup from '../../form/FormGroup';\nimport ConfigurationService from './../../../services/ConfigurationService';\nimport WebResponse from './../../../models/commons/WebResponse';\n\nclass State {\n    applicationProfile:ApplicationProfile = new ApplicationProfile();\n}\nclass ConfigSettingPage extends BasePage\n{\n    state:State = new State();\n    configService:ConfigurationService;\n    constructor(props) {\n        super(props, \"Konfigurasi\", true);\n        this.configService = this.getServices().configurationService;\n    }\n\n    componentReady() {\n        this.setState({\n            applicationProfile: Object.assign(new ApplicationProfile(), this.getApplicationProfile())\n        });\n    }\n\n    submit = (e:FormEvent) => {\n        e.preventDefault();\n        console.debug(this.state.applicationProfile)\n        this.commonAjax(\n            this.configService.update,\n            this.configUpdated,\n            this.showCommonErrorAlert,\n            this.state.applicationProfile\n        )\n    }\n    configUpdated = (response: WebResponse) => {\n        this.showInfo(\"Sukses, silakan muat ulang halaman\");\n    }\n\n    render() {\n        const profile = this.state.applicationProfile;\n        return (\n            <div className=\"container-fluid section-body\" >\n                <h2>Konfigurasi</h2>\n                <hr/>\n                <form style={{padding:5}} onSubmit={this.submit} className=\"border border-secondary rounded \">\n                    <FormGroup label=\"Nama Aplikasi\">\n                        <input name='name' onChange={(e)=>this.handleInputChange(e, 'applicationProfile')} className=\"form-control\" value={profile.name??\"\"} />\n                    </FormGroup>\n                    <FormGroup label=\"Deskripsi Aplikasi\">\n                        <input name='description' onChange={(e)=>this.handleInputChange(e, 'applicationProfile')} className=\"form-control\" value={profile.description??\"\"} />\n                    </FormGroup>\n                    <FormGroup label=\"Batas Poin Peringatan\">\n                        <input name='warning_point' onChange={(e)=>this.handleInputChange(e, 'applicationProfile')} className=\"form-control\" type=\"number\" value={profile.warning_point??-30} />\n                    </FormGroup>\n                    <FormGroup>\n                        <input type=\"submit\" value=\"Simpan\" className=\"btn btn-primary\" />\n                    </FormGroup>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(ConfigSettingPage)\n)","import React from 'react'\nimport BasePage from './../BasePage';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\nimport StudentService from './../../../services/StudentService';\nimport Class from './../../../models/Class';\nimport WebResponse from './../../../models/commons/WebResponse';\nimport FormGroup from '../../form/FormGroup';\nimport AttachmentInfo from './../../../models/settings/AttachmentInfo';\nimport { tableHeader } from './../../../utils/CollectionUtil';\n\nclass State {\n    classes:Class [] = [];\n    items:ReportItem[] = [];\n}\ninterface ReportItem {\n    name:string, class:string,\n    categories:CategoryResult[]\n}\ninterface CategoryResult {\n    name:string, total_point:number, predicate_letter:string, predicate_desc:string\n}\nclass StudentSemesterReport extends BasePage\n{\n    state:State = new State();\n    private studentService:StudentService;\n    selectClassRef:React.RefObject<HTMLSelectElement> = React.createRef();\n    constructor(props) {\n        super(props, \"Rapor Semester\", true);\n        this.studentService = this.getServices().studentService;\n    }\n\n    componentReady() {\n        this.commonAjax(\n            this.studentService.getClasses,\n            this.classesLoaded,\n            this.showCommonErrorAlert\n        );\n    }\n\n    loadRaporData = (e:any) => {\n        if (e && e.preventDefault) {\n            e.preventDefault();\n        }\n        if (!this.selectClassRef.current) {\n            return;\n        }\n        const classId = this.selectClassRef.current.value;\n        this.commonAjax(\n            this.studentService.getRaporData,\n            this.raporDataLoaded,\n            this.showCommonErrorAlert,\n            classId\n        )\n    }\n    downloadData = () => {\n        if (!this.selectClassRef.current) {\n            return;\n        }\n        const classId = this.selectClassRef.current.value;\n        this.commonAjax(\n            this.studentService.downloadRaporData,\n            this.reportCreated,\n            this.showCommonErrorAlert,\n            classId\n        )\n    }\n\n    reportCreated = (attachment: AttachmentInfo) => {\n        this.showConfirmation(\"Save File \" + attachment.name + \" ?\")\n            .then((ok) => {\n                if (!ok) return;\n                Object.assign(document.createElement('a'), {\n                    target: '_blank',\n                    download: attachment.name,\n                    style: { display: 'none' },\n                    href: attachment.url,\n                }).click();\n            })\n\n    }\n\n    classesLoaded = (response:WebResponse) => {\n        this.setState({classes: response.items});\n    }\n    raporDataLoaded = (response:WebResponse) => {\n        this.setState({items: response.items});\n    }\n    get reportHeader() {\n        const headers = ['No', 'Siswa', 'Kelas']\n        const items = this.state.items;\n        if (items.length == 0) return [];\n\n        items[0].categories.forEach((cat)=>{\n            headers.push(cat.name);\n            headers.push(\"Predikat\");\n            headers.push(\"Keterangan\");\n        });\n        return headers;\n    }\n    render() {\n        const classes = this.state.classes;\n\n        return (\n            <div className=\"container-fluid section-body\">\n                <h2>{this.title}</h2>\n                <form onSubmit={this.loadRaporData} className=\"mt-5\">\n                    <FormGroup label=\"Kelas\">\n                        <select ref={this.selectClassRef} className=\"form-control\">\n                            {classes.map((c:Class)=>{\n                                return <option key={`rapor_class_${c.id}`} value={c.id}>{c.level}{c.rombel} {c.sekolah?.nama}</option>\n                            })}\n                        </select>\n                    </FormGroup>\n                    <FormGroup>\n                        <input type=\"submit\" className=\"btn btn-success\" value=\"Load Data\" />\n                        <a className=\"btn btn-link ml-2\" onClick={this.downloadData} >Download Detail Data</a>\n                    </FormGroup>\n                </form>\n                {this.state.items.length == 0?\n                <div className=\"alert alert-warning\">Tidak ada data</div>:\n                <div className=\"mt-5 bg-white border border-secondary\" style={{overflow: 'scroll'}}>\n                    <table className=\"table table-striped\">\n                        {tableHeader(...this.reportHeader)}\n                        <tbody>\n                            {this.state.items.map((item:ReportItem, i:number) => {\n\n                                return (\n                                    <tr key={`r_i_${item.name}`} >\n                                        <td>{i+1}</td>\n                                        <td>{item.name}</td>\n                                        <td>{item.class}</td>\n                                        {item.categories.map((c:CategoryResult, ci:number)=>{\n                                            return (\n                                                <React.Fragment key={\"F\"+ci+i}>\n                                                    <td>{c.total_point}</td>\n                                                    <td children={c.predicate_letter}/>\n                                                    <td children={c.predicate_desc} />\n                                                </React.Fragment>\n                                            )\n                                        })}\n                                    </tr>\n                                )\n                            })}\n                        </tbody>\n                    </table>\n                </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(StudentSemesterReport)\n)","\nimport BaseEntity from './BaseEntity';\nimport Category from './Category';\nexport default class CategoryPredicate extends BaseEntity\n{\n    name:string | undefined;\n    description:string | undefined;\n    category:Category | undefined;\n    category_id: number | undefined;\n}","import React, { ChangeEvent } from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport RulePoint from '../../../models/RulePoint';\r\nimport Filter from '../../../models/commons/Filter';\r\nimport Modal from '../../container/Modal';\r\nimport FormGroup from '../../form/FormGroup';\r\nimport WebRequest from '../../../models/commons/WebRequest';\r\nimport NavigationButtons from '../../navigation/NavigationButtons';\r\nimport EditDeleteButton from './EditDeleteButton';\r\nimport { tableHeader } from '../../../utils/CollectionUtil';\r\nimport BaseManagementPage from './BaseManagementPage';\r\nimport Category from '../../../models/Category';\r\nimport WebResponse from '../../../models/commons/WebResponse';\r\nimport AnchorWithIcon from '../../navigation/AnchorWithIcon';\r\nimport CategoryPredicate from './../../../models/CategoryPredicate';\r\nclass State {\r\n    items: CategoryPredicate[] = [];\r\n    filter: Filter = new Filter();\r\n    totalData: number = 0;\r\n    record: CategoryPredicate = new CategoryPredicate();\r\n    categories: Category[] = [];\r\n    categoriesLoaded:boolean = false;\r\n\r\n}\r\nclass CategoryPredicateManagement extends BaseManagementPage\r\n{\r\n    state: State = new State();\r\n    \r\n    constructor(props) {\r\n        super(props, 'categorypredicate');\r\n        this.state.filter.limit = 10;\r\n    }\r\n\r\n    onSubmit = () => {\r\n        // console.debug(\"RECORD: \", this.state.record);\r\n        this.showConfirmation(\"Submit Data?\")\r\n            .then(ok => {\r\n                if (!ok) return;\r\n\r\n                const request: WebRequest = {\r\n                    categoryPredicate: this.state.record,\r\n                    modelName: this.modelName\r\n                }\r\n                this.callApiSubmit(request);\r\n            })\r\n    }\r\n    componentDidMount() {\r\n        this.validateLoginStatus(()=>{\r\n            this.scrollTop();\r\n            this.loadCategories();\r\n        });\r\n    }\r\n    categoriesLoaded = (response: WebResponse) => {\r\n        this.setState({categories:response.items, categoriesLoaded: true}, ()=>{ this.resetForm(); this.loadItems() });\r\n    }\r\n    categoriesNotLoaded = (response: WebResponse) => {\r\n        this.setState({categories: [], categoriesLoaded: true}, this.resetForm);\r\n    }\r\n    loadCategories = () => {\r\n        const filter:Filter = new Filter();\r\n        filter.limit = 0;\r\n        const req:WebRequest = {\r\n            filter: filter,\r\n            modelName: 'category'\r\n        }\r\n        this.commonAjax(\r\n            this.masterDataService.list,\r\n            this.categoriesLoaded,\r\n            this.categoriesNotLoaded,\r\n            req\r\n        )\r\n    }\r\n    \r\n    emptyRecord = ():any => {\r\n        const record = new CategoryPredicate();\r\n        if (this.state.categories.length > 0) {\r\n            record.category_id = this.state.categories[0].id;\r\n        }\r\n        return record;\r\n    }\r\n    \r\n    render() {\r\n        const filter: Filter = this.state.filter;\r\n        const categories: Category[] = this.state.categories;\r\n        if (this.state.categoriesLoaded && categories.length == 0) {\r\n            return (\r\n                <div className=\"container-fluid section-body\">\r\n                    <h2>Kategori belum ada</h2>\r\n                </div>\r\n            )\r\n        }\r\n        const selectedCategoryId = filter.fieldsFilter && filter.fieldsFilter['category_id'] ? filter.fieldsFilter['category_id'] : \"ALL\";\r\n        return (\r\n            <div className=\"container-fluid section-body\">\r\n                <h2>Predikat Rapor</h2>\r\n                <hr />\r\n                <RecordForm categories={categories} reloadCategories={this.loadCategories} formRef={this.formRef} resetForm={this.resetForm} onSubmit={this.onSubmit} \r\n                    record={this.state.record} updateRecordProp={this.updateRecordProp} />\r\n                <form onSubmit={this.reload}>\r\n                <FormGroup label=\"Cari\">\r\n                    <div className=\"input-group\">\r\n                        <input name=\"name\" placeholder=\"nama\" className=\"form-control-sm\" value={filter.fieldsFilter ? filter.fieldsFilter['name'] : \"\"} onChange={this.updateFieldsFilter} />\r\n                        <select value={selectedCategoryId} className=\"form-control-sm\" name=\"category_id\" onChange={this.updateFieldsFilter} >\r\n                            {[{id:\"\", name:\"Semua Kategori\"},...categories].map((c)=>{\r\n                                return <option key={\"filter-cat-\"+c.id} value={c.id}>{c.name}</option>\r\n                            })}\r\n                        </select>\r\n                        <div className=\"input-group-append\">\r\n                            <AnchorWithIcon className=\"btn btn-sm\" iconClassName=\"fas fa-redo\" onClick={this.loadCategories}>Reload</AnchorWithIcon>\r\n                        </div>\r\n                    </div>\r\n                </FormGroup>\r\n                    <FormGroup label=\"Jumlah Tampilan\">\r\n                        <input type=\"number\" name=\"limit\" className=\"form-control-sm\" value={filter.limit ?? 5} onChange={this.updateFilter} />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <input className=\"btn btn-primary btn-sm\" type=\"submit\" value=\"Submit\" />\r\n                    </FormGroup>\r\n                </form>\r\n                <NavigationButtons activePage={filter.page ?? 0} limit={filter.limit ?? 5} totalData={this.state.totalData}\r\n                    onClick={this.loadAtPage} />\r\n                <ItemsList \r\n                    recordLoaded={this.oneRecordLoaded}\r\n                    recordDeleted={this.loadItems}\r\n                    startingNumber={(filter.page??0)*(filter.limit??10)} items={this.state.items} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst ItemsList = (props: {startingNumber:number, items:CategoryPredicate[], recordLoaded(item:any), recordDeleted()}) => {\r\n\r\n    return (\r\n        <div style={{overflow:'scroll'}}>\r\n        <table className=\"table table-striped\">\r\n            {tableHeader(\"No\", \"Nama\",  \"Deskripsi\", \"Kategori\", \"Opsi\")}\r\n            <tbody>\r\n                    {props.items.map((item, i)=>{\r\n                        return (\r\n                            <tr key={`RulePoint-${i}`}>\r\n                                <td>{i+1+props.startingNumber}</td>\r\n                                <td>{item.name}</td> \r\n                                <td>{item.description}</td>\r\n                                <td>{item.category?.name}</td> \r\n                                <td><EditDeleteButton \r\n                                    recordLoaded={props.recordLoaded}\r\n                                    recordDeleted={props.recordDeleted}\r\n                                    record={item} modelName={'categorypredicate'}/></td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n        </table>\r\n        </div>\r\n    )\r\n}\r\nconst RecordForm = (props: { categories:Category[], formRef:React.RefObject<Modal>, \r\n    updateRecordProp(e: ChangeEvent): any, \r\n    resetForm():any, onSubmit(): any,\r\n    record: CategoryPredicate, reloadCategories():any }) => {\r\n\r\n    return (\r\n        <form className=\"record-form mb-3\" onSubmit={(e) => { e.preventDefault(); props.onSubmit() }}>\r\n            <Modal show={false} ref={props.formRef} toggleable={true} title=\"Record Form\" >\r\n                <FormGroup label=\"Nama\">\r\n                    <select required value={props.record.name} className=\"form-control-sm\" name=\"name\" onChange={props.updateRecordProp} >\r\n                        <option>A</option>\r\n                        <option>B</option>\r\n                        <option>C</option>\r\n                        <option>D</option>\r\n                    </select>\r\n                </FormGroup>\r\n                <FormGroup label=\"Deskripsi\">\r\n                    <textarea className=\"form-control\" name=\"description\" onChange={props.updateRecordProp} value={props.record.description ?? \"\"}  />\r\n                </FormGroup>\r\n                <FormGroup label=\"Category\">\r\n                    <div className=\"input-group\">\r\n                        <select required value={props.record.category_id} className=\"form-control-sm\" name=\"category_id\" onChange={props.updateRecordProp} >\r\n                            {props.categories.map((c)=>{\r\n\r\n                                return <option key={\"cat-\"+c.id} value={c.id}>{c.name}</option>\r\n                            })}\r\n                        </select>\r\n                        <div className=\"input-group-append\">\r\n                        <AnchorWithIcon className=\"btn btn-sm\" iconClassName=\"fas fa-redo\" onClick={props.reloadCategories}>Reload</AnchorWithIcon>\r\n                        </div>\r\n                    </div>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-sm\" />\r\n                    &nbsp;\r\n                    <input value=\"Reset\" type=\"reset\" className=\"btn btn-secondary btn-sm\" onClick={(e)=>props.resetForm()} />\r\n                </FormGroup>\r\n            </Modal>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default withRouter(\r\n    connect(\r\n        mapCommonUserStateToProps\r\n    )(CategoryPredicateManagement)\r\n)","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../constant/stores';\r\nimport { withRouter, Switch, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Login from '../pages/login/Login';\r\nimport DashboardMain from '../pages/dashboard/main/DashboardMain';\r\nimport HomeMain from '../pages/home/HomeMain';\r\nimport Menu from '../../models/settings/Menu'; \r\nimport MusyrifManagement from '../pages/management/MusyrifManagement';\r\nimport ManagementMain from '../pages/management/ManagementMain';\r\nimport CategoryManagement from '../pages/management/CategoryManagement';\r\nimport RulePointManagement from '../pages/management/RulePointManagement';\r\nimport StudentList from '../pages/asrama/StudentList';\r\nimport InputPointForm from '../pages/asrama/InputPointForm';\r\nimport PointRecordsManagement from '../pages/management/PointRecordsSummary';\r\nimport MedicalRecordForm from '../pages/asrama/medicalrecord/MedicalRecordForm';\r\nimport AboutUs from './../pages/home/AboutUs';\r\nimport Register from '../pages/login/Register'; \r\nimport PointRecordEdit from '../pages/asrama/point-record/PointRecordEdit';\r\nimport FollowUpReminder from '../pages/dashboard/main/FollowUpReminder';\r\nimport WarningActionManagement from '../pages/management/WarningActionManagement';\r\nimport ConfigSettingPage from '../pages/settings/ConfigSettingPage';\r\nimport StudentSemesterReport from '../pages/report/StudentSemesterReport';\r\nimport CategoryPredicateManagement from '../pages/management/CategoryPredicateManagement';\r\n\r\nclass ApplicationContent extends BaseComponent {\r\n \r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    setSidebarMenus = (menus: Menu[]) => {\r\n        this.props.setSidebarMenus(menus);\r\n    }\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Switch>\r\n                   \r\n                    {/* -------- home -------- */}\r\n                    <Route exact path=\"/home\" render={\r\n                        (props: any) => {\r\n                            return <HomeMain />\r\n                        }\r\n                    } />\r\n                    <Route exact path=\"/\" render={\r\n                        (props: any) =>\r\n                            <HomeMain />\r\n                    } />\r\n                    <Route exact path=\"/about\" render={\r\n                        (props: any) =>\r\n                            <AboutUs />\r\n                    } />\r\n                     \r\n{/* \r\n                     \r\n                    <Route exact path=\"/management\" render={\r\n                        (props: any) => {\r\n                            console.debug(\"MANAGEMENTS path\")\r\n                            return <MasterDataMain setSidebarMenus={this.setSidebarMenus} />\r\n                        }\r\n                    } />\r\n                    <Route exact path=\"/management/:code\" render={\r\n                        (props: any) =>\r\n                            <MasterDataMain setSidebarMenus={this.setSidebarMenus} />\r\n                    } /> */}\r\n\r\n\r\n                    {/* ///////// PUBLIC ///////// */}\r\n\r\n                </Switch>\r\n                <LoginRoute />\r\n                <Asrama     />\r\n                <Management />\r\n                <Dashboard  />\r\n                <Setting    />\r\n                <Report     />\r\n            </Fragment>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        // document.title = \"Login\";\r\n    }\r\n\r\n}\r\n\r\nconst Setting  = (props) => {\r\n\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/settings/config\" render={\r\n                (props:any) => <ConfigSettingPage />\r\n            } />\r\n        </Switch>\r\n    )\r\n}\r\nconst Report  = (props) => {\r\n\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/report/studentreport\" render={\r\n                (props:any) => <StudentSemesterReport />\r\n            } />\r\n        </Switch>\r\n    )\r\n}\r\nconst Management  = (props) => {\r\n\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/management\" render={\r\n                (props:any) => <ManagementMain />\r\n            } />\r\n            <Route exact path=\"/management/musyrifmanagement\" render={\r\n                (props:any) => <MusyrifManagement />\r\n            } />\r\n            <Route exact path=\"/management/rule_category\" render={\r\n                (props:any) => <CategoryManagement />\r\n            } />\r\n            <Route exact path=\"/management/rule_point\" render={\r\n                (props:any) => <RulePointManagement />\r\n            } />\r\n            <Route exact path=\"/management/warning_action\" render={\r\n                (props:any) => <WarningActionManagement />\r\n            } />\r\n            <Route exact path=\"/management/category_predicate\" render={\r\n                (props:any) => <CategoryPredicateManagement />\r\n            } />\r\n        </Switch>\r\n    )\r\n}\r\n\r\nconst Asrama = (proos) => {\r\n\r\n    return (\r\n        <Switch>\r\n             <Route exact path=\"/asrama/studentlist\" render={\r\n                (props:any) => <StudentList />\r\n            } />\r\n             <Route exact path=\"/asrama/inputpoint\" render={\r\n                (props:any) => <InputPointForm/>\r\n            } />\r\n             <Route exact path=\"/asrama/pointsummary\" render={\r\n                (props:any) => <PointRecordsManagement/>\r\n            } />\r\n             <Route exact path=\"/asrama/pointrecordedit\" render={\r\n                (props:any) => <PointRecordEdit/>\r\n            } />\r\n             <Route exact path=\"/asrama/medicalrecord\" render={\r\n                (props:any) => <MedicalRecordForm/>\r\n            } />\r\n            \r\n        </Switch>\r\n    )\r\n}\r\nconst LoginRoute = (props) => {\r\n\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/login\" render={\r\n                (props: any) =>\r\n                    <Login />\r\n            } />\r\n            <Route exact path=\"/register\" render={\r\n                (props: any) =>\r\n                    <Register />\r\n            } />\r\n        </Switch>\r\n    )\r\n}\r\n\r\n\r\nconst Dashboard = (props) => {\r\n    return (\r\n        <Switch>\r\n            {/* -------- dashboard -------- */}\r\n            <Route exact path=\"/dashboard\" render={\r\n                (props: any) => {\r\n                   \r\n                        console.debug(\"dashboard path\")   \r\n                       return  <DashboardMain />\r\n                }\r\n                   \r\n            } />\r\n              <Route exact path=\"/dashboard/followup\" render={\r\n                (props: any) =>\r\n                    <FollowUpReminder />\r\n            } /> \r\n        </Switch>\r\n    )\r\n}\r\n \r\n\r\nconst mapDispatchToProps = (dispatch: Function) => ({})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(ApplicationContent))","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../constant/stores';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { performLogout } from './../../redux/actionCreators';\r\nimport Menu from '../../models/settings/Menu';\r\nimport './SideBar.css'\r\n\r\nclass SideBar extends BaseComponent {\r\n    constructor(props: { sidebarMenus?: Menu[] }) {\r\n        super(props, false);\r\n    }\r\n    isSidebarActive = (menu: Menu) => {\r\n        const parentMenu: Menu = this.props.parentMenu;\r\n        if (null == parentMenu) { return false; }\r\n        const pathName = this.props.location.pathname;\r\n        return parentMenu.url + \"/\" + menu.url == pathName;\r\n    }\r\n    componentDidMount() {\r\n        window.addEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    handleScroll(event) {\r\n        let scrollTop = event.srcElement.body.scrollTop,\r\n            itemTranslate = Math.min(0, scrollTop / 3 - 60);\r\n        // console.debug(\"scrollTop: \", scrollTop);\r\n\r\n    }\r\n    render() {\r\n        const parentMenu: Menu = this.props.parentMenu;\r\n        if (null == parentMenu) { return null }\r\n        const menus: Menu[] = this.props.sidebarMenus == null ? [] : this.props.sidebarMenus;\r\n        const user = this.getLoggedUser();\r\n        return (\r\n            <ul id=\"sidebar\" className=\"sidebar-nav bg-light\">\r\n                <Brand show={parentMenu != null} brand={parentMenu} />\r\n\r\n                {menus.map(menu => {\r\n                    if (menu.userAuthorized && !menu.userAuthorized(user)) return null;\r\n                    const isActive: boolean = this.isSidebarActive(menu);\r\n                    const menuClassName = isActive ? 'menu-active' : 'regular-menu';\r\n                    return (\r\n                        <li className={\"sidebar-item \" + menuClassName} key={\"SIDEBAR_\" + menu.code}><Link to={parentMenu.url + \"/\" + menu.url}>\r\n                            <span className=\"sidebar-icon\"><i className={Menu.getIconClassName(menu)}></i></span>\r\n                            <span className={'menu-label'} >{menu.name}</span>\r\n                        </Link></li>\r\n                    )\r\n                })\r\n                }\r\n            </ul >\r\n        )\r\n    }\r\n\r\n}\r\nconst Brand = (props) => {\r\n    if (props.show == false) return null;\r\n    return (\r\n        <Fragment>\r\n            <li id=\"sidebar-brand\" className=\"sidebar-brand\" style={{ marginBottom: '20px' }}>\r\n                <div style={{\r\n                    textAlign: 'center', paddingTop: '10px',\r\n                    paddingBottom: '10px'\r\n                }}>\r\n                    <h3 className=\"text-dark\">\r\n                        <i className={Menu.getIconClassName(props.brand)}></i>\r\n                    </h3>\r\n                    <Link to={props.brand.url} style={{ textDecoration: 'none' }}><h4 className=\"text-dark\">{props.brand.name}</h4></Link>\r\n                </div>\r\n            </li>\r\n            <li className={\"sidebar-item-brand \"} >\r\n                <Link to={props.brand.url}>\r\n                    <span className=\"sidebar-icon\"><i className={Menu.getIconClassName(props.brand)}></i></span>\r\n                </Link>\r\n            </li>\r\n        </Fragment>\r\n    )\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    performLogout: (app: any) => dispatch(performLogout(app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(SideBar))","import React, { Fragment } from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../constant/stores';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { performLogout } from './../../redux/actionCreators';\r\nimport Header from '../navigation/Header';\r\nimport ApplicationContent from './ApplicationContent';\r\nimport SideBar from '../navigation/SideBar';\r\nimport './Layout.css';\r\nimport Menu from '../../models/settings/Menu';\r\nimport { getMenuByMenuPath, extractMenuPath } from './../../constant/Menus';\r\nclass IState {\r\n    showSidebar: boolean = false;\r\n    activeMenuCode: any = null;\r\n    menu?: Menu;\r\n    sidebarMenus?: Menu[]\r\n};\r\nclass MainLayout extends BaseComponent {\r\n    state: IState = new IState();\r\n    currentPathName: string = \"\";\r\n    constructor(props: any) {\r\n        super(props, false);\r\n        this.state = {\r\n            ...this.state,\r\n        }\r\n    }\r\n    setMenuNull = () => {\r\n        this.setState({ menu: undefined, showSidebar: false, activeMenuCode: null, sidebarMenus: null });\r\n    }\r\n    setMenu = (menu: Menu) => {\r\n        if (menu == null) {\r\n            return;\r\n        }\r\n        this.setState({ menu: menu, sidebarMenus: null, showSidebar: menu.showSidebar, activeMenuCode: menu.code });\r\n    }\r\n    setSidebarMenus = (menus: Menu[]) => {\r\n        // console.debug(\"Set sidebar menus: \", menus);\r\n        this.setState({ sidebarMenus: menus });\r\n    }\r\n    componentDidMount() {\r\n        this.setCurrentMenu();\r\n    }\r\n    componentDidUpdate() {\r\n        this.setCurrentMenu();\r\n    }\r\n    setCurrentMenu = () => {\r\n        const pathName = extractMenuPath(this.props.location.pathname);\r\n\r\n        if (pathName == this.currentPathName) {\r\n            return;\r\n        }\r\n        this.currentPathName = pathName;\r\n        const menu = getMenuByMenuPath(pathName);\r\n        if (menu == null) {\r\n            this.setMenuNull();\r\n        } else {\r\n            this.setMenu(menu);\r\n        }\r\n    }\r\n    getSubMenus = () :Menu[]|null => {\r\n        const menuState:Menu|undefined = this.state.menu;\r\n        if (menuState && menuState.subMenus != null && menuState.subMenus?.length > 0) {\r\n            return menuState.subMenus;\r\n        }\r\n        if (this.state.sidebarMenus) {\r\n            return this.state.sidebarMenus;\r\n        }\r\n        return null;\r\n    }\r\n    render() {\r\n        const showSidebar: boolean = this.state.showSidebar == true;\r\n        const className = showSidebar ? \"app-content\" : \"content\";\r\n        return (\r\n            <Fragment>\r\n                <Header setMenuNull={this.setMenuNull} activeMenuCode={this.state.activeMenuCode} setMenu={this.setMenu} />\r\n                <div id=\"content-wrapper\" className={\"container-fluid  \" + className}>\r\n                    <ApplicationContent setSidebarMenus={this.setSidebarMenus} />\r\n                </div>\r\n                {showSidebar ?\r\n                    <SideBar sidebarMenus={this.getSubMenus()} parentMenu={this.state.menu} />\r\n                    : null}\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    performLogout: (app: any) => dispatch(performLogout(app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(MainLayout))","\nimport React, { Component, Fragment, RefObject } from 'react';\nimport './App.css';\nimport { withRouter } from 'react-router-dom'\nimport * as actions from './redux/actionCreators'\nimport { connect } from 'react-redux'\nimport SockJsClient from 'react-stomp';\nimport * as url from './constant/Url';\nimport { mapCommonUserStateToProps } from './constant/stores';\nimport Loader from './component/loader/Loader';\nimport Alert from './component/alert/Alert';\nimport MainLayout from './component/layout/MainLayout';\nimport WebResponse from './models/commons/WebResponse';\nimport Spinner from './component/loader/Spinner';\nimport { performWebsocketConnection, setWebSocketUrl, registerWebSocketCallbacks } from './utils/websockets';\nimport UserService from './services/UserService';\nimport AnchorWithIcon from './component/navigation/AnchorWithIcon';\nimport { time } from 'console';\nimport { doItLater, updateFavicon } from './utils/EventUtil';\n\nclass IState {\n  loading: boolean = false;\n  loadingPercentage: number = 0;\n  requestId?: string;\n  mainAppUpdated: Date = new Date();\n  showAlert: boolean = false;\n  realtime: boolean = false;\n  appIdStatus: string = \"Loading App Id\";\n  errorAuthenticatingApp: boolean = false;\n}\nclass App extends Component<any, IState> {\n  wsConnected: boolean = false;\n  loadings: number = 0;\n  alertTitle: String = \"Info\";\n  alertBody: any = null;\n  alertIsYesOnly: boolean = true;\n  alertIsError: boolean = false;\n  alertOnYesCallback: Function = function (e) { };\n  alertOnCancelCallback: Function = function (e) { };\n  wsUpdateHandler: Function | undefined = undefined;\n  clientRef: RefObject<SockJsClient> = React.createRef();\n  userService: UserService;\n  // alertRef: RefObject<Alert> = React.createRef();\n  alertCallback = {\n    title: \"Info\", message: \"Info\", yesOnly: false,\n    onOk: () => { }, onNo: () => { }\n  }\n\n  constructor(props: any) {\n    super(props);\n    this.state = new IState();\n    this.userService = this.props.services.userService;\n\n    this.props.setMainApp(this);\n  }\n  refresh = () => { this.setState({ mainAppUpdated: new Date() }); }\n\n  requestAppId = () => {\n    this.setState({ appIdStatus: \"Authenticating application\", errorAuthenticatingApp: false });\n    this.userService.requestApplicationId((response) => {\n      this.props.setRequestId(response, this);\n      this.refresh();\n      this.setState({ errorAuthenticatingApp: false });\n    }, this.retryRequestAppId)\n\n  }\n  retryRequestAppId = () => {\n    this.setState({ appIdStatus: \"Authenticating application (Retrying)\", errorAuthenticatingApp: false });\n    this.userService.requestApplicationIdNoAuth((response) => {\n      this.props.setRequestId(response, this);\n      this.setState({ errorAuthenticatingApp: false });\n    },\n      () =>\n        this.setState({ errorAuthenticatingApp: true }))\n\n  }\n  incrementLoadings() {\n    this.loadings++;\n  }\n\n  decrementLoadings() {\n    this.loadings--;\n    if (this.loadings < 0) {\n      this.loadings = 0;\n    }\n  }\n\n  startLoading(realtime: boolean = false) {\n    this.incrementLoadings();\n    this.setState({ loading: true, realtime: realtime });\n  }\n\n  endLoading() {\n    this.decrementLoadings();\n    if (this.loadings == 0) {\n      if (this.state.realtime) {\n        this.setState({ loadingPercentage: 100 }, this.smoothEndLoading);\n      } else {\n        this.setState({ loading: false, loadingPercentage: 0 });\n      }\n    }\n  }\n\n  smoothEndLoading = () => {\n    doItLater(() => {\n      this.setState({ loading: false, loadingPercentage: 0 });\n    }, 100);\n  }\n\n  handleProgress = (msg: WebResponse) => {\n    const percentageFloat: number = msg.percentage ?? 0;\n    let percentage = Math.floor(percentageFloat);\n    if (percentageFloat < 0 || percentageFloat > 100) {\n      this.endLoading();\n    }\n    this.setState({ loadingPercentage: percentage });\n  }\n\n  showAlert(title: string, body: any, yesOnly: boolean, yesCallback: Function, noCallback?: Function) {\n    this.alertTitle = title;\n    this.alertBody = body;\n    this.alertIsYesOnly = yesOnly;\n    const app = this;\n    this.alertOnYesCallback = function (e) {\n      app.dismissAlert();\n      yesCallback(e);\n    }\n    if (!yesOnly) {\n      this.alertOnCancelCallback = function (e) {\n        app.dismissAlert();\n        if (noCallback != null) {\n          noCallback(e);\n        }\n      };\n    }\n    this.setState({ showAlert: true });\n  }\n\n  dismissAlert() {\n    this.alertIsError = false;\n    this.setState({ showAlert: false })\n  }\n  showAlertError(title: string, body: any, yesOnly: boolean, yesCallback: Function, noCallback?: Function) {\n    this.alertIsError = true;\n    this.showAlert(title, body, yesOnly, yesCallback, noCallback)\n  }\n\n  componentDidUpdate() {\n    // console.debug(\"APP UPDATED\");\n    if (this.props.applicationProfile) {\n      updateFavicon(this.props.applicationProfile);\n    }\n    if (this.props.requestId && !this.wsConnected) {\n      this.initWebsocket();\n    }\n  }\n\n  componentDidMount() {\n    this.requestAppId();\n    this.setState({ loadingPercentage: 0 });\n  }\n\n  initWebsocket = () => {\n    setWebSocketUrl(url.contextPath() + 'realtime-app');\n    registerWebSocketCallbacks({\n      subscribeUrl: \"/wsResp/progress/\" + this.props.requestId,\n      callback: this.handleProgress  //must use lambda\n    },\n      {\n        subscribeUrl: \"/wsResp/\" + this.props.requestId + \"/update\",\n        callback: (response) => this.handleWsUpdate(response)\n      });\n    performWebsocketConnection();\n    this.wsConnected = true;\n  }\n\n  private handleWsUpdate = (response: any) => {\n\n    if (this.wsUpdateHandler) {\n      this.wsUpdateHandler(response);\n    }\n  }\n\n  setWsUpdateHandler = (handler: Function | undefined) => {\n    this.wsUpdateHandler = handler;\n  }\n  resetWsUpdateHandler = () => {\n    this.setWsUpdateHandler(undefined);\n  }\n\n  render() {\n    if (!this.props.requestId) {\n      return (\n        <div className=\"text-center\" style={{ paddingTop: '10%' }}>\n          <h2>{this.state.appIdStatus}</h2>\n          {this.state.errorAuthenticatingApp ?\n            <AnchorWithIcon iconClassName=\"fas fa-redo\" onClick={this.retryRequestAppId} children=\"Retry\" /> :\n            <Spinner />}\n        </div>\n      )\n    }\n    return (\n      <Fragment>\n        <Loading realtime={this.state.realtime} loading={this.state.loading} loadingPercentage={this.state.loadingPercentage} />\n        {this.state.showAlert ?\n          <Alert title={this.alertTitle}\n            isError={this.alertIsError}\n            onClose={(e) => this.setState({ showAlert: false })}\n            yesOnly={this.alertIsYesOnly}\n            onYes={this.alertOnYesCallback} onNo={this.alertOnCancelCallback}\n          >{this.alertBody}</Alert> :\n          null}\n        <MainLayout />\n        {/* <SockJsClient url={usedHost + 'realtime-app'} topics={['/wsResp/progress/' + this.props.requestId]}\n\n          onMessage={(msg: WebResponse) => { this.handleMessage(msg) }}\n          ref={this.clientRef} /> */}\n      </Fragment>\n    )\n  }\n}\n\nfunction Loading(props) {\n  if (props.loading == true) {\n    return (\n      <Loader realtime={props.realtime} progress={props.loadingPercentage} text=\"Please wait...\" type=\"loading\" />\n    );\n  }\n  return null;\n}\n\n\nconst mapDispatchToProps = (dispatch: Function) => ({\n  setMainApp: (app: App) => dispatch(actions.setMainApp(app)),\n  setRequestId: (response: WebResponse, app: App) => dispatch(actions.setRequestId(response, app)),\n})\n\nexport default withRouter(connect(\n  mapCommonUserStateToProps,\n  mapDispatchToProps\n)(App))\n","import React from 'react'\r\nimport App from './App'\r\nimport configureStore from './redux/configureStore'\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n \r\nconst Root = (props:any)  => {\r\n\r\n    const store = configureStore();\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <App/>\r\n            </HashRouter>\r\n        </Provider>  \r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Root;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './Root.tsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}