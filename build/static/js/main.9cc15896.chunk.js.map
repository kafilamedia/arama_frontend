{"version":3,"sources":["models/AuthorityType.ts","constant/Url.js","models/BaseEntity.ts","models/User.ts","redux/actionCreators.ts","redux/types.js","constant/stores.js","component/loader/Loader.js","utils/EventUtil.ts","component/alert/Alert.js","utils/websockets.js","component/BaseComponent.tsx","utils/StringUtil.ts","models/settings/Menu.ts","constant/Menus.ts","component/navigation/Header.tsx","component/loader/Spinner.tsx","component/pages/login/Login.tsx","component/pages/BasePage.tsx","models/settings/AttachmentInfo.ts","utils/ComponentUtil.ts","component/pages/dashboard/main/DashboardMain.tsx","component/pages/home/HomeMain.tsx","models/Employee.ts","utils/CollectionUtil.tsx","utils/DateUtil.ts","models/commons/Filter.ts","component/form/FormGroup.tsx","component/navigation/NavigationButtons.tsx","component/navigation/AnchorWithIcon.tsx","component/pages/management/EmployeeRow.tsx","component/navigation/AnchorButton.tsx","component/navigation/ToggleButton.tsx","component/pages/management/BaseManagementPage.tsx","component/pages/management/MusyrifManagement.tsx","component/pages/management/ManagementMain.tsx","models/Category.ts","component/container/Modal.tsx","component/pages/management/EditDeleteButton.tsx","component/pages/management/CategoryManagement.tsx","models/RulePoint.ts","component/pages/management/RulePointManagement.tsx","component/form/FilterPeriod.tsx","component/pages/asrama/StudentList.tsx","models/Student.ts","models/PointRecord.ts","component/form/InputTime.tsx","component/pages/asrama/form/FormStepThree.tsx","component/alert/SimpleError.tsx","component/pages/asrama/form/FormStepTwo.tsx","component/pages/asrama/form/FormStepOne.tsx","component/pages/asrama/InputPointForm.tsx","component/container/Card.tsx","component/pages/asrama/point-record/PointRecordDetail.tsx","component/pages/asrama/DropPointButtons.tsx","component/pages/management/PointRecordsSummary.tsx","models/Class.ts","component/pages/asrama/medicalrecord/StudentForm.tsx","models/MedicalRecord.ts","component/pages/asrama/medicalrecord/MedicalRecordDailyInput.tsx","component/pages/asrama/medicalrecord/MedicalRecordForm.tsx","component/pages/home/AboutUs.tsx","component/pages/shared/ClassMemberSearchForm.tsx","component/pages/asrama/point-record/PointRecordEdit.tsx","component/pages/dashboard/main/FollowUpReminder.tsx","models/WarningAction.ts","component/pages/management/WarningActionManagement.tsx","component/pages/settings/ConfigSettingPage.tsx","component/pages/report/StudentSemesterReport.tsx","models/CategoryPredicate.ts","component/pages/management/CategoryPredicateManagement.tsx","models/RuleViolation.ts","component/pages/management/RuleViolationManagement.tsx","component/layout/ApplicationContent.tsx","component/navigation/SideBar.tsx","component/layout/MainLayout.tsx","App.tsx","redux/appReducer.js","middlewares/Common.ts","redux/userReducer.js","services/Promises.ts","services/MasterDataService.ts","services/UserService.ts","services/MusyrifManagementService.ts","services/StudentService.ts","services/ConfigurationService.ts","redux/servicesReducer.ts","redux/reducers.js","middlewares/UserMiddleware.ts","middlewares/RealtimeChatMiddleware.js","redux/configureStore.js","Root.tsx","serviceWorker.js","index.js"],"names":["AuthorityType","rootValue","document","getElementById","value","contextPath","path","baseImageUrl","BaseEntity","id","created_at","updated_at","User","displayName","fullName","email","password","profileImage","authorities","name","ROLE_EMPLOYEE","requestId","role","i","this","length","user","Object","assign","performLogout","url","app","startLoading","type","payload","meta","concat","mapCommonUserStateToProps","state","applicationProfile","userState","loggedUser","loginStatus","services","servicesState","mainApp","appState","LoaderContent","props","realtime","className","style","margin","position","zIndex","marginBottom","aria-hidden","padding","marginTop","height","width","progress","transitionDuration","disabled","Loader","timer","intervalId","update","clearInterval","console","log","setState","endMessage","withTimer","setInterval","Component","doItLater","callback","intervalMs","timeout","setTimeout","clearTimeout","State","backColor","Backdrop","backgroundColor","bgColor","Footer","ref","yesButtonRef","onClick","onYes","yesOnly","noButtonRef","onNo","Header","fontClassName","title","onClose","Alert","e","close","React","createRef","isError","current","focus","headerClassName","display","children","stompClient","undefined","wsConnected","subscriptionCallbacks","Array","sendToWebsocket","requestObject","debug","send","JSON","stringify","info","BaseComponent","authenticated","parentApp","updated","Date","validateLoginStatus","isUserLoggedIn","backToLogin","sendWebSocket","setWsUpdateHandler","handler","resetWsUpdateHandler","getApplicationProfile","handleInputChange","event","stateFieldName","target","checked","parseInt","el","doAjax","method","withProgress","successCallback","errorCallback","params","then","response","catch","alert","finally","endLoading","commonAjax","commonAjaxWithProgress","getLoggedUser","isAdmin","hasRole","ROLE_SUPERADMIN","scrollTop","opt","top","behavior","window","scrollTo","showConfirmation","body","Promise","resolve","reject","showAlert","showConfirmationDanger","showAlertError","showInfo","showError","showCommonSuccessAlert","showCommonErrorAlert","message","error","data","getServices","history","push","index","uniqueId","string","String","getUTCMilliseconds","toString","months","twoDigits","Menu","code","description","pathVariables","iconUrl","color","fontColor","active","menuClass","showSidebar","subMenus","userAuthorized","clone","element","defaultMenuIconClassName","getIconClassName","menu","getMenus","menuSet","_menus","subMenu","ROLE_ASRAMA_MUSYRIF","IState","showNavLinks","buttonToggleNavRef","toggleNavLinks","onLogout","ok","setMenu","click","menus","profile","appName","href","semester","year","data-toggle","data-target","aria-controls","aria-expanded","aria-label","map","isActive","activeMenuCode","key","to","setMenuNull","NavBarTop","paddingLeft","fontSize","UserIcon","marginRight","withRouter","connect","dispatch","Spinner","innerDivs","visibility","show","loading","editPassword","Login","updateCredentialProperty","getAttribute","preventDefault","performLogin","onSubmit","login","onChange","PasswordField","placeholder","required","EmailField","autoFocus","username","BasePage","componentReady","AttachmentInfo","file","blob","Blob","arg0","split","getAttachmentInfoFromFile","fileInput","files","reader","FileReader","readAsDataURL","onload","setUrl","result","onerror","Error","attachment","DashboardMain","studentService","addPointRecord","pathname","updateImage","accept","src","HomeMain","imageUrl","backgroundUrl","backgroundImage","backgroundSize","appDescription","welcoming_message","Employee","nisdm","tableHeader","values","MONTHS","leapMonths","regularMonths","getInputReadableDate","date","getFullYear","getMonth","getDate","join","parseDate","s","b","m","Filter","limit","page","orderType","orderBy","contains","exacts","module","fieldsFilter","maxValue","availabilityCheck","resetFieldsFilter","f","endsWith","withLimit","queryString","filter","q","prototype","hasOwnProperty","call","encodeURIComponent","updatePeriodFilter","field","val","isNaN","periodFilter","setDate","setMonth","setFullYear","FormGroup","orientation","label","NavigationButtons","buttonIndexes","generateButtonValues","totalData","activePage","lastIndex","nextPage","previusPage","currentPage","displayed_buttons","buttonCount","Math","ceil","min","max","AnchorWithIcon","btnClassName","attributes","iconClassName","tyle","EmployeeRow","musyrifManagementService","getEmployee","employee","activeStatusUpdate","onUpdated","activateMusyrif","emp","activate","isMusyrif","startingNumber","AnchorButton","ToggleButton","yesLabel","noLabel","BaseManagementPage","modelName","overrideLoading","masterDataService","formRef","emptyRecord","loadItems","request","list","itemsLoaded","items","updateFilter","dataset","updateFieldsFilter","loadAtPage","updateRecordProp","record","resetForm","oneRecordLoaded","item","showModal","recordUpdated","hideModal","callApiInsert","insert","callApiUpdate","reload","MusyrifManagement","setMusyrifOnly","musyrifOnly","onEmployeeStatusUpdate","EmployeeList","overflow","ManagementMain","Category","points","object","Modal","toggleable","footerContent","showFooter","EditDeleteButton","getRecord","rec","recordLoaded","recordLoadedForDetail","recordDeleted","loadRecord","getOne","loadRecordRequest","record_id","loadRecordForDetail","deleteRecord","delete","hasType","types","indexOf","CategoryManagement","ItemsList","RecordForm","RulePoint","ruleCategoryName","ruleCategoryId","point","droppable","categories","categoriesLoaded","RulePointManagement","categoriesNotLoaded","loadCategories","req","selectedCategoryId","reloadCategories","c","data-type","FilterPeriod","disableDay","Fragment","arr","days","d","classes","now","defaultFieldsFilter","StudentList","classesLoaded","getStudentWithPoints","loadClasses","getClasses","updateFieldFilter","updateSelectedClass","inputPage","inputPoint","student","updateWithPointRecord","enable","selectedClassId","showPointRecord","level","letter","schoolName","toDateString","colSpan","classLevel","classLetter","Student","nis","kelas","PointRecord","setTime","h","time","month","day","setHours","dateString","td","location","classMemberId","rulePointId","rule_point","dropped","pictures","ruleName","studentName","getPicture","getTimestamp","DAYS","getDay","getHours","getMinutes","getSeconds","y","p","hour","minute","second","hours","minutesOrSeconds","InputTime","minutes","seconds","updateFromProps","updateValue","setNow","border","sec","marginLeft","pointRecord","FormStepThree","submit","updatePointRecord","updateDate","updateTime","setAttachment","removeAttachment","getAttachment","attachmentInfo","rulePoint","timeString","onBack","SimpleError","rulePoints","FormStepTwo","rulePointsLoaded","setRulePoint","loadRulePoints","getCategory","category","r","updateRulePoint","select","filtered","FormStepOne","setCategory","setSelectedCategory","updateCategory","formStep","savedRecord","InputPointForm","totalStep","validateStudentData","removeStudent","nextStep","step","submitRecord","submitPointRecord","recordSubmitted","back","Progress","Detail","toLocaleString","Warning","Card","PointRecordDetail","pictureUrl","timeStamp","DropPointButtons","setDropped","isDropped","setPointDropped","selectedCategory","showFilterDetail","PointRecordSummary","classessLoaded","getCategories","showDetail","hideDetail","hideFilterDetail","openEditPage","resetFilter","followUp","dropAll","itemsId","undropAll","updateDroppedOption","startsWith","autoComplete","sekolah","recordLoadedForEdit","optionTypes","toLocaleDateString","Class","rombel","nama","StudentForm","loadStudent","setSelectedItem","setItem","reset","selectedItem","onReset","cursor","ItemDetail","studentClassString","MedicalRecord","temperature_morning","temperature_afternoon","breakfast","lunch","dinner","medicine_consumption","genose_test","antigen_test","pcr_test","student_id","obj","instance","MedicalRecordDailyInput","setRecord","submitMedicalRecord","period","monthName","rows","Checkbox","SingleRow","minHeight","forwardRef","mappedItems","Map","MedicalRecordForm","inputRefs","setStudent","loadMonthlyRecord","forEach","recordsLoaded","toMap","get","set","loadMonthlyMedicalRecord","getFilter","dayCount","getMonthDays","gridTemplateColumns","repeat","AboutUs","appProfile","contact","address","keyword","ClassMemberSearchForm","selectItem","pointsMap","selectedPointId","PointRecordEdit","inputTimeRef","categoryId","catId","resp","checkPassedData","updateInput","updateRecordField","setSelectedRulePoint","validateInput","removeImage","updatePicture","cat","followUpInfos","FollowUpReminder","loadReminder","getFollowUpReminders","warningPointLimit","TOTAL_POINT","FOLLOW_UP_COUNT","WarningAction","classMemberName","WarningActionManagement","ConfigSettingPage","configService","configUpdated","updateField","configurationService","StudentSemesterReport","selectClassRef","loadRaporData","classId","getRaporData","raporDataLoaded","downloadData","downloadRaporData","reportCreated","downloadRapor","open","createElement","download","reportHeader","classMember","score","predicateLetter","predicateDescription","headers","CategoryPredicate","CategoryPredicateManagement","RuleViolation","RuleViolationManagement","ApplicationContent","setSidebarMenus","exact","render","Setting","Report","Management","Asrama","proos","LoginRoute","Dashboard","SideBar","isSidebarActive","parentMenu","pathName","addEventListener","handleScroll","removeEventListener","srcElement","sidebarMenus","brand","menuClassName","Brand","textAlign","paddingTop","paddingBottom","textDecoration","MainLayout","currentPathName","setCurrentMenu","pathRaw","firstPath","trim","extractMenuPath","getMenuByMenuPath","getSubMenus","menuState","loadingPercentage","mainAppUpdated","appIdStatus","errorAuthenticatingApp","App","loadings","alertTitle","alertBody","alertIsYesOnly","alertIsError","alertOnYesCallback","alertOnCancelCallback","wsUpdateHandler","clientRef","userService","alertCallback","onOk","refresh","requestAppId","requestApplicationId","reqIdResp","retryRequestAppId","setRequestId","setLoggedUser","requestApplicationIdNoAuth","smoothEndLoading","handleProgress","msg","percentageFloat","percentage","floor","initWebsocket","callBackObjects","registerWebSocketCallbacks","subscribeUrl","handleWsUpdate","setMainApp","incrementLoadings","decrementLoadings","yesCallback","noCallback","dismissAlert","pageIcon","link","querySelector","setAttribute","head","appendChild","updateFavicon","Loading","text","actions","loggedIn","referer","initState","reducer","action","commonAuthorizedHeader","contentType","getRequestId","getLoginKey","commonHeader","LOGIN_KEY","store","getStore","getState","getCookie","updateAccessToken","accessToken","setCookie","setLoginKeyCookie","cookieValue","cname","cvalue","exdays","getTime","expires","toUTCString","cookie","ca","decodeURIComponent","charAt","substring","loginKey","loginFailed","menuData","loginAttempt","assetsPath","axios","require","commonAjaxPostCalls","endpoint","post","axiosResponse","rawAxiosResponse","commonAjaxGetCalls","MasterDataService","commonAjaxDeleteCalls","put","commonAjaxPutCalls","responseType","fileName","rawSplit","extension","URL","createObjectURL","commonAjaxPostCallsWithBlob","UserService","callbackSuccess","callbackError","getInstance","MusyrifManagementService","StudentService","pointRecordId","studentId","ids","FormData","append","imgFile","ConfigurationService","loadConfig","rootReducer","combineReducers","appReducer","userReducer","servicesReducers","initialState","performLoginMiddleware","next","parameters","responseJson","loginSuccess","newAction","common","getLoggedUserMiddleware","param","performLogoutMiddleware","logoutSuccess","setLoggedUserMiddleware","getMessagesMiddleware","fetch","json","err","storeChatMessageLocallyMiddleware","configureStore","createStore","applyMiddleware","userMiddleware","realtimeChatMiddleware","Root","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6XACcA,E,mGCDRC,EAAS,UAAMC,SAASC,eAAe,gBAAgBC,OAOhDC,EAAc,WAAkB,IAAjBC,EAAgB,uDAAT,KAC/B,MAAM,GAAN,OAAUL,EAAV,mBAAuBK,QAAvB,IAAuBA,IAAQ,KAEtBC,EAAe,kBAAMF,EAAY,a,SDThCL,K,kCAAAA,E,0CAAAA,E,+BAAAA,M,SEAOQ,E,sCACpBC,Q,OACAC,gB,OACAC,gB,GCAoBC,E,4MAanBC,iB,IACAC,c,IACAC,W,IACAC,c,IACAC,kB,IACAC,YAA2B,CAAE,CAAEC,KAAMnB,EAAcoB,gB,EACnDC,e,wDAfQC,GACN,IAAK,IAAIC,EAAI,EAAGA,EAAIC,KAAKN,YAAYO,OAAQF,IAAK,CAEhD,GADgBC,KAAKN,YAAYK,GACrBJ,MAAQG,EAClB,OAAO,EAGX,OAAO,K,6BAVII,GACX,OAAOC,OAAOC,OAAO,IAAIhB,EAAQc,O,GAFHlB,GC8ErBqB,GA3EIC,IA2EY,SAACC,GAO5B,OANAA,EAAIC,eACe,CACjBC,KC9EqB,YD+ErBC,QAAS,GACTC,KAAM,CAAEJ,IAAKA,EAAKE,KChFG,YDgFoBH,IAAKzB,IAAc+B,OAAO,uB,OEtF1DC,EAA4B,SAACC,GACtC,MAAO,CACHC,mBAAoBD,EAAME,UAAUD,mBACpCE,WAAYH,EAAME,UAAUC,WAC5BC,YAAaJ,EAAME,UAAUE,YAC7BrB,UAAWiB,EAAME,UAAUnB,UAC3BsB,SAAUL,EAAMM,cAAcD,SAC9BE,QAASP,EAAMQ,SAASD,U,MCqChC,SAASE,EAAcC,GACnB,OAAIA,EAAMC,SAEF,yBAAKC,UAAU,+BAA+BC,MAAO,CAACC,OAAO,EAAGC,SAAU,QAASC,OAAQ,MACvF,yBAAKJ,UAAU,SACf,0BAAMC,MAAO,CAACI,aAAa,OAAQL,UAAU,mCAAmC5B,KAAK,SAASkC,cAAY,UAE1G,yBAAKN,UAAU,kBAAkBC,MAAO,CAACM,QAAQ,EAAGC,UAAW,MAAOC,OAAO,SACzE,yBAAKT,UAAU,aAAaC,MAAO,CAC/BS,MAAOZ,EAAMa,SAAW,IACxBC,mBAAoB,OACpBV,OAAQ,OAQxB,4BAAQF,UAAU,gBAAgBjB,KAAK,SAAS8B,UAAQ,GACpD,0BAAMb,UAAU,mCAAmC5B,KAAK,SAASkC,cAAY,SAC7E,0BAAMN,UAAU,KAAhB,eAKGc,M,kDAnEX,WAAYhB,GAAQ,IAAD,8BACf,cAAMA,IACDV,MAAQ,CACT2B,MAAO,IACPC,WAAY,GAEhB,EAAKC,OAAS,WACN,EAAK7B,MAAM2B,MAAQ,GACnBG,cAAc,EAAK9B,MAAM4B,YAE7BG,QAAQC,IAAI,QACZ,EAAKC,SAAS,CAAEN,MAAO,EAAK3B,MAAM2B,MAAQ,IACtC,EAAK3B,MAAM2B,MAAQ,GAAK,EAAKjB,MAAMwB,YACnC,EAAKxB,MAAMwB,cAbJ,E,gEAmBf,GAA4B,GAAxBhD,KAAKwB,MAAMyB,UAAmB,CAC9B,IAAIP,EAAaQ,YAAYlD,KAAK2C,OAAQ,EAAG,MAC7C3C,KAAK+C,SAAS,CAAEL,WAAYA,O,+BAKhC,IAAIhB,EAAY,mBAAqB1B,KAAKwB,MAAMf,KAEhD,OAA2B,GAAvBT,KAAKwB,MAAMC,SACJ,kBAACF,EAAD,CAAec,SAAUrC,KAAKwB,MAAMa,SAAUZ,SAAUzB,KAAKwB,MAAMC,WAI1E,yBAAKC,UAAWA,GACZ,kBAACH,EAAD,CAAec,SAAUrC,KAAKwB,MAAMa,SAAUZ,SAAUzB,KAAKwB,MAAMC,gB,GAnC9D0B,aCARC,EAAY,SAACC,EAAkBC,GACxC,IAAMC,EAAUC,YAAW,WACxBH,IACCI,aAAaF,KACZD,ICHHI,E,sCACFC,UAAa,c,KACbzB,UAJkB,UA2FtB,SAAS0B,EAASpC,GACd,OACI,yBAAKE,UAAU,iBAAiBC,MAAO,CAAEW,mBA5FtB,QA4F6DuB,gBAAiBrC,EAAMsC,UAAvG,KAKR,SAASC,EAAOvC,GACZ,OACI,yBAAKE,UAAW,gBAAkBF,EAAME,WACpC,4BAAQsC,IAAKxC,EAAMyC,aAAcxD,KAAK,SAClCyD,QAAS1C,EAAM2C,MAAOzC,UAAU,2BADpC,SAECF,EAAM4C,QACH,KACA,4BAAQJ,IAAKxC,EAAM6C,YAAa5D,KAAK,SACjCyD,QAAS1C,EAAM8C,KAAM5C,UAAU,6BADnC,QAQhB,SAAS6C,EAAO/C,GACZ,OAAQ,yBAAKE,UAAW,gBAAkBF,EAAME,WAC5C,wBAAIA,UAAW,eAAiBF,EAAMgD,cAAevF,GAAG,2BAAxD,IAAqFuC,EAAMiD,MAA3F,KACA,4BAASP,QAAS1C,EAAMkD,QAASjE,KAAK,SAASiB,UAAU,SACrD,0BAAMM,cAAY,OAAON,UAAWF,EAAMgD,eAA1C,IAA2D,uBAAG9C,UAAU,iBAAxE,OAKGiD,M,kDAhHX,WAAYnD,GAAQ,IAAD,8BACf,cAAMA,IAFVV,MAAS,IAAI4C,EACM,EAKnBS,MAAQ,SAACS,GAEL,EAAKC,OAAM,WACH,EAAKrD,MAAM2C,OACX,EAAK3C,MAAM2C,MAAMS,OATV,EAanBC,MAAQ,SAACxB,GACLD,GAAU,WACN,EAAKL,SAAS,CAACY,UAAU,cAAezB,UAzB9B,WAyByD,WAC/DkB,EAAUC,EAAU,UAGzB,MAnBY,EAqBnBiB,KAAO,SAACM,GAEJ,EAAKC,OAAM,WACH,EAAKrD,MAAM8C,MACX,EAAK9C,MAAM8C,KAAKM,OAzBT,EA6BnBF,QAAU,SAACE,GAEP,EAAKC,OAAM,WACH,EAAKrD,MAAMkD,SACX,EAAKlD,MAAMkD,QAAQE,OA/B3B,EAAKX,aAAea,IAAMC,YAC1B,EAAKV,YAAcS,IAAMC,YAHV,E,gEAsCE,IAAD,OACVC,EAAgC,GAAtBhF,KAAKwB,MAAMwD,SACtBA,GAAWhF,KAAKiE,aAAagB,QAC9BjF,KAAKiE,aAAagB,QAAQC,QACnBF,GAAWhF,KAAKqE,YAAYY,QACnCjF,KAAKqE,YAAYY,QAAQC,QAClBF,GAAWhF,KAAKiE,aAAagB,SACpCjF,KAAKiE,aAAagB,QAAQC,QAG9B9B,GAAU,WACN,EAAKL,SAAS,CAACY,UAAU,wBAAyBzB,UAAU,WAC7D,O,+BAIH,IAAMuC,EAAQzE,KAAKwB,MAAMiD,MAAQzE,KAAKwB,MAAMiD,MAAQ,OAC9CL,EAAgC,GAAtBpE,KAAKwB,MAAM4C,QAErBe,EADgC,GAAtBnF,KAAKwB,MAAMwD,QACO,YAAc,UAEhD,OACI,oCACI,kBAACpB,EAAD,CAAUE,QAAS9D,KAAKc,MAAM6C,YAC9B,yBAAKjC,UAAU,aAAaC,MAAO,CAAEyD,QAAS,UAC1C,yBAAK1D,UAAU,sCACXC,MAAO,CACHW,mBA1ED,QA2ECJ,UAAWlC,KAAKc,MAAMoB,YAG1B,yBAAKR,UAAU,gBAAgBC,MAAO,CAACO,UAAU,QAC7C,kBAAC,EAAD,CAAQsC,cAZA,aAYoC9C,UAAWyD,EAAiBV,MAAOA,EAAOC,QAAS1E,KAAK0E,UACpG,yBAAKhD,UAAU,cAAf,IAA+B1B,KAAKwB,MAAM6D,SAA1C,KACA,kBAACtB,EAAD,CAAQM,YAAarE,KAAKqE,YAAaJ,aAAcjE,KAAKiE,aAAcG,QAASA,EAASD,MAAOnE,KAAKmE,MAAOG,KAAMtE,KAAKsE,e,GA5EhInB,a,QCPhBmC,OAAcC,EACdC,GAAc,EAGZC,GADqB,IAAIC,MACD,IAAIA,OAOrBC,EAAkB,SAACrF,EAAKsF,GACpC,OAAKJ,GAAgBF,GAIrBzC,QAAQgD,MAAM,kBACdP,EAAYQ,KAAKxF,EAAK,GAAIyF,KAAKC,UAAUJ,KAClC,IALN/C,QAAQoD,KAAK,eACN,ICLYC,E,kDAInB,WAAY1E,GAAoC,IAAD,EAAvB2E,EAAuB,oFAC7C,cAAM3E,IAJR4E,eAG+C,IAF/CD,eAAyB,EAEsB,EAD/CrF,MAAa,CAAEuF,QAAS,IAAIC,MACmB,EAO/CC,oBAAsB,SAAClD,GACrB,OAA0B,GAAtB,EAAK8C,eACH9C,GACFA,KAEK,GAEoB,GAAzB,EAAKmD,kBACP,EAAKC,eACE,IAELpD,GACFA,KAEK,IArBsC,EAwBrCqD,cAAgB,SAACpG,EAAaI,GACtCiF,EAAgBrF,EAAKI,IAzBwB,EA4BrCiG,mBAAqB,SAACC,GAAmC,IAAD,EAChE,YAAKR,iBAAL,SAAgBO,mBAAmBC,IA7BU,EA+BrCC,qBAAuB,WAAO,IAAD,EACrC,YAAKT,iBAAL,SAAgBS,wBAhC6B,EAmC/CC,sBAAwB,WACtB,OAAO,EAAKtF,MAAMT,oBApC2B,EAuC/CgG,kBAAoB,SAACC,EAAYC,GAC/B,IAAMC,EAASF,EAAME,OACjBtI,EAAuB,YAAfsI,EAAOzG,KAAqByG,EAAOC,QAAUD,EAAOtI,MAIhE,GAHmB,UAAfsI,EAAOzG,OACT7B,EAAQwI,SAASxI,IAEfqI,EAAgB,CAClB,IAAMI,EAAK,EAAKvG,MAAMmG,GACtBI,EAAGH,EAAOvH,MAAQf,EAClB,EAAKmE,SAAL,eAAiBkE,EAAiBI,SAElC,EAAKtE,SAAL,eAAiBmE,EAAOvH,KAAOf,KAlDY,EA0E/C0I,OAAS,SAACC,EAAkBC,EAAuBC,EAA2BC,GAC5E,EAAKlH,aAAagH,GADuG,2BAAhBG,EAAgB,iCAAhBA,EAAgB,kBAGzHJ,EAAM,WAAN,EAAUI,GAAQC,MAAK,SAACC,GAClBJ,GACFA,EAAgBI,MAEjBC,OAAM,SAAClD,GACJ8C,EACFA,EAAc9C,IAEI,iBAANA,GACVmD,MAAM,qBAAuBnD,GAE/BmD,MAAM,0BAEPC,SAAQ,WACT,EAAKC,iBA3FsC,EA+F/CC,WAAa,SAACX,EAAkBE,EAA2BC,GAA4C,IAAC,IAAD,qBAAhBC,EAAgB,iCAAhBA,EAAgB,mBACrG,KAAKL,OAAL,SAAYC,GAAQ,EAAOE,EAAiBC,GAA5C,OAA8DC,KAhGjB,EAkG/CQ,uBAAyB,SAACZ,EAAkBE,EAA2BC,GAA4C,IAAC,IAAD,qBAAhBC,EAAgB,iCAAhBA,EAAgB,mBACjH,KAAKL,OAAL,SAAYC,GAAQ,EAAME,EAAiBC,GAA3C,OAA6DC,KAnGhB,EAqG/CS,cAAgB,WACd,IAAMlI,EAAyB,EAAKsB,MAAMP,WAC1C,GAAKf,EAEL,OADAA,EAAKV,SAAW,MACTW,OAAOC,OAAO,IAAIhB,EAAQc,IAzGY,EA2G/CmI,QAAU,WACR,IAAMnI,EAAO,EAAKkI,gBAClB,QAAKlI,GACEA,EAAKoI,QAAQ9J,EAAc+J,kBA9GW,EAgH/CC,UAAY,WAEV,IAAMC,EAAuB,CAAEC,IAAK,EAAGC,SAAU,UACjDvF,GAAU,WACRwF,OAAOC,SAASJ,KACf,MArH0C,EAuH/CjC,eAAiB,WAEf,OADiB,GAAQ,EAAKhF,MAAMN,aAAe,MAAQ,EAAKM,MAAMP,YAxHzB,EA2H/C6H,iBAAmB,SAACC,GAClB,IAAMxI,EAAG,eACT,OAAO,IAAIyI,SAAQ,SAAUC,EAASC,GAOpC3I,EAAI6F,UAAU+C,UAAU,aAAcJ,GAAM,GAN9B,SAAUnE,GACtBqE,GAAQ,MAEG,SAAUrE,GACrBqE,GAAQ,UAlIiC,EAwI/CG,uBAAyB,SAACL,GACxB,IAAMxI,EAAG,eACT,OAAO,IAAIyI,SAAQ,SAAUC,EAASC,GAOpC3I,EAAI6F,UAAUiD,eAAe,aAAcN,GAAM,GANnC,SAAUnE,GACtBqE,GAAQ,MAEG,SAAUrE,GACrBqE,GAAQ,UA/IiC,EAqJ/CK,SAAW,SAACP,GACV,EAAK3C,UAAU+C,UAAU,OAAQJ,GAAM,GAAM,gBAtJA,EAwJ/CQ,UAAY,SAACR,GACX,EAAK3C,UAAUiD,eAAe,QAASN,GAAM,GAAM,gBAzJN,EAqK/CS,uBAAyB,WACvB,EAAKF,SAAS,YAtK+B,EAwK/CG,qBAAuB,SAAC7E,GAGtB,IAAI8E,EAFJ7G,QAAQ8G,MAAM/E,GAIZ8E,EADE9E,EAAEiD,UAAYjD,EAAEiD,SAAS+B,KACjBhF,EAAEiD,SAAS+B,KAAKF,QAEhB9E,EAEZ,EAAK2E,UAAU,kBAAoBG,IAjLU,EAkM/CG,YAAc,WACZ,OAAO,EAAKrI,MAAML,UAhMlB,EAAKgF,cAAgBA,EACrB,EAAKC,UAAY5E,EAAMH,QAJsB,E,yDA2DlCmG,GAAwB,IAAD,EAClC,UAAAxH,KAAKoG,iBAAL,SAAgB5F,aAAagH,K,mCAGjB,IAAD,EACX,UAAAxH,KAAKoG,iBAAL,SAAgB6B,e,oCA6FXjI,KAAKmG,eAAuC,MAAtBnG,KAAKwB,MAAMsI,SAGtC9J,KAAKwB,MAAMsI,QAAQC,KAAK,Y,gCAGxB/J,KAAK+C,SAAS,CAAEsD,QAAS,IAAIC,S,0CAiBzBtG,KAAKuG,wB,2CAIiB,GAAtBvG,KAAKmG,eAAkD,GAAzBnG,KAAKwG,mBACrC3D,QAAQgD,aAAa7F,KAAM,iBAC3BA,KAAKuG,2B,GA9LgCpD,a,OCVvC6G,EAAQ,EACCC,EAAW,WACvB,IAAIC,EAAS,IAAIC,QAAO,IAAI7D,MAAO8D,sBAAsBC,WAEzD,QADAL,EACe,IAAME,GAyCtB,IAAMI,EAAS,CACd,UAAW,WAAY,QAAS,QAAS,MAAO,OAChD,OAAQ,UAAW,YAAa,UAAW,WAAY,YAa3CC,EAAY,SAAC3L,GACtB,OAAIA,GAAS,GACAA,EAAMyL,WAEZ,IAAIzL,GC3DM4L,E,4MAGpBC,KAAcR,I,EACdtK,U,IACA+K,iB,IACApK,S,IACAqK,mB,IACAC,a,IACAC,W,IACAC,e,IACAhL,KAAuB,G,EAGvBiL,QAAkB,E,EAClBC,UAAoB,gB,EACpB7E,eAAyB,E,EACzB8E,aAAwB,E,EACxBC,cAAmB3F,E,EASnB4F,eAAkB,SAACjL,GAClB,GAAwB,GAApB,EAAKJ,KAAKG,OAAa,OAAO,EAClC,IAAKC,EAAM,OAAO,EAClBA,EAAOd,EAAKgM,MAAMlL,GAClB,IAAK,IAAIH,EAAI,EAAGA,EAAI,EAAKD,KAAKG,OAAQF,IAAK,CAC1C,IAAMsL,EAAU,EAAKvL,KAAKC,GAC1B,GAAIG,EAAKoI,QAAQ+C,GAChB,OAAO,EAGT,OAAO,G,YArCyBrM,GAAbwL,EACbc,yBAAkC,gBADrBd,EAoBbe,iBAAmB,SAACC,GAC1B,YAAIjG,GAAaiG,EAAKR,UACdR,EAAKc,yBAENE,EAAKR,WCxBP,IAAMS,EAAW,WAEpB,IADA,IAAIC,EAAkB,GACb3L,EAAI,EAAGA,EAAI4L,EAAO1L,OAAQF,IAAK,CACpC,IAAMsL,EAAgBM,EAAO5L,GACvByL,EAAYrL,OAAOC,OAAO,IAAIoK,EAAMa,GACpCH,EAAkB,GACxB,GAAIG,EAAQH,SAAU,CAClB,IAAK,IAAInL,EAAI,EAAGA,EAAIsL,EAAQH,SAASjL,OAAQF,IAAK,CAC9C,IAAM6L,EAAUP,EAAQH,SAASnL,GACjCmL,EAASnB,KAAK5J,OAAOC,OAAO,IAAIoK,EAAMoB,IAE1CJ,EAAKN,SAAWA,EAEpBQ,EAAQ3B,KAAKyB,GAGjB,OAAOE,GA0BLC,EAAiB,CACnB,CACIlB,KAAM,OACN9K,KAAM,OACNW,IAAK,QACL0K,UAAW,aACXD,QAAQ,EACR5E,eAAe,EACf8E,aAAa,EACbnL,KAAO,IAGX,CACI2K,KAAM,YACN9K,KAAM,YACNW,IAAK,aACL0K,UAAW,wBACXD,QAAQ,EACR5E,eAAe,EACf8E,aAAa,EACbnL,KAAM,CAACtB,EAAc+J,gBAAiB/J,EAAcqN,qBACpDX,SAAU,CACN,CACIT,KAAM,WACN9K,KAAM,YACNW,IAAK,WACL0K,UAAW,iBACXlL,KAAM,CAAEtB,EAAcqN,wBAWlC,CACIpB,KAAM,aACN9K,KAAM,YACNW,IAAK,cACL0K,UAAW,mBACXD,QAAQ,EACR5E,eAAe,EACf8E,aAAa,EACbnL,KAAM,CAACtB,EAAc+J,gBAAiB/J,EAAcqN,qBACpDX,SAAU,CACN,CACIT,KAAM,oBACN9K,KAAM,UACNW,IAAK,oBACL0K,UAAW,eACXlL,KAAM,CAACtB,EAAc+J,kBAEzB,CACIkC,KAAM,gBACN9K,KAAM,uBACNW,IAAK,gBACL0K,UAAW,cACXlL,KAAM,CAACtB,EAAc+J,kBAEzB,CACIkC,KAAM,aACN9K,KAAM,mBACNW,IAAK,aACL0K,UAAW,sBACXlL,KAAM,CAACtB,EAAc+J,kBAEzB,CACIkC,KAAM,iBACN9K,KAAM,aACNW,IAAK,iBACL0K,UAAW,8BACXlL,KAAM,CAACtB,EAAc+J,gBAAiB/J,EAAcqN,sBAExD,CACIpB,KAAM,qBACN9K,KAAM,iBACNW,IAAK,qBACL0K,UAAW,cACXlL,KAAM,CAACtB,EAAc+J,kBAEzB,CACIkC,KAAM,iBACN9K,KAAM,mBACNW,IAAK,iBACL0K,UAAW,sBACXlL,KAAM,CAACtB,EAAcqN,wBAIjC,CACIpB,KAAM,SACN9K,KAAM,SACNW,IAAK,UACL0K,UAAW,gBACXD,QAAQ,EACR5E,eAAe,EACf8E,aAAa,EACbnL,KAAM,CAAGtB,EAAcqN,oBAAqBrN,EAAc+J,iBAC1D2C,SAAU,CACN,CACIT,KAAM,cACN9K,KAAM,QACNW,IAAK,cACL0K,UAAW,eACXlL,KAAM,CAAEtB,EAAcqN,sBAE1B,CACIpB,KAAM,cACN9K,KAAM,0BACNW,IAAK,aACL0K,UAAW,cACXlL,KAAM,CAAEtB,EAAcqN,sBAE1B,CACIpB,KAAM,kBACN9K,KAAM,0BACNW,IAAK,kBACL0K,UAAW,cACXlL,KAAM,CAAEtB,EAAcqN,sBAS1B,CACIpB,KAAM,eACN9K,KAAM,oBACNW,IAAK,eACL0K,UAAW,mBACXlL,KAAM,CAAEtB,EAAcqN,oBAAqBrN,EAAc+J,oBAMrE,CACIkC,KAAM,SACN9K,KAAM,UACNW,IAAK,UACL0K,UAAW,cACXD,QAAQ,EACR5E,eAAe,EACf8E,aAAa,EACbnL,KAAM,CAAGtB,EAAcqN,oBAAqBrN,EAAc+J,iBAC1D2C,SAAU,CACN,CACIT,KAAM,gBACN9K,KAAM,QACNW,IAAK,gBACL0K,UAAW,cACXlL,KAAM,CAAEtB,EAAcqN,oBAAqBrN,EAAc+J,oBAIrE,CACIkC,KAAM,WACN9K,KAAM,UACNW,IAAK,YACL0K,UAAW,cACXD,QAAQ,EACR5E,eAAe,EACf8E,aAAa,EACbnL,KAAM,CAAGtB,EAAc+J,iBACvB2C,SAAU,CACN,CACIT,KAAM,SACN9K,KAAM,cACNW,IAAK,SACL0K,UAAW,aACXlL,KAAM,CAAEtB,EAAc+J,qBCjNhCuD,G,4CACJC,cAAwB,IAEpBxH,E,kDAGJ,WAAY/C,GAAa,IAAD,8BACtB,cAAMA,GAAO,IAHfV,MAAgB,IAAIgL,EAEI,EADxBE,mBAAyDlH,IAAMC,YACvC,EAGxBkH,eAAiB,WACf,EAAKlJ,SAAS,CAAEgJ,cAAe,EAAKjL,MAAMiL,gBAJpB,EAMxBG,SAAW,SAACtH,GACV,IAAMrE,EAAG,eACTA,EAAIuI,iBAAiB,WAAWlB,MAC9B,SAAUuE,GACJA,GACF5L,EAAIiB,MAAMnB,cAAcE,EAAI6F,eAXZ,EAgBxBgG,QAAU,SAACZ,GACL,EAAK1K,MAAMiL,cAAgB,EAAKC,mBAAmB/G,SACrD,EAAK+G,mBAAmB/G,QAAQoH,QAElC,EAAK7K,MAAM4K,QAAQZ,IApBG,E,qDAuBd,IAAD,OACDO,EAAwB/L,KAAKc,MAAMiL,aACnCO,EAAQb,IACRvL,EAAOF,KAAKoI,gBACZmE,EAAUvM,KAAK8G,wBACb0F,EAAYD,EAAZC,QACR,OACE,yBAAK9K,UAAU,0BAA0BC,MAAO,CAAEE,SAAU,QAASC,OAAQ,GAAIG,QAAS,EAAGL,OAAQ,IACnG,kBAAC,EAAD,CAAW2K,QAASA,IACpB,yBAAKtN,GAAG,SAASyC,UAAU,qDACzB,uBAAGzC,GAAG,eAAeyC,UAAU,eAAe+K,KAAK,KAChDD,EADH,gBACyBD,EAAQG,SADjC,IAC4CH,EAAQI,MAEpD,4BACE3I,IAAKhE,KAAKgM,mBACV9H,QAASlE,KAAKiM,eACdvK,UAAU,iBACVjB,KAAK,SACLmM,cAAY,WACZC,cAAY,iBACZC,gBAAc,gBACdC,gBAAc,QACdC,aAAW,qBAEX,uBAAGtL,UAAWqK,EAAe,eAAiB,iBAEhD,yBAAKrK,UAAU,2BAA2BzC,GAAG,iBAC3C,wBAAIA,GAAG,aAAayC,UAAU,mCAC3B4K,EAAMW,KAAI,SAAAzB,GACT,GAAY,MAARA,GAAiBA,EAAKrF,gBAAkBjG,EAAO,OAAO,KAC1D,GAAIsL,EAAKL,gBAA+C,GAA7BK,EAAKL,eAAejL,GAAgB,OAAO,KACtE,IAAMgN,EAAW,EAAK1L,MAAM2L,gBAAkB3B,EAAKf,KACnD,OACE,wBAAI2C,IAAK,eAAiB,IAAIjD,OAAOqB,EAAKf,MAAO/I,UAAW,aAAewL,EAAW,oBAAsB,iBAC1G,kBAAC,IAAD,CAAMhJ,QAAS,kBAAM,EAAKkI,QAAQZ,IAAO9J,UAAW,aAClD2L,GAAI7B,EAAKlL,KAAK,8BAAOkL,EAAK7L,YAKpC,0BAAM+B,UAAU,4BACd,kBAAC,EAAD,CAAU4L,YAAatN,KAAKwB,MAAM8L,YAChCpB,SAAUlM,KAAKkM,SAAUhM,KAAMA,Y,GApE1BgG,GA6EfqH,EAAY,SAAC/L,GAA4C,IACrD+K,EAAY/K,EAAZ+K,QACR,OACE,yBAAKtN,GAAG,mBAAmB0C,MAAO,CAAE6L,YAAa,UAAY9L,UAAU,mBACrE,uBAAGC,MAAO,CAAE8L,SAAU,QAAU/L,UAAU,0BAA0B+K,KAAK,KACvE,gCAASF,EAAQC,QAAjB,eAAsCD,EAAQG,SAA9C,IAAyDH,EAAQI,SAKnEe,EAAW,SAAClM,GAChB,OAAIA,EAAMtB,KAEN,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAMgE,QAAS1C,EAAM8L,YAAa3L,MAAO,CAAEgM,YAAa,OAASjM,UAAU,oCACzE2L,GAAG,0BACH,uBAAG3L,UAAU,uBAFf,OAGSF,EAAMtB,KAAKb,aAEpB,uBAAGsC,MAAO,CAAEgM,YAAa,OAASjM,UAAU,sCAC1CwC,QAAS1C,EAAM0K,UAAU,uBAAGxK,UAAU,wBADxC,eAOJ,kBAAC,IAAD,CAAMC,MAAO,CAAEgM,YAAa,OAASzJ,QAAS1C,EAAM8L,YAAa5L,UAAU,mCACzE2L,GAAG,UADL,IACe,uBAAG3L,UAAU,uBAD5B,cAWWkM,cAAWC,YACxBhN,GANyB,SAACiN,GAAD,MAAyB,CAClDzN,cAAe,SAACE,GAAD,OAAcuN,EAASzN,EAAcE,QAI5BsN,CAGxBtJ,IClImBwJ,G,wDACjB,WAAYvM,GAAQ,uCACVA,G,qDAKN,IADA,IAAMwM,EAA0B,IAAItI,MAC3B3F,EAAI,EAAGA,GAAK,GAAIA,IACrBiO,EAAUjE,KAAK,yBAAKqD,IAAK,gBAAgBrN,KAE7C,OACI,yBAAK4B,MAAO,CAACS,MAAM,OAAQD,OAAO,OAAQiD,QAAQ,SAAU1D,UAAU,+BACjE,yBAAKC,MAAO,CAACsM,WAA8B,GAAnBjO,KAAKwB,MAAM0M,KAAc,SAAS,WAAYxM,UAAU,eAC9EsM,Q,GAbkB7K,cCO/B2I,G,4CACJqC,SAAmB,E,KAAO5O,MAAgB,G,KAAI6O,aAAuB,KAEjEC,E,kDAEJ,WAAY7M,GAAa,IAAD,8BACtB,cAAMA,GAAO,IAFfV,MAAgB,IAAIgL,EACI,EAGxBtL,aAAe,kBAAM,EAAKuC,SAAS,CAAEoL,SAAS,KAHtB,EAIxBlG,WAAa,kBAAM,EAAKlF,SAAS,CAAEoL,SAAS,KAJpB,EAqBxBG,yBAA2B,SAAC1J,GAC1B,IAAMsC,EAAStC,EAAEsC,OACXvH,EAAsBuH,EAAOqH,aAAa,QAC5C,MAAQ5O,GACZ,EAAKoD,SAAL,eAAiBpD,EAAOuH,EAAOtI,SAzBT,E,kDAKlBgG,GACJA,EAAE4J,iBACFxO,KAAKwB,MAAMiN,aAAazO,KAAKc,MAAMvB,MAAOS,KAAKc,MAAMsN,aAAcpO,Q,0CAGnEtB,SAAS+F,MAAQ,QACbzE,KAAKwG,kBACPxG,KAAKwB,MAAMsI,QAAQC,KAAK,gB,2CAKtB/J,KAAKwG,kBACPxG,KAAKwB,MAAMsI,QAAQC,KAAK,gB,+BASlB,IAAD,OACP,OACE,yBAAK9K,GAAG,QAAQyC,UAAU,QACxB,0BAAM/B,KAAK,QAAQ+O,SAAU,SAAC9J,GAAQ,EAAK+J,MAAM/J,IAAMlD,UAAU,eAC/D,yBAAKA,UAAU,eACb,4BAAI,uBAAGA,UAAU,wBACjB,wBAAIA,UAAU,8BAAd,mBAEF,kBAAC,GAAD,CAAY9C,MAAOoB,KAAKc,MAAMvB,MAAOqP,SAAU5O,KAAKsO,2BACpD,kBAAC,EAAD,CAAe1P,MAAOoB,KAAKc,MAAMsN,aAAcQ,SAAU5O,KAAKsO,2BAE5DtO,KAAKc,MAAMqN,QACX,kBAAC,EAAD,MACA,kBAAC,WAAD,KACE,4BAAQzM,UAAU,iBAAiBC,MAAO,CAAEgM,YAAa,MAAO9J,gBAAiB,gBAAkBpD,KAAK,UAAxG,YAKJ,2BAAOd,KAAK,iBAAiBc,KAAK,SAAS7B,MAAM,e,GAhDvCsH,GAuDd2I,EAAgB,SAAC,GAAyB,IAAvBjQ,EAAsB,EAAtBA,MAAOgQ,EAAe,EAAfA,SAC9B,OAAO,kBAAC,WAAD,KACL,2BAAOlN,UAAU,WAAjB,YACA,2BAAO/B,KAAK,eAAef,MAAOA,EAAOgQ,SAAUA,EAAUnO,KAAK,WAAWxB,GAAG,gBAAgByC,UAAU,eACxGoN,YAAY,WAAWC,UAAQ,MAG/BC,GAAa,SAAC,GAAyB,IAAvBpQ,EAAsB,EAAtBA,MAAOgQ,EAAe,EAAfA,SAC3B,OAAQ,kBAAC,WAAD,KACN,2BAAOlN,UAAU,WAAjB,SACA,2BAAO/B,KAAK,QAAQf,MAAOA,EAAOgQ,SAAUA,EAAUnO,KAAK,OAAOiB,UAAU,eAC1EoN,YAAY,QAAQC,UAAQ,EAACE,WAAS,MAQ7BrB,eAAWC,YACxBhN,GANyB,SAACiN,GAAD,MAAyB,CAClDW,aAAc,SAACS,EAAkB1P,EAAkBe,GAArC,OAAkDuN,EbStC,SAACvO,EAAOC,EAAUe,GAY5C,OAXAA,EAAIC,eACe,CACjBC,KCzFoB,WD0FpBC,QAAS,GACTC,KAAM,CACJF,KC5FkB,WD6FlBH,IAAKzB,IAAc+B,OAAO,SAC1BrB,MAAOA,EAAOC,SAAUA,EACxBe,IAAKA,IalBgEkO,CAAaS,EAAU1P,EAAUe,QAIlFsN,CAGxBQ,ICxFmBc,G,kDACjB,WAAY3N,GAA2F,IAAD,EAAzEiD,EAAyE,4DAA1Cc,EAAWY,EAA+B,oFAClG,cAAM3E,EAAO2E,IADY1B,QAGrB/F,SAAS+F,WADCc,IAAVd,GAAiC,OAAVA,EACNA,EAEA,cAL6E,E,gEASjF,IAAD,OAChBzE,KAAKuG,qBAAoB,WACrB,EAAKiC,YACL,EAAK4G,sB,+CAbqBlJ,GCFjBmJ,G,WAgBjB,WAAmBC,GAAc,yBAAdA,OAAa,KAGhC3P,KAAe,GAHiB,KAIhC4P,KAAa,IAAIC,KAJe,KAKhClP,IAAc,GALkB,KAMhCsJ,KAAe,G,mDArBR6F,GACHzP,KAAKM,IAAMmP,EACXzP,KAAK4J,KAAO6F,EAAKC,MAAM,KAAK,M,gCAEhB/P,GACZ,IAAMsG,EAAO,IAAIoJ,EAEjB,OADApJ,EAAKtG,KAAOA,EACLsG,I,+BAEKtG,EAAWW,GACvB,IAAM2F,EAAO,IAAIoJ,EAGjB,OAFApJ,EAAKtG,KAAOA,EACZsG,EAAK3F,IAAMA,EACJ2F,M,KCXF0J,GAA4B,SAACC,GACtC,OAAO,IAAI5G,SAAwB,SAACC,EAASC,GACzC,GAAI,MAAQ0G,EAAUC,OAAUD,EAAUC,MAAM,GAIhD,IACI,IAAMP,EAAOM,EAAUC,MAAM,GACvBC,EAAS,IAAIC,WACnBD,EAAOE,cAAcV,GACrBzM,QAAQgD,MAAM,uBAAwByJ,GACtCQ,EAAOG,OAAS,WACZ,IAAMhK,EAAO,IAAIoJ,GAAeC,GAChCrJ,EAAKiK,OAAO,IAAI/F,OAAO2F,EAAOK,QAAQ9F,YAEtCpE,EAAKtG,KAAO2P,EAAK3P,KACjBsJ,EAAQhD,IAEZ6J,EAAOM,QAAU,SAAUzG,GACvBT,EAAOS,IAEb,MAAO/E,GACLsE,EAAOtE,QAnBPsE,EAAO,IAAImH,MAAM,gBCOvB3M,G,sCACF4M,gB,GAEEC,G,kDAGF,WAAY/O,GAAa,IAAD,8BACpB,cAAMA,EAAO,aAAa,IAH9BV,MAAc,IAAI4C,GAEM,EADxB8M,oBACwB,IAKxBC,eAAiB,SAAC7L,GACdA,EAAE4J,iBACG,EAAK1N,MAAMwP,YAEhB,EAAK9O,MAAMsI,QAAQC,KAAK,CACpB2G,SAAU,0BACR5P,MAAO,CAACwP,WAAY,EAAKxP,MAAMwP,eAXjB,EAcxBK,YAAc,SAAC/L,GACX+K,GAA0B/K,EAAEsC,QACvBU,MAAK,SAAA0I,GACF,EAAKvN,SAAS,CAACuN,WAAWA,OAC3BxI,MAAMjF,QAAQ8G,QAhBrB,EAAK6G,eAAiB,EAAK3G,cAAc2G,eAFrB,E,qDAoBd,IAAD,EACCtQ,EAAyBF,KAAKoI,gBACpC,OAAKlI,EAED,yBAAMwB,UAAU,iCACZ,yCACA,yBAAKA,UAAU,oBAAf,YACa,gCAASxB,EAAKZ,SAAd,MACT,+BAIF,UAACU,KAAKoI,uBAAN,aAAC,EAAsBE,QAAQ9J,EAAcqN,sBAC3C,0BAAMnK,UAAU,oBAAoBgN,SAAU1O,KAAKyQ,gBAC/C,4BAAI,uBAAG/O,UAAU,mBACjB,kDACA,2BAAOkN,SAAU5O,KAAK2Q,YAAalQ,KAAK,OAAOmQ,OAAO,UAAUlP,UAAU,sBAC1E,4BACC1B,KAAKc,MAAMwP,WACZ,6BACI,2BAAO7P,KAAK,SAASiB,UAAU,yBAAyB9C,MAAM,gBAC9D,yBAAK8C,UAAU,aAAamP,IAAK7Q,KAAKc,MAAMwP,WAAWhQ,OAGzD,MAZ4D,MAV5D,S,GAzBE6O,IAuDbvB,eAAWC,YACtBhN,EADsBgN,CAExB0C,KC/DIO,G,kDACF,WAAYtP,GAAa,uCACfA,GAAO,G,gEAIb9C,SAAS+F,MAAQ,S,+BAEX,IAAD,EACC1D,EAAyCf,KAAK8G,wBAC9CiK,EAAWhS,IAAiBgC,EAAmBiQ,cACrD,OACI,yBAAKtP,UAAU,+BAA+BC,MAAO,CAACM,QAAQ,IAC1D,yBAAKP,UAAU,YACXC,MAAO,CACHC,OAAO,MACPM,UAAW,OACX+O,gBAAiB,QAAUF,EAAW,KACtCG,eAAgB,QAChBrG,MAAK,UAAE9J,EAAmB+J,iBAArB,QAAgC,eAGzC,wBAAIpJ,UAAU,aAAaX,EAAmByL,SAC9C,uBAAG9K,UAAU,QAAQX,EAAmBoQ,gBACxC,wBAAIzP,UAAU,SACd,2BAAIX,EAAmBqQ,mBACvB,kBAAC,IAAD,CAAM1P,UAAU,yBAAyB2L,GAAG,SAASvN,KAAK,UAA1D,kB,GA1BGoG,GAmCR0H,eAAWC,YACtBhN,EADsBgN,CAExBiD,KC5CmBO,G,4MACjBnR,U,IACAoR,W,cAFkCtS,GCDzBuS,GAAc,WAAyB,IAAD,uBAApBC,EAAoB,yBAApBA,EAAoB,gBAE/C,OAAQ,+BACJ,4BACKA,EAAOvE,KAAI,SAACrO,GAET,OAAO,wBAAIwO,IAAKnD,KAAarL,SCLhC6S,GAAS,CAClB,UACA,WACA,QACA,QACA,MACA,OACA,OACA,UACA,YACA,UACA,WACA,YAGEC,GAAa,CAAE,GAAO,GAAO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjEC,GAAgB,CAAE,GAAO,GAAO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAY7DC,GAAuB,SAACC,GAIjC,MADY,CAFCA,EAAKC,cAECvH,EAAUsH,EAAKE,WAAW,GAAIxH,EAAUsH,EAAKG,YACrDC,KAAK,MAOX,IAUIC,GAAY,SAACC,GACtB,IAAIC,EAAaD,EAAEzC,MAAM,MACrB2C,EAAIjL,SAASgL,EAAE,IACnB,OAAO,IAAI9L,KAAKc,SAASgL,EAAE,MAAOC,EAAGjL,SAASgL,EAAE,MCpD/BE,G,sCAgBnBC,MAAiB,E,KACjBC,KAAgB,E,KAChBC,e,OACAC,a,OACAC,c,OACAC,Y,OACAC,Y,OACAC,aAAoC,G,KACpCC,c,OACAC,uB,GAzBmBV,GACZW,kBAAoB,SAACC,GAC1B,IAAK,IAAM9F,KAAO8F,EAAEJ,aACd1F,EAAI+F,SAAS,MACfD,EAAEJ,aAAa1F,GAAOwE,GAAqB,IAAItL,MAE/C4M,EAAEJ,aAAa1F,GAAO,GAG1B,OAAO8F,GATUZ,GAWZc,UAAY,SAAC3D,GAClB,IAAMyD,EAAI,IAAIZ,GAEd,OADAY,EAAEX,MAAQ9C,EACHyD,GAdUZ,GA4BLe,YAAc,SAACC,GAC3B,IAAKA,EAAQ,MAAO,GACpB,IAAIC,EAAc,GAalB,GAZID,EAAOd,MAAQc,EAAOd,MAAQ,GAChCe,EAAExJ,KAAF,eAAeuJ,EAAOd,OAEpBc,EAAOf,OAASe,EAAOf,OAAS,GAClCgB,EAAExJ,KAAF,gBAAgBuJ,EAAOf,QAErBe,EAAOZ,SACTa,EAAExJ,KAAF,gBAAgBuJ,EAAOZ,WAErBY,EAAOb,WAAmC,QAArBa,EAAOb,WAA4C,SAArBa,EAAOb,WAC5Dc,EAAExJ,KAAF,oBAAyC,SAArBuJ,EAAOb,UAAuB,OAAS,UAEzDa,EAAOR,aACT,IAAK,IAAM1F,KAAOkG,EAAOR,aACvB,GAAI3S,OAAOqT,UAAUC,eAAeC,KAAKJ,EAAOR,aAAc1F,GAAM,CAClE,IAAM/B,EAAUiI,EAAOR,aAAa1F,GACpCmG,EAAExJ,KAAF,iBAAiB4J,mBAAmBvG,GAApC,YAA4CuG,mBAAmBtI,KAGrE,MAAO,IAAMkI,EAAEtB,KAAK,MAlDHK,GAoDLsB,mBAAqB,SAACN,EAAgB1O,EAAsDiP,GACxG,IAAMC,EAAM1M,SAASxC,EAAEsC,OAAOtI,OAC9B,IAAImV,MAAMD,GAAV,CAGA,IAAME,EAAe,IAAI1N,KAAKgN,EAAOR,aAAae,IAClD,OAAQjP,EAAEsC,OAAOvH,MACf,IAAK,MACHqU,EAAaC,QAAQH,GACrB,MACF,IAAK,QACHE,EAAaE,SAASJ,GACtB,MACF,IAAK,OACHE,EAAaG,YAAYL,GACzB,MACF,QACE,OAEJR,EAAOR,aAAae,GAASjC,GAAqBoC,K,ICjEjCI,G,kDAEjB,WAAY5S,GAAQ,uCACVA,G,qDAGN,GAAI,GAASxB,KAAKwB,MAAM0M,KAAM,OAAO,KACrC,IAAMmG,EAAwC,YAA1BrU,KAAKwB,MAAM6S,YAA4B,WAAa,aACxE,OACI,yBAAK3S,UAAW,qBAAc1B,KAAKwB,MAAME,UAAzB,MAAwD,YAAf2S,EAA4B,GAAK,QACtF,2BAAO3S,UAA2B,YAAf2S,EAA4B,GAAK,YAAa,gCAASrU,KAAKwB,MAAM8S,MAAQtU,KAAKwB,MAAM8S,MAAQ,OAChH,yBAAK5S,UAA2B,YAAf2S,EAA4B,GAAK,YAC7CrU,KAAKwB,MAAM6D,e,GAZOlC,aCAlBoR,G,kDACjB,WAAY/S,GAAgB,uCAClBA,G,qDAEA,IAAD,OACCgT,EAAgBC,GAAqBzU,KAAKwB,MAAM+Q,MAAOvS,KAAKwB,MAAMkT,UAAW1U,KAAKwB,MAAMmT,YAC9F,GAA4B,GAAxBH,EAAcvU,OAAe,OAAO,KACxC,IAAM2U,EAAYJ,EAAcA,EAAcvU,OAAS,GACjD4U,EAAW7U,KAAKwB,MAAMmT,WAAa,GAAKC,EAAa,EAAI5U,KAAKwB,MAAMmT,WAAa,EACjFG,EAAc9U,KAAKwB,MAAMmT,WAAa,EAAI,EAAGC,EAAU,EAAI5U,KAAKwB,MAAMmT,WAAa,EACzF,OAAQ,6BACJ,yBAAK3H,aAAW,2BACZ,wBAAItL,UAAU,cACV,wBAAIA,UAAU,aAAY,uBAAGA,UAAU,YAAYwC,QAAS,SAACU,GAAD,OAAO,EAAKpD,MAAM0C,QAAQ4Q,KAA5D,aACzBN,EAAcvH,KAAI,SAACuF,EAAMzS,GACtB,OAAO,wBAAIqN,IAAK,OAAOnD,IAAYvI,UAAW,cAAc8Q,EAAK,GAAK,EAAKhR,MAAMmT,WAAW,SAAS,KAAK,uBAAGjT,UAAU,aAAawC,QAAS,SAACU,GAAD,OAAO,EAAKpD,MAAM0C,QAAQsO,EAAO,KAAMA,OAExL,wBAAI9Q,UAAU,aAAY,uBAAGA,UAAU,YAAYwC,QAAS,SAACU,GAAD,OAAO,EAAKpD,MAAM0C,QAAQ2Q,KAA5D,gB,GAjBC1R,aAwBzCsR,GAAuB,SAAClC,EAAemC,EAAmBK,GAG5D,IAAMC,EAA8B,GAC9BC,EAAcC,KAAKC,KAAKT,EAAYnC,GAGpC6C,EAAOL,EAAe,EACtBM,EAAON,EAAe,EAKxBE,EAAc,GACdD,EAAkBjL,KAAK,GAE3B,IAAK,IAAIhK,EAAIqV,EAAKrV,GAAKsV,EAAKtV,IACpBA,EAAI,GAAKA,GAAKkV,GACbD,EAAkBjL,KAAKhK,GAMhC,OAHIsV,EAAMJ,GACND,EAAkBjL,KAAKkL,GAEpBD,GClDUM,G,kDAEjB,WAAY9T,GAAa,uCACfA,G,qDAEA,IAAD,EACL,GAAuB,GAAnBxB,KAAKwB,MAAM0M,KAAe,OAAO,KACrC,IAAMqH,EAAY,UAAGvV,KAAKwB,MAAME,iBAAd,QAA2B,4BAC7C,OAAI1B,KAAKwB,MAAM6L,GACJ,kBAAC,IAAD,iBAAUrN,KAAKwB,MAAMgU,WAArB,CAAiCnI,GAAIrN,KAAKwB,MAAM6L,GAAI1L,MAAO3B,KAAKwB,MAAMG,MAAOuC,QAASlE,KAAKwB,MAAM0C,QAASxC,UAAW6T,IACvHvV,KAAKwB,MAAMiU,cACR,0BAAM9T,MAAO,CAAEgM,YAAa3N,KAAKwB,MAAM6D,SAAS,MAAM,QAAS,uBAAG3D,UAAW1B,KAAKwB,MAAMiU,iBAExF,KACHzV,KAAKwB,MAAM6D,UAIhB,uCAAOrF,KAAKwB,MAAMgU,WAAlB,CAA8BE,KAAM1V,KAAKwB,MAAMG,MAAOuC,QAASlE,KAAKwB,MAAM0C,QAASxC,UAAW6T,IACzFvV,KAAKwB,MAAMiU,cACR,0BAAM9T,MAAO,CAAEgM,YAAa3N,KAAKwB,MAAM6D,SAAS,MAAM,QAAS,uBAAG3D,UAAW1B,KAAKwB,MAAMiU,iBAExF,KACHzV,KAAKwB,MAAM6D,c,GAvBgBlC,aCKtCwS,G,kDAEF,WAAYnU,GAAQ,IAAD,8BACf,cAAMA,GAAO,IAFjBoU,8BACmB,IAKnBC,YAAc,WACV,OAAO,EAAKrU,MAAMsU,UANH,EAQnBC,mBAAqB,SAAClO,GAEd,EAAKrG,MAAMwU,WACX,EAAKxU,MAAMwU,aAXA,EAcnBC,gBAAkB,SAAClL,GACf,IAAMmL,EAAM,EAAKL,cACjB,EAAK3N,WACD,EAAK0N,yBAAyBO,SAC9B,EAAKJ,mBACL,EAAKtM,qBACLyM,EAAKnL,IAlBT,EAAK6K,yBAA2B,EAAK/L,cAAc+L,yBAFpC,E,qDAuBT,IAAD,aACCpU,EAAQxB,KAAKwB,MACb0U,EAAMlW,KAAK6V,cACXO,EAAS,UAAGF,EAAIhW,YAAP,aAAG,EAAUoI,QAAQ9J,EAAcqN,qBAClD,OACI,wBAAIuB,IAAK8I,EAAIjX,IACT,4BAAKuC,EAAM6U,eAAiB,GAC5B,sCAAKH,EAAIhW,YAAT,aAAK,EAAUZ,UACf,sCAAK4W,EAAIhW,YAAT,aAAK,EAAUX,OACf,4BAAK2W,EAAI5E,OACT,4BAAI,uBAAG5P,UAAW0U,EAAY,4BAA8B,kBAC5D,gCAAmB,GAAbA,EACF,kBAAC,GAAD,CAAgB1U,UAAU,wBAAwBwC,QAAS,SAACU,GAAD,OAAO,EAAKqR,iBAAgB,KAAvF,eAGA,kBAAC,GAAD,CAAgBvU,UAAU,yBAAyBwC,QAAS,SAACU,GAAD,OAAO,EAAKqR,iBAAgB,KAAxF,yB,GAxCM/P,GAkDX0H,eAAWC,YACtBhN,EADsBgN,CAExB8H,KCtDmBW,G,kDAEjB,WAAY9U,GAAY,uCACdA,G,qDAEA,IAAD,EACL,GAAuB,GAAnBxB,KAAKwB,MAAM0M,KAAe,OAAO,KACrC,IAAMqH,EAAY,UAAGvV,KAAKwB,MAAME,iBAAd,QAAyB,4BAC3C,OACI,qCAAGC,MAAO3B,KAAKwB,MAAMG,OAAW3B,KAAKwB,MAAMgU,WAA3C,CAAuDtR,QAASlE,KAAKwB,MAAM0C,QAASxC,UAAW6T,IAC1FvV,KAAKwB,MAAMiU,cACZ,0BAAM9T,MAAO3B,KAAKwB,MAAM6D,SAAS,CAACsI,YAAY,OAAO,IAAI,uBAAGjM,UAAW1B,KAAKwB,MAAMiU,iBAElF,KACCzV,KAAKwB,MAAM6D,c,GAdclC,aCFrBoT,G,uKAEP,IAAD,WACC/U,EAAQxB,KAAKwB,MACbuJ,EAAS/K,KAAKwB,MAAMuJ,OAC1B,OACI,yBAAKrJ,UAAU,aACX,kBAAC,GAAD,CAAcA,UAAW,gBAAkBqJ,EAAS,WAAa,oBAAqB7G,QAAS,SAACU,GAAD,OAAO,EAAKpD,MAAM0C,SAAQ,KAAzH,UACK1C,EAAMgV,gBADX,QACqB,OACrB,kBAAC,GAAD,CAAc9U,UAAW,gBAA4B,GAAVqJ,EAAkB,WAAa,oBAAqB7G,QAAS,SAACU,GAAD,OAAO,EAAKpD,MAAM0C,SAAQ,KAAlI,UACK1C,EAAMiV,eADX,QACoB,W,GAVMtT,a,iBCEZuT,I,wDAQ5B,WACElV,EACUmV,EACAnL,GAET,IAAD,MADUoL,EACV,oFACA,cAAMpV,EAAO,eAAe,IAJlBmV,YAGV,EAFUnL,OAEV,EADUoL,kBACV,EAZQC,uBAYR,IAXQC,QAAkChS,IAAMC,YAWhD,EATFgS,YAAc,WACZ,MAAM,IAAI1G,MAAM,+CAQhB,EAQF7P,aAAe,WAAoC,IAAnCgH,EAAkC,wDAC5C,EAAKoP,gBACP,EAAK7T,SAAS,CAAEoL,SAAS,IAEzB,mFAAmB3G,IAZrB,EAeFS,WAAa,WACP,EAAK2O,gBACP,EAAK7T,SAAS,CAAEoL,SAAS,IAEzB,mFAnBF,EAsBF6I,UAAY,WACV,IAAMC,EAAsB,CAC1B3D,OAAQ,EAAKxS,MAAMwS,OACnBqD,UAAW,EAAKA,WAElB,EAAKzO,WACH,EAAK2O,kBAAkBK,KACvB,EAAKC,YACL,EAAK1N,qBACLwN,EACA,EAAKzL,OAhCP,EAmCF2L,YAAc,SAACtP,GACb,EAAK9E,SAAS,CAAEqU,MAAOvP,EAASsI,OAAOiH,MAAO1C,UAAW7M,EAASsI,OAAOuE,aApCzE,EAuCF2C,aAAe,SAACzS,GAAyB,IAMnChG,EALI0U,EAAW,EAAKxS,MAAhBwS,OACApM,EAAWtC,EAAXsC,OACHA,EAAOtI,OAAyB,IAAhBsI,EAAOtI,QAK1BA,EADiB,UAAfsI,EAAOzG,MAAqByG,EAAOoQ,SAAqC,UAA1BpQ,EAAOoQ,QAAP,KACxClQ,SAASF,EAAOtI,OAEhBsI,EAAOtI,MAEjB0U,EAAOpM,EAAOvH,MAAQf,EACtB,EAAKmE,SAAS,CAAEuQ,aApDhB,EAsDFiE,mBAAqB,SAAC3S,GAAoB,IAChC0O,EAAW,EAAKxS,MAAhBwS,OACFpM,EAAUtC,EAAEsC,OACboM,EAAOR,eACVQ,EAAOR,aAAe,IAExBQ,EAAOR,aAAa5L,EAAOvH,MAAQuH,EAAOtI,MAC1C,EAAKmE,SAAS,CAAEuQ,YA7DhB,EA+DFkE,WAAa,SAAChF,GACZ,IAAMc,EAAS,EAAKxS,MAAMwS,OAC1BA,EAAOd,KAAOA,EACd,EAAKzP,SAAS,CAAEuQ,OAAQA,GAAU,EAAK0D,YAlEvC,EAoEFS,iBAAmB,SAAC7S,GAClB,IAEIhG,EAFEsI,EAAStC,EAAEsC,OACXoQ,EAAUpQ,EAAOoQ,QAGrB1Y,EADE0Y,EAAO,MAA+B,WAAnBA,EAAO,KACJ,QAAhBpQ,EAAOtI,MAEPsI,EAAOtI,MAEjB,IAAM8Y,EAAS,EAAK5W,MAAM4W,OAC1BA,EAAOxQ,EAAOvH,MAAQf,EACtB,EAAKmE,SAAS,CAAE2U,OAAQA,KA/ExB,EAiFFC,UAAY,SAACtU,GACX,EAAKN,SAAS,CAAE2U,OAAQ,EAAKX,eAAiB1T,IAlF9C,EAoFFuU,gBAAkB,SAACC,GACjB,EAAK9U,SAAS,CAAE2U,OAAQG,IAAQ,WAC1B,EAAKf,QAAQ7R,SACf,EAAK6R,QAAQ7R,QAAQ6S,YAEvB,EAAKtP,gBAzFP,EAiGFuP,cAAgB,SAAClQ,GACf,EAAK8P,WAAU,WACT,EAAKb,QAAQ7R,SACf,EAAK6R,QAAQ7R,QAAQ+S,YAEvB,EAAK1O,SAAS,kBACd,EAAK0N,gBAvGP,EA0GQiB,cAAgB,SAAClP,GACzB,EAAKb,WACH,EAAK2O,kBAAkBqB,OACvB,EAAKH,cACL,EAAKtO,qBACL,EAAKkN,UACL,EAAKnL,KACLzC,IAjHF,EAoHQoP,cAAgB,SAAClZ,EAAS8J,GAClC,EAAKb,WACH,EAAK2O,kBAAkBlU,OACvB,EAAKoV,cACL,EAAKtO,qBACL,EAAKkN,UACL,EAAKnL,KACLvM,EACA8J,IA5HF,EAgIFqP,OAAS,SAACxT,GACJA,GAAKA,EAAE4J,gBACT5J,EAAE4J,iBAEJ,EAAKgJ,WAAW,IAlIZb,IACF,EAAKA,UAAYA,GAEnB,EAAKE,kBAAoB,EAAKhN,cAAcgN,kBAL5C,E,gEA6FA,4EACA7W,KAAKwI,YACLxI,KAAKgX,gB,GA5GgD7H,KCInDzL,G,sCACJ0T,MAAoB,G,KACpB9D,OAAiB,IAAIhB,G,KACrBoC,UAAoB,GAEhB2D,G,kDAEJ,WAAY7W,GAAQ,IAAD,8BACjB,cAAMA,EAAO,YAAa,eAF5BV,MAAe,IAAI4C,GACA,EAMnBqT,YAAc,kBAAM,IAAI1F,IANL,EAOnBiH,eAAiB,SAACC,GAChB,IAAMjF,EAAS,EAAKxS,MAAMwS,OACrBA,EAAOR,eACVQ,EAAOR,aAAe,IAExBQ,EAAOR,aAAa,yBAA2ByF,EAAc/Z,EAAcqN,oBAAsBrN,EAAcoB,cAC/G,EAAKmD,SAAS,CAAEuQ,OAAQA,IAAU,kBAAM,EAAKkE,WAAW,OAbvC,EAenBgB,uBAAyB,WACvB,EAAKxB,aAdL,EAAKlW,MAAMwS,OAAOf,MAAQ,GAC1B,EAAKzR,MAAMwS,OAAOZ,QAAU,gBAC5B,EAAK5R,MAAMwS,OAAOR,aAAe,GAJhB,E,qDAkBT,IAAD,UACCQ,EAAWtT,KAAKc,MAAhBwS,OACFiF,GAAoB,OAANjF,QAAM,IAANA,OAAA,EAAAA,EAAQR,eAAgBQ,EAAOR,aAAa,2BAA6BtU,EAAcqN,oBAC3G,OACE,yBAAKnK,UAAU,gCACb,uCACA,6BACA,0BAAMgN,SAAU1O,KAAKoY,QACnB,kBAAC,GAAD,CAAW9D,MAAM,QACf,2BAAO3U,KAAK,gBAAgBmP,YAAY,OAAOpN,UAAU,kBAAkB9C,MAAO0U,EAAOR,aAAeQ,EAAOR,aAAa,iBAAmB,GAAIlE,SAAU5O,KAAKuX,sBAEpK,kBAAC,GAAD,CAAWjD,MAAM,mBACf,2BAAO3U,KAAK,QAAQc,KAAK,SAASiB,UAAU,kBAAkB9C,MAAK,UAAE0U,EAAOf,aAAT,QAAkB,EAAG3D,SAAU5O,KAAKqX,gBAEzG,kBAAC,GAAD,CAAW/C,MAAM,QACf,kBAAC,GAAD,CAAcvJ,OAAQwN,EAAarU,QAASlE,KAAKsY,eAAgB7B,QAAQ,gBAAgBD,SAAS,mBAEpG,kBAAC,GAAD,KACE,2BAAO9U,UAAU,yBAAyBjB,KAAK,SAAS7B,MAAM,aAGlE,kBAAC,GAAD,CAAmB+V,WAAU,UAAErB,EAAOd,YAAT,QAAiB,EAAGD,MAAK,UAAEe,EAAOf,aAAT,QAAkB,EAAGmC,UAAW1U,KAAKc,MAAM4T,UAC/FxQ,QAASlE,KAAKwX,aAChB,kBAAC,GAAD,CAAcxB,UAAWhW,KAAKwY,uBAAwBnC,gBAAgB,UAAC/C,EAAOd,YAAR,QAAgB,IAAhB,UAAsBc,EAAOf,aAA7B,QAAsC,GAAI6E,MAAOpX,KAAKc,MAAMsW,a,GA3C1GV,IAiD1B+B,GAAe,SAACjX,GACpB,IAAM4V,EAAQ5V,EAAM4V,MACpB,OACE,yBAAK1V,UAAU,kBAAkBC,MAAO,CAAE+W,SAAU,SAClD,2BAAOhX,UAAU,uBACd6P,GAAY,KAAM,OAAQ,QAAS,MAAO,gBAAiB,QAC5D,+BACG6F,EAAMnK,KAAI,SAACiJ,EAAKnW,GAIf,OAHImW,EAAIhW,OACNgW,EAAIhW,KAAOd,EAAKgM,MAAM8K,EAAIhW,OAG1B,kBAAC,GAAD,CAAa8V,UAAWxU,EAAMwU,UAAWF,SAAUI,EAAKG,eAAgB7U,EAAM6U,eAAiBtW,EAAGqN,IAAK8I,EAAIjX,YAS1G2O,eACbC,YACEhN,EADFgN,CAEEwK,KCtFEM,G,kDAEF,WAAYnX,GAAQ,uCACVA,EAAO,cAAc,G,qDAErB,IAAD,EAEL,OACI,yBAAKE,UAAU,gCACX,iDACA,yBAAKA,UAAU,oBAAf,YACa,0CAAS1B,KAAKoI,uBAAd,aAAS,EAAsB9I,UACxC,mC,GAZS6P,IAmBdvB,eACXC,YACIhN,EADJgN,CAEE8K,KCzBeC,G,4MAEjBjZ,U,IACA+K,iB,IAEAmO,Y,cALkC7Z,GAAjB4Z,GAOVxN,MAAQ,SAAC0N,GACZ,OAAO3Y,OAAOC,OAAO,IAAIwY,GAAUE,I,aCRrChN,G,sCACFoC,MAAe,GAKE6K,G,kDAEjB,WAAYvX,GAAa,IAAD,8BACpB,cAAMA,IAFVV,MAAe,IAAIgL,GACK,EAGxBkM,UAAY,WACR,EAAKjV,SAAS,CAACmL,MAAK,KAJA,EAMxB4J,UAAY,WACR,EAAK/U,SAAS,CAACmL,MAAK,KAPA,E,gEAUG,GAAnBlO,KAAKwB,MAAM0M,MAAiBlO,KAAK+C,SAAS,CAACmL,MAAK,M,+BAE9C,IAAD,EAECzJ,EAAK,UAAGzE,KAAKwB,MAAMiD,aAAd,QAAsB,QACjC,GAA6B,GAAzBzE,KAAKwB,MAAMwX,YAAyC,GAAnBhZ,KAAKc,MAAMoN,KAC5C,OACI,kBAAC,GAAD,CAAcvM,MAAO,CAACI,aAAa,QAASmC,QAASlE,KAAK8X,UAAWrC,cAAc,qBAAnF,QAA8GhR,GAGtH,IAAMjD,EAAS,cAAGG,MAAH,EAAUuM,KAAV,EAAgB+K,cAAhB,EAA+BD,WAA/B,sEAAiEhZ,KAAKwB,OACrF,OACI,yCAASA,EAAT,CAAgBE,UAAU,iBAAiBC,MAAK,2BAAM3B,KAAKwB,MAAMG,OAAjB,IAAwBI,aAAa,WACjF,yBAAKL,UAAU,gBACX,wBAAIA,UAAU,eAAe+C,GAC5BzE,KAAKwB,MAAMwX,WACZ,4BAAQvY,KAAK,SAASiB,UAAU,aAAawC,QAASlE,KAAKgY,UAAWhL,aAAW,SAC7E,0BAAMhL,cAAY,QACd,uBAAGN,UAAU,mBAIrB,MAEJ,yBAAKA,UAAU,cACV1B,KAAKwB,MAAM6D,UAEfrF,KAAKwB,MAAMyX,eAA0C,GAAzBjZ,KAAKwB,MAAM0X,WACxC,yBAAKxX,UAAU,gBACV1B,KAAKwB,MAAMyX,eAEf,U,GA3CkB9V,aCC7BgW,G,kDAEJ,WAAY3X,GAAQ,IAAD,8BACjB,cAAMA,GAAO,IAFfqV,uBACmB,IAQnBuC,UAAY,WACV,IAAMC,EAAM,EAAK7X,MAAMkW,OACvB,OAAK2B,IACHtR,MAAM,+BACC,KAZQ,EAgBnBuR,aAAe,SAACzR,GACV,EAAKrG,MAAM8X,cACb,EAAK9X,MAAM8X,aAAazR,EAASsI,SAlBlB,EAqBnBoJ,sBAAwB,SAAC1R,GACnB,EAAKrG,MAAM+X,uBACb,EAAK/X,MAAM+X,sBAAsB1R,EAASsI,SAvB3B,EA0BnBqJ,cAAgB,SAAC3R,GACf,EAAKyB,SAAS,2BACV,EAAK9H,MAAMgY,eACb,EAAKhY,MAAMgY,cAAc3R,EAASsI,SA7BnB,EAuCnBsJ,WAAa,WAEX,EAAKvR,WACH,EAAK2O,kBAAkB6C,OACvB,EAAKJ,aACL,EAAK7P,qBACL,EAAKjI,MAAMgK,KACX,EAAKhK,MAAMmV,UACX,EAAKgD,kBAAkBC,YA/CR,EAkDnBC,oBAAsB,WAEpB,EAAK3R,WACH,EAAK2O,kBAAkB6C,OACvB,EAAKH,sBACL,EAAK9P,qBACL,EAAKjI,MAAMgK,KACX,EAAKhK,MAAMmV,UACX,EAAKgD,kBAAkBC,YA1DR,EA6DnBE,aAAe,WACb,EAAK1Q,uBAAuB,kBACzBxB,MAAK,SAAAuE,GACCA,GACL,EAAKjE,WACH,EAAK2O,kBAAkBkD,OACvB,EAAKP,cACL,EAAK/P,qBACL,EAAKjI,MAAMgK,KACX,EAAKhK,MAAMmV,UACX,EAAKgD,kBAAkBC,eAvEZ,EA2EnBI,QAAU,SAACvZ,GACT,QAAK,EAAKe,MAAMyY,OACR,EAAKzY,MAAMyY,MAAmBC,QAAQzZ,IAAS,GA3EvD,EAAKoW,kBAAoB,EAAKhN,cAAcgN,kBAF3B,E,qDA+ET,IAAD,EACDoD,EAA2B,UAAGja,KAAKwB,MAAMyY,aAAd,aAAuB1U,EACxD,OACE,yBAAK7D,UAAU,aACZ1B,KAAKga,QAAQ,UACZ,kBAAC,GAAD,CAAgB9V,QAASlE,KAAK6Z,oBAAqBpE,cAAc,qBAAqB/T,UAAU,wBAEhG,UACS6D,IAAV0U,GAAuBja,KAAKga,QAAQ,QACnC,kBAAC,GAAD,CAAgB9V,QAASlE,KAAKyZ,WAAYhE,cAAc,cAAc/T,UAAU,2BAEhF,UACS6D,IAAV0U,GAAuBja,KAAKga,QAAQ,UACnC,kBAAC,GAAD,CAAgB9V,QAASlE,KAAK8Z,aAAcrE,cAAc,eAAe/T,UAAU,0BAEnF,Q,gCAxFN,OAAO1B,KAAKwB,MAAMmV,Y,wCA+BlB,MAJwB,CACtBiD,UAAW5Z,KAAKoZ,YAAYna,GAC5B0X,UAAW3W,KAAK2W,e,GArCSzQ,GAuGhB0H,eACbC,YACEhN,EADFgN,CAEEsL,KCpGEzV,G,sCACJ0T,MAAoB,G,KACpB9D,OAAiB,IAAIhB,G,KACrBoC,UAAoB,E,KACpBgD,OAAmB,IAAIkB,IAKnBuB,G,kDAEJ,WAAY3Y,GAAQ,IAAD,8BACjB,cAAMA,EALS,kBACN,WAEXV,MAAe,IAAI4C,GACA,EAMnBgL,SAAW,WAET,EAAK5F,iBAAiB,gBACnBlB,MAAK,SAAAuE,GAAO,IAAD,EACLA,IACL,UAAI,EAAKrL,MAAM4W,OAAOzY,UAAtB,SACE,EAAKkZ,cAAc,EAAKrX,MAAM4W,OAAOzY,GAAI,EAAK6B,MAAM4W,QAEpD,EAAKO,cAAc,EAAKnX,MAAM4W,aAdnB,EAmBnBX,YAAc,kBAAkB,IAAI6B,IAjBlC,EAAK9X,MAAMwS,OAAOf,MAAQ,GAC1B,EAAKzR,MAAMwS,OAAOZ,QAAU,OAHX,E,qDAoBT,IAAD,UACDY,EAAiBtT,KAAKc,MAAMwS,OAClC,OACE,yBAAK5R,UAAU,gCACb,oDACA,6BACA,kBAAC,GAAD,CAAYoV,QAAS9W,KAAK8W,QAASa,UAAW3X,KAAK2X,UAAWjJ,SAAU1O,KAAK0O,SAAUgJ,OAAQ1X,KAAKc,MAAM4W,OAAQD,iBAAkBzX,KAAKyX,mBACzI,0BAAM/I,SAAU1O,KAAKoY,QACnB,kBAAC,GAAD,CAAW9D,MAAM,QACf,2BAAO3U,KAAK,OAAOmP,YAAY,OAAOpN,UAAU,kBAAkB9C,MAAO0U,EAAOR,aAAeQ,EAAOR,aAAP,KAA8B,GAAIlE,SAAU5O,KAAKuX,sBAElJ,kBAAC,GAAD,CAAWjD,MAAM,mBACf,2BAAO3U,KAAK,QAAQc,KAAK,SAASiB,UAAU,kBAAkB9C,MAAK,UAAE0U,EAAOf,aAAT,QAAkB,EAAG3D,SAAU5O,KAAKqX,gBAEzG,kBAAC,GAAD,KACE,2BAAO3V,UAAU,yBAAyBjB,KAAK,SAAS7B,MAAM,aAGlE,kBAAC,GAAD,CAAmB+V,WAAU,UAAErB,EAAOd,YAAT,QAAiB,EAAGD,MAAK,UAAEe,EAAOf,aAAT,QAAkB,EAAGmC,UAAW1U,KAAKc,MAAM4T,UAC/FxQ,QAASlE,KAAKwX,aAChB,kBAAC,GAAD,CACE8B,aAActZ,KAAK4X,gBACnB4B,cAAexZ,KAAKgX,UACpBX,gBAAgB,UAAC/C,EAAOd,YAAR,QAAgB,IAAhB,UAAsBc,EAAOf,aAA7B,QAAsC,IAAK6E,MAAOpX,KAAKc,MAAMsW,a,GA7CtDV,IAmD3B0D,GAAY,SAAC5Y,GAEjB,OACE,yBAAKG,MAAO,CAAE+W,SAAU,SACtB,2BAAOhX,UAAU,uBACd6P,GAAY,KAAM,OAAQ,YAAa,QACxC,+BACG/P,EAAM4V,MAAMnK,KAAI,SAAC4K,EAAM9X,GAEtB,OACE,wBAAIqN,IAAK,YAAcrN,GACrB,4BAAKA,EAAI,EAAIyB,EAAM6U,gBACnB,4BAAKwB,EAAKlY,MACV,4BAAKkY,EAAKnN,aACV,4BACE,kBAAC,GAAD,CACE4O,aAAc9X,EAAM8X,aACpBE,cAAehY,EAAMgY,cACrB9B,OAAQG,EACRlB,UAxED,kBAyECnL,KAxEP,oBAmFP6O,GAAa,SAAC7Y,GAA4I,IAAD,IAE7J,OACE,0BAAME,UAAU,mBAAmBgN,SAAU,SAAC9J,GAAQA,EAAE4J,iBAAkBhN,EAAMkN,aAC9E,kBAAC,GAAD,CAAOR,MAAM,EAAOlK,IAAKxC,EAAMsV,QAASkC,YAAY,EAAMvU,MAAM,eAC9D,kBAAC,GAAD,CAAW6P,MAAM,QAAO,2BAAOvF,UAAQ,EAACnQ,MAAK,UAAE4C,EAAMkW,OAAO/X,YAAf,QAAuB,GAAIiP,SAAUpN,EAAMiW,iBAAkB/V,UAAU,eAAe/B,KAAK,UACxI,kBAAC,GAAD,CAAW2U,MAAM,aACf,8BAAUvF,UAAQ,EAACrN,UAAU,eAAe/B,KAAK,cAAciP,SAAUpN,EAAMiW,iBAAkB7Y,MAAK,UAAE4C,EAAMkW,OAAOhN,mBAAf,QAA8B,MAEtI,kBAAC,GAAD,KACE,2BAAOjK,KAAK,SAAS7B,MAAM,SAAS8C,UAAU,2BADhD,OAGE,2BAAOjB,KAAK,QAAQiB,UAAU,2BAA2BwC,QAAS,SAACU,GAAD,OAAOpD,EAAMmW,mBAO1E/J,eACbC,YACEhN,EADFgN,CAEEsM,K,SC9HiBG,G,4MACjBC,sB,IACAC,oB,IACA7a,U,IACA+K,iB,IACA+P,MAAgB,E,EAChBC,WAAsB,E,YANa1b,GCajC0E,G,sCACJ0T,MAAqB,G,KACrB9D,OAAiB,IAAIhB,G,KACrBoC,UAAoB,E,KACpBgD,OAAoB,IAAI4C,G,KACxBK,WAAyB,G,KACzBC,kBAA4B,GAMxBC,G,kDAEJ,WAAYrZ,GAAQ,IAAD,8BACjB,cAAMA,EANS,cACN,WAGXV,MAAe,IAAI4C,GACA,EAMnBgL,SAAW,WAET,EAAK5F,iBAAiB,gBACnBlB,MAAK,SAAAuE,GAAO,IAAD,EACLA,IACL,UAAI,EAAKrL,MAAM4W,OAAOzY,UAAtB,SACE,EAAKkZ,cAAc,EAAKrX,MAAM4W,OAAOzY,GAAI,EAAK6B,MAAM4W,QAEpD,EAAKO,cAAc,EAAKnX,MAAM4W,aAdnB,EAwBnBkD,iBAAmB,SAAC/S,GAClB,EAAK9E,SAAS,CAAE4X,WAAY9S,EAASsI,OAAOiH,MAAOwD,kBAAkB,IAAQ,WAAQ,EAAKjD,YAAa,EAAKX,gBAzB3F,EA2BnB8D,oBAAsB,SAACjT,GACrB,EAAK9E,SAAS,CAAE4X,WAAY,GAAIC,kBAAkB,GAAQ,EAAKjD,YA5B9C,EA8BnBoD,eAAiB,WACf,IAAMzH,EAAiB,IAAIhB,GAC3BgB,EAAOf,MAAQ,EACf,IAAMyI,EAAkB,CACtB1H,OAAQA,EACRqD,UAAW,mBAEb,EAAKzO,WACH,EAAK2O,kBAAkBK,KACvB,EAAK0D,iBACL,EAAKE,oBACLE,EA7CO,WAIQ,EA8CnBjE,YAAc,WACZ,IAAMW,EAAS,IAAI4C,GAInB,OAHI,EAAKxZ,MAAM6Z,WAAW1a,OAAS,IACjCyX,EAAO8C,eAAiB,EAAK1Z,MAAM6Z,WAAW,GAAG1b,IAE5CyY,GAjDP,EAAK5W,MAAMwS,OAAOf,MAAQ,GAC1B,EAAKzR,MAAMwS,OAAOZ,QAAU,OAHX,E,gEAkBE,IAAD,OAClB1S,KAAKuG,qBAAoB,WACvB,EAAKiC,YACL,EAAKuS,sB,+BAiCC,IAAD,UACDzH,EAAiBtT,KAAKc,MAAMwS,OAC5BqH,EAAyB3a,KAAKc,MAAM6Z,WAC1C,GAAI3a,KAAKc,MAAM8Z,kBAAyC,GAArBD,EAAW1a,OAC5C,OACE,yBAAKyB,UAAU,gCACb,+DAIN,IAAMuZ,EAAqB3H,EAAOR,cAAgBQ,EAAOR,aAAP,YAAqCQ,EAAOR,aAAP,YAAqC,MAC5H,OACE,yBAAKpR,UAAU,gCACb,gDACA,6BACA,kBAAC,GAAD,CAAYiZ,WAAYA,EAAYO,iBAAkBlb,KAAK+a,eAAgBjE,QAAS9W,KAAK8W,QAASa,UAAW3X,KAAK2X,UAAWjJ,SAAU1O,KAAK0O,SAAUgJ,OAAQ1X,KAAKc,MAAM4W,OAAQD,iBAAkBzX,KAAKyX,mBACxM,0BAAM/I,SAAU1O,KAAKoY,QACnB,kBAAC,GAAD,CAAW9D,MAAM,QACf,yBAAK5S,UAAU,eACb,2BAAO/B,KAAK,OAAOmP,YAAY,OAAOpN,UAAU,kBAAkB9C,MAAO0U,EAAOR,aAAeQ,EAAOR,aAAP,KAA8B,GAAIlE,SAAU5O,KAAKuX,qBAChJ,4BAAQ3Y,MAAOqc,EAAoBvZ,UAAU,kBAAkB/B,KAAK,cAAciP,SAAU5O,KAAKuX,oBAC9F,CAAC,CAAEtY,GAAI,GAAIU,KAAM,mBAAjB,oBAAwCgb,IAAY1N,KAAI,SAACkO,GACxD,OAAO,4BAAQ/N,IAAK,cAAgB+N,EAAElc,GAAIL,MAAOuc,EAAElc,IAAKkc,EAAExb,UAG9D,yBAAK+B,UAAU,sBACb,kBAAC,GAAD,CAAgBA,UAAU,aAAa+T,cAAc,cAAcvR,QAASlE,KAAK+a,gBAAjF,aAIN,kBAAC,GAAD,CAAWzG,MAAM,mBACf,2BAAO7T,KAAK,SAASd,KAAK,QAAQ+B,UAAU,kBAAkB9C,MAAK,UAAE0U,EAAOf,aAAT,QAAkB,EAAG3D,SAAU5O,KAAKqX,gBAEzG,kBAAC,GAAD,KACE,2BAAO3V,UAAU,yBAAyBjB,KAAK,SAAS7B,MAAM,aAGlE,kBAAC,GAAD,CAAmB+V,WAAU,UAAErB,EAAOd,YAAT,QAAiB,EAAGD,MAAK,UAAEe,EAAOf,aAAT,QAAkB,EAAGmC,UAAW1U,KAAKc,MAAM4T,UAC/FxQ,QAASlE,KAAKwX,aAChB,kBAAC,GAAD,CACE8B,aAActZ,KAAK4X,gBACnB4B,cAAexZ,KAAKgX,UACpBX,gBAAgB,UAAC/C,EAAOd,YAAR,QAAgB,IAAhB,UAAsBc,EAAOf,aAA7B,QAAsC,IAAK6E,MAAOpX,KAAKc,MAAMsW,a,GAlGrDV,IAwG5B0D,GAAY,SAAC5Y,GAEjB,OACE,yBAAKG,MAAO,CAAE+W,SAAU,SACtB,2BAAOhX,UAAU,uBACd6P,GAAY,KAAM,OAAQ,OAAQ,YAAa,WAAY,YAAa,QACzE,+BACG/P,EAAM4V,MAAMnK,KAAI,SAAC4K,EAAM9X,GACtB,OACE,wBAAIqN,IAAG,oBAAerN,IACpB,4BAAKA,EAAI,EAAIyB,EAAM6U,gBACnB,4BAAKwB,EAAKlY,MACV,4BAAKkY,EAAK4C,OACV,4BAAK5C,EAAKnN,aACV,4BAAKmN,EAAK0C,kBACV,4BAAK1C,EAAK6C,UAAY,KAAO,SAC7B,4BACE,kBAAC,GAAD,CACEpB,aAAc9X,EAAM8X,aACpBE,cAAehY,EAAMgY,cACrB9B,OAAQG,EACRlB,UAhID,cAiICnL,KAhIP,oBA2IP6O,GAAa,SAAC7Y,GAMb,IAAD,IAEJ,OACE,0BAAME,UAAU,mBAAmBgN,SAAU,SAAC9J,GAAQA,EAAE4J,iBAAkBhN,EAAMkN,aAC9E,kBAAC,GAAD,CAAOR,MAAM,EAAOlK,IAAKxC,EAAMsV,QAASkC,YAAY,EAAMvU,MAAM,eAC9D,kBAAC,GAAD,CAAW6P,MAAM,QAAO,2BAAO1V,MAAK,UAAE4C,EAAMkW,OAAO/X,YAAf,QAAuB,GAAIiP,SAAUpN,EAAMiW,iBAAkB/V,UAAU,gBAAgB/B,KAAK,OAAOoP,UAAQ,KAC/I,kBAAC,GAAD,CAAWuF,MAAM,oBAAmB,2BAAO7T,KAAK,SAAS7B,MAAO4C,EAAMkW,OAAO+C,MAAO7L,SAAUpN,EAAMiW,iBAAkB/V,UAAU,gBAAgB/B,KAAK,QAAQoP,UAAQ,KACrK,kBAAC,GAAD,CAAWuF,MAAM,aACf,8BAAU5S,UAAU,eAAe/B,KAAK,cAAciP,SAAUpN,EAAMiW,iBAAkB7Y,MAAK,UAAE4C,EAAMkW,OAAOhN,mBAAf,QAA8B,MAE7H,kBAAC,GAAD,CAAW4J,MAAM,oBACf,4BAAQ5S,UAAU,kBAAkB0Z,YAAU,UAAUzb,KAAK,YAAYiP,SAAUpN,EAAMiW,iBAAkB7Y,MAAiC,GAA1B4C,EAAMkW,OAAOgD,UAAoB,OAAS,QAAS3L,UAAQ,GAC3K,4BAAQnQ,MAAO,QAAf,MACA,4BAAQA,MAAO,SAAf,WAGJ,kBAAC,GAAD,CAAW0V,MAAM,YACf,yBAAK5S,UAAU,eACb,4BAAQqN,UAAQ,EAACnQ,MAAO4C,EAAMkW,OAAO8C,eAAgB9Y,UAAU,kBAAkB/B,KAAK,iBAAiBiP,SAAUpN,EAAMiW,kBACpHjW,EAAMmZ,WAAW1N,KAAI,SAACkO,GACrB,OAAO,4BAAQ/N,IAAK,OAAS+N,EAAElc,GAAIL,MAAOuc,EAAElc,IAAKkc,EAAExb,UAGvD,yBAAK+B,UAAU,sBACb,kBAAC,GAAD,CAAgBA,UAAU,aAAa+T,cAAc,cAAcvR,QAAS1C,EAAM0Z,kBAAlF,aAIN,kBAAC,GAAD,KACE,2BAAOza,KAAK,SAAS7B,MAAM,SAAS8C,UAAU,2BADhD,OAGE,2BAAO9C,MAAM,QAAQ6B,KAAK,QAAQiB,UAAU,2BAA2BwC,QAAS,SAACU,GAAD,OAAOpD,EAAMmW,mBAOxF/J,eACbC,YACEhN,EADFgN,CAEEgN,KC/KWQ,GA1BM,SAAC7Z,GAIf,IACGqQ,EAAqBrQ,EAArBqQ,KAAMyJ,EAAe9Z,EAAf8Z,WACd,OACE,kBAAC,IAAMC,SAAP,MAEmB,IAAfD,GACA,4BAAQF,YAAU,SAAS1Z,UAAU,kBAAkB/B,KAAK,MAAMf,MAAOiT,EAAKG,UAAWpD,SAAUpN,EAAMoN,UAjBpG,WAEX,IADA,IAAM4M,EAAgB,GACbzb,EAAI,EAAGA,GAAK,GAAIA,IACvByb,EAAIzR,KAAKhK,GAEX,OAAOyb,EAaEC,GAAOxO,KAAI,SAACyO,GACX,OAAO,4BAAQtO,IAAG,aAAQsO,GAAK9c,MAAO8c,GAAS,GAALA,EAAS,MAAQA,OAIjE,4BAAQN,YAAU,SAAS1Z,UAAU,kBAAkB/B,KAAK,QAAQf,MAAOiT,EAAKE,WAAYnD,SAAUpN,EAAMoN,UACzG6C,GAAOxE,KAAI,SAACoF,EAAGtS,GACd,OAAO,4BAAQqN,IAAG,aAAQrN,GAAKnB,MAAOmB,GAAIsS,OAG9C,2BAAO1S,KAAK,OAAOmP,YAAY,OAAOpN,UAAU,kBAAkB9C,MAAOiT,EAAKC,cAAelD,SAAUpN,EAAMoN,aCZ7GlL,G,sCACJ0T,MAAmB,G,KACnBuE,QAAmB,G,KACnBjH,UAAY,E,KACZpB,OAAS,IAAIhB,G,KACbnE,SAAU,GAENyN,GAAM,IAAItV,KACVuV,GAAsB,CAC1B,iBAAkB,GAClB,kBAAqB,QACrB,UAAWjK,GAAqB,IAAItL,KAAKsV,GAAI9J,cAAe,EAAG,IAC/D,UAAWF,GAAqBgK,KAE5BE,G,kDAGJ,WAAYta,GAAQ,IAAD,8BACjB,cAAMA,IAHCV,MAAe,IAAI4C,GAET,EADV8M,oBACU,IAOnB2G,YAAc,SAACtP,GACb,EAAK9E,SAAS,CAAEqU,MAAOvP,EAASsI,OAAOiH,MAAO1C,UAAW7M,EAASsI,OAAOuE,aARxD,EAUnBqH,cAAgB,SAAClU,GACf,EAAK9E,SAAS,CAAE4Y,QAAS9T,EAASsI,QAAU,EAAK6G,YAXhC,EAanBA,UAAY,WACV,EAAK9O,WACH,EAAKsI,eAAewL,qBACpB,EAAK7E,YACL,EAAK1N,qBACL,EAAK3I,MAAMwS,SAlBI,EAqBnBkE,WAAa,SAAChF,GAAkB,IACtBc,EAAW,EAAKxS,MAAhBwS,OACRA,EAAOd,KAAOA,EACd,EAAKzP,SAAS,CAAEuQ,UAAU,EAAK0D,YAxBd,EA0BnBiF,YAAc,WACZ,EAAK/T,WACH,EAAKsI,eAAe0L,WACpB,EAAKH,cACL,EAAKtS,uBA9BU,EAuCnBmK,mBAAqB,SAAChP,EAAsDiP,GAAkC,IACpGP,EAAW,EAAKxS,MAAhBwS,OACRhB,GAAOsB,mBAAmBN,EAAQ1O,EAAGiP,GACrC,EAAK9Q,SAAS,CAAEuQ,YA1CC,EA4CnB6I,kBAAoB,SAACvX,GAA0D,IACrE0O,EAAW,EAAKxS,MAAhBwS,OACRA,EAAOR,aAAalO,EAAEsC,OAAOvH,MAAQiF,EAAEsC,OAAOtI,MAC9C,EAAKmE,SAAS,CAAEuQ,YA/CC,EAiDnB8I,oBAAsB,SAACxX,GACrB,IAAMsC,EAAStC,EAAEsC,OACToM,EAAW,EAAKxS,MAAhBwS,OACHA,EAAOR,eACVQ,EAAOR,aAAe,IAExBQ,EAAOR,aAAa,kBAAoB5L,EAAOtI,MAC/C,EAAKmE,SAAS,CAAEuQ,YAxDC,EA0DnB+I,UAAY,SAAC5b,EAAc0R,GACzB,OAAQ1R,GACN,IAAK,cACH,EAAK6b,WAAWnK,KA7DH,EAmEnBmK,WAAa,SAACC,GACZ,EAAK/a,MAAMsI,QAAQC,KAAK,CACtB2G,SAAU,qBACV5P,MAAO,CAAEyb,cAtEM,EAyEnBC,sBAAwB,SAACC,GAAqB,IACpCnJ,EAAW,EAAKxS,MAAhBwS,OACRA,EAAOR,aAAP,4BAA8C2J,GAC9C,EAAK1Z,SAAS,CAAEuQ,YA5EC,EA8EnB+D,aAAe,SAACzS,GAAyB,IAMnChG,EALI0U,EAAW,EAAKxS,MAAhBwS,OACApM,EAAWtC,EAAXsC,OACHA,EAAOtI,OAAyB,IAAhBsI,EAAOtI,QAK1BA,EADiB,UAAfsI,EAAOzG,MAAqByG,EAAOoQ,SAAqC,UAA1BpQ,EAAOoQ,QAAP,KACxClQ,SAASF,EAAOtI,OAEhBsI,EAAOtI,MAEjB0U,EAAOpM,EAAOvH,MAAQf,EACtB,EAAKmE,SAAS,CAAEuQ,aA3FC,EA6FnB5E,SAAW,SAAC9J,GAAQA,EAAE4J,iBAAkB,EAAKgJ,WAAW,IA3FtD,EAAKhH,eAAiB,EAAK3G,cAAc2G,eACzC,EAAK1P,MAAMwS,OAAOf,MAAQ,GAC1B,EAAKzR,MAAMwS,OAAOZ,QAAU,wBAC5B,EAAK5R,MAAMwS,OAAOR,aAAe+I,GALhB,E,gEAiCE,IAAD,OAClB7b,KAAKuG,qBAAoB,WACvB,EAAKiC,YACL,EAAKyT,mB,+BA0DC,IAAD,uBACyCjc,KAAKc,MAA7CwS,EADD,EACCA,OAAQqI,EADT,EACSA,QAASxN,EADlB,EACkBA,QAASuG,EAD3B,EAC2BA,UAC1B5B,EAAiBQ,EAAjBR,aAEF4J,EAAe,UAAG5J,EAAa,yBAAhB,QAAqC,GACpD6J,EAAkB7J,EAAY,oBAAZ,WAAyC,GACjE,OACE,yBAAKpR,UAAU,gCACb,qCACA,6BACA,0BAAMgN,SAAU1O,KAAK0O,UACnB,kBAAC,GAAD,CAAW4F,MAAM,QACf,yBAAK5S,UAAU,eACb,2BACE/B,KAAK,wBACLmP,YAAY,OACZpN,UAAU,kBACV9C,MAAK,UAAEkU,EAAa,gCAAf,QAA2C,GAChDlE,SAAU5O,KAAKmc,oBAEjB,4BACEvd,MAAO8d,EACP9N,SAAU5O,KAAKmc,kBACfza,UAAU,kBACV/B,KAAK,kBAEJ,CAvBQ,CAAEV,GAAI,GAAI2d,MAAO,gBAuBzB,oBAAkBjB,IAAS1O,KAAI,SAACkO,GAC/B,OAAO,4BAAQ/N,IAAG,gBAAW+N,EAAElc,IAAML,MAAOuc,EAAElc,IAAKkc,EAAEyB,MAAOzB,EAAE0B,OAAvD,MAAkE1B,EAAE2B,kBAKnF,kBAAC,GAAD,CAAWxI,MAAM,mBACf,2BACE3U,KAAK,QACLc,KAAK,SACLiB,UAAU,kBACV9C,MAAK,UAAE0U,EAAOf,aAAT,QAAkB,EACvB3D,SAAU5O,KAAKqX,gBAGnB,kBAAC,GAAD,CAAW/C,MAAM,WACf,kBAAC,GAAD,CACEvJ,OAAQ4R,EACRnG,SAAS,iBACTC,QAAQ,aACRvS,QAASlE,KAAKwc,wBAGdG,GACA,kBAAC,IAAMpB,SAAP,KACE,yBAAK7Z,UAAU,eACb,kBAAC,GAAD,CAAcmQ,KAAM,IAAIvL,KAAKwM,EAAa,YAAalE,SAAU,SAAChK,GAAD,OAAO,EAAKgP,mBAAmBhP,EAAG,eAErG,yBAAKlD,UAAU,eACb,kBAAC,GAAD,CAAcmQ,KAAM,IAAIvL,KAAKwM,EAAa,YAAalE,SAAU,SAAChK,GAAD,OAAO,EAAKgP,mBAAmBhP,EAAG,iBAMzG+X,GACA,kBAAC,GAAD,KACG,IAAIrW,KAAKwM,EAAa,YAAYiK,eADrC,MACwD,IAAIzW,KAAKwM,EAAa,YAAYiK,gBAG5F,kBAAC,GAAD,KACE,2BAAOtc,KAAK,SAASiB,UAAU,yBAAyB9C,MAAM,aAGlE,4BACA,kBAAC,GAAD,CAAmBsF,QAASlE,KAAKwX,WAAY7C,WAAU,UAAErB,EAAOd,YAAT,QAAiB,EAAGD,MAAK,UAAEe,EAAOf,aAAT,QAAkB,GAAImC,UAAWA,IACjH,kBAAC,GAAD,CAAWiI,gBAAiBA,EAAiBxO,QAASA,EAASkO,UAAWrc,KAAKqc,UAAWhG,gBAAgB,UAAC/C,EAAOd,YAAR,QAAgB,IAAhB,UAAsBc,EAAOf,aAA7B,QAAsC,IAAK6E,MAAOpX,KAAKc,MAAMsW,a,GAzKrJlR,GA+KpBkU,GAAY,SAAC5Y,GAEjB,OACE,yBAAKG,MAAO,CAAE+W,SAAU,SACtB,2BAAOhX,UAAU,uBACdF,EAAMmb,gBAAkBpL,GAAY,KAAM,GAAI,OAAQ,QAAS,SAAWA,GAAY,KAAM,GAAI,OAAQ,SACzG,+BACG/P,EAAM2M,QACL,4BACE,wBAAI6O,QAAS,GAAG,kBAAC,EAAD,QAGhBxb,EAAM4V,MAAMnK,KAAI,SAACsP,EAASxc,GAC1B,OACE,wBAAIqN,IAAKmP,EAAQtd,IACf,4BAAKc,EAAI,EAAIyB,EAAM6U,gBACnB,4BACE,yBAAK1U,MAAO,CAAES,MAAO,UACnB,kBAAC,GAAD,CAAgBV,UAAU,MAAMwC,QAAS,SAACU,GAAD,OAAOpD,EAAM6a,UAAU,cAAeE,IAAU9G,cAAc,kBAI3G,4BACG8G,EAAQ5c,MAEX,4BACG4c,EAAQU,WAAYV,EAAQW,YAD/B,IAC6CX,EAAQO,YAEpDtb,EAAMmb,iBAAmB,4BAAKJ,EAAQ9B,eAU1C7M,eAAWC,YACxBhN,EADwBgN,CAExBiO,KCrPmBqB,G,4MAEjBC,S,IACAC,W,IACAnd,U,IAEAua,W,IACA9a,U,IACAud,iB,IACAD,gB,IACAH,gB,cAViC9d,GCIhBse,G,4MACnBC,QAAU,SAACC,EAAWnL,EAAWF,GAC/B,EAAKsL,KAAO,IAAInX,KAChB,EAAKmX,KAAKtJ,YAAY,EAAKxH,MAC3B,EAAK8Q,KAAKvJ,SAAS,EAAKwJ,MAAQ,GAChC,EAAKD,KAAKxJ,QAAQ,EAAK0J,KACvB,EAAKF,KAAKG,SAASJ,EAAGnL,EAAGF,I,EAE3B0L,WAAa,WACX,MAAM,GAAN,OAAU,EAAKlR,KAAf,YAAuBmR,EAAG,EAAKJ,OAA/B,YAAyCI,EAAG,EAAKH,O,EAKnDI,c,IAOAN,KAAO,IAAInX,K,EACXoE,iB,IACAsT,mB,IACAC,iB,IAEAC,gB,IACA3B,a,IACA4B,a,IAEAC,SAAuB,G,EAGvB7D,sB,IACA8D,c,IACAC,iB,IACAxB,gB,IACAG,gB,IACAC,iB,IACAzC,W,IACAC,e,IAKA6D,WAAa,kBAAM1f,EAAY,qCAAD,OAAsC,EAAKI,M,EAEzE+S,QAAU,WACR,OAAOE,GAAU,EAAK2L,e,EAGxBW,aAAe,WAEb,IAAM9C,EAAI,EAAK1J,UAEf,OADYyM,GAAK/C,EAAEgD,UACN,KAAO,CAClBZ,EAAGpC,EAAE1J,WAAY8L,EAAGpC,EAAE3J,WAAa,GAAI2J,EAAE5J,eACzCG,KAAK,KAAO,IAAM,EAAKwL,M,yDA7CzB,MAAM,GAAN,OAAUzd,KAAKyd,KAAKkB,WAApB,YAAkC3e,KAAKyd,KAAKmB,aAA5C,YAA4D5e,KAAKyd,KAAKoB,gB,0BAG5D,OAAO7e,KAAKyd,KAAKzL,W,aAGrB0J,GAAa1b,KAAKyd,KAAKxJ,QAAQyH,K,4BAFzB,OAAO1b,KAAKyd,KAAK1L,WAAa,G,aAGlCM,GAAarS,KAAKyd,KAAKvJ,SAAS7B,EAAI,K,2BAFjC,OAAOrS,KAAKyd,KAAK3L,e,aAGrBgN,GAAa9e,KAAKyd,KAAKtJ,YAAY2K,O,GApBL9f,GAApBse,GA4DLlS,MAAQ,SAAC2T,GAGrB,OAFAA,EAAI5e,OAAOC,OAAO,IAAIkd,GAAeyB,IACnCtB,KAAO,IAAInX,KAAKyY,EAAEtB,MACbsB,GAIX,IAAMN,GAAO,CACX,OAAQ,QAAS,SAAU,OAAQ,QAAS,QAAS,SCrEjD/a,G,sCACFsb,MAAc,IAAI1Y,MAAOqY,W,KACzBM,QAAgB,IAAI3Y,MAAOsY,a,KAC3BM,QAAgB,IAAI5Y,MAAOuY,cAEzBM,GAAiB,CACnB,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAEzDC,GAAmB,WAErB,IADA,IAAM5D,EAAe,GACZzb,EAAI,EAAGA,EAAI,GAAIA,IACpByb,EAAIzR,KAAKhK,GAEb,OAAOyb,GAEU6D,G,kDAIjB,WAAa7d,GAAQ,IAAD,8BAChB,cAAMA,IAJVV,MAAc,IAAI4C,GAGE,EAFpB4b,aAEoB,IADpBC,aACoB,IAQpBC,gBAAkB,WACd,IACI,IAAM1L,EAAM,EAAKtS,MAAM5C,MAAM8Q,MAAM,KACnC,EAAK3M,SAAS,CAACic,KAAM5X,SAAS0M,EAAI,IAAKmL,OAAQ7X,SAAS0M,EAAI,IAAKoL,OAAQ9X,SAAS0M,EAAI,MACxF,MAAOnK,MAZO,EAgBpB8V,YAAc,SAAC7a,GACX,IAAMsC,EAAStC,EAAEsC,OACjB,GAAIA,EAAQ,CACR,IAAMvH,EAAOuH,EAAOvH,KACpB,EAAKoD,SAAL,eAAgBpD,EAAOuH,EAAOtI,OAAQ,EAAKgQ,YApB/B,EAwBpB8Q,OAAS,WACL,IAAM7N,EAAO,IAAIvL,KACjB,EAAKvD,SAAS,CACVic,KAAMnN,EAAK8M,WACXM,OAAQpN,EAAK+M,aACbM,OAAQrN,EAAKgN,cACd,EAAKjQ,WA9BQ,EAgCpBA,SAAW,WACP,EAAKpN,MAAMoN,SAAS,EAAK9N,MAAMke,KAAM,EAAKle,MAAMme,OAAQ,EAAKne,MAAMoe,SA/BnE,EAAKI,QAAUF,KACf,EAAKG,QAAUH,KAHC,E,gEAMhBpf,KAAKwf,oB,+BA+BL,OAAQ,yBAAK9d,UAAU,yBACnB,4BAAQ/B,KAAK,OAAOgC,MAAO,CAACge,OAAO,QAAS/gB,MAAOoB,KAAKc,MAAMke,KAAMpQ,SAAU5O,KAAKyf,aAC9EN,GAAMlS,KAAI,SAAC+R,GACR,OAAO,4BAAQ5R,IAAK,QAAQ4R,EAAMpgB,MAAOogB,GAAQzU,EAAUyU,QAGnE,4BAAQrf,KAAK,SAASgC,MAAO,CAACge,OAAO,QAAU/gB,MAAOoB,KAAKc,MAAMme,OAAQrQ,SAAU5O,KAAKyf,aACnFzf,KAAKsf,QAAQrS,KAAI,SAACmI,GACf,OAAO,4BAAQhI,IAAK,OAAOgI,EAAKxW,MAAOwW,GAAO7K,EAAU6K,QAGhE,4BAAQzV,KAAK,SAASgC,MAAO,CAACge,OAAO,QAAU/gB,MAAOoB,KAAKc,MAAMoe,OAAQtQ,SAAU5O,KAAKyf,aACnFzf,KAAKuf,QAAQtS,KAAI,SAAC2S,GACf,OAAO,4BAAQxS,IAAK,OAAOwS,EAAKhhB,MAAOghB,GAAOrV,EAAUqV,QAGhE,uBAAGje,MAAO,CAACke,WAAY,GAAK3b,QAASlE,KAAK0f,QAAS,uBAAGhe,UAAU,yB,GAzDrCyB,aCTjCO,G,sCACJoc,YAA2B,IAAIxC,IAE3ByC,G,kDAEJ,WAAYve,GAAQ,IAAD,8BACjB,cAAMA,GAAO,IAFfV,MAAe,IAAI4C,GACA,EAInBgL,SAAW,WACT,EAAK5F,iBAAiB,gBACnBlB,MAAK,SAAAuE,GACAA,GACF,EAAK3K,MAAMwe,OAAO,EAAKlf,MAAMgf,iBARlB,EAenBG,kBAAoB,SAACrb,GAA4D,IACvEsC,EAAWtC,EAAXsC,OACA4Y,EAAgB,EAAKhf,MAArBgf,YACRA,EAAY5Y,EAAOvH,MAAQuH,EAAOtI,MAClC,EAAKmE,SAAS,CAAE+c,iBAnBC,EAsBnBI,WAAa,SAACtb,GACZ,IAAMiN,EAAOK,GAAUtN,EAAEsC,OAAOtI,OACxBkhB,EAAgB,EAAKhf,MAArBgf,YACRA,EAAYrC,KAAO5L,EACnB,EAAK9O,SAAS,CAAE+c,iBA1BC,EA4BnBK,WAAa,SAAC3C,EAAWnL,EAAWF,GAClC,IAAM2N,EAAc,EAAKhf,MAAMgf,YAC/BA,EAAYvC,QAAQC,EAAGnL,EAAGF,GAC1B,EAAKpP,SAAS,CAAE+c,YAAaA,KA/BZ,EAiCnBM,cAAgB,SAACxb,GACf,IAAMsC,EAAStC,EAAEsC,OACjByI,GAA0BzI,GAAQU,MAAK,SAAC0I,GACtC,EAAK9O,MAAM4e,cAAc9P,OApCV,EAuCnB+P,iBAAmB,WACjB,EAAK7e,MAAM6e,oBAxCM,EA0CnBC,cAAgB,WACd,OAAO,EAAK9e,MAAM+e,gBA3CD,E,qDA6CT,IAAD,WACCC,EAAcxgB,KAAdwgB,UACAV,EAAgB9f,KAAKc,MAArBgf,YACFxP,EAAatQ,KAAKsgB,gBACxB,OACE,0BAAM5R,SAAU,SAAC9J,GAAQA,EAAE4J,iBAAkB,EAAKE,aAChD,kBAAC,GAAD,CAAW4F,MAAM,YAAYkM,EAAUjG,iBAAvC,MAA4DiG,EAAU7gB,KAAtE,IAA4E,0BAAM+B,UAAU,oBAAoB8e,EAAU/F,QAC1H,kBAAC,GAAD,CAAWnG,MAAM,QACf,2BAAO7T,KAAK,OAAOiB,UAAU,eAAekN,SAAU5O,KAAKkgB,WAAYvgB,KAAK,OAAOf,MAAOkhB,EAAYjC,gBAExG,kBAAC,GAAD,CAAWvJ,MAAM,QACf,kBAAC,GAAD,CAAW1F,SAAU5O,KAAKmgB,WAAYvhB,MAAOkhB,EAAYW,cAE3D,kBAAC,GAAD,CAAWnM,MAAM,YACf,2BAAO5S,UAAU,eAAekN,SAAU5O,KAAKigB,kBAAmBtgB,KAAK,WAAWf,MAAK,UAAEkhB,EAAY/B,gBAAd,QAA0B,MAEnH,kBAAC,GAAD,CAAWzJ,MAAM,WACdhE,EACC,oCACE,yBAAK3O,MAAO,CAAEgM,YAAa,IAAMjM,UAAU,qBAAqBmP,IAAKP,EAAWhQ,IAAK8B,MAAO,IAAKD,OAAQ,MACzG,kBAAC,GAAD,CAAgBsT,cAAc,eAAe/T,UAAU,iBAAiBwC,QAASlE,KAAKqgB,oBAEtF,2BAAO5f,KAAK,OAAOmQ,OAAQ,UAAWlP,UAAU,eAAekN,SAAU5O,KAAKogB,cAAezgB,KAAK,gBAGxG,kBAAC,GAAD,CAAW2U,MAAM,eACf,8BAAU1V,MAAK,UAAEkhB,EAAYpV,mBAAd,QAA6B,GAAIkE,SAAU5O,KAAKigB,kBAAmBtgB,KAAK,cAAc+B,UAAU,kBAEjH,kBAAC,GAAD,CAAgBA,UAAU,+BAA+B+T,cAAc,oBAAoBvR,QAASlE,KAAKwB,MAAMkf,QAA/G,QACA,4BAAQhf,UAAU,+BAAlB,a,gCA7DJ,OAAO1B,KAAKwB,MAAMgf,c,GAfMta,GAkFb0H,eACbC,YACEhN,EADFgN,CAEEkS,KCnGiBY,G,uKAGP,IAAD,EACL,OAAuB,GAAnB3gB,KAAKwB,MAAM0M,KAAsB,KAEjC,yBAAKvM,MAAQ3B,KAAKwB,MAAMG,MAAOD,UAAU,sBAAzC,UACK1B,KAAKwB,MAAM6D,gBADhB,QAC0B,qB,GAPGlC,aCanCO,G,sCACJkd,WAA0B,G,KAC1BzS,SAAU,GAEN0S,G,kDAGJ,WAAYrf,GAAQ,IAAD,8BACjB,cAAMA,GAAO,IAHfqV,uBAEmB,IADnB/V,MAAe,IAAI4C,GACA,EAInBlD,aAAe,kBAAM,EAAKuC,SAAS,CAAEoL,SAAS,KAJ3B,EAKnBlG,WAAa,kBAAM,EAAKlF,SAAS,CAAEoL,SAAS,KALzB,EAMnB2S,iBAAmB,SAACjZ,GAClB,EAAK9E,SAAS,CAAE6d,WAAY/Y,EAASsI,OAAOiH,QAAS,WAC/C,EAAKtW,MAAM8f,WAAW3gB,OAAS,IAC5B,EAAKuB,MAAMgf,WACd,EAAKO,aAAa,EAAKjgB,MAAM8f,WAAW,SAV7B,EAgBnBI,eAAiB,WACf,GAAI,MAAQ,EAAKC,cAAjB,CACA,IAAMjG,EAAkB,CACtB1H,OAAQ,CAAEf,MAAO,EAAGO,aAAc,CAAE,eAAgB,EAAKmO,cAAchiB,KACvE0X,UAAW,eAEb,EAAKzO,WACH,EAAK2O,kBAAkBK,KACvB,EAAK4J,iBACL,EAAKrX,qBACLuR,EACA,YA3Be,EA8BnBiG,YAAc,WACZ,OAAO,EAAKzf,MAAM0f,UA/BD,EAqCnBxS,SAAW,WACT,EAAKlN,MAAMkN,YAtCM,EAwCnBqS,aAAe,SAACI,GACd,EAAK3f,MAAMuf,aAAaI,IAzCP,EA2CnBC,gBAAkB,SAACxc,GACjB,IAAMyc,EAAUzc,EAAEsC,OACZoa,EAAW,EAAKxgB,MAAM8f,WAAWtN,QAAO,SAAC6N,GAAD,aAAO,UAAAA,EAAEliB,UAAF,eAAMoL,aAAcgX,EAAOziB,SACzD,GAAnB0iB,EAASrhB,QACb,EAAK8gB,aAAaO,EAAS,KA7C3B,EAAKzK,kBAAoB,EAAKhN,cAAcgN,kBAF3B,E,gEAkCjB,4EACA7W,KAAKghB,mB,+BAcG,IAAD,SACDE,EAAWlhB,KAAKihB,cADf,EAGyBjhB,KAAKc,MAA7B8f,EAHD,EAGCA,WAAYzS,EAHb,EAGaA,QAEpB,OAAI,MAAQ+S,EACH,kBAAC,GAAD,2BAEL/S,EACK,kBAAC,EAAD,MAEgB,GAArByS,EAAW3gB,OACN,kBAAC,GAAD,wBAA8BihB,EAASvhB,KAAvC,cAGP,0BAAM+O,SAAU,SAAA9J,GAAOA,EAAE4J,iBAAkB,EAAKE,aAC9C,kBAAC,GAAD,CAAW4F,MAAM,WAAWjP,SAAU6b,EAASvhB,OAC/C,kBAAC,GAAD,CAAW2U,MAAM,QACf,4BAAQ5S,UAAU,eAAekN,SAAU5O,KAAKohB,gBAAiBxiB,MAAOoB,KAAKwB,MAAMgf,UAAYxgB,KAAKwB,MAAMgf,UAAUvhB,GAAK,MACtH2hB,EAAW3T,KAAI,SAACkU,GACf,OAAO,4BAAQ/T,IAAG,2BAAsB+T,EAAEliB,IAAML,MAAOuiB,EAAEliB,IAAKkiB,EAAExhB,WAItE,kBAAC,GAAD,CAAW2U,MAAM,QAAQjP,SAAQ,UAAErF,KAAKwB,MAAMgf,iBAAb,aAAE,EAAsB/F,QACzD,6BACA,kBAAC,GAAD,CAAgB/Y,UAAU,+BAA+B+T,cAAc,oBAAoBvR,QAASlE,KAAKwB,MAAMkf,QAA/G,QACA,kBAAC,GAAD,CAAgBhf,UAAU,2BAA2B+T,cAAc,qBAAqBvR,QAASlE,KAAK0O,UAAtG,a,GA/EkBxI,GAqFX0H,eACbC,YACEhN,EADFgN,CAEEgT,KC5FEnd,G,sCACJiX,WAAyB,G,KACzBxM,SAAU,GAENoT,G,kDAGJ,WAAY/f,GAAQ,IAAD,8BACjB,cAAMA,GAAO,IAHfV,MAAe,IAAI4C,GAEA,EADnBmT,uBACmB,IAInB+D,iBAAmB,SAAC/S,GAClB,EAAK9E,SAAS,CAAE4X,WAAY9S,EAASsI,OAAOiH,MAAOwD,kBAAkB,IAAQ,WACvE,EAAK9Z,MAAM6Z,WAAW1a,OAAS,IAC5B,EAAKuB,MAAM0f,UACd,EAAKM,YAAY,EAAK1gB,MAAM6Z,WAAW,SAR5B,EAanBna,aAAe,kBAAM,EAAKuC,SAAS,CAAEoL,SAAS,KAb3B,EAcnBlG,WAAa,kBAAM,EAAKlF,SAAS,CAAEoL,SAAS,KAdzB,EAenBqT,YAAc,SAACrG,GACb,EAAK3Z,MAAMigB,oBAAoBtG,IAhBd,EAkBnBJ,eAAiB,WACf,IAAMC,EAAkB,CACtB1H,OAAQhB,GAAOc,UAAU,GACzBuD,UAAW,mBAEb,EAAKzO,WACH,EAAK2O,kBAAkBK,KACvB,EAAK0D,iBACL,EAAKnR,qBACLuR,EACA,WA5Be,EAmCnBtM,SAAW,WACT,EAAKlN,MAAMkN,YApCM,EAsCnBgT,eAAiB,SAAC9c,GAChB,IAAMyc,EAASzc,EAAEsC,OACXoa,EAAW,EAAKxgB,MAAM6Z,WAAWrH,QAAO,SAAC6H,GAAD,aAAO,UAAAA,EAAElc,UAAF,eAAMoL,aAAcgX,EAAOziB,SACzD,GAAnB0iB,EAASrhB,QACb,EAAKuhB,YAAYF,EAAS,KAxC1B,EAAKzK,kBAAoB,EAAKhN,cAAcgN,kBAF3B,E,gEAgCjB,4EACA7W,KAAK+a,mB,+BAWG,IAAD,WACyB/a,KAAKc,MAA7B6Z,EADD,EACCA,WAAYxM,EADb,EACaA,QACZ+S,EAAalhB,KAAKwB,MAAlB0f,SACR,OAAI/S,EACK,kBAAC,EAAD,MAEgB,GAArBwM,EAAW1a,OACN,kBAAC,GAAD,6BAGP,0BAAMyO,SAAU,SAAC9J,GAAQA,EAAE4J,iBAAkB,EAAKE,aAChD,kBAAC,GAAD,CAAW4F,MAAM,YACf,4BAAQ5S,UAAU,eAAekN,SAAU5O,KAAK0hB,eAAgB9iB,MAAOsiB,GAAQ,UAAGA,EAASjiB,UAAZ,QAAuB,IACnG0b,EAAW1N,KAAI,SAACkO,GACf,OAAO,4BAAQ/N,IAAG,qBAAgB+N,EAAElc,IAAML,MAAOuc,EAAElc,IAAKkc,EAAExb,WAIhE,6BACA,kBAAC,GAAD,CACE+B,UAAU,+BACV+T,cAAc,oBACdvR,QAASlE,KAAKwB,MAAMkf,QAHtB,QAOA,kBAAC,GAAD,CACEhf,UAAU,2BACV+T,cAAc,qBACdvR,QAASlE,KAAK0O,UAHhB,a,GAzEkBxI,GAuFX0H,eACbC,YACEhN,EADFgN,CAEE0T,KCvFE7d,G,sCACJ6Y,a,OACA2E,c,OACAV,e,OACAmB,SAAmB,E,KACnBC,iB,OACArB,oB,GAEIsB,G,kDAIJ,WAAYrgB,GAAQ,IAAD,8BACjB,cAAMA,EAAO,sBAAsB,IAJrCV,MAAe,IAAI4C,GAGA,EAFnB8M,oBAEmB,IADnBsR,UAAoB,EACD,EAInBC,oBAAsB,WACpB,GAAK,EAAKvgB,MAAMuc,SAASjd,MAAzB,CAGA,IAAMyb,EAAU,EAAK/a,MAAMuc,SAASjd,MAAMyb,QACtCA,GACF,EAAKxZ,SAAS,CAAEwZ,QAASpc,OAAOC,OAAO,IAAI+c,GAAWZ,OAVvC,EAsBnB6D,cAAgB,SAACG,GACf,EAAKxd,SAAS,CAAEwd,eAAgBA,KAvBf,EAyBnByB,cAAgB,WACd,EAAKjf,SAAS,CAAE4e,SAAU,IAAK,WAC7Bve,GAAU,WACR,EAAKL,SAAS,CAAEwZ,aAAShX,MACxB,SA7BY,EAgCnB8a,iBAAmB,WACjB,EAAKD,mBAAc7a,IAjCF,EAmCnBic,YAAc,SAACrG,GACb,EAAKpY,SAAS,CAAEme,SAAU/F,KApCT,EAsCnB4F,aAAe,SAACI,GACd,EAAKpe,SAAS,CAAEyd,UAAWW,KAvCV,EAyCnBc,SAAW,SAACC,GACV,EAAKnf,SAAS,CAAE4e,SAAUO,KA1CT,EA4CnBC,aAAe,SAACzK,GAAyB,IAAD,IAEjC,EAAK5W,MAAMyb,SAAY,EAAKzb,MAAM0f,WAIvC9I,EAAOsG,cAAP,UAAuB,EAAKld,MAAMyb,eAAlC,aAAuB,EAAoBtd,GAC3CyY,EAAOuG,YAAP,UAAqB,EAAKnd,MAAM0f,iBAAhC,aAAqB,EAAsBvhB,GAC3C,EAAKiJ,WACH,EAAKsI,eAAe4R,kBACpB,EAAKC,gBACL,EAAK5Y,qBACLiO,EACA,EAAK5W,MAAMyf,iBAVXxY,MAAM,yCA/CS,EA4DnBsa,gBAAkB,SAACxa,GACjB,EAAK9E,SAAS,CAAE6e,YAAa/Z,EAASsI,OAAQwR,SAAU,GAAK,EAAKnZ,YA3DlE,EAAKgI,eAAiB,EAAK3G,cAAc2G,eAFxB,E,gEAaE,IAAD,OAClB,4EACAxQ,KAAK+hB,sBACL/hB,KAAKwI,YACLpF,GAAU,WACR,EAAK6e,SAAS,KACb,O,+BA4CK,IAAD,OACD1F,EAA+Bvc,KAAKc,MAAMyb,QAChD,OAAKA,EAKH,yBAAK7a,UAAU,gCACb,sDACA,kBAAC,GAAD,CAAO+C,MAAO8X,EAAQ5c,KAAO,MAAQ4c,EAAQU,WAAaV,EAAQW,YAAc,IAAMX,EAAQO,YAC5F,kBAAC,GAAD,CAAUoF,KAAMliB,KAAKc,MAAM6gB,SAAUG,UAAW9hB,KAAK8hB,YAE5B,GAAvB9hB,KAAKc,MAAM6gB,UACX,kBAAC,GAAD,CACET,SAAUlhB,KAAKc,MAAMogB,SACrBR,OAAQ1gB,KAAKgiB,cACbP,oBAAqBzhB,KAAKwhB,YAC1B9S,SAAU,WAAQ,EAAKuT,SAAS,MAGX,GAAvBjiB,KAAKc,MAAM6gB,UAAiB3hB,KAAKc,MAAMogB,UACvC,kBAAC,GAAD,CACEV,UAAWxgB,KAAKc,MAAM0f,UACtBO,aAAc/gB,KAAK+gB,aACnBG,SAAUlhB,KAAKc,MAAMogB,SACrBR,OAAQ,kBAAM,EAAKuB,SAAS,IAC5BvT,SAAU,WAAQ,EAAKuT,SAAS,MAGX,GAAvBjiB,KAAKc,MAAM6gB,UAAiB3hB,KAAKc,MAAMogB,UAAYlhB,KAAKc,MAAM0f,WAC9D,kBAAC,GAAD,CACER,OAAQhgB,KAAKmiB,aACb5B,eAAgBvgB,KAAKc,MAAMyf,eAC3BH,cAAepgB,KAAKogB,cACpBC,iBAAkBrgB,KAAKqgB,iBACvBG,UAAWxgB,KAAKc,MAAM0f,UACtBE,OAAQ,kBAAM,EAAKuB,SAAS,MAER,GAAvBjiB,KAAKc,MAAM6gB,UAAiB3hB,KAAKc,MAAM8gB,aACtC,kBAAC,GAAD,CAAQU,KAAM,kBAAM,EAAKvf,SAAS,CAAEwZ,QAAS,QAAS7E,OAAQ1X,KAAKc,MAAM8gB,gBApCxE,kBAAC,GAAD,U,GAtEgBzS,IAkHvBoT,GAAW,SAAC/gB,GAChB,OACE,yBAAKE,UAAU,WAAWC,MAAO,CAAEQ,OAAQ,MAAOJ,aAAc,KAC9D,yBAAKL,UAAU,UAAUC,MAAO,CAAEW,mBAAoB,QAASF,MAAQZ,EAAM0gB,KAAO1gB,EAAMsgB,UAAY,IAAO,SAK7GU,GAAS,SAAChhB,GAAiD,IAAD,EACxDkW,EAAS4F,GAAYlS,MAAM5J,EAAMkW,QAC1BA,EAAO1F,UACpB,OACE,6BACE,wBAAItQ,UAAU,4BAA2B,uBAAGA,UAAU,eAAeC,MAAO,CAAEgM,YAAa,KAA3F,gBACA,4BACA,kBAAC,GAAD,CAAW2G,MAAM,QAAQ,IAAIhO,KAAKoR,EAAO+F,MAAMgF,kBAC/C,kBAAC,GAAD,CAAWnO,MAAM,YAAYoD,EAAO6C,kBACpC,kBAAC,GAAD,CAAWjG,MAAM,QAAQoD,EAAO2G,UAChC,kBAAC,GAAD,CAAW/J,MAAM,SAASoD,EAAO+C,OACjC,kBAAC,GAAD,CAAWnG,MAAM,YAAYoD,EAAOqG,UAElCrG,EAAO6G,cACP,kBAAC,GAAD,CAAWjK,MAAM,WACf,yBAAKzD,IAAG,UAAE6G,EAAO6G,oBAAT,QAAyB,GAAInc,MAAO,IAAKD,OAAQ,OAG7D,6BACA,kBAAC,GAAD,KAAW,uBAAG+B,QAAS1C,EAAM8gB,KAAM5gB,UAAU,gBAAlC,SAKXghB,GAAU,WACd,OACE,yBAAKhhB,UAAU,gCACb,sDACA,kBAAC,GAAD,KACE,uBAAGA,UAAU,8BADf,6BACyE,6BACvE,kBAAC,GAAD,CAAgB2L,GAAI,sBAAuBoI,cAAc,eAAzD,mBAMO7H,eACbC,YACEhN,EADFgN,CAEEgU,KC7LiBc,G,kDACjB,WAAYnhB,GAAa,uCACfA,G,qDAKN,OACI,yCAASxB,KAAKwB,MAAMgU,WAApB,CAAgC9T,UAAW,QAAU1B,KAAKwB,MAAME,YAC3D1B,KAAKwB,MAAMiD,MAAQ,yBAAK/C,UAAU,eAC9B1B,KAAKwB,MAAMiD,OACP,KACT,yBAAK/C,UAAU,aACV1B,KAAKwB,MAAM6D,eAEaE,GAA5BvF,KAAKwB,MAAMyX,cACR,yBAAKvX,UAAU,eACV1B,KAAKwB,MAAMyX,eAEd,U,GAnBY9V,aCUbyf,G,kLAGjB,IAAMna,EAAuB,CAAEC,IAAK,EAAGC,SAAU,UACjDvF,GAAU,WACRwF,OAAOC,SAASJ,KACf,O,+BAGK,IAAD,IACDiP,EAAS4F,GAAYlS,MAAMpL,KAAKwB,MAAMkW,QACtCmL,EAAanL,EAAO6G,aACpBuE,EAAY,IAAIxc,KAAKoR,EAAO+F,MAAMpT,WACxC,OAAO,kBAAC,GAAD,CAAM5F,MAAO,qBAAsBwU,cAAe,kBAAC,GAAD,CAAgBvX,UAAU,eAAewC,QAASlE,KAAKwB,MAAMqD,OAA7D,OACvD,kBAAC,GAAD,CAAWyP,MAAM,QAAQoD,EAAO4G,YAAhC,MAAgD5G,EAAOuF,WAAYvF,EAAOwF,YAA1E,IAAwFxF,EAAOoF,YAC/F,kBAAC,GAAD,CAAWxI,MAAM,eACf,gCAASoD,EAAO6C,kBADlB,MACgD7C,EAAO2G,SADvD,IACiE,0BAAM3c,UAAU,oBAAoBgW,EAAO+C,QAE5G,kBAAC,GAAD,CAAWnG,MAAM,QAAQjP,SAAUyd,IACnC,kBAAC,GAAD,CAAWxO,MAAM,SAASjP,SAAQ,UAAEqS,EAAOqG,gBAAT,QAAqB,MACvD,kBAAC,GAAD,CAAWzJ,MAAM,YAAYjP,SAAQ,UAAEqS,EAAOhN,mBAAT,QAAwB,MAC7D,kBAAC,GAAD,CAAW4J,MAAM,aAAajP,SAAUqS,EAAOyG,QAAU,IAAI7X,KAAKoR,EAAOyG,SAAS9T,WAAa,MAE/F,kBAAC,GAAD,CAAWiK,MAAM,UACduO,EACC,yBAAKhS,IAAKgS,EAAYzgB,MAAO,IAAKD,OAAQ,IAAKT,UAAU,uBAA0B,W,GAzB9CyB,aCHzCO,G,sCACJyK,SAAmB,GAEf4U,G,kDAGJ,WAAYvhB,GAAQ,IAAD,8BACjB,cAAMA,GAAO,IAHfgP,oBAEmB,IADnB1P,MAAe,IAAI4C,GACA,EAInBlD,aAAe,WAAQ,EAAKuC,SAAS,CAAEoL,SAAS,KAJ7B,EAKnBlG,WAAa,WAAQ,EAAKlF,SAAS,CAAEoL,SAAS,KAL3B,EAMnBiL,UAAY,kBAAmB,EAAK5X,MAAMkW,QANvB,EAQnBsL,WAAa,SAACC,GACZ,IAAMpL,EAAO,EAAKuB,YAClB,EAAKlR,WACH,EAAKsI,eAAe0S,gBACpB,EAAK1hB,MAAMwU,UACX,EAAKvM,qBACLoO,EAAK5Y,GAAIgkB,IAZX,EAAKzS,eAAiB,EAAK3G,cAAc2G,eAFxB,E,qDAiBT,IAAD,OACDqH,EAAO7X,KAAKoZ,YAClB,OAAIpZ,KAAKc,MAAMqN,QAEX,4BAAQzM,UAAU,uBAChB,0BAAMA,UAAU,mCAAmC5B,KAAK,SAASkC,cAAY,UAKjF6V,EAAKsG,QACH,kBAAC,GAAD,CAAgBja,QAAS,SAACU,GAAD,OAAO,EAAKoe,YAAW,IAAQthB,UAAU,2BAA2B+T,cAAc,mBAA3G,SAGA,kBAAC,GAAD,CAAgBvR,QAAS,SAACU,GAAD,OAAO,EAAKoe,YAAW,IAAOthB,UAAU,yBAAyB+T,cAAc,qBAAxG,gB,GAlCuBvP,GAyChB0H,eAAWC,YACxBhN,EADwBgN,CAExBkV,KCpCIrf,G,sCACJ0T,MAAuB,G,KACvB9D,OAAiB,IAAIhB,G,KACrBoC,UAAoB,E,KACpBgD,Y,OACAvJ,SAAmB,E,KACnBwM,WAAyB,G,KACzBgB,QAAmB,G,KACnBwH,sB,OACAC,kBAA4B,GAExBxH,GAAM,IAAItV,KACVuV,GAAsB,CAC1B,oCAAqC,GACrCsC,QAAS,GACT,6BAA8B,GAC9B,iBAAkB,GAClB,0BAA2B,GAC3BJ,SAAU,GACV,UAAWnM,GAAqB,IAAItL,KAAKsV,GAAI9J,cAAe,EAAG,IAC/D,UAAWF,GAAqBgK,KAI5ByH,G,kDAGJ,WAAY7hB,GAAQ,IAAD,uBACjB,cAAMA,EANS,eACN,UAKsB,IAHjCV,MAAe,IAAI4C,GAEA,EADX8M,oBACW,IAoBnByL,YAAc,WACZ,EAAK/T,WAAW,EAAKsI,eAAe0L,WAClC,EAAKoH,eAAgBzgB,QAAQ8G,QAtBd,EAwBnBoR,eAAiB,WACf,EAAK7S,WAAW,EAAKsI,eAAe+S,cAClC,EAAK3I,iBAAkB/X,QAAQ8G,QA1BhB,EA4BnBiR,iBAAmB,SAAC/S,GAAD,OAA2B,EAAK9E,SAAS,CAAE4X,WAAY9S,EAASsI,OAAOiH,SA5BvE,EA6BnBkM,eAAiB,SAACzb,GAAD,OAA2B,EAAK9E,SAAS,CAAE4Y,QAAS9T,EAASsI,UA7B3D,EA+BnBsR,oBAAsB,SAAC0B,GAAgC,IAAD,EAC5C7P,EAAW,EAAKxS,MAAhBwS,OACH6P,EAAiBlkB,IAA0C,MAApC,UAAAkkB,EAAiBlkB,UAAjB,eAAqBoL,cAC/CiJ,EAAOR,aAAa,kBAAoB,IAE1C,EAAK/P,SAAS,CAAEuQ,SAAQ6P,sBApCP,EAuCnBK,WAAa,SAAC3L,GAAD,OAAuB,EAAK9U,SAAS,CAAE2U,OAAQG,KAvCzC,EAwCnB4L,WAAa,kBAAM,EAAK1gB,SAAS,CAAE2U,YAAQnS,GAAa,EAAKiD,YAxC1C,EAyCnB4a,iBAAmB,kBAAM,EAAKrgB,SAAS,CAAEqgB,kBAAkB,KAzCxC,EA0CnBM,iBAAmB,kBAAM,EAAK3gB,SAAS,CAAEqgB,kBAAkB,KA1CxC,EA4CnBO,aAAe,SAAC5E,GACd,EAAKvd,MAAMsI,QAAQC,KAAK,CACtB2G,SAAU,0BACV5P,MAAO,CAAE4W,OAAQqH,MA/CF,EAmDnB6E,YAAc,WAAO,IACXtQ,EAAW,EAAKxS,MAAhBwS,OACR,EAAKvQ,SAAS,CAAEuQ,OAAQhB,GAAOW,kBAAkBK,MArDhC,EAuDnBuQ,SAAW,SAAC9E,GACV,EAAK7W,WACH,EAAKsI,eAAeqT,SACpB,EAAKra,uBACL,EAAKC,qBACLsV,EAAE9f,KA5Da,EA+DnB6kB,QAAU,SAAClf,GACT,EAAKkE,iBAAiB,YAAc,EAAKhI,MAAMsW,MAAMnX,OAAS,UAC3D2H,MAAK,SAAAuE,GACAA,GACF,EAAKjE,WACH,EAAKsI,eAAesT,QACpB,EAAK1L,OACL,EAAK3O,qBACL,EAAKsa,aAvEI,EA4EnBC,UAAY,SAACpf,GACX,EAAKkE,iBAAiB,mBAAqB,EAAKhI,MAAMsW,MAAMnX,OAAS,UAClE2H,MAAK,SAAAuE,GACAA,GACF,EAAKjE,WACH,EAAKsI,eAAewT,UACpB,EAAK5L,OACL,EAAK3O,qBACL,EAAKsa,aApFI,EAyFnBnQ,mBAAqB,SAAChP,EAAsDiP,GAAkC,IACpGP,EAAW,EAAKxS,MAAhBwS,OACRhB,GAAOsB,mBAAmBN,EAAQ1O,EAAGiP,GACrC,EAAK9Q,SAAS,CAAEuQ,YA5FC,EA8FnB2Q,oBAAsB,SAACrf,GAAuC,IACpD0O,EAAW,EAAKxS,MAAhBwS,OACAR,EAAiBQ,EAAjBR,aACR,IAAK,IAAM1F,KAAO0F,EACZ1F,EAAI8W,WAAW,mBACVpR,EAAa1F,GAGxB,IAAMsC,EAAQ9K,EAAEsC,OAAOtI,MAAM8Q,MAAM,KAClB,YAAbA,EAAM,KAGVoD,EAAapD,EAAM,IAAM,QACzB,EAAK3M,SAAS,CAAEuQ,aAxGhB,EAAK9C,eAAiB,EAAK3G,cAAc2G,eAEzC,IAAM0C,EAAI,IAAIZ,GALG,OAOjBY,EAAEX,MAAQ,GACVW,EAAEJ,aAAe+I,GACjB3I,EAAER,QAAU,OACZQ,EAAET,UAAY,OAEd,EAAK3R,MAAMwS,OAASJ,EAZH,E,gEAgBjB,4EACAlT,KAAK+a,iBACL/a,KAAKic,gB,+BA8FG,IAAD,uBACoBjc,KAAKc,MAAxBwS,EADD,EACCA,OAAQoE,EADT,EACSA,OACR5E,EAAiBQ,EAAjBR,aAEFrO,EAAQ,oBACd,GAAIiT,EACF,OACE,yBAAKhW,UAAU,gCACb,4BAAK+C,GACL,kBAAC,GAAD,CAAmBiT,OAAQA,EAAQ7S,MAAO7E,KAAKyjB,cAIrD,IACM/G,EAAkBpJ,EAAOR,aAAa,8BAAgCQ,EAAOR,aAAa,8BAAgC,GAEhI,OACE,yBAAKpR,UAAU,gCACb,4BAAK+C,GACL,6BACA,0BAAM/C,UAAU,cAAcgN,SAAU1O,KAAKoY,QAC3C,kBAAC,GAAD,CAAW9D,MAAM,QACf,yBAAK5S,UAAU,eACb,2BAAOyiB,aAAa,MAAMxkB,KAAK,oCAAoCmP,YAAY,aAAapN,UAAU,kBAAkB9C,MAAK,UAAEkU,EAAa,4CAAf,QAAuD,GAAIlE,SAAU5O,KAAKuX,qBACvM,4BAAQ4M,aAAa,MAAMvlB,MAAO8d,EAAiB9N,SAAU5O,KAAKuX,mBAAoB7V,UAAU,kBAAkB/B,KAAK,8BACpH,CAZe,CAAEV,GAAI,GAAI2d,MAAO,cAAewH,QAAS,KAYxD,oBAAkBpkB,KAAKc,MAAM6a,UAAS1O,KAAI,SAACkO,GAC1C,OAAO,4BAAQ/N,IAAG,gBAAW+N,EAAElc,IAAML,MAAOuc,EAAElc,IAAKkc,EAAEyB,MAAOzB,EAAE0B,OAAvD,MAAkE1B,EAAE2B,kBAKlF9c,KAAKc,MAAMsiB,iBACV,oCAAE,yBAAK1hB,UAAU,iEACf,kBAAC,GAAD,CAAW4S,MAAM,YACf,4BAAQ1V,MAAOkU,EAAa,0BAA2BlE,SAAU5O,KAAKuX,mBAAoB7V,UAAU,kBAAkB/B,KAAK,0BACxH,CAACiZ,GAASxN,MAAM,CAAEnM,GAAI,GAAIU,KAAM,WAAhC,oBAA+CK,KAAKc,MAAM6Z,aAAY1N,KAAI,SAACkO,GAC1E,OAAO,4BAAQjX,QAAS,kBAAM,EAAKud,oBAAoBtG,IAAI/N,IAAG,cAAS+N,EAAElc,IAAML,MAAOuc,EAAElc,IAAKkc,EAAExb,WAKnGK,KAAKc,MAAMqiB,kBAAoBnjB,KAAKc,MAAMqiB,iBAAiBtK,QAC3D,kBAAC,GAAD,CAAWvE,MAAM,eACf,4BAAQ1V,MAAOkU,EAAa,kBAAmBlE,SAAU5O,KAAKuX,mBAAoB7V,UAAU,kBAAkB/B,KAAK,kBAChH,CAAC,CAAEV,GAAI,GAAIU,KAAM,UAAjB,oBAA+BK,KAAKc,MAAMqiB,iBAAiBtK,SAAQ5L,KAAI,SAACkO,GACvE,OAAO,4BAAQ/N,IAAG,aAAQ+N,EAAElc,IAAML,MAAe,IAARuc,EAAElc,GAAWkc,EAAElc,GAAKkc,EAAExb,MAAOwb,EAAExb,WAKhF,kBAAC,GAAD,CAAW2U,MAAM,WACf,yBAAK5S,UAAU,eACb,kBAAC,GAAD,CAAcmQ,KAAM,IAAIvL,KAAKwM,EAAa,YAAalE,SAAU,SAAChK,GAAD,OAAO,EAAKgP,mBAAmBhP,EAAG,eAErG,yBAAKlD,UAAU,eACb,kBAAC,GAAD,CAAcmQ,KAAM,IAAIvL,KAAKwM,EAAa,YAAalE,SAAU,SAAChK,GAAD,OAAO,EAAKgP,mBAAmBhP,EAAG,gBAGvG,kBAAC,GAAD,CAAW0P,MAAM,aACf,4BACE5S,UAAU,kBACVkN,SAAU5O,KAAKikB,qBAEf,4BAAQrlB,MAAM,YAAd,SACA,4BAAQA,MAAM,iBAAd,SACA,4BAAQA,MAAM,iBAAd,WAGJ,kBAAC,GAAD,CAAW0V,MAAM,UACf,2BAAO3U,KAAK,WAAWmP,YAAY,SAASpN,UAAU,kBAAkB9C,MAAK,UAAEkU,EAAY,gBAAd,QAA8B,GAAIlE,SAAU5O,KAAKuX,sBAEhI,kBAAC,GAAD,CAAWjD,MAAM,mBACf,2BAAO7T,KAAK,SAASd,KAAK,QAAQ+B,UAAU,kBAAkB9C,MAAK,UAAE0U,EAAOf,aAAT,QAAkB,EAAG3D,SAAU5O,KAAKqX,gBAEzG,kBAAC,GAAD,CAAW/C,MAAM,IACf,uBAAG5S,UAAU,sBAAsBwC,QAASlE,KAAK0jB,kBAAjD,SACA,2BAAOhiB,UAAU,8BAA8BjB,KAAK,SAAS7B,MAAM,WAGrE,kBAAC,GAAD,CAAW0V,MAAM,IACf,uBAAG5S,UAAU,sBAAsBwC,QAASlE,KAAK0jB,kBAAjD,yBAGF,kBAAC,GAAD,CAAWpP,MAAM,IACjB,uBAAG5S,UAAU,sBAAsBwC,QAASlE,KAAKojB,kBAAjD,yBAEJ,kBAAC,GAAD,CAAW9O,MAAM,WACd,IAAIhO,KAAKgN,EAAOR,aAAa,YAAYiK,eAD5C,MAC+D,IAAIzW,KAAKgN,EAAOR,aAAa,YAAYiK,gBAExG,kBAAC,GAAD,KACE,2BAAOrb,UAAU,yBAAyBjB,KAAK,SAAS7B,MAAM,WAC9D,uBAAG8C,UAAU,gCAAgCwC,QAASlE,KAAK4jB,aAA3D,SACA,uBAAG1f,QAASlE,KAAK8jB,QAASpiB,UAAU,4BAApC,kBACA,uBAAGwC,QAASlE,KAAKgkB,UAAWtiB,UAAU,+BAAtC,2BAGJ,kBAAC,GAAD,CACEiT,WAAU,UAAErB,EAAOd,YAAT,QAAiB,EAC3BD,MAAK,UAAEe,EAAOf,aAAT,QAAkB,GACvBmC,UAAW1U,KAAKc,MAAM4T,UACtBxQ,QAASlE,KAAKwX,aAEhB,kBAAC,GAAD,CACEnP,QAASrI,KAAKqI,UACdgO,gBAAgB,UAAC/C,EAAOd,YAAR,QAAgB,IAAhB,UAAsBc,EAAOf,aAA7B,QAAsC,IACtDgH,sBAAuBvZ,KAAKwjB,WAC5Ba,oBAAqBrkB,KAAK2jB,aAC1B5L,cAAe/X,KAAKgX,UACpB6M,SAAU7jB,KAAK6jB,SACfzM,MAAOpX,KAAKc,MAAMsW,W,8BA/GV,OAAOpX,KAAKc,MAAMsW,MAAMnK,KAAI,SAAAlN,GAAC,OAAIA,EAAEd,U,GAjHpByX,IA+O3B0D,GAAY,SAAC5Y,GACjB,OACE,yBAAKG,MAAO,CAAE+W,SAAU,SACtB,2BAAOhX,UAAU,UACd6P,GAAY,KAAM,QAAS,QAAS,UAAW,cAAe,OAAQ,SAAU,SAAU,YAAa,QACxG,+BACG/P,EAAM4V,MAAMnK,KAAI,SAAC4K,EAAM9X,GAAO,IAAD,EAC5B8X,EAAOyF,GAAYlS,MAAMyM,GACzB,IAAMyM,EAAc9iB,EAAM6G,QACxB,CAAC,SAAU,UACX,CAAEwP,EAAKsG,QAAU,KAAO,OAAS,UACnC,OACE,wBAAI/Q,IAAK,eAAiBrN,EAAG2B,UAAWmW,EAAKsG,QAAU,sBAAwB,IAC7E,4BAAKpe,EAAI,EAAIyB,EAAM6U,gBACnB,4BAAKwB,EAAKyG,aACV,4BAAKzG,EAAKoF,WAAYpF,EAAKqF,YAA3B,IAAyCrF,EAAKiF,YAC9C,4BAAK,IAAIxW,KAAKuR,EAAK4F,MAAM8G,sBACzB,4BAAK1M,EAAK0C,iBAAV,KAA8B1C,EAAKwG,SAAnC,KACA,4BAAKxG,EAAK4C,OACV,4BAAK5C,EAAKkG,UACV,4BACE,yBAAKlN,IAAG,UAAEgH,EAAK0G,oBAAP,QAAuB,GAAInc,MAAO,GAAID,OAAQ,MAExD,4BAAK0V,EAAKsG,QAAU,uBAAGzc,UAAU,iBAAoB,IAArD,KACA,4BACE,yBAAKC,MAAO,CAAES,MAAO,gBAEjByV,EAAK6C,UACH,oCAAE,kBAAC,GAAD,CAAkBhD,OAAQG,EAAM7B,UAAWxU,EAAMuW,gBAAiB,6BACpE,2BAAG,mDAOP,kBAAC,GAAD,CACEL,OAAQG,EACRoC,MAAOqK,EACP/K,sBAAuB/X,EAAM+X,sBAC7BD,aAAc9X,EAAM6iB,oBACpB1N,UA1RH,eA2RGnL,KA1RT,qBAwSEoC,eACbC,YACEhN,EADFgN,CAEEwV,KCjViBmB,G,iDAIjBvlB,Q,OACAU,U,OACAid,W,OACA6H,Y,OACAL,a,OAEAvH,Y,OACAC,gB,sEAV0BP,GAAsC,IAAD,cAC3D,OAAO,iBAACA,QAAD,IAACA,GAAD,UAACA,EAASc,aAAV,aAAC,EAAgBT,aAAjB,QAAwB,KAAxB,iBAA8BL,QAA9B,IAA8BA,GAA9B,UAA8BA,EAASc,aAAvC,aAA8B,EAAgBoH,cAA9C,QAAsD,IAAM,KAA5D,iBAAmElI,QAAnE,IAAmEA,GAAnE,UAAmEA,EAASc,aAA5E,iBAAmE,EAAgB+G,eAAnF,aAAmE,EAAyBM,YAA5F,QAAkG,Q,KCO3GhhB,G,sCACF4a,iB,OACAlH,MAAkB,G,KAClBS,U,GAEE8M,G,kDAIF,WAAYnjB,GAAQ,IAAD,8BACf,cAAMA,GAAO,IAHjBV,MAAc,IAAI4C,GAEC,EADnBmT,uBACmB,IAKnBmJ,OAAS,SAACpb,GACNA,EAAE4J,iBACF,EAAKoW,eAPU,EASnBzN,YAAc,SAACtP,GACX,EAAK9E,SAAS,CAACqU,MAAOvP,EAASuP,SAVhB,EAYnBwN,YAAc,WACV,IAAM3N,EAAqB,CACvBN,UAAU,UACVrD,OAAO,CACHf,MAAO,GACPO,aAAc,CAAGnT,KAAK,EAAKmB,MAAMwd,eAGzC,EAAKpW,WACD,EAAK2O,kBAAkBK,KACvB,EAAKC,YACL,EAAK1N,qBACLwN,IAxBW,EA2BnB4N,gBAAkB,SAAChN,GACf,EAAK9U,SAAS,CAAC8U,KAAKA,EAAOT,MAAM,GAAIkH,iBAAY/Y,IAAY,WACrD,EAAK/D,MAAMsjB,SACX,EAAKtjB,MAAMsjB,QAAQjN,OA9BZ,EAkCnBkN,MAAQ,WACJ,EAAKhiB,SAAS,CAAC8U,UAAKtS,EAAW6R,MAAM,GAAIkH,iBAAY/Y,IAAY,WACzD,EAAK/D,MAAMsjB,SACX,EAAKtjB,MAAMsjB,aAAQvf,OAnC3B,EAAKsR,kBAAoB,EAAKhN,cAAcgN,kBAF7B,E,qDAyCT,IAAD,SACCO,EAAkBpX,KAAKc,MAAMsW,MAC7B4N,EAAmChlB,KAAKc,MAAM+W,KACpD,OACI,0BAAMoN,QAASjlB,KAAK+kB,MAAOrW,SAAU1O,KAAKggB,QACtC,kBAAC,GAAD,CAAMvb,MAAM,kBACR,kBAAC,GAAD,CAAW6P,MAAM,UACb,2BAAOxF,YAAY,OAAOlQ,MAAK,UAAEoB,KAAKc,MAAMwd,mBAAb,QAA0B,GAAI5c,UAAU,eAAekN,SAAU5O,KAAK+G,kBAAmBpH,KAAK,gBAC5HyX,EAAMnX,OAAS,EAAE,yBAAK0B,MAAO,CAACE,SAAS,WAAYC,OAAQ,KAAMJ,UAAU,0DACnE0V,EAAMnK,KAAI,SAAA4K,GAAO,IAAD,EACb,OACI,yBAAKnW,UAAU,cAAawC,QAAS,WACjC,EAAK2gB,gBAAgBhN,IACtBlW,MAAO,CAACujB,OAAQ,WAAY9X,IAAK,WAAWyK,EAAK5Y,IAFpD,UAE0D4Y,EAAK3X,YAF/D,aAE0D,EAAWZ,aAG7E,uBAAG4E,QAASlE,KAAK+kB,MAAOrjB,UAAU,eAAc,uBAAGA,UAAU,iBAA7D,cACG,MAEdsjB,EACD,kBAAC,GAAD,CAAYnN,KAAMmN,IACjB,KACD,6BACA,yBAAKtjB,UAAU,yBACX,2BAAOjB,KAAK,SAASiB,UAAU,eAAe9C,MAAM,WACpD,2BAAO6B,KAAK,QAAQiB,UAAU,oBAAoB9C,MAAM,UACxD,kBAAC,GAAD,CAAgByO,GAAI,sBAAuBoI,cAAc,eAAzD,uB,GAvEEvP,GA+EpBif,GAAa,SAAC3jB,GAA0B,IAAD,EAEzC,OACI,oCACI,kBAAC,GAAD,CAAW8S,MAAM,QAAjB,UAAyB9S,EAAMqW,KAAK3X,YAApC,aAAyB,EAAiBZ,UAC1C,kBAAC,GAAD,CAAWgV,MAAM,SAASkQ,GAAMY,mBAAmB5jB,EAAMqW,SAMtDjK,eACXC,YACIhN,EADJgN,CAEE8W,KC5GeU,G,4MACnB1H,KAAc,IAAIrX,MAAO0L,U,EACzB0L,OAAgB,IAAIpX,MAAOyL,W,EAC3BpF,MAAe,IAAIrG,MAAOwL,c,EAC1BwT,yB,IACAC,2B,IACAC,e,IACAC,W,IACAC,Y,IACAC,sBAAgC,E,EAChCC,iB,IACAC,kB,IACAC,c,IACApb,iB,IACAqb,gB,IACAxJ,a,cAfyCvd,GAAtBqmB,GAiBLja,MAAQ,SAAC4a,GACrB,OAAO7lB,OAAOC,OAAO,IAAIilB,GAAiBW,IAlBzBX,GAoBLY,SAAW,SAACF,EAAoBrK,EAAWrJ,EAAWyM,GAClE,IAAMkH,EAAM,IAAIX,GAKhB,OAJAW,EAAIrI,IAAMjC,EACVsK,EAAItI,MAAQrL,EACZ2T,EAAIrZ,KAAOmS,EACXkH,EAAID,WAAaA,EACVC,G,ICpBLtiB,G,sCACFgU,OAAwB,IAAI2N,IAE1Ba,G,kDAGF,WAAY1kB,GAAQ,IAAD,8BACf,cAAMA,GAAO,IAHjBV,MAAe,IAAI4C,GAEA,EADnB8M,oBACmB,IAKnBuU,MAAQ,WACJ,IAAMvjB,EAAQ,EAAKA,MACnB,EAAKuB,SAAS,CAAE2U,OAAQ2N,GAAcY,SAASzkB,EAAM+a,QAAQtd,GAAIuC,EAAMmc,IAAKnc,EAAMkc,MAAOlc,EAAMmL,SAPhF,EASnBwZ,UAAY,SAACzO,GACT,EAAK3U,SAAS,CAAE2U,OAAQ2N,GAAcja,MAAMsM,MAV7B,EAanB9I,SAAW,SAAChK,GACR,IAAM8S,EAAS,EAAK5W,MAAM4W,OACpBxQ,EAAStC,EAAEsC,OACjBwQ,EAAOxQ,EAAOvH,MAAuB,YAAfuH,EAAOzG,KAAqByG,EAAOC,QAAUD,EAAOtI,MAC1E,EAAKmE,SAAS,CAAE2U,OAAQ2N,GAAcja,MAAMsM,MAjB7B,EAoBnB2K,gBAAkB,SAACxa,GACf,EAAKyB,SAAS,4BArBC,EAwBnBoF,SAAW,SAAC9J,GACRA,EAAE4J,iBACF,IAAMkJ,EAAwB,EAAK5W,MAAM4W,OACzCA,EAAOqO,WAAa,EAAKvkB,MAAM+a,QAAQtd,GACvC,EAAKiJ,WACD,EAAKsI,eAAe4V,oBACpB,EAAK/D,gBACL,EAAK5Y,qBACLiO,IA9BJ,EAAKlH,eAAiB,EAAK3G,cAAc2G,eACzC,EAAK1P,MAAM4W,OAAS2N,GAAcY,SAASzkB,EAAM+a,QAAQtd,GAAIuC,EAAMmc,IAAKnc,EAAMkc,MAAOlc,EAAMmL,MAH5E,E,qDAoCT,IAAD,oBACC+K,EAAS1X,KAAKc,MAAM4W,OACpB2O,EAAS9b,EAAUmN,EAAOiG,KAAO,I/CHtB,SAAC3T,GACzB,OAAOM,EAAON,G+CEsCsc,CAAU5O,EAAOgG,MAAQ,GACtE,OACI,0BAAMhP,SAAU1O,KAAK0O,UACjB,2BAAOhN,UAAU,qCAAqCC,MAAO,CAAE8L,SAAU,UACrE,+BACI,kBAAC,GAAD,KAAW,wBAAI/L,UAAU,eAAd,IAA8B2kB,IACzC,kBAAC,GAAD,KACI,2BAAO5lB,KAAK,SAASmO,SAAU5O,KAAK4O,SAAUE,YAAY,YAAYpN,UAAU,eAAe/B,KAAK,sBAAsBf,MAAK,UAAE8Y,EAAO4N,2BAAT,QAAgC,MAEnK,kBAAC,GAAD,KACI,2BAAO7kB,KAAK,SAASmO,SAAU5O,KAAK4O,SAAUE,YAAY,YAAYpN,UAAU,eAAe/B,KAAK,wBAAwBf,MAAK,UAAE8Y,EAAO6N,6BAAT,QAAkC,MAEvK,kBAAC,GAAD,KACI,kBAAC,GAAD,CAAUjR,MAAM,UAAU1F,SAAU5O,KAAK4O,SAAUjP,KAAK,YAAYwH,QAAO,UAAEuQ,EAAO8N,iBAAT,YAE/E,kBAAC,GAAD,KACI,kBAAC,GAAD,CAAUlR,MAAM,cAAc1F,SAAU5O,KAAK4O,SAAUjP,KAAK,QAAQwH,QAAO,UAAEuQ,EAAO+N,aAAT,YAE/E,kBAAC,GAAD,KACI,kBAAC,GAAD,CAAUnR,MAAM,cAAc1F,SAAU5O,KAAK4O,SAAUjP,KAAK,SAASwH,QAAO,UAAEuQ,EAAOgO,cAAT,YAEhF,kBAAC,GAAD,KACI,kBAAC,GAAD,CAAUpR,MAAM,gBAAgB1F,SAAU5O,KAAK4O,SAAUjP,KAAK,uBAAuBwH,QAAO,UAAEuQ,EAAOiO,4BAAT,YAEhG,kBAAC,GAAD,KACI,kBAAC,GAAD,CAAUrR,MAAM,aAAa1F,SAAU5O,KAAK4O,SAAUjP,KAAK,cAAcwH,QAAO,UAAEuQ,EAAOkO,mBAAT,YAEpF,kBAAC,GAAD,KACI,kBAAC,GAAD,CAAUtR,MAAM,cAAc1F,SAAU5O,KAAK4O,SAAUjP,KAAK,eAAewH,QAAO,UAAEuQ,EAAOmO,oBAAT,YAEtF,kBAAC,GAAD,KACI,kBAAC,GAAD,CAAUvR,MAAM,UAAU1F,SAAU5O,KAAK4O,SAAUjP,KAAK,WAAWwH,QAAO,UAAEuQ,EAAOoO,gBAAT,YAE9E,kBAAC,GAAD,KACI,8BAAUhX,YAAY,UAAUF,SAAU5O,KAAK4O,SAAUjN,MAAO,CAAE8L,SAAU,SAAW9N,KAAK,cAAcf,MAAK,UAAE8Y,EAAOhN,mBAAT,QAAwB,GACnIhJ,UAAU,eAAe6kB,KAAM,KAEvC,kBAAC,GAAD,KACI,4BAAQ7kB,UAAU,kBAAkBjB,KAAK,UACrC,uBAAGiB,UAAU,gBADjB,IACmC2kB,W,GAhFzBngB,GA0FhCsgB,GAAW,SAAChlB,GAEd,OACI,oCAAGA,EAAM8S,MACL,2BAAO7T,KAAK,WAAWkB,MAAO,CAAEgM,YAAa,GAAKjM,UAAU,eACxDkN,SAAUpN,EAAMoN,SAChBjP,KAAM6B,EAAM7B,KACZwH,QAAS3F,EAAM2F,YAIzBsf,GAAY,SAACjlB,GACf,OACI,4BAAI,4BACA,yBAAKE,UAAU,cAAcC,MAAO,CAAE+kB,UAAW,KAAOllB,EAAM6D,aAKtEwI,eACIhN,EAA2B,KAAM,KAAM,CAAE8lB,YAAY,GADzD9Y,CAEEqY,ICzGAxiB,G,sCACF6Y,a,OACAmB,OAAgB,IAAIpX,MAAOyL,WAAa,E,KACxCpF,MAAe,IAAIrG,MAAOwL,c,KAC1B8U,YAA0C,IAAIC,KAE5CC,G,kDAIF,WAAYtlB,GAAQ,IAAD,8BACf,cAAMA,EAAO,kBAAkB,IAJnCV,MAAe,IAAI4C,GAGA,EAFnB8M,oBAEmB,IADnBuW,UAA8B,IAAIF,IACf,EAInBG,WAAa,SAACzK,GACNA,IACAA,EAAUpc,OAAOC,OAAO,IAAI+c,GAAWZ,IAE3C,EAAKxZ,SAAS,CAAEwZ,QAASA,GAAW,EAAK0K,oBAR1B,EAUnBlF,oBAAsB,WAClB,IAAMxF,EAAU,EAAK/a,MAAMuc,SAASjd,MAAM,EAAKU,MAAMuc,SAASjd,MAAMyb,aAAUhX,EAC1EgX,GACA,EAAKyK,WAAWzK,IAbL,EAiBnBwI,MAAQ,WACJ3hB,GAAU,WACF,EAAKtC,MAAMyb,SACf,EAAKwK,UAAUG,SAAQ,SAACljB,EAAU2Z,GAC1B3Z,GAAOA,EAAI+gB,aAEpB,MAvBY,EAyBnBoC,cAAgB,SAACtf,GAEb,IAAM+e,EAAyC,EAAKQ,MAAMvf,EAASuP,OAEnE,EAAKrU,SAAS,CAAE6jB,YAAaA,IAAe,WACxCxjB,GAAU,WACN,EAAK2jB,UAAUG,SAAQ,SAACljB,EAAU2Z,GAC9B,IACa,IADTjG,EAASkP,EAAYS,IAAI1J,EAAItT,YAC5BqN,EAGDA,EAAS2N,GAAcja,MAAMsM,GAF7BA,EAAS2N,GAAcY,SAAd,oBAAuB,EAAKnlB,MAAMyb,eAAlC,aAAuB,EAAoBtd,UAA3C,QAAiD,EAAG0e,EAAK,EAAK7c,MAAM4c,MAAO,EAAK5c,MAAM6L,MAI/F3I,GACAA,EAAImiB,UAAUzO,QAGvB,SA1CQ,EA+CnB0P,MAAQ,SAAChQ,GAEL,IADA,IAAMnK,EAAkC,IAAI4Z,IACnC9mB,EAAI,EAAGA,EAAIqX,EAAMnX,OAAQF,IAAK,CACnC,IAAM8X,EAAOT,EAAMrX,GACnBkN,EAAIqa,IAAIzP,EAAK8F,IAAItT,WAAYwN,GAEjC,OAAO5K,GArDQ,EAwDnBga,kBAAoB,WAAO,IAAD,EACtB,EAAK/e,WACD,EAAKsI,eAAe+W,yBACpB,EAAKJ,cAAe,EAAK1d,qBAF7B,UAGI,EAAK3I,MAAMyb,eAHf,aAGI,EAAoBtd,GAAI,EAAK6B,MAAM4c,MAAO,EAAK5c,MAAM6L,OA5D1C,EAgEnB6a,UAAY,WAIR,OAHU,IAAIlV,IAjEC,EA6EnBmV,SAAW,WACP,OnClFoB,SAAC/J,GAAkE,IAApD/Q,EAAmD,wDAArC,IAAIrG,MAAOwL,cAChE,OAAGnF,EAAO,GAAK,EACJ+E,GAAWgM,GAEf/L,GAAc+L,GmC8EVgK,CAAa,EAAK5mB,MAAM4c,MAAO,EAAK5c,MAAM6L,OA5EjD,EAAK6D,eAAiB,EAAK3G,cAAc2G,eAF1B,E,gEAuEE,IAAD,OAChBxQ,KAAKuG,qBAAoB,WACrB,EAAKiC,YACL,EAAKuZ,2B,+BAWT,IALM,IAAD,SACCxF,EAAUvc,KAAKc,MAAMyb,QAErBkL,GADSznB,KAAKwnB,YACHxnB,KAAKynB,YAChBhM,EAAiB,GACd1b,EAAI,EAAGA,GAAK0nB,EAAU1nB,IAC3B0b,EAAK1R,KAAKhK,GAEd,IAAM4nB,EAAuB,SAAUC,OAAOH,GAE9C,OACI,yBAAK/lB,UAAU,gCACX,gCAAM6a,EAAO,UAAGA,EAAQrc,YAAX,aAAG,EAAcZ,SAAUU,KAAKyE,OAC7C,6BACA,kBAAC,GAAD,CAAaqgB,QAAS9kB,KAAKgnB,aAC3B,4BACCzK,EACG,kBAAC,GAAD,KACI,yBAAK7a,UAAU,eACX,kBAAC,GAAD,CAAcmQ,KAAM,IAAIvL,KAAQgV,YAAU,EAAC1M,SAAU5O,KAAK+G,oBAC1D,yBAAKrF,UAAU,sBACf,kBAAC,GAAD,CAAgB+T,cAAc,cAAcvR,QAASlE,KAAKinB,mBAA1D,eAGJ,6BACA,yBAAKvlB,UAAU,wBACX,yBAAKA,UAAU,SAASC,MAAO,CAAE+W,SAAU,SACvC,yBAAK/W,MAAO,CAAEyD,QAAS,OAAQuiB,oBAAqBA,IAE/ClM,EAAKxO,KAAI,SAAA0Q,GAAG,OACT,kBAAC,GAAD,CAAyBvQ,IAAK,gBAAkBuQ,EAAKpB,QAASA,EAC1DvY,IAAK,SAAAA,GAAQ,EAAK+iB,UAAUO,IAAI3J,EAAK3Z,IACrC2I,KAAM,EAAK7L,MAAM6L,KACjB+Q,MAAO,EAAK5c,MAAM4c,MAAOC,IAAKA,WAKpD,kBAAC,GAAD,W,GA1HUxO,IAkI1BuT,GAAU,WACZ,OAAQ,kBAAC,GAAD,KACI,uBAAGhhB,UAAU,8BADjB,6BAC2E,6BACvE,kBAAC,GAAD,CAAgB2L,GAAI,sBAAuBoI,cAAc,eAAzD,kBAID7H,eACXC,YACIhN,EADJgN,CAEEiZ,KC5JAe,G,kDACF,WAAYrmB,GAAQ,uCACVA,GAAO,G,gEAGb9C,SAAS+F,MAAQ,a,+BAGjB,IAAMqjB,EAAgC9nB,KAAK8G,wBAC3C,OAAQ,yBAAKpF,UAAU,+BAA+BC,MAAO,CAACO,UAAU,SACpE,wCACA,kBAAC,GAAD,CAAMuC,MAAM,eACR,kBAAC,GAAD,CAAW6P,MAAM,QAAQwT,EAAWtb,SACpC,kBAAC,GAAD,KAAa,2BAAIsb,EAAW3W,iBAC5B,kBAAC,GAAD,CAAWmD,MAAM,WAAWwT,EAAWC,SACvC,kBAAC,GAAD,CAAWzT,MAAM,WAAWwT,EAAWE,UAE3C,4BACA,kBAAC,GAAD,CAAMvjB,MAAM,qBAOZ,iC,GAzBUyB,GA6BP0H,eAAWC,YACtBhN,EADsBgN,CAExBga,KCzBInkB,I,4CACJ0T,MAAmB,G,KACnB6Q,QAAkB,KAEdC,G,kDAIJ,WAAY1mB,GAAQ,IAAD,8BACjB,cAAMA,GAAO,IAHfV,MAAe,IAAI4C,GAEA,EADXmT,uBACW,IAInBM,YAAc,SAACtP,GACb,EAAK9E,SAAS,CAAEqU,MAAOvP,EAASsI,UALf,EAQnB6G,UAAY,SAACpS,GAEX,GADAA,EAAE4J,iBACE,IAAM,EAAK1N,MAAMmnB,QAArB,CACA,IAAMjN,EAAkB,CACtB1H,OAAQ,IAAIhB,GACZqE,UAAW,gBAETqE,EAAI1H,SACN0H,EAAI1H,OAAOR,aAAe,CACxB,wBAAyB,EAAKhS,MAAMmnB,UAExC,EAAK/f,WACH,EAAK2O,kBAAkBK,KACvB,EAAKC,YACL,EAAK1N,qBACLuR,EACA,iBAxBe,EA2BnBqG,OAAS,SAAClP,GACRtP,QAAQC,IAAI,SAAUqP,GACtB,EAAK3Q,MAAM2mB,WAAWhW,GACtB,EAAKpP,SAAS,CAAEqU,MAAO,GAAI6Q,QAAS,MA9BnB,EAgCnBlD,MAAQ,kBAAM,EAAKhiB,SAAS,CAAEqU,MAAO,MA9BnC,EAAKP,kBAAoB,EAAKhN,cAAcgN,kBAF3B,E,qDAkCT,IAAD,OAEP,OACE,0BAAM5X,GAAG,sBAAsByP,SAAU1O,KAAKgX,WAC5C,yBAAKtV,UAAU,OAAOC,MAAO,CAAEE,SAAU,aACvC,yBAAKH,UAAU,eACb,2BAAO/B,KAAK,UAAU+B,UAAU,eAAekN,SAAU5O,KAAK+G,kBAAmBnI,MAAOoB,KAAKc,MAAMmnB,QACjGnZ,YAAY,cACd,2BAAOrO,KAAK,SAAS7B,MAAM,OAAO8C,UAAU,uBAE7C1B,KAAKc,MAAMsW,MAAMnX,OAAS,EACzB,yBAAKyB,UAAU,2CAA2CC,MAAO,CAAEE,SAAU,WAAYC,OAAQ,GAAIG,QAAS,IAC3GjC,KAAKc,MAAMsW,MAAMnK,KAAI,SAAAkF,GACpB,OACE,yBAAKjO,QAAS,kBAAM,EAAKmd,OAAOlP,IAAIzQ,UAAU,cAAc0L,IAAG,iBAAY+E,EAAElT,KAC1EkT,EAAExS,KADL,IACYwS,EAAE8K,WAAY9K,EAAE+K,YAD5B,IAC0C/K,EAAE2K,eAIhD,kBAAC,GAAD,CAAgBrH,cAAc,eAAe/T,UAAU,qBAAqBwC,QAASlE,KAAK+kB,OAA1F,UAEA,W,GA3DsB7e,GAmErB0H,eACbC,YACEhN,EADFgN,CAEEqa,KCjEExkB,G,sCACJgU,OAAsB,IAAI4F,G,KAC1B3C,WAAyB,G,KACzByN,UAAyC,G,KAEzCnN,mBAA6B,G,KAC7BoN,gBAA0B,G,KAE1B/X,gB,GAEIgY,G,kDAMJ,WAAY9mB,GAAQ,IAAD,8BACjB,cAAMA,EAAO,oBAAoB,IALnCV,MAAe,IAAI4C,GAIA,EAHnB8M,oBAGmB,IAFnBqG,uBAEmB,IADnB0R,aAAezjB,IAAMC,YACF,EAWnB6V,iBAAmB,SAAC/S,GAClB,EAAK9E,SAAS,CAAE4X,WAAY9S,EAASsI,OAAOiH,SAZ3B,EAenB2D,eAAiB,WACf,EAAK7S,WACH,EAAKsI,eAAe+S,cACpB,EAAK3I,iBACL,EAAKnR,uBAnBU,EAuBnBqX,iBAAmB,SAAC0H,EAAoB3gB,GACtC,IAAMugB,EAAY,EAAKtnB,MAAMsnB,UAC7BA,EAAUI,EAAWne,YAAcxC,EAASsI,OAAOiH,MACnD,EAAKrU,SAAS,CAAEqlB,UAAWA,KA1BV,EA4BnBpH,eAAiB,SAACyH,GAChB,GAAc,KAAVA,QAA+CljB,GAA/B,EAAKzE,MAAMsnB,UAAUK,GAAzC,CAGA,IAAMzN,EAAkB,CACtB1H,OAAQ,CAAEf,MAAO,EAAGO,aAAc,CAAE,eAAgB2V,IACpD9R,UAAW,eAEb,EAAKzO,WACH,EAAK2O,kBAAkBK,MACvB,SAACwR,GAAD,OAAU,EAAK5H,iBAAiB2H,EAAOC,KACvC,EAAKjf,qBACLuR,EACA,YAzCe,EA6CnB2N,gBAAkB,WACZ,EAAKnnB,MAAMuc,UAAY,EAAKvc,MAAMuc,SAASjd,OAC7C,EAAKiC,SAAS,CACZ2U,OAAQ4F,GAAYlS,MAAM,EAAK5J,MAAMuc,SAASjd,MAAM4W,QACpDpH,WAAY,EAAK9O,MAAMuc,SAASjd,MAAMwP,YACrC,EAAKsY,cAlDO,EAqDnBA,YAAc,WAIR,EAAKL,aAAatjB,SACpB,EAAKsjB,aAAatjB,QAAQua,mBA1DX,EAiEnBqJ,kBAAoB,SAACjkB,GAAoB,IAC/B8S,EAAW,EAAK5W,MAAhB4W,OACFrQ,EAAKzC,EAAEsC,OACPvH,EAAO0H,EAAE,KACTzI,EAAQyI,EAAE,MAChBqQ,EAAO/X,GAAQf,EACf,EAAKmE,SAAS,CAAE2U,YAvEC,EAyEnBoR,qBAAuB,SAAC/J,GACtB,IAAMrH,EAAS,EAAK5W,MAAM4W,OAC1BA,EAAOuG,YAAcc,EAAE9f,GACvByY,EAAO+C,MAAQsE,EAAEtE,MACjB/C,EAAO2G,SAAWU,EAAEpf,KACpB,EAAKoD,SAAS,CAAE2U,YA9EC,EAiFnByI,WAAa,SAAC3C,EAAWnL,EAAWF,GAAe,IACzCuF,EAAW,EAAK5W,MAAhB4W,OACRA,EAAO6F,QAAQC,EAAGnL,EAAGF,GACrB,EAAKpP,SAAS,CAAE2U,YApFC,EAsFnBwI,WAAa,SAACtb,GACZ,IAAMiN,EAAOK,GAAUtN,EAAEsC,OAAOtI,OAC1B8Y,EAAS,EAAK5W,MAAM4W,OAC1BA,EAAO+F,KAAO5L,EACd,EAAK9O,SAAS,CAAE+c,YAAapI,KA1FZ,EA4FnBsI,OAAS,WACP,EAAK9X,WACH,EAAKsI,eAAe4R,kBACpB,EAAKC,gBACL,EAAK5Y,qBACL,EAAK3I,MAAM4W,OAAQ,EAAK5W,MAAMwP,aAjGf,EAoGnB+R,gBAAkB,SAAClB,GACjB,EAAKpe,SAAS,CAAE2U,OAAQ,IAAI4F,GAAehN,gBAAY/K,EAAW0V,mBAAoB,KAAM,WAC1F,EAAK3R,SAAS,0BACd,EAAKd,gBAvGU,EA2GnBugB,cAAgB,WAAO,IAAD,EACmB,EAAKjoB,MAAM4W,OAA1CsG,EADY,EACZA,cAAeC,EADH,EACGA,YACvB,OAAQD,GAAiBC,GA7GR,EAgHnBvP,SAAW,SAAC9J,GACVA,EAAE4J,iBACG,EAAKua,gBAIV,EAAKjgB,iBAAiB,gBACnBlB,MAAK,SAAAuE,GACAA,GAAM,EAAK6T,YALjB,EAAKzW,UAAU,wBAnHA,EA2HnByf,YAAc,WACZ,EAAK5f,uBAAuB,iBACzBxB,MAAK,SAAAuE,GACJ,GAAIA,EAAI,CAAC,IACCuL,EAAW,EAAK5W,MAAhB4W,OACRA,EAAO0G,SAAW,GAClB,EAAKrb,SAAS,CAAE2U,SAAQpH,gBAAY/K,SAjIzB,EAqInB0jB,cAAgB,SAACrkB,GACf+K,GAA0B/K,EAAEsC,QACzBU,MAAK,SAAA0I,GACJ,EAAKvN,SAAS,CAAEuN,kBACfxI,MAAMjF,QAAQ8G,QAzIF,EA2InBqd,WAAa,SAAC7U,GAAgB,IACpBuF,EAAW,EAAK5W,MAAhB4W,OACRA,EAAO4G,YAAcnM,EAAExS,KACvB+X,EAAOsG,cAAgB7L,EAAElT,GACzByY,EAAOwF,YAAc/K,EAAE+K,YACvBxF,EAAOuF,WAAa9K,EAAE8K,WACtBvF,EAAOoF,WAAa3K,EAAE2K,WACtB,EAAK/Z,SAAS,CAAE2U,YAlJC,EAqJnBgK,eAAiB,SAAC9c,GAChB,EAAKmC,kBAAkBnC,GACvB,EAAKoc,eAAepc,EAAEsC,OAAOtI,QAvJZ,EA0JnBwiB,gBAAkB,SAACxc,GAAuC,IAAD,EACb,EAAK9D,MAAvCma,EAD+C,EAC/CA,mBACFqG,EAFiD,EAC3B8G,UACDnN,GAAoB3H,QAAO,SAAC6N,GAAD,aAAO,UAAAA,EAAEliB,UAAF,eAAMoL,aAAczF,EAAEsC,OAAOtI,SACnE,GAAnB0iB,EAASrhB,QACb,EAAK6oB,qBAAqBxH,EAAS,KA5JnC,EAAK9Q,eAAiB,EAAK3G,cAAc2G,eACzC,EAAKqG,kBAAoB,EAAKhN,cAAcgN,kBAH3B,E,6DAOjB7W,KAAK2oB,kBACL3oB,KAAK+a,mB,+BAyJG,IAAD,UACuD/a,KAAKc,MAA3D4W,EADD,EACCA,OAAQuD,EADT,EACSA,mBAAoBmN,EAD7B,EAC6BA,UAAW9X,EADxC,EACwCA,WACzCuS,EAAavS,EAAaA,EAAWhQ,IAAMoX,EAAO6G,aAExD,OACE,yBAAK7c,UAAU,gCACb,sDACA,6BACA,kBAAC,GAAD,CAAW4S,MAAM,SACf,kBAAC,GAAD,CAAuB6T,WAAYnoB,KAAKgnB,cAGxCtP,EAAOsG,eACP,kBAAC,GAAD,KACE,6BAAMtG,EAAO4G,YAAb,IAA2B5G,EAAOuF,WAAYvF,EAAOwF,YAArD,IAAmExF,EAAOoF,aAK9E,0BAAMpO,SAAU1O,KAAK0O,UACnB,kBAAC,GAAD,CAAW4F,MAAM,eACf,qCAAIoD,EAAO2G,gBAAX,QAAuB,IAAvB,cAA6B3G,EAAO+C,aAApC,QAA6C,IAC7C,4BACA,4BAAQ7b,MAAOqc,EAAoBtb,KAAK,qBAAqBiP,SAAU5O,KAAK0hB,eAAgBhgB,UAAU,gBACpG,4BAAQ9C,MAAM,IAAd,kBACCoB,KAAKc,MAAM6Z,WAAW1N,KAAI,SAACic,GAC1B,OACE,4BAAQ9b,IAAG,qBAAgB8b,EAAIjqB,IAAML,MAAOsqB,EAAIjqB,IAC7CiqB,EAAIvpB,UAKb,4BACA,4BAAQ+B,UAAU,eAAekN,SAAU5O,KAAKohB,iBAC9C,4BAAQxiB,MAAM,IAAd,qBAEEwpB,EAAUnN,IACVmN,EAAUnN,GAAoBhO,KAAI,SAAA8R,GAChC,OACE,4BAAQ3R,IAAG,oBAAe2R,EAAE9f,IAAML,MAAOmgB,EAAE9f,IACxC8f,EAAEpf,KADL,KACaof,EAAEtE,MADf,UAQV,kBAAC,GAAD,CAAWnG,MAAM,WACf,2BAAO7T,KAAK,OAAOiB,UAAU,eAAekN,SAAU5O,KAAKkgB,WAAYvgB,KAAK,OAAOf,MAAO8Y,EAAOmG,gBAEnG,kBAAC,GAAD,CAAWvJ,MAAM,SACf,kBAAC,GAAD,CAAWtQ,IAAKhE,KAAKuoB,aAAc3Z,SAAU5O,KAAKmgB,WAAYvhB,MAAO8Y,EAAO+I,cAE9E,kBAAC,GAAD,CAAWnM,MAAM,UACf,2BAAO7T,KAAK,OAAOd,KAAK,WAAWiP,SAAU5O,KAAK6oB,kBAAmBnnB,UAAU,eAAe9C,MAAK,UAAE8Y,EAAOqG,gBAAT,QAAqB,MAE1H,kBAAC,GAAD,CAAWzJ,MAAM,aACf,8BAAU5S,UAAU,eAAe/B,KAAK,cAAciP,SAAU5O,KAAK6oB,kBAAmBjqB,MAAK,UAAE8Y,EAAOhN,mBAAT,QAAwB,MAEvH,kBAAC,GAAD,CAAW4J,MAAM,UACduO,EACC,oCACE,yBAAKhS,IAAKgS,EAAYzgB,MAAO,IAAKD,OAAQ,IAAKT,UAAU,uBACzD,4BACA,kBAAC,GAAD,CAAgBA,UAAU,wBAAwBwC,QAASlE,KAAKgpB,YAAavT,cAAc,gBAA3F,iBAEF,6BACE,2BAAO7G,SAAU5O,KAAKipB,cAAexoB,KAAK,OAAOmQ,OAAO,UAAUlP,UAAU,mBAIlF,kBAAC,GAAD,KACE,kBAAC,IAAD,CAAMA,UAAU,eAAe2L,GAAG,wBAAlC,WACA,2BAAO5M,KAAK,SAASiB,UAAU,uBAAuB9C,MAAM,kB,GAjP1CuQ,IA4PfvB,eACbC,YACEhN,EADFgN,CAGEya,KCjRE5kB,G,sCACFylB,cAA+B,IAE7BC,G,kDAIF,WAAY5nB,GAAQ,IAAD,8BACf,cAAMA,EAAO,yBAAwB,IAHzCV,MAAc,IAAI4C,GAEC,EADX8M,oBACW,IAQnB6Y,aAAe,WACX,EAAKnhB,WACD,EAAKsI,eAAe8Y,qBACpB,EAAKnC,cACLtkB,QAAQ8G,QAZG,EAenBwd,cAAgB,SAAChG,GACb,EAAKpe,SAAS,CAAComB,cAAchI,EAAE/J,SAd/B,EAAK5G,eAAiB,EAAK3G,cAAc2G,eAF1B,E,6DAMfxQ,KAAKqpB,iB,+BAeL,OACI,yBAAK3nB,UAAU,gCACX,qDACA,+DAAqC1B,KAAK8G,wBAAwByiB,mBAClE,kBAAC,GAAD,CAAgB9T,cAAc,cAAcvR,QAASlE,KAAKqpB,aAAchkB,SAAS,WACjF,2BAAO3D,UAAU,SACZ6P,GAAY,KAAM,QAAS,QAAS,OAAQ,aAAc,QAC3D,+BACKvR,KAAKc,MAAMqoB,cAAclc,KAAI,SAAChH,EAAMlG,GAAK,IAAD,EACrC,OACI,wBAAIqN,IAAG,cAASrN,IACZ,4BAAKA,EAAE,GACP,sCAAKkG,EAAKsW,QAAQrc,YAAlB,aAAK,EAAmBZ,UACxB,4BAAKklB,GAAMY,mBAAmBnf,EAAKsW,UACnC,4BAAKtW,EAAKujB,aACV,4BAAKvjB,EAAKwjB,iBACV,4BACI,uBAAG/nB,UAAU,uBAAb,yB,GA1CTyN,IAwDhBvB,eACXC,YACIhN,EADJgN,CAEEub,KC3EeM,G,4MACjB/pB,KAAe,M,EACf+K,iB,IACAsT,mB,IACAf,gB,IACAC,iB,IAIAyM,qB,IACA7M,gB,cAVuC9d,GCerC0E,G,sCACJ0T,MAAyB,G,KACzB9D,OAAiB,IAAIhB,G,KACrBoC,UAAoB,E,KACpBgD,OAAwB,IAAIgS,IAIxBE,G,kDAGJ,WAAYpoB,GAAQ,IAAD,8BACjB,cAAMA,EANS,kBACN,WAGXV,MAAe,IAAI4C,GACA,EAGnBsjB,WAAa,SAAC7U,GAAgB,IACpBuF,EAAW,EAAK5W,MAAhB4W,OACRA,EAAOsG,cAAgB7L,EAAElT,GACzByY,EAAOiS,gBAAkBxX,EAAExS,KAC3B+X,EAAOwF,YAAc/K,EAAE+K,YACvBxF,EAAOuF,WAAa9K,EAAE8K,WACtBvF,EAAOoF,WAAa3K,EAAE2K,WACtB,EAAK/Z,SAAS,CAAE2U,YAVC,EAYnBX,YAAc,kBAAM,IAAI2S,IAZL,EAanBhb,SAAW,WACT7L,QAAQC,IAAI,mBAAoB,EAAKhC,MAAM4W,QACtC,EAAK5W,MAAM4W,OAAOsG,cAIvB,EAAKlV,iBAAiB,gBACnBlB,MAAK,SAAAuE,GAAO,IAAD,EACLA,IACL,UAAI,EAAKrL,MAAM4W,OAAOzY,UAAtB,SACE,EAAKkZ,cAAc,EAAKrX,MAAM4W,OAAOzY,GAAI,EAAK6B,MAAM4W,QAEpD,EAAKO,cAAc,EAAKnX,MAAM4W,YATlC,EAAKnO,UAAU,wBAhBA,E,qDA6BT,IAAD,cACC+J,EAAWtT,KAAKc,MAAhBwS,OACR,OACE,yBAAK5R,UAAU,gCACb,0CACA,6BAEE1B,KAAKqI,WACL,kBAAC,GAAD,CACEyO,QAAS9W,KAAK8W,QACdkQ,WAAYhnB,KAAKgnB,WACjBrP,UAAW3X,KAAK2X,UAChBjJ,SAAU1O,KAAK0O,SACfgJ,OAAQ1X,KAAKc,MAAM4W,OACnBD,iBAAkBzX,KAAKyX,mBAG3B,0BAAM/I,SAAU1O,KAAKoY,QACnB,kBAAC,GAAD,CAAW9D,MAAM,QACf,4BAAQ3U,KAAK,OAAO+B,UAAU,kBAAkB9C,MAAK,UAAE0U,EAAOR,aAAP,YAAF,QAAiC,GAAIlE,SAAU5O,KAAKuX,oBACvG,4BAAQ3Y,MAAM,IAAd,SACA,uCACA,uCACA,wCAEF,2BAAOe,KAAK,oCAAoCmP,YAAY,aAAapN,UAAU,kBAAkB9C,MAAK,UAAE0U,EAAOR,aAAa,4CAAtB,QAA8D,GAAIlE,SAAU5O,KAAKuX,sBAE7L,kBAAC,GAAD,CAAWjD,MAAM,mBACf,2BAAO3U,KAAK,QAAQc,KAAK,SAASiB,UAAU,kBAAkB9C,MAAK,UAAE0U,EAAOf,aAAT,QAAkB,EAAG3D,SAAU5O,KAAKqX,gBAEzG,kBAAC,GAAD,KACE,2BAAO3V,UAAU,yBAAyBjB,KAAK,SAAS7B,MAAM,aAGlE,kBAAC,GAAD,CACE+V,WAAU,UAAErB,EAAOd,YAAT,QAAiB,EAC3BD,MAAK,UAAEe,EAAOf,aAAT,QAAkB,GACvBmC,UAAW1U,KAAKc,MAAM4T,UACtBxQ,QAASlE,KAAKwX,aAEhB,kBAAC,GAAD,CACEJ,MAAOpX,KAAKc,MAAMsW,MAClB/O,QAASrI,KAAKqI,UACdiR,aAActZ,KAAK4X,gBACnB4B,cAAexZ,KAAKgX,UACpBX,gBAAgB,UAAC/C,EAAOd,YAAR,QAAgB,IAAhB,UAAsBc,EAAOf,aAA7B,QAAsC,W,GA7E1BmE,IAqFhC0D,GAAY,SAAC5Y,GAEjB,OACE,yBAAKG,MAAO,CAAE+W,SAAU,SACtB,2BAAOhX,UAAU,uBACd6P,GAAY,KAAM,QAAS,QAAS,OAAQ,YAAa,aAAc,QACxE,+BACG/P,EAAM4V,MAAMnK,KAAI,SAAC4K,EAAqB9X,GAErC,OACE,wBAAIqN,IAAK,YAAcrN,GACrB,4BAAKA,EAAI,EAAIyB,EAAM6U,gBACnB,4BAAKwB,EAAK8R,iBACV,4BAAK9R,EAAKoF,WAAYpF,EAAKqF,YAA3B,IAAyCrF,EAAKiF,YAC9C,4BAAKjF,EAAKlY,MACV,4BAAKkY,EAAKnN,aACV,4BAAKmN,EAAK3Y,YACV,4BAAKsC,EAAM6G,SACT,kBAAC,GAAD,CACEiR,aAAc9X,EAAM8X,aACpBE,cAAehY,EAAMgY,cACrB9B,OAAQG,EACRlB,UA7GD,kBA8GCnL,KA7GP,oBAyHP6O,GAAa,SAAC7Y,GAAyK,IAAD,UACpLkW,EAASlW,EAAMkW,OACrB,OACE,yBAAKhW,UAAU,oBACb,kBAAC,GAAD,CAAOwM,MAAM,EAAOlK,IAAKxC,EAAMsV,QAASkC,YAAY,EAAMvU,MAAM,eAC9D,kBAAC,GAAD,CAAW6P,MAAM,SACf,kBAAC,GAAD,CAAuB6T,WAAY3mB,EAAMwlB,cAE3C,kBAAC,GAAD,eACGtP,EAAOiS,uBADV,QAC6B,GAD7B,cACkCjS,EAAOuF,kBADzC,QACuD,GADvD,UAC2DvF,EAAOwF,mBADlE,QACiF,GADjF,cACsFxF,EAAOoF,kBAD7F,QAC2G,IAE3G,0BAAMpO,SAAU,SAAC9J,GAAQA,EAAE4J,iBAAkBhN,EAAMkN,aACjD,kBAAC,GAAD,CAAW4F,MAAM,QACf,4BAAQvF,UAAQ,EAACnQ,MAAO8Y,EAAO/X,KAAMiP,SAAUpN,EAAMiW,iBAAkB/V,UAAU,eAAe/B,KAAK,QACnG,uCACA,uCACA,yCAGJ,kBAAC,GAAD,CAAW2U,MAAM,aACf,8BAAUvF,UAAQ,EAACrN,UAAU,eAAe/B,KAAK,cAAciP,SAAUpN,EAAMiW,iBAAkB7Y,MAAK,UAAE8Y,EAAOhN,mBAAT,QAAwB,MAEhI,kBAAC,GAAD,KACE,2BAAOjK,KAAK,SAAS7B,MAAM,SAAS8C,UAAU,2BADhD,OAGE,2BAAOjB,KAAK,QAAQiB,UAAU,2BAA2BwC,QAAS,SAACU,GAAD,OAAOpD,EAAMmW,oBAQ5E/J,eACbC,YACEhN,EADFgN,CAEE+b,KC7KElmB,G,sCACJ3C,mBAAyC,IAErC8oB,G,kDAGJ,WAAYroB,GAAQ,IAAD,8BACjB,cAAMA,EAAO,eAAe,IAHrBV,MAAQ,IAAI4C,GAEF,EADVomB,mBACU,IAWnB9J,OAAS,WACP,EAAK9X,WACH,EAAK4hB,cAAcnnB,OACnB,EAAKonB,cACL,EAAKtgB,qBACL,EAAK3I,MAAMC,qBAhBI,EAmBnBipB,YAAc,SAACplB,GAAsC,IAC3C7D,EAAuB,EAAKD,MAA5BC,mBACRA,EAAmB6D,EAAEsC,OAAOvH,MAA0B,WAAlBiF,EAAEsC,OAAOzG,KAAoB2G,SAASxC,EAAEsC,OAAOtI,OAASgG,EAAEsC,OAAOtI,MACrG,EAAKmE,SAAS,CAAEhC,wBAtBC,EAwBnBgpB,cAAgB,WACd,EAAKzgB,SAAS,uCAvBd,EAAKwgB,cAAgB,EAAKjgB,cAAcogB,qBAFvB,E,6DAMjBjqB,KAAK+C,SAAS,CACZhC,mBAAoBZ,OAAOC,OAAO,GAAIJ,KAAK8G,6B,+BAoBrC,IAAD,MACDyF,EAAUvM,KAAKc,MAAMC,mBAC3B,OACE,yBAAKW,UAAU,gCACb,2CACA,6BACA,yBAAKC,MAAO,CAAEM,QAAS,IAAMP,UAAU,oCACrC,8BACE,kBAAC,GAAD,CAAW4S,MAAM,iBACf,2BAAO3U,KAAK,UAAUiP,SAAU5O,KAAKgqB,YAAatoB,UAAU,eAAe9C,MAAK,UAAE2N,EAAQC,eAAV,QAAqB,MAEvG,kBAAC,GAAD,CAAW8H,MAAM,sBACf,2BAAO3U,KAAK,iBAAiBiP,SAAU5O,KAAKgqB,YAAatoB,UAAU,eAAe9C,MAAK,UAAE2N,EAAQ4E,sBAAV,QAA4B,MAErH,kBAAC,GAAD,CAAWmD,MAAM,yBACf,2BAAO3U,KAAK,oBAAoBiP,SAAU5O,KAAKgqB,YAAatoB,UAAU,eAAejB,KAAK,SAAS7B,MAAK,UAAE2N,EAAQgd,yBAAV,SAAgC,OAG5I,kBAAC,GAAD,KACE,4BAAQ7nB,UAAU,kBAAkBwC,QAASlE,KAAKggB,QAAlD,iB,GAjDoB7Q,IA2DjBvB,eACbC,YACEhN,EADFgN,CAEEgc,KC3DEnmB,I,4CACJiY,QAAmB,G,KACnBvE,MAAgC,KAG5B8S,G,kDAIJ,WAAY1oB,GAAQ,IAAD,8BACjB,cAAMA,EAAO,kBAAkB,IAJjCV,MAAe,IAAI4C,GAGA,EAFX8M,oBAEW,IADnB2Z,eAAiBrlB,IAAMC,YACJ,EAanBqlB,cAAgB,SAACxlB,GAIf,GAHIA,GAAKA,EAAE4J,gBACT5J,EAAE4J,iBAEC,EAAK2b,eAAellB,QAAzB,CAJ0B,IAOXolB,EAAY,EAAKF,eAAellB,QAAvCrG,MACR,EAAKsJ,WACH,EAAKsI,eAAe8Z,aACpB,EAAKC,gBACL,EAAK9gB,qBACL4gB,KAzBe,EA4BnBG,aAAe,WACb,GAAK,EAAKL,eAAellB,QAAzB,CADmB,IAIJolB,EAAY,EAAKF,eAAellB,QAAvCrG,MACR,EAAKsJ,WACH,EAAKsI,eAAeia,kBACpB,EAAKC,cACL,EAAKjhB,qBACL4gB,KArCe,EAwCnBM,cAAgB,WACd,GAAK,EAAKR,eAAellB,QAAzB,CADoB,IAILolB,EAAY,EAAKF,eAAellB,QAAvCrG,MACRgK,OAAOgiB,KAAK/rB,EAAY,uBAAD,OAAwBwrB,OA7C9B,EAgDnBK,cAAgB,SAACpa,GACf,EAAKxH,iBAAL,oBAAmCwH,EAAW3Q,KAA9C,MACGiI,MAAK,SAACuE,GACAA,GACLhM,OAAOC,OAAO1B,SAASmsB,cAAc,KAAM,CACzC3jB,OAAQ,SACR4jB,SAAUxa,EAAW3Q,KACrBgC,MAAO,CAAEyD,QAAS,QAClBqH,KAAM6D,EAAWhQ,MAChB+L,YAzDU,EA8DnB0P,cAAgB,SAAClU,GACf,EAAK9E,SAAS,CAAE4Y,QAAS9T,EAASsI,UA/DjB,EAiEnBoa,gBAAkB,SAAC1iB,GACjB,EAAK9E,SAAS,CAAEqU,MAAOvP,EAASsI,UAhEhC,EAAKK,eAAiB,EAAK3G,cAAc2G,eAFxB,E,6DAMjBxQ,KAAKkI,WACHlI,KAAKwQ,eAAe0L,WACpBlc,KAAK+b,cACL/b,KAAKyJ,wB,+BAuEC,IAAD,EACoBzJ,KAAKc,MAAxB6a,EADD,EACCA,QAASvE,EADV,EACUA,MAEjB,OACE,yBAAK1V,UAAU,gCACb,4BAAK1B,KAAKyE,OACV,0BAAMiK,SAAU1O,KAAKoqB,cAAe1oB,UAAU,QAC5C,kBAAC,GAAD,CAAW4S,MAAM,SACf,4BAAQtQ,IAAKhE,KAAKmqB,eAAgBzoB,UAAU,gBACzCia,EAAQ1O,KAAI,SAACkO,GAAO,IACXyB,EAAkCzB,EAAlCyB,MAAOC,EAA2B1B,EAA3B0B,OAAQ5d,EAAmBkc,EAAnBlc,GAAI6d,EAAe3B,EAAf2B,WAC3B,OAAO,4BAAQ1P,IAAG,sBAAiBnO,GAAML,MAAOK,GAAK2d,EAAOC,EAArD,IAA8DC,QAI3E,kBAAC,GAAD,KACE,2BAAOrc,KAAK,SAASiB,UAAU,kBAAkB9C,MAAM,cACvD,uBAAG8C,UAAU,oBAAoBwC,QAASlE,KAAKwqB,cAA/C,wBACA,uBAAG9oB,UAAU,oBAAoBwC,QAASlE,KAAK2qB,eAA/C,oBAIc,GAAhBvT,EAAMnX,OACJ,yBAAKyB,UAAU,uBAAf,kBACA,yBAAKA,UAAU,wCAAwCC,MAAO,CAAE+W,SAAU,SACxE,2BAAOzZ,GAAG,uBAAuByC,UAAU,uBACxC6P,GAAW,WAAX,eAAevR,KAAK+qB,eACrB,+BACG3T,EAAMnK,KAAI,SAAC4K,EAAM9X,GAAO,IACfirB,EAA4BnT,EAA5BmT,YAAarQ,EAAe9C,EAAf8C,WACrB,OACE,wBAAIvN,IAAG,qBAAgB4d,EAAY/rB,KACjC,4BAAKc,EAAI,GACT,4BAAKirB,EAAYrrB,MACjB,4BAAKqrB,EAAY/N,WAAY+N,EAAY9N,aACxCvC,EAAW1N,KAAI,SAACkO,GACf,OACE,kBAAC,IAAMI,SAAP,CAAgBnO,IAAG,oBAAe+N,EAAEqN,WAAjB,YAA+BwC,EAAY/rB,KAC5D,4BAAKkc,EAAE8P,OACP,wBAAI5lB,SAAU8V,EAAE+P,kBAChB,wBAAI7lB,SAAU8V,EAAEgQ,qC,mCAnD1C,IAAMC,EAAU,CAAC,KAAM,QAAS,SACxBhU,EAAUpX,KAAKc,MAAfsW,MACR,OAAoB,GAAhBA,EAAMnX,OAAoB,IAE9BmX,EAAM,GAAGuD,WAAWuM,SAAQ,SAACgC,GAC3BkC,EAAQrhB,KAAKmf,EAAIvpB,MACjByrB,EAAQrhB,KAAK,YACbqhB,EAAQrhB,KAAK,iBAERqhB,O,GAlFyBjc,IA4IrBvB,eACbC,YACEhN,EADFgN,CAEEqc,KChKiBmB,G,4MACjB1rB,U,IACA8K,KAAO,I,EACPC,iB,IACA6P,sB,IACAC,oB,cAL2Cxb,GCczC0E,G,sCACJ0T,MAA6B,G,KAC7B9D,OAAiB,IAAIhB,G,KACrBoC,UAAoB,E,KACpBgD,OAA4B,IAAI2T,G,KAChC1Q,WAAyB,G,KACzBC,kBAA4B,GAKxB0Q,G,kDAGJ,WAAY9pB,GAAQ,IAAD,8BACjB,cAAMA,EANS,2BACN,WAEXV,MAAe,IAAI4C,GAEA,EAMnBgL,SAAW,WAET,EAAK5F,iBAAiB,gBACnBlB,MAAK,SAAAuE,GAAO,IAAD,EACLA,IACL,UAAI,EAAKrL,MAAM4W,OAAOzY,UAAtB,SACE,EAAKkZ,cAAc,EAAKrX,MAAM4W,OAAOzY,GAAI,EAAK6B,MAAM4W,QAEpD,EAAKO,cAAc,EAAKnX,MAAM4W,aAdnB,EAwBnBkD,iBAAmB,SAAC/S,GAClB,EAAK9E,SAAS,CAAE4X,WAAY9S,EAASsI,OAAOiH,MAAOwD,kBAAkB,IAAQ,WAAQ,EAAKjD,YAAa,EAAKX,gBAzB3F,EA2BnB8D,oBAAsB,SAACjT,GACrB,EAAK9E,SAAS,CAAE4X,WAAY,GAAIC,kBAAkB,GAAQ,EAAKjD,YA5B9C,EA8BnBoD,eAAiB,WACf,IAAMzH,EAAiB,IAAIhB,GAC3BgB,EAAOf,MAAQ,EACf,IAAMyI,EAAkB,CACtB1H,OAAQA,EACRqD,UAAW,mBAEb,EAAKzO,WACH,EAAK2O,kBAAkBK,KACvB,EAAK0D,iBACL,EAAKE,oBACLE,EACA,WA1Ce,EA8CnBjE,YAAc,WACZ,IAAMW,EAAS,IAAI2T,GAInB,OAHI,EAAKvqB,MAAM6Z,WAAW1a,OAAS,IACjCyX,EAAO8C,eAAiB,EAAK1Z,MAAM6Z,WAAW,GAAG1b,IAE5CyY,GAjDP,EAAK5W,MAAMwS,OAAOf,MAAQ,GAC1B,EAAKzR,MAAMwS,OAAOZ,QAAU,OAHX,E,gEAkBE,IAAD,OAClB1S,KAAKuG,qBAAoB,WACvB,EAAKiC,YACL,EAAKuS,sB,+BAiCC,IAAD,UACDzH,EAAiBtT,KAAKc,MAAMwS,OAC5BqH,EAAyB3a,KAAKc,MAAM6Z,WAC1C,GAAI3a,KAAKc,MAAM8Z,kBAAyC,GAArBD,EAAW1a,OAC5C,OACE,yBAAKyB,UAAU,gCACb,mDAIN,IAAMuZ,EAAqB3H,EAAOR,cAAgBQ,EAAOR,aAAP,YAAqCQ,EAAOR,aAAP,YAAqC,MAC5H,OACE,yBAAKpR,UAAU,gCACb,8CACA,6BACA,kBAAC,GAAD,CAAYiZ,WAAYA,EAAYO,iBAAkBlb,KAAK+a,eAAgBjE,QAAS9W,KAAK8W,QAASa,UAAW3X,KAAK2X,UAAWjJ,SAAU1O,KAAK0O,SAC1IgJ,OAAQ1X,KAAKc,MAAM4W,OAAQD,iBAAkBzX,KAAKyX,mBACpD,0BAAM/I,SAAU1O,KAAKoY,QACnB,kBAAC,GAAD,CAAW9D,MAAM,QACf,yBAAK5S,UAAU,eACb,2BAAO/B,KAAK,OAAOmP,YAAY,OAAOpN,UAAU,kBAAkB9C,MAAO0U,EAAOR,aAAeQ,EAAOR,aAAP,KAA8B,GAAIlE,SAAU5O,KAAKuX,qBAChJ,2BAAO5X,KAAK,OAAOmP,YAAY,OAAOpN,UAAU,kBAAkB9C,MAAO0U,EAAOR,aAAeQ,EAAOR,aAAP,KAA8B,GAAIlE,SAAU5O,KAAKuX,qBAChJ,4BAAQ3Y,MAAOqc,EAAoBvZ,UAAU,kBAAkB/B,KAAK,cAAciP,SAAU5O,KAAKuX,oBAC9F,CAAC,CAAEtY,GAAI,GAAIU,KAAM,mBAAjB,oBAAwCgb,IAAY1N,KAAI,SAACkO,GACxD,OAAO,4BAAQ/N,IAAK,cAAgB+N,EAAElc,GAAIL,MAAOuc,EAAElc,IAAKkc,EAAExb,UAG9D,yBAAK+B,UAAU,sBACb,kBAAC,GAAD,CAAgBA,UAAU,aAAa+T,cAAc,cAAcvR,QAASlE,KAAK+a,gBAAjF,aAIN,kBAAC,GAAD,CAAWzG,MAAM,mBACf,2BAAO7T,KAAK,SAASd,KAAK,QAAQ+B,UAAU,kBAAkB9C,MAAK,UAAE0U,EAAOf,aAAT,QAAkB,EAAG3D,SAAU5O,KAAKqX,gBAEzG,kBAAC,GAAD,KACE,2BAAO3V,UAAU,yBAAyBjB,KAAK,SAAS7B,MAAM,aAGlE,kBAAC,GAAD,CAAmB+V,WAAU,UAAErB,EAAOd,YAAT,QAAiB,EAAGD,MAAK,UAAEe,EAAOf,aAAT,QAAkB,EAAGmC,UAAW1U,KAAKc,MAAM4T,UAC/FxQ,QAASlE,KAAKwX,aAChB,kBAAC,GAAD,CACE8B,aAActZ,KAAK4X,gBACnB4B,cAAexZ,KAAKgX,UACpBX,gBAAgB,UAAC/C,EAAOd,YAAR,QAAgB,IAAhB,UAAsBc,EAAOf,aAA7B,QAAsC,IAAK6E,MAAOpX,KAAKc,MAAMsW,a,GArG7CV,IA2GpC0D,GAAY,SAAC5Y,GAEjB,OACE,yBAAKG,MAAO,CAAE+W,SAAU,SACtB,2BAAOhX,UAAU,uBACd6P,GAAY,KAAM,OAAQ,OAAQ,YAAa,WAAY,QAC5D,+BACG/P,EAAM4V,MAAMnK,KAAI,SAAC4K,EAAM9X,GACtB,OACE,wBAAIqN,IAAG,oBAAerN,IACpB,4BAAKA,EAAI,EAAIyB,EAAM6U,gBACnB,4BAAKwB,EAAKpN,MACV,4BAAKoN,EAAKlY,MACV,4BAAKkY,EAAKnN,aACV,4BAAKmN,EAAK0C,kBACV,4BACE,kBAAC,GAAD,CACEjB,aAAc9X,EAAM8X,aACpBE,cAAehY,EAAMgY,cACrB9B,OAAQG,EACRlB,UAjID,2BAkICnL,KAjIP,oBA4IP6O,GAAa,SAAC7Y,GAKb,IAAD,IAEJ,OACE,0BAAME,UAAU,mBAAmBgN,SAAU,SAAC9J,GAAQA,EAAE4J,iBAAkBhN,EAAMkN,aAC9E,kBAAC,GAAD,CAAOR,MAAM,EAAOlK,IAAKxC,EAAMsV,QAASkC,YAAY,EAAMvU,MAAM,eAC9D,kBAAC,GAAD,CAAW6P,MAAM,QACf,4BAAQvF,UAAQ,EAACnQ,MAAO4C,EAAMkW,OAAOjN,KAAM/I,UAAU,kBAAkB/B,KAAK,OAAOiP,SAAUpN,EAAMiW,kBACjG,qCACA,qCACA,qCACA,uCAGJ,kBAAC,GAAD,CAAWnD,MAAM,QACf,8BAAU5S,UAAU,eAAe/B,KAAK,OAAOiP,SAAUpN,EAAMiW,iBAAkB7Y,MAAK,UAAE4C,EAAMkW,OAAO/X,YAAf,QAAuB,MAE/G,kBAAC,GAAD,CAAW2U,MAAM,aACf,8BAAU5S,UAAU,eAAe/B,KAAK,cAAciP,SAAUpN,EAAMiW,iBAAkB7Y,MAAK,UAAE4C,EAAMkW,OAAOhN,mBAAf,QAA8B,MAE7H,kBAAC,GAAD,CAAW4J,MAAM,YACf,yBAAK5S,UAAU,eACb,4BAAQqN,UAAQ,EAACnQ,MAAO4C,EAAMkW,OAAO8C,eAAgB9Y,UAAU,kBAAkB/B,KAAK,iBAAiBiP,SAAUpN,EAAMiW,kBACpHjW,EAAMmZ,WAAW1N,KAAI,SAACkO,GACrB,OAAO,4BAAQ/N,IAAK,OAAS+N,EAAElc,GAAIL,MAAOuc,EAAElc,IAAKkc,EAAExb,UAGvD,yBAAK+B,UAAU,sBACb,kBAAC,GAAD,CAAgBA,UAAU,aAAa+T,cAAc,cAAcvR,QAAS1C,EAAM0Z,kBAAlF,aAIN,kBAAC,GAAD,KACE,2BAAOza,KAAK,SAAS7B,MAAM,SAAS8C,UAAU,2BADhD,OAGE,2BAAO9C,MAAM,QAAQ6B,KAAK,QAAQiB,UAAU,2BAA2BwC,QAAS,SAACU,GAAD,OAAOpD,EAAMmW,mBAOxF/J,eACbC,YACEhN,EADFgN,CAEEyd,KCrNiBC,G,4MACjB5rB,KAAe,G,EACf+K,iB,IACA6R,a,IACAyB,mB,IAEA2L,qB,IACA1M,gB,IACAC,iB,IACAJ,gB,IACArC,MAAgB,E,YAVuBzb,GCcrC0E,G,sCACJ0T,MAAyB,G,KACzB9D,OAAiB,IAAIhB,G,KACrBoC,UAAoB,E,KACpBgD,OAAwB,IAAI6T,IAMxBC,G,kDAGJ,WAAYhqB,GAAQ,IAAD,8BACjB,cAAMA,EAPS,uBACN,WAIXV,MAAe,IAAI4C,GACA,EAKnBsjB,WAAa,SAAC7U,GACZ,IAAMuF,EAAS,EAAK5W,MAAM4W,OAC1BA,EAAO6E,QAAUpK,EACjBuF,EAAOsG,cAAgB7L,EAAElT,GACzByY,EAAOiS,gBAAkBxX,EAAExS,KAC3B+X,EAAOwF,YAAc/K,EAAE+K,YACvBxF,EAAOuF,WAAa9K,EAAE8K,WACtBvF,EAAOoF,WAAa3K,EAAE2K,WACtB,EAAK/Z,SAAS,CAAE2U,YAbC,EAenBX,YAAc,WACZ,OAAO,IAAIwU,IAhBM,EAkBnB7c,SAAW,WACJ,EAAK5N,MAAM4W,OAAOsG,cAIvB,EAAKlV,iBAAiB,gBACnBlB,MAAK,SAAAuE,GAAO,IAAD,EACLA,IACL,UAAI,EAAKrL,MAAM4W,OAAOzY,UAAtB,SACE,EAAKkZ,cAAc,EAAKrX,MAAM4W,OAAOzY,GAAI,EAAK6B,MAAM4W,QAEpD,EAAKO,cAAc,EAAKnX,MAAM4W,YATlC,EAAKnO,UAAU,wBAlBjB,EAAKzI,MAAMwS,OAAS,IAAIhB,GACxB,EAAKxR,MAAMwS,OAAOZ,QAAU,oCAHX,E,qDAiCT,IAAD,cACDY,EAAiBtT,KAAKc,MAAMwS,OAClC,OACE,yBAAK5R,UAAU,gCACb,gDACA,6BACA,kBAAC,GAAD,CAAYoV,QAAS9W,KAAK8W,QAASkQ,WAAYhnB,KAAKgnB,WAAYrP,UAAW3X,KAAK2X,UAAWjJ,SAAU1O,KAAK0O,SAAUgJ,OAAQ1X,KAAKc,MAAM4W,OAAQD,iBAAkBzX,KAAKyX,mBACtK,0BAAM/I,SAAU1O,KAAKoY,QACnB,kBAAC,GAAD,CAAW9D,MAAM,QACf,2BAAO3U,KAAK,OAAOmP,YAAY,mBAAmBpN,UAAU,kBAAkB9C,MAAK,UAAE0U,EAAOR,aAAP,YAAF,QAAiC,GAAIlE,SAAU5O,KAAKuX,qBACvI,2BAAO5X,KAAK,oCAAoCmP,YAAY,aAAapN,UAAU,kBAAkB9C,MAAK,UAAE0U,EAAOR,aAAa,4CAAtB,QAA8D,GAAIlE,SAAU5O,KAAKuX,sBAE7L,kBAAC,GAAD,CAAWjD,MAAM,mBACf,2BAAO3U,KAAK,QAAQc,KAAK,SAASiB,UAAU,kBAAkB9C,MAAK,UAAE0U,EAAOf,aAAT,QAAkB,EAAG3D,SAAU5O,KAAKqX,gBAEzG,kBAAC,GAAD,KACE,2BAAO3V,UAAU,yBAAyBjB,KAAK,SAAS7B,MAAM,aAGlE,kBAAC,GAAD,CACE+V,WAAU,UAAErB,EAAOd,YAAT,QAAiB,EAC3BD,MAAK,UAAEe,EAAOf,aAAT,QAAkB,GACvBmC,UAAW1U,KAAKc,MAAM4T,UACtBxQ,QAASlE,KAAKwX,aAEhB,kBAAC,GAAD,CACEJ,MAAOpX,KAAKc,MAAMsW,MAClB/O,QAASrI,KAAKqI,UACdiR,aAActZ,KAAK4X,gBACnB4B,cAAexZ,KAAKgX,UACpBX,gBAAgB,UAAC/C,EAAOd,YAAR,QAAgB,IAAhB,UAAsBc,EAAOf,aAA7B,QAAsC,W,GAlE1BmE,IA0EhC0D,GAAY,SAAC5Y,GAEjB,OACE,yBAAKG,MAAO,CAAE+W,SAAU,SACtB,2BAAOhX,UAAU,uBACd6P,GAAY,KAAM,QAAS,QAAS,OAAQ,YAAa,OAAQ,QAClE,+BACG/P,EAAM4V,MAAMnK,KAAI,SAAC4K,EAAqB9X,GAErC,OACE,wBAAIqN,IAAK,YAAcrN,GACrB,4BAAKA,EAAI,EAAIyB,EAAM6U,gBACnB,4BAAKwB,EAAK8R,iBACV,4BAAK9R,EAAKoF,WAAYpF,EAAKqF,YAA3B,IAAyCrF,EAAKiF,YAC9C,4BAAKjF,EAAKlY,MACV,4BAAKkY,EAAKnN,aACV,4BAAKmN,EAAK4C,OACV,4BACE,kBAAC,GAAD,CACEnB,aAAc9X,EAAM8X,aACpBE,cAAehY,EAAMgY,cACrB9B,OAAQG,EACRrM,KAlGP,SAmGOmL,UApGD,kCA8Gb0D,GAAa,SAAC7Y,GAAyK,IAAD,EACpLkW,EAASlW,EAAMkW,OACrB,OACE,yBAAKhW,UAAU,oBACb,kBAAC,GAAD,CAAOwM,MAAM,EAAOlK,IAAKxC,EAAMsV,QAASkC,YAAY,EAAMvU,MAAM,eAC9D,kBAAC,GAAD,CAAW6P,MAAM,SACf,kBAAC,GAAD,CAAuB6T,WAAY3mB,EAAMwlB,cAE3C,kBAAC,GAAD,KACGtP,EAAOiS,gBADV,MAC8BjS,EAAOuF,WAAYvF,EAAOwF,YADxD,IACsExF,EAAOoF,YAE7E,0BAAMpO,SAAU,SAAC9J,GAAQA,EAAE4J,iBAAkBhN,EAAMkN,aACjD,kBAAC,GAAD,CAAW4F,MAAM,eACf,2BAAOvF,UAAQ,EAACnQ,MAAO8Y,EAAO/X,KAAMiP,SAAUpN,EAAMiW,iBAAkB/V,UAAU,eAAe/B,KAAK,UAEtG,kBAAC,GAAD,CAAW2U,MAAM,aACf,8BAAUvF,UAAQ,EAACrN,UAAU,eAAe/B,KAAK,cAAciP,SAAUpN,EAAMiW,iBAAkB7Y,MAAK,UAAE8Y,EAAOhN,mBAAT,QAAwB,MAEhI,kBAAC,GAAD,CAAW4J,MAAM,QACf,2BAAOvF,UAAQ,EAACrN,UAAU,eAAe/B,KAAK,QAAQiP,SAAUpN,EAAMiW,iBAAkB7Y,MAAO8Y,EAAO+C,SAExG,kBAAC,GAAD,KACE,2BAAOha,KAAK,SAAS7B,MAAM,SAAS8C,UAAU,2BADhD,OAGE,2BAAOjB,KAAK,QAAQiB,UAAU,2BAA2BwC,QAAS,SAACU,GAAD,OAAOpD,EAAMmW,oBAQ5E/J,eACbC,YACEhN,EADFgN,CAEE2d,KC5IEC,G,kDAEJ,WAAYjqB,GAAa,IAAD,8BACtB,cAAMA,GAAO,IAEfkqB,gBAAkB,SAACpf,GACjB,EAAK9K,MAAMkqB,gBAAgBpf,IAJL,E,qDAOtB,OACE,kBAAC,WAAD,KACE,kBAAC,IAAD,KAGE,kBAAC,IAAD,CAAOqf,OAAK,EAAC7sB,KAAK,QAAQ8sB,OACxB,SAACpqB,GACC,OAAO,kBAAC,GAAD,SAGX,kBAAC,IAAD,CAAOmqB,OAAK,EAAC7sB,KAAK,IAAI8sB,OACpB,SAACpqB,GAAD,OACE,kBAAC,GAAD,SAEJ,kBAAC,IAAD,CAAOmqB,OAAK,EAAC7sB,KAAK,SAAS8sB,OACzB,SAACpqB,GAAD,OACE,kBAAC,GAAD,UAoBN,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,S,kDAlDyB0E,GA4D3B2lB,GAAU,SAACrqB,GAEf,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmqB,OAAK,EAAC7sB,KAAK,mBAAmB8sB,OACnC,SAACpqB,GAAD,OAAgB,kBAAC,GAAD,WAKlBsqB,GAAS,SAACtqB,GAEd,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmqB,OAAK,EAAC7sB,KAAK,wBAAwB8sB,OACxC,SAACpqB,GAAD,OAAgB,kBAAC,GAAD,WAKlBuqB,GAAa,SAACvqB,GAElB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmqB,OAAK,EAAC7sB,KAAK,cAAc8sB,OAC9B,SAACpqB,GAAD,OAAgB,kBAAC,GAAD,SAElB,kBAAC,IAAD,CAAOmqB,OAAK,EAAC7sB,KAAK,gCAAgC8sB,OAChD,SAACpqB,GAAD,OAAgB,kBAAC,GAAD,SAElB,kBAAC,IAAD,CAAOmqB,OAAK,EAAC7sB,KAAK,4BAA4B8sB,OAC5C,SAACpqB,GAAD,OAAgB,kBAAC,GAAD,SAElB,kBAAC,IAAD,CAAOmqB,OAAK,EAAC7sB,KAAK,yBAAyB8sB,OACzC,SAACpqB,GAAD,OAAgB,kBAAC,GAAD,SAElB,kBAAC,IAAD,CAAOmqB,OAAK,EAAC7sB,KAAK,6BAA6B8sB,OAC7C,SAACpqB,GAAD,OAAgB,kBAAC,GAAD,SAElB,kBAAC,IAAD,CAAOmqB,OAAK,EAAC7sB,KAAK,iCAAiC8sB,OACjD,SAACpqB,GAAD,OAAgB,kBAAC,GAAD,SAElB,kBAAC,IAAD,CAAOmqB,OAAK,EAAC7sB,KAAK,6BAA6B8sB,OAC7C,SAACpqB,GAAD,OAAgB,kBAAC,GAAD,WAMlBwqB,GAAS,SAACC,GAEd,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAON,OAAK,EAAC7sB,KAAK,sBAAsB8sB,OACtC,SAACpqB,GAAD,OAAgB,kBAAC,GAAD,SAElB,kBAAC,IAAD,CAAOmqB,OAAK,EAAC7sB,KAAK,qBAAqB8sB,OACrC,SAACpqB,GAAD,OAAgB,kBAAC,GAAD,SAElB,kBAAC,IAAD,CAAOmqB,OAAK,EAAC7sB,KAAK,uBAAuB8sB,OACvC,SAACpqB,GAAD,OAAgB,kBAAC,GAAD,SAElB,kBAAC,IAAD,CAAOmqB,OAAK,EAAC7sB,KAAK,0BAA0B8sB,OAC1C,SAACpqB,GAAD,OAAgB,kBAAC,GAAD,SAElB,kBAAC,IAAD,CAAOmqB,OAAK,EAAC7sB,KAAK,wBAAwB8sB,OACxC,SAACpqB,GAAD,OAAgB,kBAAC,GAAD,WAMlB0qB,GAAa,SAAC1qB,GAElB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmqB,OAAK,EAAC7sB,KAAK,SAAS8sB,OACzB,SAACpqB,GAAD,OACE,kBAAC,GAAD,WAOJ2qB,GAAY,SAAC3qB,GACjB,OACE,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAOmqB,OAAK,EAAC7sB,KAAK,aAAa8sB,OAC7B,SAACpqB,GAGC,OADAqB,QAAQgD,MAAM,kBACP,kBAAC,GAAD,SAIX,kBAAC,IAAD,CAAO8lB,OAAK,EAAC7sB,KAAK,sBAAsB8sB,OACtC,SAACpqB,GAAD,OACE,kBAAC,GAAD,WAUKoM,eAAWC,YACxBhN,GAJyB,SAACiN,GAAD,MAAyB,KAG1BD,CAGxB4d,KC9LIW,I,wDACF,WAAY5qB,GAAmC,IAAD,8BAC1C,cAAMA,GAAO,IAEjB6qB,gBAAkB,SAAC7gB,GACf,IAAM8gB,EAAmB,EAAK9qB,MAAM8qB,WACpC,GAAI,MAAQA,EAAc,OAAO,EACjC,IAAMC,EAAW,EAAK/qB,MAAMuc,SAASrN,SACrC,OAAO4b,EAAWhsB,IAAM,IAAMkL,EAAKlL,KAAOisB,GAPA,E,gEAU1C3jB,OAAO4jB,iBAAiB,SAAUxsB,KAAKysB,gB,6CAIvC7jB,OAAO8jB,oBAAoB,SAAU1sB,KAAKysB,gB,mCAGjCzlB,GACT,IAAIwB,EAAYxB,EAAM2lB,WAAW5jB,KAAKP,UAClB0M,KAAKE,IAAI,EAAG5M,EAAY,EAAI,M,+BAI1C,IAAD,OACC8jB,EAAmBtsB,KAAKwB,MAAM8qB,WACpC,GAAI,MAAQA,EAAc,OAAO,KACjC,IAAMhgB,EAA2C,MAA3BtM,KAAKwB,MAAMorB,aAAuB,GAAK5sB,KAAKwB,MAAMorB,aAClE1sB,EAAOF,KAAKoI,gBAClB,OACI,wBAAInJ,GAAG,UAAUyC,UAAU,wBACvB,kBAAC,GAAD,CAAOwM,KAAoB,MAAdoe,EAAoBO,MAAOP,IAEvChgB,EAAMW,KAAI,SAAAzB,GACP,GAAIA,EAAKL,iBAAmBK,EAAKL,eAAejL,GAAO,OAAO,KAC9D,IACM4sB,EADoB,EAAKT,gBAAgB7gB,GACd,cAAgB,eACjD,OACI,wBAAI9J,UAAW,gBAAkBorB,EAAe1f,IAAK,WAAa5B,EAAKf,MAAM,kBAAC,IAAD,CAAM4C,GAAIif,EAAWhsB,IAAM,IAAMkL,EAAKlL,KAC/G,0BAAMoB,UAAU,gBAAe,uBAAGA,UAAW8I,EAAKe,iBAAiBC,MACnE,0BAAM9J,UAAW,cAAgB8J,EAAK7L,gB,GAxC5CuG,IAkDhB6mB,GAAQ,SAACvrB,GACX,OAAkB,GAAdA,EAAM0M,KAAsB,KAE5B,kBAAC,WAAD,KACI,wBAAIjP,GAAG,gBAAgByC,UAAU,gBAAgBC,MAAO,CAAEI,aAAc,SACpE,yBAAKJ,MAAO,CACRqrB,UAAW,SAAUC,WAAY,OACjCC,cAAe,SAEf,wBAAIxrB,UAAU,aACV,uBAAGA,UAAW8I,EAAKe,iBAAiB/J,EAAMqrB,UAE9C,kBAAC,IAAD,CAAMxf,GAAI7L,EAAMqrB,MAAMvsB,IAAKqB,MAAO,CAAEwrB,eAAgB,SAAU,wBAAIzrB,UAAU,aAAaF,EAAMqrB,MAAMltB,SAG7G,wBAAI+B,UAAW,uBACX,kBAAC,IAAD,CAAM2L,GAAI7L,EAAMqrB,MAAMvsB,KAClB,0BAAMoB,UAAU,gBAAe,uBAAGA,UAAW8I,EAAKe,iBAAiB/J,EAAMqrB,cAW9Ejf,eAAWC,YACtBhN,GANuB,SAACiN,GAAD,MAAyB,CAChDzN,cAAe,SAACE,GAAD,OAAcuN,EAASzN,EAAcE,QAI9BsN,CAGxBue,KChFItgB,I,4CACFb,aAAuB,E,KACvBkC,eAAsB,K,KACtB3B,U,OACAohB,kB,IAEEQ,G,kDAGF,WAAY5rB,GAAa,IAAD,8BACpB,cAAMA,GAAO,IAHjBV,MAAgB,IAAIgL,GAEI,EADxBuhB,gBAA0B,GACF,EAMxB/f,YAAc,WACV,EAAKvK,SAAS,CAAEyI,UAAMjG,EAAW0F,aAAa,EAAOkC,eAAgB,KAAMyf,aAAc,QAPrE,EASxBxgB,QAAU,SAACZ,GACK,MAARA,GAGJ,EAAKzI,SAAS,CAAEyI,KAAMA,EAAMohB,aAAc,KAAM3hB,YAAaO,EAAKP,YAAakC,eAAgB3B,EAAKf,QAbhF,EAexBihB,gBAAkB,SAACpf,GAEf,EAAKvJ,SAAS,CAAE6pB,aAActgB,KAjBV,EAyBxBghB,eAAiB,WACb,IAAMf,E7DxBiB,SAACA,GAC5B,IAAMgB,EAAUhB,EAAS7c,MAAM,KAE3B8d,EAAYD,EAAQ,GAIxB,MAHwB,IAApBC,EAAUC,SACVD,EAAYD,EAAQ,IAEjBC,E6DiBcE,CAAgB,EAAKlsB,MAAMuc,SAASrN,UAErD,GAAI6b,GAAY,EAAKc,gBAArB,CAGA,EAAKA,gBAAkBd,EACvB,IAAM/gB,E7DrBmB,SAAC+gB,GAC9B,IAAMjgB,EAAQb,IACd,IACI,IAAK,IAAI1L,EAAI,EAAGA,EAAIuM,EAAMrM,OAAQF,IAAK,CACnC,IAAMyL,EAAac,EAAMvM,GACzB,GAAIyL,EAAKlL,KAAO,IAAMisB,EAClB,OAAO/gB,EAGf,OAAO,KACT,MAAO7B,GACL,OAAO,M6DUMgkB,CAAkBpB,GACnB,MAAR/gB,EACA,EAAK8B,cAEL,EAAKlB,QAAQZ,KApCG,EAuCxBoiB,YAAc,WAAoB,IAAD,EACvBC,EAA2B,EAAK/sB,MAAM0K,KAC5C,OAAIqiB,GAAmC,MAAtBA,EAAU3iB,WAAoB,UAAA2iB,EAAU3iB,gBAAV,eAAoBjL,QAAS,EACjE4tB,EAAU3iB,SAEjB,EAAKpK,MAAM8rB,aACJ,EAAK9rB,MAAM8rB,aAEf,MA7CP,EAAK9rB,MAAL,eACO,EAAKA,OAHQ,E,gEAoBpBd,KAAKstB,mB,2CAGLttB,KAAKstB,mB,+BA2BL,IAAMriB,EAAiD,GAA1BjL,KAAKc,MAAMmK,YAClCvJ,EAAYuJ,EAAc,cAAgB,UAChD,OACI,kBAAC,WAAD,KACI,kBAAC,EAAD,CAAQqC,YAAatN,KAAKsN,YAAaH,eAAgBnN,KAAKc,MAAMqM,eAAgBf,QAASpM,KAAKoM,UAChG,yBAAKnN,GAAG,kBAAkByC,UAAW,oBAAsBA,GACvD,kBAAC,GAAD,CAAoBgqB,gBAAiB1rB,KAAK0rB,mBAE7CzgB,EACG,kBAAC,GAAD,CAAS2hB,aAAc5sB,KAAK4tB,cAAetB,WAAYtsB,KAAKc,MAAM0K,OAChE,U,GA/DGtF,GA0EV0H,eAAWC,YACtBhN,GANuB,SAACiN,GAAD,MAAyB,CAChDzN,cAAe,SAACE,GAAD,OAAcuN,EAASzN,EAAcE,QAI9BsN,CAGxBuf,KC1EIthB,G,sCACJqC,SAAmB,E,KACnB2f,kBAA4B,E,KAC5BjuB,e,OACAkuB,eAAuB,IAAIznB,K,KAC3B6C,WAAqB,E,KACrB1H,UAAoB,E,KACpBusB,YAAsB,iB,KACtBC,wBAAkC,GAE9BC,G,kDAkBJ,WAAY1sB,GAAa,IAAD,8BACtB,cAAMA,IAlBRgE,aAAuB,EAiBC,EAhBxB2oB,SAAmB,EAgBK,EAfxBC,WAAqB,OAeG,EAdxBC,UAAiB,KAcO,EAbxBC,gBAA0B,EAaF,EAZxBC,cAAwB,EAYA,EAXxBC,mBAA+B,SAAU5pB,KAWjB,EAVxB6pB,sBAAkC,SAAU7pB,KAUpB,EATxB8pB,qBAAwCnpB,EAShB,EARxBopB,UAAqC7pB,IAAMC,YAQnB,EAPxB6pB,iBAOwB,IALxBC,cAAgB,CACdpqB,MAAO,OAAQiF,QAAS,OAAQtF,SAAS,EACzC0qB,KAAM,aAAWxqB,KAAM,cAGD,EAOxByqB,QAAU,WAAQ,EAAKhsB,SAAS,CAAEgrB,eAAgB,IAAIznB,QAP9B,EASxB0oB,aAAe,WACb,EAAKjsB,SAAS,CAAEirB,YAAa,6BAA8BC,wBAAwB,IACnF,EAAKW,YAAYK,sBAAqB,SAACC,GACrC,EAAK9mB,cAAc8mB,KAClB,EAAKC,oBAbc,EAexB/mB,cAAgB,SAAC8mB,GAQf,EAAKN,YAAYxmB,eAPC,SAACwB,GACjB,EAAK7G,SAAS,CAAEkrB,wBAAwB,IAAS,WAC/C,EAAKzsB,MAAM4tB,aAAaF,EAAxB,gBACA,EAAK1tB,MAAM6tB,cAAczlB,EAAKuG,QAC9B,EAAK4e,eAGiClsB,QAAQ8G,QAvB5B,EAyBxBwlB,kBAAoB,WAClB,EAAKpsB,SAAS,CAAEirB,YAAa,wCAAyCC,wBAAwB,IAC9F,EAAKW,YAAYU,4BAA2B,SAACznB,GAC3C,EAAKrG,MAAM4tB,aAAavnB,EAAxB,gBACA,EAAK9E,SAAS,CAAEkrB,wBAAwB,OAExC,kBACE,EAAKlrB,SAAS,CAAEkrB,wBAAwB,QAhCtB,EA8DxBsB,iBAAmB,WACjBnsB,GAAU,WACR,EAAKL,SAAS,CAAEoL,SAAS,EAAO2f,kBAAmB,MAClD,MAjEmB,EAoExB0B,eAAiB,SAACC,GAAsB,IAAD,EAC/BC,EAAuB,UAAGD,EAAIE,kBAAP,QAAqB,EAC9CA,EAAaza,KAAK0a,MAAMF,IACxBA,EAAkB,GAAKA,EAAkB,MAC3C,EAAKznB,aAEP,EAAKlF,SAAS,CAAE+qB,kBAAmB6B,KA1Eb,EAyHxBE,cAAgB,WlEjKa,IAACvvB,IkEkKZA,IAAoB,elEjKxBA,EA4D0B,WAAyB,IAAD,uBAApBwvB,EAAoB,yBAApBA,EAAoB,gBAEjE,GAAI,MAAQA,EAGZ,IAAK,IAAI/vB,EAAI,EAAGA,EAAI+vB,EAAgB7vB,OAAQF,IAC3C0F,EAAsBsE,KAAK+lB,EAAgB/vB,IkEgGzCgwB,CAA2B,CACzBC,aAAc,oBAAsB,EAAKxuB,MAAM3B,UAC/CwD,SAAU,EAAKmsB,gBAEf,CACEQ,aAAc,WAAa,EAAKxuB,MAAM3B,UAAY,UAClDwD,SAAU,SAACwE,GAAD,OAAc,EAAKooB,eAAepoB,MAGhD,EAAKrC,aAAc,GApIG,EAuIhByqB,eAAiB,SAACpoB,GAEpB,EAAK6mB,iBACP,EAAKA,gBAAgB7mB,IA1ID,EA8IxBlB,mBAAqB,SAACC,GACpB,EAAK8nB,gBAAkB9nB,GA/ID,EAiJxBC,qBAAuB,WACrB,EAAKF,wBAAmBpB,IAhJxB,EAAKzE,MAAQ,IAAIgL,GACjB,EAAK8iB,YAAc,EAAKptB,MAAML,SAASytB,YAEvC,EAAKptB,MAAM0uB,WAAX,gBALsB,E,gEAoCtBlwB,KAAKmuB,a,0CAILnuB,KAAKmuB,WACDnuB,KAAKmuB,SAAW,IAClBnuB,KAAKmuB,SAAW,K,qCAIqB,IAA5B1sB,EAA2B,wDACtCzB,KAAKmwB,oBACLnwB,KAAK+C,SAAS,CAAEoL,SAAS,EAAM1M,SAAUA,M,mCAIzCzB,KAAKowB,oBACgB,GAAjBpwB,KAAKmuB,WACHnuB,KAAKc,MAAMW,SACbzB,KAAK+C,SAAS,CAAE+qB,kBAAmB,KAAO9tB,KAAKuvB,kBAE/CvvB,KAAK+C,SAAS,CAAEoL,SAAS,EAAO2f,kBAAmB,O,gCAoB/CrpB,EAAesE,EAAW3E,EAAkBisB,EAAuBC,GAC3EtwB,KAAKouB,WAAa3pB,EAClBzE,KAAKquB,UAAYtlB,EACjB/I,KAAKsuB,eAAiBlqB,EACtB,IAAM7D,EAAMP,KACZA,KAAKwuB,mBAAqB,SAAU5pB,GAClCrE,EAAIgwB,eACJF,EAAYzrB,IAETR,IACHpE,KAAKyuB,sBAAwB,SAAU7pB,GACrCrE,EAAIgwB,eACc,MAAdD,GACFA,EAAW1rB,KAIjB5E,KAAK+C,SAAS,CAAEoG,WAAW,M,qCAI3BnJ,KAAKuuB,cAAe,EACpBvuB,KAAK+C,SAAS,CAAEoG,WAAW,M,qCAEd1E,EAAesE,EAAW3E,EAAkBisB,EAAuBC,GAChFtwB,KAAKuuB,cAAe,EACpBvuB,KAAKmJ,UAAU1E,EAAOsE,EAAM3E,EAASisB,EAAaC,K,2CAK9CtwB,KAAKwB,MAAMT,oBpElJW,SAACwL,GAC3B,GAAIA,EAAQikB,SAAU,CACpB,IAAIC,EAAO/xB,SAASgyB,cAAc,8BAChChyB,SAASgyB,cAAc,oBACpBD,KACHA,EAAO/xB,SAASmsB,cAAc,SACzB5rB,GAAK,UACVwxB,EAAKE,aAAa,MAAO,iBACzBjyB,SAASkyB,KAAKC,YAAYJ,IAE5BA,EAAKE,aAAa,OAAQ5xB,IAAiBwN,EAAQikB,WoEyInDM,CAAc9wB,KAAKwB,MAAMT,oBAEvBf,KAAKwB,MAAM3B,YAAcG,KAAKwF,aAChCxF,KAAK6vB,kB,0CAKP7vB,KAAKgvB,eACLhvB,KAAK+C,SAAS,CAAE+qB,kBAAmB,M,+BA+B3B,IAAD,OACP,OAAK9tB,KAAKwB,MAAM3B,UAWd,kBAAC,WAAD,KACE,kBAACkxB,GAAD,CAAStvB,SAAUzB,KAAKc,MAAMW,SAAU0M,QAASnO,KAAKc,MAAMqN,QAAS2f,kBAAmB9tB,KAAKc,MAAMgtB,oBAClG9tB,KAAKc,MAAMqI,UACV,kBAAC,EAAD,CAAO1E,MAAOzE,KAAKouB,WACjBppB,QAAShF,KAAKuuB,aACd7pB,QAAS,SAACE,GAAD,OAAO,EAAK7B,SAAS,CAAEoG,WAAW,KAC3C/E,QAASpE,KAAKsuB,eACdnqB,MAAOnE,KAAKwuB,mBAAoBlqB,KAAMtE,KAAKyuB,uBAC3CzuB,KAAKquB,WACP,KACF,kBAAC,GAAD,OAnBA,yBAAK3sB,UAAU,cAAcC,MAAO,CAAEsrB,WAAY,QAChD,4BAAKjtB,KAAKc,MAAMktB,aACfhuB,KAAKc,MAAMmtB,uBACV,kBAAC,GAAD,CAAgBxY,cAAc,cAAcvR,QAASlE,KAAKmvB,kBAAmB9pB,SAAS,UACtF,kBAAC,EAAD,W,GA9KMlC,aAuMlB,SAAS4tB,GAAQvvB,GACf,OAAqB,GAAjBA,EAAM2M,QAEN,kBAAC,EAAD,CAAQ1M,SAAUD,EAAMC,SAAUY,SAAUb,EAAMssB,kBAAmBkD,KAAK,iBAAiBvwB,KAAK,YAG7F,KAIT,IAMemN,eAAWC,YACxBhN,GAPyB,SAACiN,GAAD,MAAyB,CAClDuhB,cAAe,SAACnvB,GAAD,OAAgB4N,ExE5HJ,SAAC5N,GAM5B,MALc,CACZO,KCrG2B,kBDsG3BC,QAASP,OAAOC,OAAO,IAAIhB,EAAQc,GACnCS,KAAM,CAAEF,KCvGmB,oBuE+NWwwB,CAAsB/wB,KAC9DgwB,WAAY,SAAC3vB,GAAD,OAAcuN,ExEnGiB,CAC3CrN,KCnI0B,eDoI1BC,QwEiGsDH,ExEhGtDI,KAAM,CAAEF,KCrIkB,mBuEsO1B2uB,aAAc,SAACvnB,EAAuBtH,GAAxB,OAAqCuN,ExExMzB,SAAClE,EAAmBrJ,GAU9C,MARY,CACVE,KCtC0B,iBDuC1BC,QAAQ,aAAGQ,YAAa0I,EAAKsnB,SAAUC,QAAS5wB,GAAQqJ,GACxDjJ,KAAM,CACJF,KCzCwB,mBuE2OgCwwB,CAAqBppB,EAAUtH,QAGnEsN,CAGxBqgB,K,SCvPWkD,GAAY,CACrB/vB,aAASkE,GAIA8rB,GAAU,WAAgC,IAA/BvwB,EAA8B,uDAAtBswB,GAAWE,EAAW,uCAClD,OAAQA,EAAO7wB,MACX,IxEIoB,ewEFhB,OAAO,2BAAKK,GAAZ,IAAmBO,QAASiwB,EAAO5wB,UAEvC,QACI,OAAOI,ICZNywB,GAAyB,WAAuC,IAAtCC,EAAqC,uDAAvB,mBACnD,MAAO,CACL,eAAgBA,EAChB,UAAaC,KACb,cAAiB,UAAYC,OAGpBC,GAAe,WAC1B,MAAO,CACL,eAAgB,mBAChB,UAAaF,OAIXG,GAAoB,4BAEbH,GAAe,WAC1B,IAAMI,EAAQC,KACd,OAAI,MAAQD,EAAc,GACZA,EAAME,WACP/wB,UAAUnB,WAEZ6xB,GAAc,WACzB,OAAOM,GAAUJ,KAGNK,GAAoB,SAACvJ,GAChC,GAAIA,GAAQA,EAAK0C,SAAW1C,EAAK0C,QAAQ,gBAAiB,CACxD,IAAM8G,EAAcxJ,EAAK0C,QAAQ,gBACjC+G,GAAUP,GAAWM,KAGZE,GAAoB,SAACC,GAChCF,GAAUP,GAAWS,IAEVF,GAAY,SAAUG,EAAOC,GAAqB,IAAbC,EAAY,uDAAH,EACrD9W,EAAI,IAAIpV,KACZoV,EAAE6B,QAAQ7B,EAAE+W,UAAsB,GAATD,EAAc,GAAK,GAAK,KACjD,IAAIE,EAAU,WAAahX,EAAEiX,cAC7Bj0B,SAASk0B,OAASN,EAAQ,IAAMC,EAAS,IAAMG,EAAU,WAE9CV,GAAY,SAAUM,GAIjC,IAHA,IAAI3yB,EAAO2yB,EAAQ,IAEfO,EADgBC,mBAAmBp0B,SAASk0B,QACzBljB,MAAM,KACpB3P,EAAI,EAAGA,EAAI8yB,EAAG5yB,OAAQF,IAAK,CAElC,IADA,IAAIob,EAAI0X,EAAG9yB,GACW,KAAfob,EAAE4X,OAAO,IACd5X,EAAIA,EAAE6X,UAAU,GAElB,GAAuB,GAAnB7X,EAAEjB,QAAQva,GACZ,OAAOwb,EAAE6X,UAAUrzB,EAAKM,OAAQkb,EAAElb,QAGtC,MAAO,ICpDImxB,GAAY,CACrB6B,SAAU,KACV/xB,aAAa,EACbgyB,aAAa,EACb5mB,MAAO6mB,IACPlyB,WAAY,KACZmyB,cAAc,EACdvzB,UAAW,KACXkB,mBAAoB,GACpBsyB,WAAY,IAGHhC,GAAU,WAAgC,IAAD,EAA9BvwB,EAA8B,uDAAtBswB,GAAWE,EAAW,uCAE9CnhB,EAAS,GACb,OAAQmhB,EAAO7wB,MACX,I1EZsB,iB0E4BlB,OAdA0P,EAAM,2BACCrP,GADD,IAEFjB,UAAWyxB,EAAO5wB,QAAQb,UAC1BkB,mBAAkB,UAAEuwB,EAAO5wB,QAAQyP,cAAjB,QAA2B,GAC7CkjB,WAAY,kBAGTnyB,aAAc,EACrBiP,EAAOlP,WAAa,KAIpBqwB,EAAO5wB,QAAQywB,QAAQpC,UAEhB5e,EACX,I1E/BgB,W0EwCZ,OARAA,EAAM,2BACCrP,GADD,IAEFsyB,cAAc,EACdlyB,YAAaowB,EAAO5wB,QAAQQ,YAC5B+xB,SAAU3B,EAAO5wB,QAAQuyB,SACzBC,YAA2C,GAA9B5B,EAAO5wB,QAAQQ,YAC5BD,WAAYqwB,EAAO5wB,QAAQO,aAGnC,I1ExCiB,Y0E+Cb,OANAkP,EAAM,2BACCrP,GADD,IAEFI,aAAa,EACbD,WAAY,OAEhBmxB,GAAkB,MACXjiB,EACX,I1EvCqB,gB0E8CjB,OANAA,EAAM,2BACCrP,GADD,IAEFI,YAAaowB,EAAO5wB,QAAQQ,YAC5BD,WAAYqwB,EAAO5wB,QAAQO,WAC3BpB,UAAWyxB,EAAO5wB,QAAQb,YAGlC,I1E9CuB,kB0EkDnB,OAHAsQ,EAAM,2BACCrP,GADD,IACQG,WAAYqwB,EAAO5wB,QAAQkJ,OAG7C,I1ElDuB,kB0EsDnB,OAHAuG,EAAM,2BACCrP,GADD,IACQG,WAAYqwB,EAAO5wB,QAASQ,aAAa,IAG3D,I1EtD+B,0B0E0D3B,OAHAiP,EAAM,2BACCrP,GADD,IACQC,mBAAoBuwB,EAAO5wB,QAAQK,qBAGrD,QACI,OAAO,eAAKD,KCzElBwyB,GAAQC,EAAQ,IAYTC,GAAsB,SAACC,EAAkB/yB,GAAqD,IAAtC8wB,EAAqC,uDAAvB,mBAC3Eva,EAAO,OAAGvW,QAAH,IAAGA,IAAW,GAC3B,OAAO,IAAIsI,SAAqB,SAAUC,EAASC,GACjDoqB,GAAMI,KAAKD,EAAUxc,EAAS,CAC5BmU,QAASmG,GAAuBC,KAE/B5pB,MAAK,SAAA+rB,GACJ1B,GAAkB0B,GAClB,IAAM9rB,EAAwB8rB,EAAc/pB,KAC5C/B,EAAS+rB,iBAAmBD,EACP,MAAjB9rB,EAAS4C,KAEXxB,EAAQpB,GAEHqB,EAAOrB,MAEfC,OAAM,SAAClD,GAEN/B,QAAQ8G,MAAM/E,GACdsE,EAAOtE,UA2BFivB,GAAqB,SAACJ,GACjC,OAAO,IAAIzqB,SAAqB,SAAUC,EAASC,GACjDoqB,GAAMjM,IAAIoM,EAAU,CAClBrI,QAASmG,OAER3pB,MAAK,SAAA+rB,GACJ1B,GAAkB0B,GAClB,IAAM9rB,EAAwB8rB,EAAc/pB,KAC5C/B,EAAS+rB,iBAAmBD,EACP,MAAjB9rB,EAAS4C,KAEXxB,EAAQpB,GAEHqB,EAAOrB,MAEfC,OAAM,SAAClD,GAEN/B,QAAQ8G,MAAM/E,GACdsE,EAAOtE,UC3EMkvB,G,iDAUjBpa,OAAS,SAAClO,EAAamL,EAAmB1X,GACtC,IAAMw0B,EAAW50B,IAAc+B,OAAd,oBAAkC4K,EAAlC,YAA0CmL,EAA1C,YAAuD1X,IACxE,OAAO40B,GAAmBJ,I,KAE9B1Z,OAAS,SAACvO,EAAamL,EAAmB1X,GAEtC,OD+D6B,SAACw0B,GACpC,OAAO,IAAIzqB,SAAqB,SAAUC,EAASC,GACjDoqB,GAAMvZ,OAAO0Z,EAAU,CACrBrI,QAASmG,OAER3pB,MAAK,SAAA+rB,GACJ1B,GAAkB0B,GAClB,IAAM9rB,EAAwB8rB,EAAc/pB,KAC5C/B,EAAS+rB,iBAAmBD,EACP,MAAjB9rB,EAAS4C,KAEXxB,EAAQpB,GAEHqB,EAAOrB,MAEfC,OAAM,SAAClD,GAEN/B,QAAQ8G,MAAM/E,GACdsE,EAAOtE,SCjFAmvB,CADUl1B,IAAc+B,OAAd,oBAAkC4K,EAAlC,YAA0CmL,EAA1C,YAAuD1X,M,KAG5EiY,KAAO,SAACD,EAAqBzL,GACzB3I,QAAQC,IAAI,SAAUmU,EAAQ3D,QAC9B,IAAMmgB,EAAW50B,IAAc+B,OAAd,oBAAkC4K,EAAlC,YAA0CyL,EAAQN,YACnE,OAAOkd,GAAmBJ,EAAWnhB,GAAOe,YAAY4D,EAAQ3D,U,KAGpE4E,OAAS,SAACvB,EAAmBnL,EAAazC,GACtC,IAAM0qB,EAAW50B,IAAc+B,OAAd,oBAAkC4K,EAAlC,YAA0CmL,IAC3D,OAAO6c,GAAoBC,EAAU1qB,I,KAEzCpG,OAAS,SAACgU,EAAmBnL,EAAavM,EAAS8J,GAE/C,ODI0B,SAAC0qB,EAAkB/yB,GACnD,IAAMuW,EAAqB,MAAXvW,EAAkB,GAAKA,EACvC,OAAO,IAAIsI,SAAqB,SAAUC,EAASC,GACjDoqB,GAAMU,IAAIP,EAAUxc,EAAS,CAC3BmU,QAASmG,OAER3pB,MAAK,SAAA+rB,GACJ1B,GAAkB0B,GAClB,IAAM9rB,EAAwB8rB,EAAc/pB,KAC5C/B,EAAS+rB,iBAAmBD,EACP,MAAjB9rB,EAAS4C,KAEXxB,EAAQpB,GAEHqB,EAAOrB,MAEfC,OAAM,SAAClD,GAEN/B,QAAQ8G,MAAM/E,GACdsE,EAAOtE,SCvBAqvB,CADUp1B,IAAc+B,OAAd,oBAAkC4K,EAAlC,YAA0CmL,EAA1C,YAAuD1X,IACpC8J,I,2DAEzBkO,GAEX,ODiHmC,SAACwc,EAAkB/yB,GAC5D,IAAMuW,EAAqB,MAAXvW,EAAkB,GAAKA,EACvC,OAAO,IAAIsI,SAAwB,SAAUC,EAASC,GACpDoqB,GAAMI,KAAKD,EAAUxc,EAAS,CAC5Bid,aAAc,OACd9I,QAASmG,OAER3pB,MAAK,SAAA+rB,GACJ1B,GAAkB0B,GAElB,IAAM9rB,EAAgB8rB,EAAc/pB,KACpC/B,EAAS+rB,iBAAmBD,EAC5B9wB,QAAQgD,MAAM,0BAA2B8tB,EAAcvI,SACvD,IACI+I,EADqBR,EAAcvI,QAAQ,uBACb1b,MAAM,aAAa,GACjD0kB,EAAWD,EAASzkB,MAAM,KAC1B2kB,EAAYD,EAASA,EAASn0B,OAAS,GACvCsP,EAAO,IAAIC,KAAK,CAAC3H,GAAW,CAAEpH,KAAM4zB,IACpC/zB,EAAMsI,OAAO0rB,IAAIC,gBAAgBhlB,GAW/BgR,EAAiC,IAAIlR,GAC3CkR,EAAe5gB,KAAOw0B,EACtB5T,EAAehR,KAAOA,EACtBgR,EAAejgB,IAAMA,EACrB2I,EAAQsX,MAGTzY,OAAM,SAAClD,GAAa/B,QAAQ8G,MAAM/E,GAAIsE,EAAOtE,SCrJrC4vB,CADkB31B,IAAc+B,OAAO,0BACDqW,M,qCA3B7C,OAHqB,MAAjBjX,KAAKimB,WACLjmB,KAAKimB,SAAW,IAAI6N,GAEjB9zB,KAAKimB,a,KAPC6N,GACF7N,c,MCAEwO,G,sCAKnBxF,qBAAuB,SAACyF,EAAiDC,GACvE,IAAMr0B,EAAMzB,IAAgB,2BAC5Bg1B,GAAmBvzB,GAAKsH,MAAK,SAACgC,GAC5B,GAAiB,MAAbA,EAAKa,KAAT,CAIA,IAAM5C,EAAW+B,EAAKgqB,iBACtB,IAAK/rB,EAASujB,QAAQ,iBAAuD,IAApCvjB,EAASujB,QAAQ,gBACxD,MAAM,IAAI/a,MAAM,mBAElB4hB,GAAkBpqB,GAClBhF,QAAQgD,MAAM,mBAAoBgC,EAASujB,QAAQ,iBACnDsJ,EAAgB9qB,QATd7B,MAAM,8BAUPD,OAAM,SAAAlD,GACP/B,QAAQ8G,MAAM,+BAAgC/E,GAC9C+vB,Q,KAGJvsB,cAAgB,SAACssB,EAAgCC,GAC/C,IAAMr0B,EAAMzB,IAAgB,WAC5Bg1B,GAAmBvzB,GAAKsH,KAAK8sB,GAC1B5sB,OAAM,SAAAlD,GACL/B,QAAQ8G,MAAM,+BAAgC/E,GAC9C+vB,Q,KAGNrF,2BAA6B,SAACoF,EAAiDC,GAC7E,IF2FqClB,EE3F/BnzB,EAAMzB,IAAgB,4BF2FS40B,EE1FZnzB,EF2FpB,IAAI0I,SAAqB,SAAUC,EAASC,GACjDoqB,GAAMjM,IAAIoM,EAAU,CAClBrI,QAASuG,OAER/pB,MAAK,SAAA+rB,GAEJ,IAAM9rB,EAAwB8rB,EAAc/pB,KAC5C/B,EAAS+rB,iBAAmBD,EACP,MAAjB9rB,EAAS4C,KACXxB,EAAQpB,GAEHqB,EAAOrB,MAEfC,OAAM,SAAClD,GAEN/B,QAAQ8G,MAAM/E,GACdsE,EAAOtE,UE3GmBgD,MAAK,SAAAgC,GAChB,MAAbA,EAAKa,KAITiqB,EAAgB9qB,GAHd7B,MAAM,8BAIPD,OAAM,SAAAlD,GACP/B,QAAQ8G,MAAM,uCAAwC/E,GAEtD+vB,SA3CeF,GACJxO,c,EADIwO,GAGZG,YAAc,kBAAMH,GAAYxO,SAAWwO,GAAYxO,SAAWwO,GAAYxO,SAAW,IAAIwO,I,ICLjFI,G,qGAUCvhB,GAClB,OAAOkgB,GAAoB30B,IAAgB,mCAAoC,CAC7EyU,OAAQA,M,+BAGH4C,EAAenL,GACtB,IAAMjM,EAAI,8CAA0CoX,EAAIjX,GAA9C,YAAoD8L,GAC9D,OAAOyoB,GAAoB30B,IAAgBC,M,qCAT3C,OAHqB,MAAjBkB,KAAKimB,WACPjmB,KAAKimB,SAAW,IAAI4O,GAEf70B,KAAKimB,a,KARK4O,GAEJ5O,c,MCAI6O,G,iDAsCZjR,SAAW,SAACkR,GACjB,OAAOvB,GAAoB30B,EAAY,oCAAqC,CAC1E+a,UAAWmb,K,KAGRzL,qBAAuB,WAC5B,OAAOkK,GAAoB30B,IAAgB,4CAA6C,K,KAEnFyrB,aAAe,SAACD,GACrB,OAAOwJ,GAAmBh1B,IAAW,sCAAoCwrB,K,KAEpEI,kBAAoB,SAACJ,GAE1B,OJsIuCoJ,EItIL50B,IAAW,0CAAwCwrB,GJuIhF,IAAIrhB,SAAwB,SAAUC,EAASC,GACpDoqB,GAAMjM,IAAIoM,EAAU,CAClBS,aAAc,OACd9I,QAASmG,OAER3pB,MAAK,SAAA+rB,GACJ1B,GAAkB0B,GAElB,IAAM9rB,EAAgB8rB,EAAc/pB,KACpC/B,EAAS+rB,iBAAmBD,EAC5B9wB,QAAQgD,MAAM,0BAA2B8tB,EAAcvI,SACvD,IACI+I,EADqBR,EAAcvI,QAAQ,uBACb1b,MAAM,aAAa,GACjD0kB,EAAWD,EAASzkB,MAAM,KAC1B2kB,EAAYD,EAASA,EAASn0B,OAAS,GACvCsP,EAAO,IAAIC,KAAK,CAAC3H,GAAW,CAAEpH,KAAM4zB,IACpC/zB,EAAMsI,OAAO0rB,IAAIC,gBAAgBhlB,GAE/BgR,EAAiC,IAAIlR,GAC3CkR,EAAe5gB,KAAOw0B,EACtB5T,EAAehR,KAAOA,EACtBgR,EAAejgB,IAAMA,EACrB2I,EAAQsX,MAGTzY,OAAM,SAAClD,GAAa/B,QAAQ8G,MAAM/E,GAAIsE,EAAOtE,SA1BV,IAAC6uB,G,KIlIlCrN,oBAAsB,SAAC1O,GAC5B,OAAO8b,GAAoB30B,IAAgB,8CAA+C6Y,I,KAErF6P,yBAA2B,SAACyN,EAAmBtX,EAAe/Q,GACnE,IAAMqO,EAAkB,CACtB1H,OAAQ,CACNR,aAAc,CAAEiT,WAAYiP,KAGhC,OAAOxB,GAAoB30B,IAAgB,+CAAgDmc,I,KAGtFkI,gBAAkB,SAACjkB,EAAYkf,GACpC,IAAMrf,EAAiBD,EAAVsf,EAAsB,wCAAuD,2CAC1F,OAAOqV,GAAoB,GAAD,OAAI10B,EAAJ,eAAeG,K,KAOpC6kB,QAAU,SAACmR,GAChB,IAAMn2B,EAAOD,EAAY,yCACnB0U,EAAI,IAAM0hB,EAAIhoB,KAAI,SAAAhO,GAAE,mBAAUA,MAAMgT,KAAK,KAC/C,OAAOuhB,GAAoB10B,EAAOyU,I,KAM7ByQ,UAAY,SAACiR,GAClB,IAAMn2B,EAAOD,EAAY,2CACnB0U,EAAI,IAAM0hB,EAAIhoB,KAAI,SAAAhO,GAAE,mBAAUA,MAAMgT,KAAK,KAC/C,OAAOuhB,GAAoB10B,EAAOyU,I,8DA9EXyH,EAAkBuF,GAAkC,IAAD,0BACtEA,IACFA,EAAe3W,KAAO,IAExB,IAAMA,EAAO,IAAIsrB,SACjBtrB,EAAKurB,OAAO,MAAZ,oBAAmBna,EAAI2C,WAAvB,aAAmB,EAAStT,kBAA5B,QAA0C,IAC1CT,EAAKurB,OAAO,QAAZ,oBAAqBna,EAAI0C,aAAzB,aAAqB,EAAWrT,kBAAhC,QAA8C,IAC9CT,EAAKurB,OAAO,OAAZ,oBAAoBna,EAAIrO,YAAxB,aAAoB,EAAUtC,kBAA9B,QAA4C,IAC5CT,EAAKurB,OAAO,OAAQ,IAAI7uB,KAAJ,UAAS0U,EAAIyC,YAAb,QAAqB,IAAInX,MAAQmsB,UAAUpoB,YAC/DT,EAAKurB,OAAO,cAAZ,UAA2Bna,EAAItQ,mBAA/B,QAA8C,IAC9Cd,EAAKurB,OAAO,WAAZ,UAAwBna,EAAI+C,gBAA5B,QAAwC,IACxCnU,EAAKurB,OAAO,cAAZ,oBAA2Bna,EAAIiD,mBAA/B,aAA2B,EAAiB5T,kBAA5C,QAA0D,IAC1DT,EAAKurB,OAAO,gBAAZ,oBAA6Bna,EAAIgD,qBAAjC,aAA6B,EAAmB3T,kBAAhD,QAA8D,IAC9D,IAAM+qB,EAAO,OAAG7U,QAAH,IAAGA,OAAH,EAAGA,EAAgBjR,KAGhC,OAFI8lB,GACFxrB,EAAKurB,OAAO,QAASC,GAChB5B,GAAoB30B,EAAY,oCAAqC+K,EAAM,yB,mCAGlF,OAAOiqB,GAAmBh1B,EAAY,wC,2CAEZyU,GAC1B,IAAMC,EAAIjB,GAAOe,YAAYC,GAC7B,OAAOugB,GAAmBh1B,EAAY,4BAAD,OAA6B0U,O,sCAGlE,OAAOsgB,GAAmBh1B,EAAY,wC,qCA5BtC,OAHqB,MAAjBmB,KAAKimB,WACPjmB,KAAKimB,SAAW,IAAI6O,GAEf90B,KAAKimB,a,KARK6O,GAEJ7O,c,MCLIoP,G,iDAQjB1yB,OAAS,SAACmlB,GACN,IAAM2L,EAAW50B,IAAc+B,OAAO,2BACtC,OAAO4yB,GAAoBC,EAAU3L,I,KAEzCwN,WAAa,WACT,IAAM7B,EAAW50B,IAAc+B,OAAO,2BACtC,OAAOizB,GAAmBJ,I,+DAR1B,OAHqB,MAAjBzzB,KAAKimB,WACLjmB,KAAKimB,SAAW,IAAIoP,GAEjBr1B,KAAKimB,a,KANCoP,GACFpP,c,ECGZ,IAAMmL,GAAoC,CAC7CjwB,SAAU,CACNytB,YAAa6F,GAAYG,cACzB/d,kBAAmBid,GAAkBc,cACrChf,yBAA0Bif,GAAyBD,cACnDpkB,eAAgBskB,GAAeF,cAC/B3K,qBAAsBoL,GAAqBT,gBAKtCvD,GAAU,WAAgC,IAA/BvwB,EAA8B,uDAAtBswB,GAE5B,OAAOtwB,GCjBEy0B,GAAcC,aACvB,CACIl0B,SAAUm0B,GACVz0B,UAAW00B,GACXt0B,cAAeu0B,KAIVC,GAAe,CACxBt0B,SAAUm0B,GACVz0B,UAAW00B,GACXt0B,cAAeu0B,ICbbrC,GAAQC,EAAQ,IAETsC,GAAyB,SAAAhE,GAAK,OAAI,SAAAiE,GAAI,OAAI,SAAAxE,GACrD,IAAKA,EAAO3wB,MnFAU,amFAF2wB,EAAO3wB,KAAKF,KAC9B,OAAOq1B,EAAKxE,GAFiD,IAIvD/wB,EAAQ+wB,EAAO3wB,KAAfJ,IACFw1B,EAAa,CACjB,YAAczE,EAAO3wB,KAAKpB,MAC1B,YAAc+xB,EAAO3wB,KAAKnB,SAC1B,uBAEF8zB,GAAMI,KAAKpC,EAAO3wB,KAAKL,IAAKy1B,EAAW9jB,KAAK,KAAM,CAChDmZ,QAAS,CAAE,eAAgB,uCAC1BxjB,MAAK,SAAA+rB,GACN,IAAMqC,EAAerC,EAAc/pB,KAC/BqpB,EAAmB,GACnBgD,GAAwB,EAEH,MAArBD,EAAavrB,MAAqC,MAArBurB,EAAavrB,OAC5CwoB,EAAWU,EAAcvI,QAAQ,gBAEjC6K,GAAe,GAGjB,IAAIC,EAAY/1B,OAAOC,OAAO,GAAIkxB,EAAQ,CACxC5wB,QAAS,CACPQ,YAAa+0B,EACbhD,SAAUA,EACVhyB,WAAY+0B,EAAa7lB,UAG7BgmB,GAAyBxC,UAClBuC,EAAUv1B,KACjBkxB,EAAM/jB,SAASooB,MAEdpuB,MAAMjF,QAAQC,KACdkF,SAAQ,WAAQzH,EAAI0H,mBAKZmuB,GAA0B,SAAAvE,GAAK,OAAI,SAAAiE,GAAI,OAAI,SAAAxE,GACtD,IAAKA,EAAO3wB,MnF7BiB,oBmF6BT2wB,EAAO3wB,KAAKF,KAAkC,OAAOq1B,EAAKxE,GAE9E,IAAIlG,EAAU+K,KAEd7C,GAAMI,KAAKpC,EAAO3wB,KAAKL,IAAMgxB,EAAO5wB,QAAU,CAC5C0qB,QAASA,IACRxjB,MAAK,SAAAC,GACN,IAAM+B,EAAO/B,EAAS+B,KAEtB,GAAKA,EAAL,CAKA,IAAIssB,EAAY/1B,OAAOC,OAAO,GAAIkxB,EAAQ,CAAE5wB,QAAS,CAAEkJ,iBAChDssB,EAAUv1B,KACjBkxB,EAAM/jB,SAASooB,QANbnuB,MAAM,+BAQPD,MAAMjF,QAAQC,KAAKkF,SAAQ,SAAAquB,GAC1B/E,EAAO3wB,KAAKJ,IAAI0H,aAChBqpB,EAAO3wB,KAAKJ,IAAIwuB,gBAKTuH,GAA0B,SAAAzE,GAAK,OAAI,SAAAiE,GAAI,OAAI,SAAAxE,GACtD,IAAKA,EAAO3wB,MnFjEW,cmFiEH2wB,EAAO3wB,KAAKF,KAC9B,OAAOq1B,EAAKxE,GAEd,IAAM/wB,EAAM+wB,EAAO3wB,KAAKJ,IAExB+yB,GAAMI,KAAKpC,EAAO3wB,KAAKL,IAAKgxB,EAAO5wB,QAAS,CAC1C0qB,QAAS+K,OAERvuB,MAAK,SAACuZ,GACL,IACIoV,GAAgB,EACK,MAFJpV,EAAEvX,KAENa,KACf8rB,GAAgB,EAEhBxuB,MAAM,iBAGR,IAAImuB,EAAY/1B,OAAOC,OAAO,GAAIkxB,EAAQ,CACxC5wB,QAAS,CACPQ,aAAcq1B,YAGXL,EAAUv1B,KACjBkxB,EAAM/jB,SAASooB,MAEhBpuB,MAAMjF,QAAQC,KAAKkF,SAAQ,SAAAquB,GAAK,OAAI91B,EAAI0H,mBAGhCuuB,GAA0B,SAAA3E,GAAK,OAAI,SAAAiE,GAAI,OAAI,SAAAxE,GACtD,IAAKA,EAAO3wB,MnFnFiB,oBmFmFT2wB,EAAO3wB,KAAKF,KAAkC,OAAOq1B,EAAKxE,GAC9E,IAAI4E,EAAY/1B,OAAOC,OAAO,GAAIkxB,EAAQ,CAAE5wB,QAAS4wB,EAAO5wB,iBACrDw1B,EAAUv1B,KACjBkxB,EAAM/jB,SAASooB,MCnGJO,GAAwB,SAAA5E,GAAK,OAAI,SAAAiE,GAAI,OAAI,SAAAxE,GAClD,IAAKA,EAAO3wB,MpFMW,gBoFNH2wB,EAAO3wB,KAAKF,KAA8B,OAAOq1B,EAAKxE,GAC1EoF,MAAMpF,EAAO3wB,KAAKL,IAAK,CACnBiH,OALY,OAKSwB,KAAMhD,KAAKC,UAAUsrB,EAAO5wB,SACjD0qB,QAAS+K,OACVvuB,MAAK,SAAAC,GAAQ,OAAIA,EAAS8uB,UACxB/uB,MAAK,SAAAgC,GACF/G,QAAQgD,MAAM,sCAAuC+D,GACrD,IAAIssB,EAAY/1B,OAAOC,OAAO,GAAIkxB,EAAQ,CAAE5wB,QAASkJ,WAC9CssB,EAAUv1B,KACjBkxB,EAAM/jB,SAASooB,MAElBpuB,OAAM,SAAA8uB,GAAG,OAAI/zB,QAAQC,IAAI8zB,MAAM5uB,SAAQ,SAAAquB,GAAK,OAAI/E,EAAO3wB,KAAKJ,IAAI0H,mBAG5D4uB,GAAoC,SAAAhF,GAAK,OAAI,SAAAiE,GAAI,OAAI,SAAAxE,GAC9D,IAAKA,EAAO3wB,MpFZa,kBoFYL2wB,EAAO3wB,KAAKF,KAAgC,OAAOq1B,EAAKxE,GAC5E,IAAI4E,EAAY/1B,OAAOC,OAAO,GAAIkxB,EAAQ,CAAE5wB,QAAS4wB,EAAO5wB,iBACrDw1B,EAAUv1B,KACjBkxB,EAAM/jB,SAASooB,MCnBfrE,GAAQ,KACCC,GAAW,WACpB,OAAOD,IA0BIiF,GAxBe,WAoB1B,OAnBAjF,GAAQkF,aACJxB,GACAK,GACAoB,aAGIC,GACAA,GACAA,GACAA,GAIAC,GACAA,MCHGC,GAfF,SAAC31B,GAEV,IAAMqwB,EAAQiF,KAEd,OACI,kBAAC,IAAD,CAAUjF,MAAOA,GACb,kBAAC,IAAD,KACI,kBAAC,GAAD,SCDIuF,QACW,cAA7BxuB,OAAOmV,SAASsZ,UAEe,UAA7BzuB,OAAOmV,SAASsZ,UAEhBzuB,OAAOmV,SAASsZ,SAASC,MACvB,2DCZNC,IAAS3L,OAAO,kBAAC,GAAD,MAAUltB,SAASC,eAAe,SD6H5C,kBAAmB64B,WACrBA,UAAUC,cAAcC,MAAM9vB,MAAK,SAAA+vB,GACjCA,EAAaC,kB","file":"static/js/main.9cc15896.chunk.js","sourcesContent":["\nexport   enum AuthorityType{\n    \n    ROLE_SUPERADMIN = \"ROLE_SUPERADMIN\",\n    ROLE_ASRAMA_MUSYRIF = \"ROLE_ASRAMA_MUSYRIF\",\n    ROLE_EMPLOYEE = \"ROLE_EMPLOYEE\"\n}\n","const rootValue = `${document.getElementById(\"${ROOT_PATH}\").value}`;\r\n\r\n/**\r\n * \r\n * @param {string} path \r\n * @returns \r\n */\r\nexport const contextPath = (path = null) => {\r\n    return `${rootValue}/${path ?? ''}`;\r\n}\r\nexport const baseImageUrl = () => contextPath('images/');\r\n","\nexport default class BaseEntity {\n\tid?: number;\n\tcreated_at?: string;\n\tupdated_at?: string;\n}\n","import Authority from './Authority';\nimport { AuthorityType } from './AuthorityType';\nimport BaseEntity from './BaseEntity';\n\nexport default class User extends BaseEntity {\n  static clone(user: User): User {\n    return Object.assign(new User(), user);\n  }\n  hasRole(role: AuthorityType): boolean {\n    for (let i = 0; i < this.authorities.length; i++) {\n      const element = this.authorities[i];\n      if (element.name == role) {\n        return true;\n      }\n    }\n    return false;\n  }\n  displayName?: string;\n  fullName?: string;\n  email?: string;\n  password?: string;\n  profileImage?: string;\n  authorities: Authority[] = [ { name: AuthorityType.ROLE_EMPLOYEE } ];\n  requestId?: string;\n\n}\n","import * as types from './types'\r\nimport * as url from '../constant/Url'\r\nimport { contextPath } from '../constant/Url';\r\nimport User from './../models/User';\r\nimport ApplicationProfile from './../models/ApplicationProfile';\r\nimport WebResponse from '../models/commons/WebResponse';\r\n\r\nconst usedHost = url.contextPath();\r\nconst apiEntityBaseUrl = usedHost + \"api/app/entity/\"\r\nconst apiAdmin = usedHost + \"api/app/admin/\"\r\n\r\nexport const getEntityProperty = (entityName, app) => {\r\n  app.startLoading();\r\n  let requested = {\r\n    type: types.GET_ENTITY_PROPERTY,\r\n    payload: {\r\n      entity: entityName\r\n    },\r\n    meta: {\r\n      type: types.GET_ENTITY_PROPERTY,\r\n      url: apiEntityBaseUrl.concat(\"config\"),\r\n      app: app,\r\n    }\r\n  };\r\n  return requested;\r\n}\r\n\r\n\r\nexport const getManagementMenus = (app) => {\r\n  app.startLoading();\r\n  let requested = {\r\n    type: types.GET_MANAGEMENT_MENUS,\r\n    payload: {},\r\n    meta: {\r\n      type: types.GET_MANAGEMENT_MENUS,\r\n      url: apiEntityBaseUrl.concat(\"managementpages\"),\r\n      app: app,\r\n    }\r\n  };\r\n  return requested;\r\n}\r\n\r\n\r\nexport const setRequestId = (data: WebResponse, app) => {\r\n\r\n  const ret = {\r\n    type: types.SET_REQUEST_ID,\r\n    payload: { loginStatus: data.loggedIn, referer: app, ...data },\r\n    meta: {\r\n      type: types.SET_REQUEST_ID,\r\n    }\r\n  };\r\n  // console.debug(\"setRequestId: \", ret);\r\n  return ret;\r\n}\r\n\r\nexport const getMessageList = (app) => {\r\n  app.startLoading();\r\n  return {\r\n    type: types.GET_MESSAGE,\r\n    payload: {},\r\n    meta: {\r\n      type: types.GET_MESSAGE, app: app,\r\n      url: apiAdmin.concat(\"getmessages\")\r\n    }\r\n  };\r\n}\r\n\r\nexport const storeMessageLocally = (messages) => {\r\n\r\n  return {\r\n    type: types.STORE_MESSAGE,\r\n    payload: {\r\n      entities: messages\r\n    },\r\n    meta: {\r\n      type: types.STORE_MESSAGE,\r\n    }\r\n  };\r\n}\r\n\r\n\r\nexport const performLogout = (app) => {\r\n  app.startLoading();\r\n  let loginRequest = {\r\n    type: types.DO_LOGOUT,\r\n    payload: {},\r\n    meta: { app: app, type: types.DO_LOGOUT, url: contextPath().concat(\"api/user/logout\") }\r\n  };\r\n  return loginRequest;\r\n}\r\n\r\nexport const performLogin = (email, password, app) => {\r\n  app.startLoading();\r\n  let loginRequest = {\r\n    type: types.DO_LOGIN,\r\n    payload: {},\r\n    meta: {\r\n      type: types.DO_LOGIN,\r\n      url: contextPath().concat(\"login\"),\r\n      email: email, password: password,\r\n      app: app\r\n    }\r\n  };\r\n  return loginRequest;\r\n}\r\n\r\nexport const getLoggedUser = (app) => {\r\n  app.startLoading();\r\n  let request = {\r\n    type: types.GET_LOGGED_USER,\r\n    payload: {},\r\n    meta: { type: types.GET_LOGGED_USER, url: contextPath().concat(\"api/user\"), app: app }\r\n  };\r\n  return request;\r\n}\r\n\r\nexport const setLoggedUser = (user: User) => {\r\n  let request = {\r\n    type: types.SET_LOGGED_USER,\r\n    payload: Object.assign(new User(), user),\r\n    meta: { type: types.SET_LOGGED_USER }\r\n  };\r\n  return request;\r\n}\r\n\r\nexport const setApplicationProfile = (applicationProfile: ApplicationProfile) => {\r\n\r\n  let request = {\r\n    type: types.SET_APPLICATION_PROFILE,\r\n    payload: { applicationProfile: applicationProfile },\r\n    meta: { type: types.SET_APPLICATION_PROFILE }\r\n  };\r\n  return request;\r\n}\r\n\r\nexport const removeEntity = () => ({\r\n  type: types.REMOVE_SHOP_ENTITY,\r\n  payload: {},\r\n  meta: { type: types.REMOVE_SHOP_ENTITY }\r\n})\r\n\r\n\r\nexport const setMainApp = (mainApp: any) => ({\r\n  type: types.SET_MAIN_APP,\r\n  payload: mainApp,\r\n  meta: { type: types.SET_MAIN_APP }\r\n})\r\n\r\n","/**\r\n * \r\n */\r\n \r\nexport const REMOVE_SHOP_ENTITY= \"remove_shop_entity\"; \r\nexport const FETCH_PRODUCT_CATEGORIES_ALL = \"all_product_categories\";\r\nexport const DO_LOGIN = \"do_login\";\r\nexport const DO_LOGOUT = \"do_logout\";    \r\nexport const SET_REQUEST_ID = \"SET_REQUEST_ID\"; \r\nexport const STORE_MESSAGE = \"store_message\";\r\nexport const GET_ENTITY_PROPERTY = \"get_entity_config\";\r\nexport const GET_MANAGEMENT_MENUS = \"GET_MANAGEMENT_MENUS\";\r\nexport const GET_MESSAGE = \"GET_MESSAGE\";\r\nexport const SET_MAIN_APP = \"SET_MAIN_APP\"; \r\nexport const GET_ENTITY_BY_ID = \"get_entity_by_id\";\r\nexport const UPDATE_ENTITY = \"update_entity\"; \r\nexport const REFRESH_LOGIN = \"refresh_login\";\r\nexport const GET_LOGGED_USER = \"get_logged_user\";\r\nexport const SET_LOGGED_USER = \"set_logged_user\";\r\nexport const SET_APPLICATION_PROFILE = \"SET_APPLICATION_PROFILE\";","\r\nexport const mapCommonUserStateToProps = (state) => {\r\n    return {\r\n        applicationProfile: state.userState.applicationProfile,\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n        requestId: state.userState.requestId, \r\n        services: state.servicesState.services,\r\n        mainApp: state.appState.mainApp\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport './Loader.css'\r\n\r\nclass Loader extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            timer: 130,\r\n            intervalId: 0\r\n        }\r\n        this.update = () => {\r\n            if (this.state.timer < 0) {\r\n                clearInterval(this.state.intervalId);\r\n            }\r\n            console.log(\"tick\")\r\n            this.setState({ timer: this.state.timer - 1 })\r\n            if (this.state.timer < 0 && this.props.endMessage) {\r\n                this.props.endMessage();\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.withTimer == true) {\r\n            let intervalId = setInterval(this.update, 1, null);\r\n            this.setState({ intervalId: intervalId });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let className = \"message message-\" + this.props.type;\r\n\r\n        if (this.props.realtime == true) {\r\n            return <LoaderContent progress={this.props.progress} realtime={this.props.realtime} />\r\n        }\r\n\r\n        return (\r\n            <div className={className} >\r\n                <LoaderContent progress={this.props.progress} realtime={this.props.realtime} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nfunction LoaderContent(props) {\r\n    if (props.realtime) {\r\n        return (\r\n            <div className=\"row container-fluid bg-light\" style={{margin:0, position: 'fixed', zIndex: 100 }}>\r\n                <div className=\"col-1\">\r\n                <span style={{marginBottom:'3px'}} className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                </div>\r\n                <div className=\"col-11 progress\" style={{padding:0, marginTop: '7px', height:'10px'}}  >\r\n                    <div className=\"bg-primary\" style={{\r\n                        width: props.progress + \"%\",\r\n                        transitionDuration: '50ms',\r\n                        margin: 0,\r\n                    }}>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <button className=\"btn btn-dark \" type=\"button\" disabled>\r\n            <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n            <span className=\" \">Loading...</span>\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Loader;","\r\nimport ApplicationProfile from './../models/ApplicationProfile';\r\nimport { baseImageUrl } from './../constant/Url';\r\nexport const doItLater = (callback:()=>any, intervalMs:number) => {\r\n    const timeout = setTimeout(()=>{\r\n       callback();\r\n        clearTimeout(timeout);\r\n      }, intervalMs)\r\n}\r\n\r\n\r\nexport const  updateFavicon = (profile: ApplicationProfile) => {\r\n    if (profile.pageIcon) {\r\n      let link = document.querySelector('link[rel=\"shortcut icon\"]') ||\r\n        document.querySelector('link[rel=\"icon\"]');\r\n      if (!link) {\r\n        link = document.createElement('link');\r\n        link.id = 'favicon';\r\n        link.setAttribute(\"rel\", 'shortcut icon');\r\n        document.head.appendChild(link);\r\n      }\r\n      link.setAttribute(\"href\", baseImageUrl() + profile.pageIcon);\r\n    }\r\n  }","import React, { Component } from 'react'\r\nimport { doItLater } from './../../utils/EventUtil';\r\nconst initialMargin = '-200px';\r\nconst transitionDuration = '200ms';\r\nclass State {\r\n    backColor  = 'transparent';\r\n    marginTop = initialMargin;\r\n}\r\nclass Alert extends Component  {\r\n    yesButtonRef;\r\n    noButtonRef;\r\n    state  = new State();\r\n    constructor(props) {\r\n        super(props);\r\n        this.yesButtonRef = React.createRef();\r\n        this.noButtonRef = React.createRef();\r\n    }\r\n    onYes = (e) => {\r\n        \r\n        this.close(()=>{\r\n            if (this.props.onYes) {\r\n                this.props.onYes(e);\r\n            }\r\n        });\r\n    }\r\n    close = (callback)=> {\r\n        doItLater(()=>{\r\n            this.setState({backColor:'transparent', marginTop: initialMargin}, ()=>{\r\n                doItLater(callback, 100);\r\n                \r\n            });\r\n        }, 100);\r\n    }\r\n    onNo = (e) => {\r\n        \r\n        this.close(()=>{\r\n            if (this.props.onNo) {\r\n                this.props.onNo(e);\r\n            }\r\n        });\r\n    }\r\n    onClose = (e) => {\r\n       \r\n        this.close(()=>{\r\n            if (this.props.onClose) {\r\n                this.props.onClose(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        const isError = this.props.isError == true;\r\n        if (!isError && this.yesButtonRef.current) {\r\n            this.yesButtonRef.current.focus();\r\n        } else if (isError && this.noButtonRef.current) {\r\n            this.noButtonRef.current.focus();\r\n        } else if (isError && this.yesButtonRef.current) {\r\n            this.yesButtonRef.current.focus();\r\n        }\r\n\r\n        doItLater(()=>{\r\n            this.setState({backColor:'rgba(100,100,100,0.7)', marginTop:'30vh'})\r\n        }, 100);\r\n    }\r\n\r\n    render() {\r\n        const title = this.props.title ? this.props.title : \"Info\";\r\n        const yesOnly = this.props.yesOnly == true;\r\n        const isError = this.props.isError == true;\r\n        const headerClassName = isError ? 'bg-danger' : 'bg-info';\r\n        const headerFontClassName = 'text-light';\r\n        return (\r\n            <>\r\n                <Backdrop bgColor={this.state.backColor} />\r\n                <div className=\"modal show\" style={{ display: 'block' }}  >\r\n                    <div className=\"modal-dialog -modal-dialog-centered\" \r\n                        style={{\r\n                            transitionDuration:  transitionDuration,\r\n                            marginTop: this.state.marginTop\r\n                        }}\r\n                    >\r\n                        <div className=\"modal-content\" style={{marginTop:'5px',}} >\r\n                            <Header fontClassName={headerFontClassName} className={headerClassName} title={title} onClose={this.onClose} />\r\n                            <div className=\"modal-body\" > {this.props.children} </div>\r\n                            <Footer noButtonRef={this.noButtonRef} yesButtonRef={this.yesButtonRef} yesOnly={yesOnly} onYes={this.onYes} onNo={this.onNo} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction Backdrop(props ) {\r\n    return (\r\n        <div className=\"modal-backdrop\" style={{ transitionDuration:transitionDuration, backgroundColor: props.bgColor }\r\n        } > </div>\r\n    );\r\n}\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <div className={\"modal-footer \" + props.className} >\r\n            <button ref={props.yesButtonRef} type=\"button\"\r\n                onClick={props.onYes} className=\"btn btn-outline-primary\" > Yes </button>\r\n            {props.yesOnly ? \r\n                null : \r\n                <button ref={props.noButtonRef} type=\"button\"\r\n                    onClick={props.onNo} className=\"btn btn-outline-secondary\" > No \r\n                </button>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Header(props) {\r\n    return (<div className={\"modal-header \" + props.className} >\r\n        <h5 className={\"modal-title \" + props.fontClassName} id=\"exampleModalCenterTitle\" > {props.title} </h5>\r\n        < button onClick={props.onClose} type=\"button\" className=\"close\" >\r\n            <span aria-hidden=\"true\" className={props.fontClassName} > <i className=\"fas fa-times\" /> </span>\r\n        </button>\r\n    </div>)\r\n}\r\n\r\nexport default Alert;","import { doItLater } from './EventUtil';\r\nlet stompClient = undefined;\r\nlet wsConnected = false;\r\nlet websocketUrl = undefined;\r\nconst onConnectCallbacks = new Array();\r\nconst subscriptionCallbacks = new Array();\r\nexport const isWsConnected = () => {\r\n\treturn wsConnected == true;\r\n}\r\nexport const setWebSocketUrl = (url) => {\r\n\twebsocketUrl = url;\r\n}\r\nexport const sendToWebsocket = (url, requestObject) => {\r\n\tif (!wsConnected || !stompClient) {\r\n\t\tconsole.info(\"Connecting\");\r\n\t\treturn false;\r\n\t}\r\n\tconsole.debug(\"SEND WEBSOCKET\")\r\n\tstompClient.send(url, {}, JSON.stringify(requestObject));\r\n\treturn true;\r\n}\r\n\r\nexport const addOnWsConnectCallbacks = (...callbacks) => {\r\n\tfor (let i = 0; i < callbacks.length; i++) {\r\n\t\tconst element = callbacks[i];\r\n\t\tonConnectCallbacks.push(element);\r\n\t}\r\n}\r\n\r\nexport const performWebsocketConnection = () => {\r\n\r\n\treturn;\r\n\tvar socket = new window.SockJS(websocketUrl);\r\n\tstompClient  = window.Stomp.over(socket);\r\n\tstompClient .connect({}, function (frame) {\r\n\t\twsConnected = true;\r\n\t\t// setConnected(true);\r\n\t\tconsole.log('Websocket CONNECTED: ', websocketUrl, 'frame :', frame, stompClient.ws._transport.ws.url);\r\n\t\tconsole.debug(\"subscriptionCallbacks :\", subscriptionCallbacks.length);\r\n\t\t// document.getElementById(\"ws-info\").innerHTML =\r\n\t\t// stompClients.ws._transport.ws.url;\r\n\t\tfor (let i = 0; i < subscriptionCallbacks.length; i++) {\r\n\t\t\tconst callBackObject = subscriptionCallbacks[i];\r\n\r\n\t\t\tif (callBackObject) {\r\n\r\n\t\t\t\tstompClient.subscribe(callBackObject.subscribeUrl, (response) => {\r\n\t\t\t\t\tvar respObject = JSON.parse(response.body);\r\n\t\t\t\t\tcallBackObject.callback(respObject);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < onConnectCallbacks.length; i++) {\r\n\t\t\tconst callback = onConnectCallbacks[i];\r\n\t\t\tcallback(frame);\r\n\t\t}\r\n\r\n\t}, (e) => {\r\n\t\tconsole.warn(\"Error connection websocket, reconnect\");\r\n\t\tdoItLater(performWebsocketConnection, 2000);\r\n\t});\r\n\r\n\t \r\n}\r\n\r\n /**\r\n  * \r\n  * @param  {...WsCallback} callBackObjects \r\n  */\r\nexport const registerWebSocketCallbacks = (...callBackObjects) => {\r\n\r\n\tif (null == callBackObjects) {\r\n\t\treturn;\r\n\t}\r\n\tfor (var i = 0; i < callBackObjects.length; i++) {\r\n\t\tsubscriptionCallbacks.push(callBackObjects[i]);\r\n\t}\r\n}\r\n","import { Component } from 'react';\r\nimport WebResponse from '../models/commons/WebResponse';\r\nimport ApplicationProfile from './../models/ApplicationProfile';\r\nimport User from './../models/User';\r\nimport Services from './../services/Services';\r\nimport { AuthorityType } from '../models/AuthorityType';\r\nimport WebRequest from '../models/commons/WebRequest';\r\nimport { sendToWebsocket } from './../utils/websockets';\r\nimport { doItLater } from './../utils/EventUtil';\r\n\r\nexport default class BaseComponent extends Component<any, any> {\r\n  parentApp: any;\r\n  authenticated: boolean = true;\r\n  state: any = { updated: new Date() };\r\n  constructor(props: any, authenticated = false) {\r\n    super(props);\r\n\r\n    this.authenticated = authenticated\r\n    this.parentApp = props.mainApp;\r\n  }\r\n\r\n  validateLoginStatus = (callback?: () => any) => {\r\n    if (this.authenticated == false) {\r\n      if (callback) {\r\n        callback();\r\n      }\r\n      return true;\r\n    }\r\n    if (this.isUserLoggedIn() == false) {\r\n      this.backToLogin();\r\n      return false;\r\n    }\r\n    if (callback) {\r\n      callback();\r\n    }\r\n    return true;\r\n  }\r\n\r\n  protected sendWebSocket = (url: string, payload: WebRequest) => {\r\n    sendToWebsocket(url, payload);\r\n  }\r\n\r\n  protected setWsUpdateHandler = (handler: Function | undefined) => {\r\n    this.parentApp?.setWsUpdateHandler(handler);\r\n  }\r\n  protected resetWsUpdateHandler = () => {\r\n    this.parentApp?.resetWsUpdateHandler();\r\n  }\r\n\r\n  getApplicationProfile = (): ApplicationProfile => {\r\n    return this.props.applicationProfile;\r\n  }\r\n\r\n  handleInputChange = (event: any, stateFieldName?: string | undefined) => {\r\n    const target = event.target;\r\n    let value = target.type == 'checkbox' ? target.checked : target.value;\r\n    if (target.type == 'number') {\r\n      value = parseInt(value);\r\n    }\r\n    if (stateFieldName) {\r\n      const el = this.state[stateFieldName];\r\n      el[target.name] = value;\r\n      this.setState({ [stateFieldName]: el });\r\n    } else {\r\n      this.setState({ [target.name]: value });\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * \r\n   * @param {boolean} withProgress \r\n   */\r\n  startLoading(withProgress: boolean) {\r\n    this.parentApp?.startLoading(withProgress);\r\n  }\r\n\r\n  endLoading() {\r\n    this.parentApp?.endLoading();\r\n  }\r\n  /**\r\n   * api response must be instance of WebResponse\r\n   * @param method returning Promise\r\n   * @param withProgress \r\n   * @param successCallback \r\n   * @param errorCallback \r\n   * @param params \r\n   */\r\n  doAjax = (method: Function, withProgress: boolean, successCallback: Function, errorCallback?: Function, ...params: any) => {\r\n    this.startLoading(withProgress);\r\n\r\n    method(...params).then((response: WebResponse) => {\r\n      if (successCallback) {\r\n        successCallback(response);\r\n      }\r\n    }).catch((e) => {\r\n      if (errorCallback) {\r\n        errorCallback(e);\r\n      } else {\r\n        if (typeof (e) == 'string') {\r\n          alert(\"Operation Failed: \" + e);\r\n        }\r\n        alert(\"resource not found\");\r\n      }\r\n    }).finally(() => {\r\n      this.endLoading();\r\n    })\r\n  }\r\n\r\n  commonAjax = (method: Function, successCallback: Function, errorCallback: Function, ...params: any) => {\r\n    this.doAjax(method, false, successCallback, errorCallback, ...params);\r\n  }\r\n  commonAjaxWithProgress = (method: Function, successCallback: Function, errorCallback: Function, ...params: any) => {\r\n    this.doAjax(method, true, successCallback, errorCallback, ...params);\r\n  }\r\n  getLoggedUser = (): User | undefined => {\r\n    const user: User | undefined = this.props.loggedUser;\r\n    if (!user) return undefined;\r\n    user.password = \"^_^\";\r\n    return Object.assign(new User(), user);\r\n  }\r\n  isAdmin = (): boolean => {\r\n    const user = this.getLoggedUser();\r\n    if (!user) return false;\r\n    return user.hasRole(AuthorityType.ROLE_SUPERADMIN);\r\n  }\r\n  scrollTop = () => {\r\n    // console.info(\"SCROLL TOP\");\r\n    const opt: ScrollToOptions = { top: 0, behavior: 'smooth' };\r\n    doItLater(() => {\r\n      window.scrollTo(opt);\r\n    }, 100);\r\n  }\r\n  isUserLoggedIn = (): boolean => {\r\n    const loggedIn = true == this.props.loginStatus && null != this.props.loggedUser;\r\n    return loggedIn;\r\n  }\r\n  showConfirmation = (body: any): Promise<boolean> => {\r\n    const app = this;\r\n    return new Promise(function (resolve, reject) {\r\n      const onYes = function (e) {\r\n        resolve(true);\r\n      }\r\n      const onNo = function (e) {\r\n        resolve(false);\r\n      }\r\n      app.parentApp.showAlert(\"Konfirmasi\", body, false, onYes, onNo);\r\n    });\r\n\r\n  }\r\n  showConfirmationDanger = (body: any): Promise<any> => {\r\n    const app = this;\r\n    return new Promise(function (resolve, reject) {\r\n      const onYes = function (e) {\r\n        resolve(true);\r\n      }\r\n      const onNo = function (e) {\r\n        resolve(false);\r\n      }\r\n      app.parentApp.showAlertError(\"Konfirmasi\", body, false, onYes, onNo);\r\n    });\r\n\r\n  }\r\n  showInfo = (body: any) => {\r\n    this.parentApp.showAlert(\"Info\", body, true, function () { });\r\n  }\r\n  showError = (body: any) => {\r\n    this.parentApp.showAlertError(\"Error\", body, true, function () { });\r\n  }\r\n\r\n  backToLogin() {\r\n    if (!this.authenticated || this.props.history == null) {\r\n      return;\r\n    }\r\n    this.props.history.push(\"/login\");\r\n  }\r\n  refresh() {\r\n    this.setState({ updated: new Date() });\r\n  }\r\n  showCommonSuccessAlert = () => {\r\n    this.showInfo(\"Success\");\r\n  }\r\n  showCommonErrorAlert = (e: any) => {\r\n    console.error(e);\r\n\r\n    let message;\r\n    if (e.response && e.response.data) {\r\n      message = e.response.data.message;\r\n    } else {\r\n      message = e;\r\n    }\r\n    this.showError(\"Operasi Gagal: \" + message);\r\n  }\r\n  componentDidMount() {\r\n    if (this.validateLoginStatus()) {\r\n    }\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.authenticated == true && this.isUserLoggedIn() == false) {\r\n      console.debug(typeof this, \"BACK TO LOGIN\");\r\n      this.validateLoginStatus();\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  getServices = (): Services => {\r\n    return this.props.services;\r\n  }\r\n}","let index = 1;\r\nexport const uniqueId = function () {\r\n\tlet string = new String(new Date().getUTCMilliseconds()).toString();\r\n\tindex++;\r\n\treturn index + \"-\" + string;\r\n}\r\n\r\nexport function beautifyNominal(val:any) {\r\n\tif (val == \"\" || val == null) return \"0\";\r\n\tconst isDecimal:boolean = new String(val).includes(\".\");\r\n\tconst isNegative:boolean = new String(val).startsWith(\"-\");\r\n\tif (isNegative) {\r\n\t\tval = new String(val).replace(\"-\",\"\");\r\n\t}\r\n\tconst rawVal = isDecimal? parseInt( new String(val).split(\".\")[0]) : parseInt(val);\r\n\tlet nominal = Math.abs(rawVal).toString();\r\n\tlet result = \"\";\r\n\tif (nominal.length > 3) { \r\n\t\tlet zeroIndex: number = 0;\r\n\t\tfor (let i = nominal.length - 1; i > 0; i--) {\r\n\t\t\tzeroIndex++; \r\n\t\t\tresult = nominal[i] + result;\r\n\t\t\tif (zeroIndex == 3 ) {\r\n\t\t\t\tresult = \".\" + result;\r\n\t\t\t\tzeroIndex = 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tresult = nominal[0] + result;\r\n\t} else {\r\n\t\tresult = val;\r\n\t}\r\n\tif (rawVal < 0) {\r\n\t\treturn rawVal;\r\n\t}\r\n\tif (isDecimal) {\r\n\t\tresult+= \",\"+ new String(val).split(\".\")[1];\r\n\t}\r\n\tif (isNegative) {\r\n\t\tresult = \"-\"+result;\r\n\t}\r\n\treturn result;\r\n}\r\n \r\n\r\nconst months = [\r\n\t\"Januari\", \"Ferbuari\", \"Maret\", \"April\", \"Mei\", \"Juni\",\r\n\t\"Juli\", \"Agustus\", \"September\", \"Oktober\", \"November\", \"Desember\"\r\n]\r\n\r\nexport const monthName = (index:number) => {\r\n\treturn months[index];\r\n}\r\n\r\nexport const monthYearString = function (m, y) {\r\n\tif (m == null || y == null) {\r\n\t\treturn \"-\";\r\n\t}\r\n\treturn months[m - 1] + \" \" + y;\r\n}\r\nexport const twoDigits = (value:number) :string => {\r\n    if (value >= 10) {\r\n        return   value.toString();\r\n    }\r\n    return \"0\"+value;\r\n}","import BaseEntity from '../BaseEntity'; \nimport { uniqueId } from '../../utils/StringUtil';\nimport { AuthorityType } from '../AuthorityType';\nimport User from './../User';\n\nexport default class Menu extends BaseEntity{\n\tstatic defaultMenuIconClassName:string = \"fas fa-folder\";\n\n\tcode:string = uniqueId();\n\tname?:string;\n\tdescription?:string;\n\turl?:string;\n\tpathVariables?:string; \n\ticonUrl?:string;\n\tcolor?:string;\n\tfontColor?:string;\n\trole:AuthorityType[] = [];\n\n\t//\n\tactive?:boolean = false;\n\tmenuClass?:string = \"fas fa-folder\";\n\tauthenticated?:boolean = false;\n\tshowSidebar?:boolean  = false;\n\tsubMenus?:Menu[] = undefined;\n\n\tstatic getIconClassName = (menu:Menu) => {\n\t\tif (undefined == menu.menuClass) {\n\t\t\treturn Menu.defaultMenuIconClassName;\n\t\t}\n\t\treturn menu.menuClass;\n\t}\n\n\tuserAuthorized? = (user?:User) : boolean => {\n\t\tif (this.role.length == 0) return true;\n\t\tif (!user) return false;\n\t\tuser = User.clone(user);\n\t\tfor (let i = 0; i < this.role.length; i++) {\n\t\t\tconst element = this.role[i];\n\t\t\tif (user.hasRole(element)){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n","\r\nimport { AuthorityType } from '../models/AuthorityType';\r\nimport Menu from '../models/settings/Menu';\r\n \r\n\r\nexport const getMenus = () => {\r\n    let menuSet: Menu[] = [];\r\n    for (let i = 0; i < _menus.length; i++) {\r\n        const element: Menu = _menus[i];\r\n        const menu:Menu = Object.assign(new Menu, element);\r\n        const subMenus:Menu[] = [];\r\n        if (element.subMenus) {\r\n            for (let i = 0; i < element.subMenus.length; i++) {\r\n                const subMenu = element.subMenus[i];\r\n                subMenus.push(Object.assign(new Menu, subMenu));\r\n            }\r\n            menu.subMenus = subMenus;\r\n        }\r\n        menuSet.push(menu);\r\n    }\r\n    \r\n    return menuSet;\r\n}\r\nexport const extractMenuPath = (pathName: string) => {\r\n    const pathRaw = pathName.split('/');\r\n   \r\n    let firstPath = pathRaw[0];\r\n    if (firstPath.trim() == \"\") {\r\n        firstPath = pathRaw[1];\r\n    }\r\n    return firstPath;\r\n}\r\nexport const getMenuByMenuPath = (pathName: string): Menu | null => {\r\n    const menus = getMenus();\r\n    try {\r\n        for (let i = 0; i < menus.length; i++) {\r\n            const menu: Menu = menus[i];\r\n            if (menu.url == \"/\" + pathName) {\r\n                return menu;\r\n            }\r\n        }\r\n        return null;\r\n    } catch (error) {\r\n        return null;\r\n    }\r\n}\r\n\r\nconst _menus: Menu[] = [\r\n    {\r\n        code: 'home',\r\n        name: \"Home\",\r\n        url: \"/home\",\r\n        menuClass: \"fa fa-home\",\r\n        active: false,\r\n        authenticated: false,\r\n        showSidebar: false,\r\n        role : []\r\n    },\r\n    \r\n    {\r\n        code: 'dashboard',\r\n        name: \"Dashboard\",\r\n        url: \"/dashboard\",\r\n        menuClass: \"fas fa-tachometer-alt\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true,\r\n        role: [AuthorityType.ROLE_SUPERADMIN, AuthorityType.ROLE_ASRAMA_MUSYRIF],\r\n        subMenus: [\r\n            {\r\n                code: 'followup',\r\n                name: 'Follow Up',\r\n                url: 'followup',\r\n                menuClass: 'fas fa-history',\r\n                role: [ AuthorityType.ROLE_ASRAMA_MUSYRIF],\r\n            },\r\n            // {\r\n            //     code: 'dashboard_productsales',\r\n            //     name: 'Product Sales',\r\n            //     url: 'productsales',\r\n            //     menuClass: 'fas fa-chart-line',\r\n            //     role: [],\r\n            // }\r\n        ]\r\n    }, \r\n    {\r\n        code: 'management',\r\n        name: \"Manajemen\",\r\n        url: \"/management\",\r\n        menuClass: \"fas fa-mail-bulk\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true,\r\n        role: [AuthorityType.ROLE_SUPERADMIN, AuthorityType.ROLE_ASRAMA_MUSYRIF],\r\n        subMenus: [\r\n            {\r\n                code: 'musyrifmanagement',\r\n                name: 'Musyrif',\r\n                url: 'musyrifmanagement',\r\n                menuClass: 'fas fa-users',\r\n                role: [AuthorityType.ROLE_SUPERADMIN],\r\n            },\r\n            {\r\n                code: 'rule_category',\r\n                name: 'Kategori Pelanggaran',\r\n                url: 'rule_category',\r\n                menuClass: 'fas fa-tags',\r\n                role: [AuthorityType.ROLE_SUPERADMIN],\r\n            },\r\n            {\r\n                code: 'rule_point',\r\n                name: 'Poin Pelanggaran',\r\n                url: 'rule_point',\r\n                menuClass: 'fas fa-puzzle-piece',\r\n                role: [AuthorityType.ROLE_SUPERADMIN],\r\n            }, \r\n            {\r\n                code: 'warning_action',\r\n                name: 'Peringatan',\r\n                url: 'warning_action',\r\n                menuClass: 'fas fa-exclamation-triangle',\r\n                role: [AuthorityType.ROLE_SUPERADMIN, AuthorityType.ROLE_ASRAMA_MUSYRIF],\r\n            }, \r\n            {\r\n                code: 'category_predicate',\r\n                name: 'Predikat Rapor',\r\n                url: 'category_predicate',\r\n                menuClass: 'far fa-flag',\r\n                role: [AuthorityType.ROLE_SUPERADMIN, ],\r\n            }, \r\n            {\r\n                code: 'rule_violation',\r\n                name: 'Pelanggaran Umum',\r\n                url: 'rule_violation',\r\n                menuClass: 'fas fa-times-circle',\r\n                role: [AuthorityType.ROLE_ASRAMA_MUSYRIF, ],\r\n            }, \r\n        ]\r\n    }, \r\n    {\r\n        code: 'asrama',\r\n        name: \"Asrama\",\r\n        url: \"/asrama\",\r\n        menuClass: \"fas fa-school\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true,\r\n        role: [  AuthorityType.ROLE_ASRAMA_MUSYRIF, AuthorityType.ROLE_SUPERADMIN],\r\n        subMenus: [\r\n            {\r\n                code: 'studentlist',\r\n                name: 'Siswa',\r\n                url: 'studentlist',\r\n                menuClass: 'fas fa-users',\r\n                role: [ AuthorityType.ROLE_ASRAMA_MUSYRIF],\r\n            },\r\n            {\r\n                code: 'input_point',\r\n                name: 'Form Pelanggaran Tipe 1',\r\n                url: 'inputpoint',\r\n                menuClass: 'fas fa-edit',\r\n                role: [ AuthorityType.ROLE_ASRAMA_MUSYRIF],\r\n            }, \r\n            {\r\n                code: 'pointrecordedit',\r\n                name: 'Form Pelanggaran Tipe 2',\r\n                url: 'pointrecordedit',\r\n                menuClass: 'fas fa-edit',\r\n                role: [ AuthorityType.ROLE_ASRAMA_MUSYRIF],\r\n            },\r\n            // {\r\n            //     code: 'medicalrecord',\r\n            //     name: 'Medical Record',\r\n            //     url: 'medicalrecord',\r\n            //     menuClass: 'fas fa-briefcase-medical',\r\n            //     role: [ AuthorityType.musyrif_asrama],\r\n            // },\r\n            {\r\n                code: 'pointsummary',\r\n                name: 'Rekap Pelanggaran',\r\n                url: 'pointsummary',\r\n                menuClass: 'fas fa-clipboard',\r\n                role: [ AuthorityType.ROLE_ASRAMA_MUSYRIF, AuthorityType.ROLE_SUPERADMIN],\r\n            },\r\n           \r\n            \r\n        ]\r\n    }, \r\n    {\r\n        code: 'report',\r\n        name: \"Laporan\",\r\n        url: \"/report\",\r\n        menuClass: \"fas fa-file\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true,\r\n        role: [  AuthorityType.ROLE_ASRAMA_MUSYRIF, AuthorityType.ROLE_SUPERADMIN],\r\n        subMenus: [\r\n            {\r\n                code: 'studentreport',\r\n                name: 'Rapor',\r\n                url: 'studentreport',\r\n                menuClass: 'fas fa-file',\r\n                role: [ AuthorityType.ROLE_ASRAMA_MUSYRIF, AuthorityType.ROLE_SUPERADMIN],\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        code: 'settings',\r\n        name: \"Setting\",\r\n        url: \"/settings\",\r\n        menuClass: \"fas fa-cogs\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true,\r\n        role: [  AuthorityType.ROLE_SUPERADMIN],\r\n        subMenus: [\r\n            {\r\n                code: 'config',\r\n                name: 'Konfigurasi',\r\n                url: 'config',\r\n                menuClass: 'fas fa-cog',\r\n                role: [ AuthorityType.ROLE_SUPERADMIN],\r\n            },\r\n        ]\r\n    }\r\n    \r\n];\r\n","\r\nimport React, { useRef, Fragment } from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../constant/stores';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { performLogout } from './../../redux/actionCreators';\r\nimport { getMenus } from '../../constant/Menus';\r\nimport './Header.css';\r\nimport User from './../../models/User';\r\nimport { baseImageUrl } from './../../constant/Url';\r\nimport Menu from './../../models/settings/Menu';\r\nimport ApplicationProfile from './../../models/ApplicationProfile';\r\nclass IState {\r\n  showNavLinks: boolean = false;\r\n}\r\nclass Header extends BaseComponent {\r\n  state: IState = new IState();\r\n  buttonToggleNavRef: React.RefObject<HTMLButtonElement> = React.createRef();\r\n  constructor(props: any) {\r\n    super(props, false);\r\n  }\r\n  toggleNavLinks = () => {\r\n    this.setState({ showNavLinks: !this.state.showNavLinks });\r\n  }\r\n  onLogout = (e: any) => {\r\n    const app = this;\r\n    app.showConfirmation(\"Logout?\").then(\r\n      function (ok) {\r\n        if (ok) {\r\n          app.props.performLogout(app.parentApp);\r\n        }\r\n      }\r\n    )\r\n  }\r\n  setMenu = (menu: Menu) => {\r\n    if (this.state.showNavLinks && this.buttonToggleNavRef.current) {\r\n      this.buttonToggleNavRef.current.click();\r\n    }\r\n    this.props.setMenu(menu);\r\n\r\n  }\r\n  render() {\r\n    const showNavLinks: boolean = this.state.showNavLinks;\r\n    const menus = getMenus();\r\n    const user = this.getLoggedUser();\r\n    const profile = this.getApplicationProfile();\r\n    const { appName } = profile;\r\n    return (\r\n      <div className=\"bg-dark container-fluid\" style={{ position: 'fixed', zIndex: 55, padding: 0, margin: 0 }}>\r\n        <NavBarTop profile={profile} />\r\n        <nav id=\"navbar\" className=\"w-100 navbar navbar-expand-lg navbar-dark bg-dark\">\r\n          <a id=\"navbar-brand\" className=\"navbar-brand\" href=\"#\">\r\n            {appName} | Semester: {profile.semester} {profile.year}\r\n          </a>\r\n          <button\r\n            ref={this.buttonToggleNavRef}\r\n            onClick={this.toggleNavLinks}\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarToggler\"\r\n            aria-controls=\"navbarToggler\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <i className={showNavLinks ? \"fas fa-times\" : \"fas fa-bars\"} />\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarToggler\">\r\n            <ul id=\"navbar-top\" className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n              {menus.map(menu => {\r\n                if (menu == null || (menu.authenticated && !user)) return null;\r\n                if (menu.userAuthorized && menu.userAuthorized(user) == false) return null;\r\n                const isActive = this.props.activeMenuCode == menu.code;\r\n                return (\r\n                  <li key={\"header-menu-\" + new String(menu.code)} className={\"nav-item \" + (isActive ? \"active nav-active\" : \"nav-inactive\")}>\r\n                    <Link onClick={() => this.setMenu(menu)} className={\"nav-link  \"}\r\n                      to={menu.url}><span>{menu.name}</span>\r\n                    </Link></li>\r\n                )\r\n              })}\r\n            </ul >\r\n            <form className=\"form-inline my-2 my-lg-0\">\r\n              <UserIcon setMenuNull={this.props.setMenuNull}\r\n                onLogout={this.onLogout} user={user} />\r\n            </form >\r\n          </div >\r\n        </nav >\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\nconst NavBarTop = (props: { profile: ApplicationProfile }) => {\r\n  const { profile } = props;\r\n  return (\r\n    <div id=\"navbar-brand-top\" style={{ paddingLeft: '0.5rem' }} className=\"container-fluid\">\r\n      <a style={{ fontSize: '15px' }} className=\"text-white navbar-brand\" href=\"#\">\r\n        <strong>{profile.appName} | Semester {profile.semester} {profile.year}</strong>\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\nconst UserIcon = (props: { user: User | undefined, setMenuNull(): any, onLogout(e): any }) => {\r\n  if (props.user) {\r\n    return (\r\n      <Fragment>\r\n        <Link onClick={props.setMenuNull} style={{ marginRight: \"5px\" }} className=\"btn btn-light btn-sm my-2 my-sm-0\"\r\n          to='/settings/user-profile'>\r\n          <i className=\"fas fa-user-circle\" />\r\n          &nbsp;{props.user.displayName}\r\n        </Link>\r\n        <a style={{ marginRight: '5px' }} className=\"btn btn-danger btn-sm  my-2 my-sm-0\"\r\n          onClick={props.onLogout}><i className=\"fas fa-sign-out-alt\"></i>&nbsp;Logout\r\n        </a>\r\n      </Fragment>);\r\n  }\r\n  return (\r\n\r\n    <Link style={{ marginRight: '5px' }} onClick={props.setMenuNull} className=\"btn btn-sm btn-info my-2 my-sm-0\"\r\n      to='/login'> <i className=\"fas fa-sign-in-alt\"></i>&nbsp;Login\r\n    </Link>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n  performLogout: (app: any) => dispatch(performLogout(app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n  mapCommonUserStateToProps,\r\n  mapDispatchToProps\r\n)(Header))","\r\nimport React, { Component } from 'react';\r\nimport './Spinner.css';\r\nexport default class Spinner extends Component<any, any>{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const innerDivs:JSX.Element[] = new Array<JSX.Element>();\r\n        for (let i = 0; i <= 11; i++) {\r\n            innerDivs.push(<div key={\"spinner-item-\"+i}></div>);\r\n        }\r\n        return (\r\n            <div style={{width:'85px', height:'85px', display:'block'}} className=\"container-fluid text-center\" >\r\n                 <div style={{visibility:this.props.show == false?'hidden':'visible'}} className=\"lds-spinner\">\r\n                  {innerDivs}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","\r\n\r\nimport React, { ChangeEvent, FormEvent, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { performLogin } from '../../../redux/actionCreators';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport Spinner from './../../loader/Spinner';\r\nimport './Login.css';\r\nclass IState {\r\n  loading: boolean = false; email: string = \"\"; editPassword: string = \"\";\r\n}\r\nclass Login extends BaseComponent {\r\n  state: IState = new IState();\r\n  constructor(props: any) {\r\n    super(props, false);\r\n  }\r\n  startLoading = () => this.setState({ loading: true });\r\n  endLoading = () => this.setState({ loading: false });\r\n  login(e: FormEvent) {\r\n    e.preventDefault();\r\n    this.props.performLogin(this.state.email, this.state.editPassword, this);\r\n  }\r\n  componentDidMount() {\r\n    document.title = \"Login\";\r\n    if (this.isUserLoggedIn()) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n  componentDidUpdate() {\r\n\r\n    if (this.isUserLoggedIn()) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n  updateCredentialProperty = (e: ChangeEvent) => {\r\n    const target = e.target as HTMLInputElement;\r\n    const name: string | null = target.getAttribute(\"name\");\r\n    if (null == name) return;\r\n    this.setState({ [name]: target.value });\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"Login\" className=\"mt-4\" >\r\n        <form name='login' onSubmit={(e) => { this.login(e) }} className=\"form-signin\">\r\n          <div className=\"text-center\">\r\n            <h2><i className=\"fas fa-user-circle\"></i></h2>\r\n            <h1 className=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\r\n          </div>\r\n          <EmailField value={this.state.email} onChange={this.updateCredentialProperty} />\r\n          <PasswordField value={this.state.editPassword} onChange={this.updateCredentialProperty} />\r\n          {\r\n            this.state.loading ? \r\n            <Spinner /> :\r\n            <Fragment>\r\n              <button className=\"btn text-light\" style={{ marginRight: '5px', backgroundColor: 'rgb(9,26,78)' }} type=\"submit\">\r\n                Sign in\r\n              </button>\r\n            </Fragment>\r\n          }\r\n          <input name=\"transport_type\" type=\"hidden\" value=\"rest\" />\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\nconst PasswordField = ({ value, onChange }) => {\r\n  return <Fragment>\r\n    <label className=\"sr-only\">Password</label>\r\n    <input name=\"editPassword\" value={value} onChange={onChange} type=\"password\" id=\"inputPassword\" className=\"form-control\"\r\n      placeholder=\"Password\" required />\r\n  </Fragment>\r\n}\r\nconst EmailField = ({ value, onChange }) => {\r\n  return (<Fragment>\r\n    <label className=\"sr-only\">Email</label>\r\n    <input name=\"email\" value={value} onChange={onChange} type=\"text\" className=\"form-control\"\r\n      placeholder=\"Email\" required autoFocus />\r\n  </Fragment>)\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n  performLogin: (username: string, password: string, app: any) => dispatch(performLogin(username, password, app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n  mapCommonUserStateToProps,\r\n  mapDispatchToProps\r\n)(Login))","\nimport BaseComponent from './../BaseComponent';\nexport default class BasePage extends BaseComponent{\n    constructor(props, protected title:string | undefined|null= undefined, authenticated:boolean = false) {\n        super(props, authenticated);\n        if (title !== undefined && title !== null) {\n            document.title = title;\n        } else {\n            document.title = \"Asrama KIIS\";\n        }\n    }\n\n    componentDidMount() {\n        this.validateLoginStatus(()=>{\n            this.scrollTop();\n            this.componentReady();\n        })\n    }\n\n    protected componentReady() {\n\n    }\n    // componentWillUnmount() {\n    //     document.title = \"Asrama KIIS\";\n    // }\n}","export default class AttachmentInfo {\r\n    setUrl(arg0: string) {\r\n        this.url = arg0;\r\n        this.data = arg0.split(\",\")[1];\r\n    }\r\n    static nameOnly(name: any): AttachmentInfo {\r\n        const info = new AttachmentInfo();\r\n        info.name = name;\r\n        return info;\r\n    }\r\n    static instance(name: any, url:string): AttachmentInfo {\r\n        const info = new AttachmentInfo();\r\n        info.name = name;\r\n        info.url = url;\r\n        return info;\r\n    }\r\n    constructor(public file?: File) {\r\n\r\n    }\r\n    name: string = \"\";\r\n    blob: Blob = new Blob();\r\n    url: string = \"\";\r\n    data: string = \"\";\r\n}","import AttachmentInfo from '../models/settings/AttachmentInfo';\r\n \r\n  \r\nexport const getAttachmentInfoFromFile = (fileInput:HTMLInputElement): Promise<AttachmentInfo> => {\r\n    return new Promise<AttachmentInfo>((resolve, reject) =>{\r\n        if (null == fileInput.files || !fileInput.files[0]) {\r\n            reject(new Error(\"No file\"));\r\n            return;\r\n        }\r\n        try { \r\n            const file = fileInput.files[0]; \r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            console.debug(\"fileInput.files[0]: \", file);\r\n            reader.onload = function () { \r\n                const info = new AttachmentInfo(file);\r\n                info.setUrl(new String(reader.result).toString());\r\n                // info.\r\n                info.name = file.name;\r\n                resolve(info);\r\n             }\r\n            reader.onerror = function (error) {\r\n                reject(error);\r\n            }\r\n        } catch (e) {\r\n            reject(e);\r\n        }\r\n    });\r\n\r\n}\r\n \r\n\r\n/**\r\n * \r\n * @param {Number} totalButton \r\n * @param {Number} currentPage \r\n */\r\nexport const createNavButtons = (totalButton, currentPage) => {\r\n    totalButton = Math.ceil(totalButton);\r\n    if (!currentPage) { currentPage = 0 }\r\n    let buttonData = new Array();\r\n    let min = currentPage - 3 < 0 ? 0 : currentPage - 3;\r\n    let max = currentPage + 3 > totalButton ? totalButton : currentPage + 3;\r\n\r\n    if (min != 0) {\r\n        buttonData.push({\r\n            text: 1,\r\n            value: 0\r\n        });\r\n    }\r\n\r\n    for (let index = min; index < max; index++) {\r\n        buttonData.push({\r\n            text: index + 1,\r\n            value: index\r\n        });\r\n    }\r\n\r\n    if (max != totalButton) {\r\n        buttonData.push({\r\n            text: totalButton,\r\n            value: totalButton - 1\r\n        });\r\n    }\r\n\r\n\r\n    return buttonData;\r\n}\r\n\r\n ","\r\n\r\nimport React, { ChangeEvent, FormEvent } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../../constant/stores'; \r\nimport User from './../../../../models/User';\r\nimport BasePage from './../../BasePage';\r\nimport AttachmentInfo from './../../../../models/settings/AttachmentInfo';\r\nimport { getAttachmentInfoFromFile } from './../../../../utils/ComponentUtil';\r\nimport StudentService from './../../../../services/StudentService';\r\nimport { AuthorityType } from '../../../../models/AuthorityType';\r\n\r\nclass State {\r\n    attachment:AttachmentInfo | undefined;\r\n}\r\nclass DashboardMain extends BasePage {\r\n    state:State = new State();\r\n    studentService:StudentService;\r\n    constructor(props: any) {\r\n        super(props, \"Dashboard\", true);\r\n        this.studentService = this.getServices().studentService;\r\n    }\r\n\r\n    addPointRecord = (e:FormEvent) => {\r\n        e.preventDefault();\r\n        if (!this.state.attachment) return;\r\n        \r\n        this.props.history.push({\r\n            pathname: '/asrama/pointrecordedit',\r\n              state: {attachment: this.state.attachment }\r\n         })\r\n    }\r\n    updateImage = (e:ChangeEvent) => {\r\n        getAttachmentInfoFromFile(e.target as HTMLInputElement) \r\n            .then(attachment=>{\r\n                this.setState({attachment:attachment});\r\n            }).catch(console.error)\r\n    }\r\n    render() {\r\n        const user: User | undefined = this.getLoggedUser();\r\n        if (!user) return null;\r\n        return (\r\n            <div  className=\" section-body container-fluid\">\r\n                <h2>Dashboard</h2>\r\n                <div className=\"alert alert-info\">\r\n                    Welcome, <strong>{user.fullName}  </strong>\r\n                    <hr/>\r\n                    {/* <p className=\"badge badge-dark text-capitalize\">{(user.roles).join(\", \")}</p> */}\r\n                   \r\n                </div>\r\n                { !this.getLoggedUser()?.hasRole(AuthorityType.ROLE_ASRAMA_MUSYRIF) ? null :\r\n                    <form className=\"mt-10 text-center\" onSubmit={this.addPointRecord}>\r\n                        <h1><i className=\"fas fa-camera\" /></h1>\r\n                        <h3> Input Pelanggaran</h3>\r\n                        <input onChange={this.updateImage} type=\"file\" accept=\"image/*\" className=\"form-control mt-3\" />\r\n                        <p/>\r\n                        {this.state.attachment?\r\n                        <div>\r\n                            <input type=\"submit\" className=\"btn btn-dark btn-large\" value=\"Selanjutnya\" />\r\n                            <img className=\"w-100 mt-5\" src={this.state.attachment.url}/>\r\n                            \r\n                        </div>\r\n                        : null}\r\n                    </form>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps\r\n)(DashboardMain))","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from '../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport ApplicationProfile from '../../../models/ApplicationProfile';\r\nimport { baseImageUrl } from '../../../constant/Url';\r\n\r\nclass HomeMain extends BaseComponent {\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Home\";\r\n    }\r\n    render() {\r\n        const applicationProfile: ApplicationProfile = this.getApplicationProfile();\r\n        const imageUrl = baseImageUrl() + applicationProfile.backgroundUrl;\r\n        return (\r\n            <div className=\"section-body container-fluid\" style={{padding:0}}>\r\n                <div className=\"jumbotron\"\r\n                    style={{\r\n                        margin:'0px',\r\n                        marginTop: '20px',\r\n                        backgroundImage: 'url(\"' + imageUrl + '\")',\r\n                        backgroundSize: 'cover',\r\n                        color: applicationProfile.fontColor??\"rgb(0,0,0)\"\r\n                    }}\r\n                >\r\n                    <h1 className=\"display-4\">{applicationProfile.appName}</h1>\r\n                    <p className=\"lead\">{applicationProfile.appDescription}</p>\r\n                    <hr className=\"my-4\" />\r\n                    <p>{applicationProfile.welcoming_message}</p>\r\n                    <Link className=\"btn btn-primary btn-lg\" to=\"/about\" role=\"button\">About Us</Link>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n} \r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps, \r\n)(HomeMain))","\r\nimport BaseEntity from './BaseEntity';\r\nimport User from './User';\r\nexport default class Employee extends BaseEntity {\r\n    user?: User;\r\n    nisdm?: string;\r\n}","import React from 'react'\r\nimport { uniqueId } from './StringUtil';\r\nexport const tableHeader = (...values:string[]) => {\r\n   \r\n    return (<thead>\r\n        <tr>\r\n            {values.map((value)=>{\r\n\r\n                return <th key={uniqueId()}>{value}</th>\r\n            })}\r\n        </tr>\r\n    </thead>)\r\n}\r\nexport const groupArray = function (array, division) {\r\n    if (null == array || array.length == 0) { return [] }\r\n    const groupedArray = new Array();\r\n    const itemPerDivision = Math.ceil(array.length / division)\r\n\r\n    if (itemPerDivision == 1) {\r\n        groupedArray.push(array);\r\n        return groupedArray;\r\n    }\r\n\r\n    for (let i = 0; i < division; i++) {\r\n        groupedArray.push(new Array());\r\n    }\r\n\r\n    let index = 1;\r\n    let divisionIndex = 0;\r\n    for (let i = 0; i < array.length; i++) {\r\n        const element = array[i];\r\n        groupedArray[divisionIndex].push(element);\r\n\r\n        index++;\r\n        if (index > itemPerDivision) {\r\n            divisionIndex++;\r\n            index = 1;\r\n        }\r\n    }\r\n\r\n    return groupedArray;\r\n}\r\n","import { join } from \"path\";\r\nimport { twoDigits } from './StringUtil';\r\n\r\nexport const MONTHS = [\r\n    \"Januari\",\r\n    \"Februari\",\r\n    \"Maret\",\r\n    \"April\",\r\n    \"Mei\",\r\n    \"Juni\",\r\n    \"Juli\",\r\n    \"Agustus\",\r\n    \"September\",\r\n    \"Oktober\",\r\n    \"November\",\r\n    \"Desember\"\r\n]\r\n\r\nconst leapMonths = [ 31, (  29  ), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\r\nconst regularMonths = [ 31, (  28  ), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\r\n/**\r\n * \r\n * @param {Number} month starts at 0\r\n */\r\nexport const getMonthDays = (month:number, year:number = new Date().getFullYear()) : number=> {\r\n    if(year % 4 == 0){\r\n        return leapMonths[month];\r\n    }\r\n    return regularMonths[month];\r\n}\r\n\r\nexport const getInputReadableDate = (date:Date) :string => {\r\n    const year = date.getFullYear();\r\n\r\n    const arr = [year, twoDigits(date.getMonth()+1), twoDigits(date.getDate())];\r\n    return arr.join(\"-\");\r\n}\r\nexport function addDays(date:Date, days:number) :Date{\r\n    const result:Date = new Date(date);\r\n    result.setDate(result.getDate() + days);\r\n    return result;\r\n  }\r\n  export const getDiffDays = (a:Date, b:Date) : number => {\r\n    // Discard the time and time-zone information.\r\n\r\n    console.debug(\"DIFF DATE \",a,\" vs \", b);\r\n    const _MS_PER_DAY = 1000 * 60 * 60 * 24;\r\n    const utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());\r\n    const utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate()); \r\n    return Math.floor((utc2 - utc1) / _MS_PER_DAY);\r\n}\r\n\r\nexport const parseDate = (s:string) :Date => {\r\n    var b:string[] = s.split(/\\D/);\r\n    var m = parseInt(b[1]);\r\n    return new Date(parseInt(b[0]), --m, parseInt(b[2]));\r\n  }\r\nexport const timerString = (inputSeconds:number ) => {\r\n    let hour = 0;\r\n    let minutes:number = 0;\r\n    let seconds = 0;\r\n    let totalSeconds = inputSeconds;\r\n    if (totalSeconds >= 3600) {\r\n        hour = totalSeconds/ 3600;\r\n        totalSeconds = totalSeconds % 3600;\r\n    }\r\n    if (totalSeconds >= 60) {\r\n        minutes = totalSeconds/60;\r\n        totalSeconds = totalSeconds%60;\r\n    }\r\n    seconds = totalSeconds; \r\n\r\n    return  twoDigits(hour)+\":\"+twoDigits(Math.floor(minutes))+\":\"+twoDigits(seconds);\r\n}\r\n\r\n\r\n\r\n","\nimport { ChangeEvent } from 'react';\nimport { getInputReadableDate } from './../../utils/DateUtil';\nexport default class Filter {\n  static resetFieldsFilter = (f: Filter): Filter => {\n    for (const key in f.fieldsFilter) {\n      if (key.endsWith('=d')) {\n        f.fieldsFilter[key] = getInputReadableDate(new Date());\n      } else {\n        f.fieldsFilter[key] = '';\n      }\n    }\n    return f;\n  }\n  static withLimit = (arg0: number): Filter => {\n    const f = new Filter();\n    f.limit = arg0;\n    return f;\n  }\n  limit?: number = 5;\n  page?: number = 0;\n  orderType?: string;\n  orderBy?: string;\n  contains?: boolean;\n  exacts?: boolean;\n  module?: string;\n  fieldsFilter: Record<string, any> = {};\n  maxValue?: number;\n  availabilityCheck?: boolean;\n\n\n  public static queryString = (filter?: Filter) => {\n    if (!filter) return '';\n    let q: string[] = [];\n    if (filter.page && filter.page >= 0) {\n      q.push(`page=${filter.page}`);\n    }\n    if (filter.limit && filter.limit >= 0) {\n      q.push(`limit=${filter.limit}`);\n    }\n    if (filter.orderBy) {\n      q.push(`order=${filter.orderBy}`);\n    }\n    if (filter.orderType && (filter.orderType === 'asc' || filter.orderType === 'desc')) {\n      q.push(`orderDesc=${filter.orderType === 'desc' ? 'true' : 'false'}`);\n    }\n    if (filter.fieldsFilter)\n      for (const key in filter.fieldsFilter) {\n        if (Object.prototype.hasOwnProperty.call(filter.fieldsFilter, key)) {\n          const element = filter.fieldsFilter[key];\n          q.push(`filter=${encodeURIComponent(key)}:${encodeURIComponent(element)}`);\n        }\n      }\n    return '?' + q.join('&');\n  }\n  public static updatePeriodFilter = (filter: Filter, e: ChangeEvent<HTMLInputElement | HTMLSelectElement>, field: 'time<=d' | 'time>=d') => {\n    const val = parseInt(e.target.value);\n    if (isNaN(val)) {\n      return;\n    }\n    const periodFilter = new Date(filter.fieldsFilter[field]);\n    switch (e.target.name) {\n      case 'day':\n        periodFilter.setDate(val);\n        break;\n      case 'month':\n        periodFilter.setMonth(val);\n        break;\n      case 'year':\n        periodFilter.setFullYear(val);\n        break;\n      default:\n        return;\n    }\n    filter.fieldsFilter[field] = getInputReadableDate(periodFilter);\n  }\n}\n","\r\nimport React, { Component } from 'react';\r\ninterface Props {\r\n    orientation?:string,\r\n    show?:boolean,\r\n    children:any,\r\n    label?:any,\r\n    className?:string,\r\n}\r\nexport default class FormGroup extends Component<Props, any>\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        if (false == this.props.show) return null;\r\n        const orientation = this.props.orientation == 'vertical' ? 'vertical' : 'horizontal';\r\n        return (\r\n            <div className={`form-group ${this.props.className} ` + (orientation == 'vertical' ? '' : 'row')}>\r\n                <label className={(orientation == 'vertical' ? '' : 'col-sm-3')}><strong>{this.props.label ? this.props.label : null}</strong></label>\r\n                <div className={(orientation == 'vertical' ? '' : 'col-sm-9')}>\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nimport { uniqueId } from './../../utils/StringUtil';\r\ninterface IProps {\r\n    limit: number,\r\n    totalData: number,\r\n    activePage: number,\r\n    onClick: any\r\n}\r\nexport default class NavigationButtons extends Component<IProps, any> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        const buttonIndexes = generateButtonValues(this.props.limit, this.props.totalData, this.props.activePage);\r\n        if (buttonIndexes.length == 0) { return null }\r\n        const lastIndex = buttonIndexes[buttonIndexes.length - 1];\r\n        const nextPage = this.props.activePage + 1 >= lastIndex  ? 0 : this.props.activePage + 1;\r\n        const previusPage = this.props.activePage - 1 < 0? lastIndex-1 : this.props.activePage - 1;\r\n        return (<div>\r\n            <nav aria-label=\"Page navigation example\">\r\n                <ul className=\"pagination\">\r\n                    <li className=\"page-item\"><a className=\"page-link\" onClick={(e) => this.props.onClick(previusPage)}>Previous</a></li>\r\n                    {buttonIndexes.map((page, i) => {\r\n                        return <li key={\"NAV-\"+uniqueId()} className={\"page-item \"+(page-1 == this.props.activePage?\"active\":\"\")}><a className=\"page-link \" onClick={(e) => this.props.onClick(page - 1)} >{page}</a></li>\r\n                    })}\r\n                    <li className=\"page-item\"><a className=\"page-link\" onClick={(e) => this.props.onClick(nextPage)}>Next</a></li>\r\n                </ul>\r\n            </nav>\r\n        </div>)\r\n    }\r\n}\r\n\r\nconst generateButtonValues = (limit: number, totalData: number, currentPage: number) => {\r\n\r\n    /* DISPLAYED BUTTONS */\r\n    const displayed_buttons: number[] = [];\r\n    const buttonCount = Math.ceil(totalData / limit);\r\n\r\n    // console.debug(\"current page:\", currentPage);\r\n    const min = (currentPage) - 1;\r\n    const max = (currentPage) + 3;\r\n    // const min = (currentPage) - 2;\r\n    // const max = (currentPage) + 2;\r\n\r\n    // console.debug(\"min\", min, \"current page:\", currentPage, \"max\", max);\r\n    if (buttonCount > 1) {\r\n        displayed_buttons.push(1);\r\n    }\r\n    for (let i = min; i <= max; i++) {\r\n        if (i > 1 && i <= buttonCount) {\r\n            (displayed_buttons.push(i));\r\n        }\r\n    }\r\n    if (max < buttonCount) {\r\n        displayed_buttons.push(buttonCount);\r\n    }\r\n    return displayed_buttons;\r\n}\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\ninterface IProps{\r\n    show?:boolean, attributes?:any, iconClassName?:string, to?:string, className?:string,\r\n    style?:any, onClick?(e:any):any, children?:any\r\n}\r\nexport default class AnchorWithIcon extends Component<IProps, any>\r\n{\r\n    constructor(props: any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        if (this.props.show == false) return null;\r\n        const btnClassName = this.props.className ?? \"btn btn-outline-secondary\";\r\n        if (this.props.to) {\r\n            return <Link {...this.props.attributes} to={this.props.to} style={this.props.style} onClick={this.props.onClick} className={btnClassName} >\r\n                {this.props.iconClassName ?\r\n                    <span style={{ marginRight: this.props.children?'5px':'0px' }}><i className={this.props.iconClassName} /></span>\r\n                    :\r\n                    null}\r\n                {this.props.children}\r\n            </Link>\r\n        }\r\n        return (\r\n            <a {...this.props.attributes} tyle={this.props.style} onClick={this.props.onClick} className={btnClassName} >\r\n                {this.props.iconClassName ?\r\n                    <span style={{ marginRight: this.props.children?'5px':'0px' }}><i className={this.props.iconClassName} /></span>\r\n                    :\r\n                    null}\r\n                {this.props.children}\r\n            </a>\r\n        )\r\n    }\r\n}","\r\nimport BaseComponent from './../../BaseComponent';\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport Employee from './../../../models/Employee';\r\nimport { AuthorityType } from '../../../models/AuthorityType';\r\nimport MusyrifManagementService from './../../../services/MusyrifManagementService';\r\nimport ToggleButton from './../../navigation/ToggleButton';\r\nimport WebResponse from '../../../models/commons/WebResponse';\r\nimport AnchorWithIcon from './../../navigation/AnchorWithIcon';\r\nclass EmployeeRow extends BaseComponent {\r\n    musyrifManagementService: MusyrifManagementService;\r\n    constructor(props) {\r\n        super(props, true);\r\n        this.musyrifManagementService = this.getServices().musyrifManagementService;\r\n    }\r\n\r\n    getEmployee = (): Employee => {\r\n        return this.props.employee;\r\n    }\r\n    activeStatusUpdate = (response: WebResponse) => {\r\n        // this.showInfo(\"Success\");\r\n        if (this.props.onUpdated) {\r\n            this.props.onUpdated();\r\n        }\r\n    }\r\n    activateMusyrif = (active: boolean) => {\r\n        const emp = this.getEmployee();\r\n        this.commonAjax(\r\n            this.musyrifManagementService.activate,\r\n            this.activeStatusUpdate,\r\n            this.showCommonErrorAlert,\r\n            emp, active);\r\n\r\n    }\r\n    render() {\r\n        const props = this.props;\r\n        const emp = this.getEmployee();\r\n        const isMusyrif = emp.user?.hasRole(AuthorityType.ROLE_ASRAMA_MUSYRIF);\r\n        return (\r\n            <tr key={emp.id} >\r\n                <td>{props.startingNumber + 1}</td>\r\n                <td>{emp.user?.fullName}</td>\r\n                <td>{emp.user?.email}</td>\r\n                <td>{emp.nisdm}</td>\r\n                <td><i className={isMusyrif ? \"fas fa-check text-success\" : \"fas fa-times\"} /></td>\r\n                <td> {isMusyrif == true ?\r\n                    <AnchorWithIcon className=\"btn btn-danger btn-sm\" onClick={(e) => this.activateMusyrif(false)} >\r\n                        Nonaktifkan\r\n                    </AnchorWithIcon> :\r\n                    <AnchorWithIcon className=\"btn btn-success btn-sm\" onClick={(e) => this.activateMusyrif(true)} >\r\n                        Jadikan musyrif\r\n                    </AnchorWithIcon>\r\n                }\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps\r\n)(EmployeeRow))","\r\nimport React, { Component } from 'react';\r\ninterface IProps {\r\n    show?:boolean;\r\n    className?:string;\r\n    style?:any;\r\n    onClick?:any;\r\n    iconClassName?:string;\r\n    attributes?:any;\r\n}\r\nexport default class AnchorButton extends Component<IProps, any>\r\n{\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        if (this.props.show == false) return null;\r\n        const btnClassName = this.props.className??\"btn btn-outline-secondary\";\r\n        return (\r\n            <a style={this.props.style} {...this.props.attributes} onClick={this.props.onClick} className={btnClassName} >\r\n                {this.props.iconClassName?\r\n                <span style={this.props.children?{marginRight:'5px'}:{}}><i className={this.props.iconClassName}/></span>\r\n                :\r\n                null}\r\n                {this.props.children}\r\n            </a>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport AnchorButton from './AnchorButton';\r\ninterface Props {\r\n    onClick(val:boolean):void,\r\n    active:boolean,\r\n    yesLabel?:string,\r\n    noLabel?:string\r\n}\r\nexport default class ToggleButton extends Component<Props, any>{\r\n    \r\n    render() {\r\n        const props = this.props;\r\n        const active = this.props.active;\r\n        return (\r\n            <div className=\"btn-group\">\r\n                <AnchorButton className={\"btn  btn-sm \" + (active ? \"btn-dark\" : \"btn-outline-dark\")} onClick={(e) => this.props.onClick(true)} >\r\n                    {props.yesLabel??\"Yes\"}</AnchorButton>\r\n                <AnchorButton className={\"btn  btn-sm \" + (active == false ? \"btn-dark\" : \"btn-outline-dark\")} onClick={(e) => this.props.onClick(false)}  >\r\n                    {props.noLabel??\"No\"}</AnchorButton>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}","import React, { ChangeEvent } from 'react'\r\nimport BaseComponent from './../../BaseComponent';\r\nimport Modal from './../../container/Modal';\r\nimport MasterDataService from './../../../services/MasterDataService';\r\nimport WebResponse from '../../../models/commons/WebResponse';\r\nimport WebRequest from '../../../models/commons/WebRequest';\r\nimport BasePage from './../BasePage';\r\nimport './Management.css'\r\nimport BaseEntity from './../../../models/BaseEntity';\r\n\r\nexport default abstract class BaseManagementPage extends BasePage {\r\n  protected masterDataService: MasterDataService;\r\n  protected formRef: React.RefObject<Modal> = React.createRef();\r\n\r\n  emptyRecord = (): BaseEntity => {\r\n    throw new Error(\"Empty Record Method is Not Implemented....\");\r\n  }\r\n\r\n  constructor(\r\n    props,\r\n    protected modelName: string,\r\n    protected menu: 'asrama' | 'management' | 'school-data',\r\n    protected overrideLoading: boolean = false\r\n  ) {\r\n    super(props, \"Asrama KIIS\", true);\r\n    if (modelName) {\r\n      this.modelName = modelName;\r\n    }\r\n    this.masterDataService = this.getServices().masterDataService;\r\n\r\n  }\r\n  startLoading = (withProgress: boolean = false) => {\r\n    if (this.overrideLoading) {\r\n      this.setState({ loading: true });\r\n    } else {\r\n      super.startLoading(withProgress);\r\n    }\r\n  }\r\n  endLoading = () => {\r\n    if (this.overrideLoading) {\r\n      this.setState({ loading: false });\r\n    } else {\r\n      super.endLoading();\r\n    }\r\n  }\r\n  loadItems = () => {\r\n    const request: WebRequest = {\r\n      filter: this.state.filter,\r\n      modelName: this.modelName\r\n    }\r\n    this.commonAjax(\r\n      this.masterDataService.list,\r\n      this.itemsLoaded,\r\n      this.showCommonErrorAlert,\r\n      request,\r\n      this.menu\r\n    )\r\n  }\r\n  itemsLoaded = (response: WebResponse) => {\r\n    this.setState({ items: response.result.items, totalData: response.result.totalData });\r\n  }\r\n\r\n  updateFilter = (e: ChangeEvent<any>) => {\r\n    const { filter } = this.state;\r\n    const { target } = e;\r\n    if (!target.value || target.value == \"\") {\r\n      return;\r\n    }\r\n    let value: any;\r\n    if (target.type == 'number' || (target.dataset && target.dataset['type'] == 'number')) {\r\n      value = parseInt(target.value);\r\n    } else {\r\n      value = target.value;\r\n    }\r\n    filter[target.name] = value;\r\n    this.setState({ filter })\r\n  }\r\n  updateFieldsFilter = (e: ChangeEvent) => {\r\n    const { filter } = this.state;\r\n    const target = (e.target as any);\r\n    if (!filter.fieldsFilter) {\r\n      filter.fieldsFilter = {};\r\n    }\r\n    filter.fieldsFilter[target.name] = target.value;\r\n    this.setState({ filter })\r\n  }\r\n  loadAtPage = (page: number) => {\r\n    const filter = this.state.filter;\r\n    filter.page = page;\r\n    this.setState({ filter: filter }, this.loadItems);\r\n  }\r\n  updateRecordProp = (e: ChangeEvent) => {\r\n    const target = e.target as any;\r\n    const dataset = target.dataset;\r\n    let value: any;\r\n    if (dataset['type'] && dataset['type'] == 'boolean') {\r\n      value = target.value == \"true\" ? true : false;\r\n    } else {\r\n      value = target.value;\r\n    }\r\n    const record = this.state.record;\r\n    record[target.name] = value;\r\n    this.setState({ record: record });\r\n  }\r\n  resetForm = (callback?: () => any) => {\r\n    this.setState({ record: this.emptyRecord() }, callback);\r\n  }\r\n  oneRecordLoaded = (item: any) => {\r\n    this.setState({ record: item }, () => {\r\n      if (this.formRef.current) {\r\n        this.formRef.current.showModal();\r\n      }\r\n      this.scrollTop();\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    super.componentDidMount();\r\n    this.scrollTop();\r\n    this.loadItems();\r\n  }\r\n  recordUpdated = (response: WebResponse) => {\r\n    this.resetForm(() => {\r\n      if (this.formRef.current) {\r\n        this.formRef.current.hideModal();\r\n      }\r\n      this.showInfo(\"Success Update\");\r\n      this.loadItems();\r\n    });\r\n  }\r\n  protected callApiInsert = (body: any) => {\r\n    this.commonAjax(\r\n      this.masterDataService.insert,\r\n      this.recordUpdated,\r\n      this.showCommonErrorAlert,\r\n      this.modelName,\r\n      this.menu,\r\n      body\r\n    )\r\n  }\r\n  protected callApiUpdate = (id: any, body: any) => {\r\n    this.commonAjax(\r\n      this.masterDataService.update,\r\n      this.recordUpdated,\r\n      this.showCommonErrorAlert,\r\n      this.modelName,\r\n      this.menu,\r\n      id,\r\n      body\r\n    )\r\n  }\r\n\r\n  reload = (e: any) => {\r\n    if (e && e.preventDefault) {\r\n      e.preventDefault();\r\n    }\r\n    this.loadAtPage(0);\r\n  }\r\n}","import React, { ChangeEvent } from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport Employee from './../../../models/Employee';\r\nimport { tableHeader } from './../../../utils/CollectionUtil';\r\nimport Filter from '../../../models/commons/Filter';\r\nimport FormGroup from './../../form/FormGroup';\r\nimport NavigationButtons from './../../navigation/NavigationButtons';\r\nimport EmployeeRow from './EmployeeRow';\r\nimport User from '../../../models/User';\r\nimport ToggleButton from './../../navigation/ToggleButton';\r\nimport BaseManagementPage from './BaseManagementPage';\r\nimport { AuthorityType } from '../../../models/AuthorityType';\r\nclass State {\r\n  items: Employee[] = [];\r\n  filter: Filter = new Filter();\r\n  totalData: number = 0;\r\n}\r\nclass MusyrifManagement extends BaseManagementPage {\r\n  state: State = new State();\r\n  constructor(props) {\r\n    super(props, 'employees', 'management');\r\n    this.state.filter.limit = 10;\r\n    this.state.filter.orderBy = 'user.fullName';\r\n    this.state.filter.fieldsFilter = {}\r\n  }\r\n  emptyRecord = () => new Employee();\r\n  setMusyrifOnly = (musyrifOnly: boolean) => {\r\n    const filter = this.state.filter;\r\n    if (!filter.fieldsFilter) {\r\n      filter.fieldsFilter = {};\r\n    }\r\n    filter.fieldsFilter['user.authorities.name'] = musyrifOnly ? AuthorityType.ROLE_ASRAMA_MUSYRIF : AuthorityType.ROLE_EMPLOYEE;\r\n    this.setState({ filter: filter }, () => this.loadAtPage(0))\r\n  }\r\n  onEmployeeStatusUpdate = () => {\r\n    this.loadItems();\r\n  }\r\n  render() {\r\n    const { filter } = this.state;\r\n    const musyrifOnly = filter?.fieldsFilter && filter.fieldsFilter['user.authorities.name'] === AuthorityType.ROLE_ASRAMA_MUSYRIF;\r\n    return (\r\n      <div className=\"section-body container-fluid\">\r\n        <h2>Musyrif</h2>\r\n        <hr />\r\n        <form onSubmit={this.reload}>\r\n          <FormGroup label=\"Cari\">\r\n            <input name=\"user.fullName\" placeholder=\"Nama\" className=\"form-control-sm\" value={filter.fieldsFilter ? filter.fieldsFilter['user.fullName'] : ''} onChange={this.updateFieldsFilter} />\r\n          </FormGroup>\r\n          <FormGroup label=\"Jumlah Tampilan\">\r\n            <input name=\"limit\" type=\"number\" className=\"form-control-sm\" value={filter.limit ?? 5} onChange={this.updateFilter} />\r\n          </FormGroup>\r\n          <FormGroup label=\"Opsi\">\r\n            <ToggleButton active={musyrifOnly} onClick={this.setMusyrifOnly} noLabel=\"Semua pegawai\" yesLabel=\"Hanya musyrif\" />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <input className=\"btn btn-primary btn-sm\" type=\"submit\" value=\"Submit\" />\r\n          </FormGroup>\r\n        </form>\r\n        <NavigationButtons activePage={filter.page ?? 0} limit={filter.limit ?? 5} totalData={this.state.totalData}\r\n          onClick={this.loadAtPage} />\r\n        <EmployeeList onUpdated={this.onEmployeeStatusUpdate} startingNumber={(filter.page ?? 0) * (filter.limit ?? 5)} items={this.state.items} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\nconst EmployeeList = (props: { onUpdated: () => void, startingNumber: number, items: Employee[] }) => {\r\n  const items = props.items;\r\n  return (\r\n    <div className=\"container-fluid\" style={{ overflow: 'auto' }}>\r\n      <table className=\"table table-striped\" >\r\n        {tableHeader(\"No\", \"Nama\", \"Email\", \"NIP\", \"Role: Musyrif\", \"Opsi\")}\r\n        <tbody>\r\n          {items.map((emp, i) => {\r\n            if (emp.user) {\r\n              emp.user = User.clone(emp.user);\r\n            }\r\n            return (\r\n              <EmployeeRow onUpdated={props.onUpdated} employee={emp} startingNumber={props.startingNumber + i} key={emp.id} />\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapCommonUserStateToProps\r\n  )(MusyrifManagement)\r\n)","import React from 'react'\r\nimport BaseComponent from './../../BaseComponent';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport BasePage from './../BasePage';\r\nclass ManagementMain extends BasePage\r\n{\r\n    constructor(props) {\r\n        super(props, \"Management\", true);\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container-fluid section-body\">\r\n                <h2>Halaman Manajemen</h2>\r\n                <div className=\"alert alert-info\">\r\n                    Welcome, <strong>{this.getLoggedUser()?.fullName}</strong>\r\n                    <hr/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(\r\n    connect(\r\n        mapCommonUserStateToProps\r\n    )(ManagementMain)\r\n)","\r\nimport BaseEntity from './BaseEntity';\r\nimport RulePoint from './RulePoint';\r\nexport default class Category extends BaseEntity\r\n{\r\n    name?:string;\r\n    description?:string;\r\n\r\n    points:RulePoint[] | undefined;\r\n\r\n    static clone = (object:any) : Category => {\r\n        return Object.assign(new Category, object);\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nimport AnchorButton from '../navigation/AnchorButton';\r\nclass IState {\r\n    show:boolean = true\r\n}\r\ninterface IProps {\r\n    toggleable?:boolean, show?:boolean, title?:string, style?:any, footerContent?:any,showFooter?:boolean\r\n}\r\nexport default class Modal extends Component<IProps, IState> {\r\n    state:IState = new IState();\r\n    constructor(props: any) {\r\n        super(props);\r\n    }\r\n    hideModal = () => {\r\n        this.setState({show:false});\r\n    }\r\n    showModal = () => {\r\n        this.setState({show:true});\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.show == false) { this.setState({show:false}); }\r\n    }\r\n    render() {\r\n    //    if (this.props.show == false) { return null; }\r\n        const title = this.props.title?? \"Title\"; \r\n        if (this.props.toggleable == true && this.state.show == false) {\r\n            return (\r\n                <AnchorButton style={{marginBottom:'10px'}} onClick={this.showModal} iconClassName=\"fas fa-angle-down\" >Show {title}</AnchorButton>\r\n            )\r\n        }\r\n        const props = (({ style, show, footerContent, toggleable, ...props }) => props)(this.props) // remove b and c\r\n        return (\r\n            <div {...props} className=\"modal-content \" style={{...this.props.style, marginBottom:'10px'}}>\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">{title}</h5>\r\n                    {this.props.toggleable?\r\n                    <button type=\"button\" className=\"btn btn-sm\" onClick={this.hideModal} aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\">\r\n                            <i className='fas fa-times'/>\r\n                        </span>\r\n                    </button>\r\n                    :\r\n                    null}\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    {this.props.children}\r\n                </div>\r\n                {this.props.footerContent || this.props.showFooter == true?\r\n                <div className=\"modal-footer\">\r\n                    {this.props.footerContent}\r\n                </div>\r\n                :null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React from 'react'\r\nimport BaseComponent from './../../BaseComponent';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport AnchorWithIcon from './../../navigation/AnchorWithIcon';\r\nimport BaseEntity from './../../../models/BaseEntity';\r\nimport MasterDataService from './../../../services/MasterDataService';\r\nimport WebRequest from '../../../models/commons/WebRequest';\r\nimport WebResponse from '../../../models/commons/WebResponse';\r\nclass EditDeleteButton extends BaseComponent {\r\n  masterDataService: MasterDataService;\r\n  constructor(props) {\r\n    super(props, true);\r\n    this.masterDataService = this.getServices().masterDataService;\r\n  }\r\n\r\n  get modelName(): string {\r\n    return this.props.modelName;\r\n  }\r\n  getRecord = (): BaseEntity => {\r\n    const rec = this.props.record;\r\n    if (!rec) {\r\n      alert(\"this.props.record undefined\");\r\n      return {};\r\n    }\r\n    return rec;\r\n  }\r\n  recordLoaded = (response: WebResponse) => {\r\n    if (this.props.recordLoaded) {\r\n      this.props.recordLoaded(response.result);\r\n    }\r\n  }\r\n  recordLoadedForDetail = (response: WebResponse) => {\r\n    if (this.props.recordLoadedForDetail) {\r\n      this.props.recordLoadedForDetail(response.result);\r\n    }\r\n  }\r\n  recordDeleted = (response: WebResponse) => {\r\n    this.showInfo(\"Record has been deleted\");\r\n    if (this.props.recordDeleted) {\r\n      this.props.recordDeleted(response.result);\r\n    }\r\n  }\r\n  get loadRecordRequest() {\r\n    const req: WebRequest = {\r\n      record_id: this.getRecord().id,\r\n      modelName: this.modelName\r\n    }\r\n    return req;\r\n  }\r\n  loadRecord = () => {\r\n\r\n    this.commonAjax(\r\n      this.masterDataService.getOne,\r\n      this.recordLoaded,\r\n      this.showCommonErrorAlert,\r\n      this.props.menu,\r\n      this.props.modelName,\r\n      this.loadRecordRequest.record_id\r\n    )\r\n  }\r\n  loadRecordForDetail = () => {\r\n\r\n    this.commonAjax(\r\n      this.masterDataService.getOne,\r\n      this.recordLoadedForDetail,\r\n      this.showCommonErrorAlert,\r\n      this.props.menu,\r\n      this.props.modelName,\r\n      this.loadRecordRequest.record_id\r\n    )\r\n  }\r\n  deleteRecord = () => {\r\n    this.showConfirmationDanger(\"Delete record?\")\r\n      .then(ok => {\r\n        if (!ok) return;\r\n        this.commonAjax(\r\n          this.masterDataService.delete,\r\n          this.recordDeleted,\r\n          this.showCommonErrorAlert,\r\n          this.props.menu,\r\n          this.props.modelName,\r\n          this.loadRecordRequest.record_id\r\n        )\r\n      })\r\n  }\r\n  hasType = (type: string): boolean => {\r\n    if (!this.props.types) return false;\r\n    return (this.props.types as string[]).indexOf(type) >= 0;\r\n  }\r\n  render() {\r\n    const types: string[] | undefined = this.props.types ?? undefined;\r\n    return (\r\n      <div className=\"btn-group\">\r\n        {this.hasType('detail') ?\r\n          <AnchorWithIcon onClick={this.loadRecordForDetail} iconClassName=\"fas fa-info-circle\" className=\"btn btn-info btn-sm\" />\r\n          :\r\n          null}\r\n        {types === undefined || this.hasType('edit') ?\r\n          <AnchorWithIcon onClick={this.loadRecord} iconClassName=\"fas fa-edit\" className=\"btn btn-warning btn-sm\" />\r\n          :\r\n          null}\r\n        {types === undefined || this.hasType('delete') ?\r\n          <AnchorWithIcon onClick={this.deleteRecord} iconClassName=\"fas fa-times\" className=\"btn btn-danger btn-sm\" />\r\n          :\r\n          null}\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapCommonUserStateToProps\r\n  )(EditDeleteButton)\r\n)","\r\nimport React, { ChangeEvent } from 'react'\r\nimport BaseComponent from './../../BaseComponent';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport Filter from '../../../models/commons/Filter';\r\nimport Category from './../../../models/Category';\r\nimport WebRequest from '../../../models/commons/WebRequest';\r\nimport FormGroup from './../../form/FormGroup';\r\nimport NavigationButtons from './../../navigation/NavigationButtons';\r\nimport Modal from './../../container/Modal';\r\nimport EditDeleteButton from './EditDeleteButton'\r\nimport { tableHeader } from './../../../utils/CollectionUtil';\r\nimport BaseManagementPage from './BaseManagementPage';\r\nimport BaseEntity from './../../../models/BaseEntity';\r\nclass State {\r\n  items: Category[] = [];\r\n  filter: Filter = new Filter();\r\n  totalData: number = 0;\r\n  record: Category = new Category();\r\n\r\n}\r\nconst MODEL_NAME = 'rule-categories';\r\nconst MENU = 'asrama';\r\nclass CategoryManagement extends BaseManagementPage {\r\n  state: State = new State();\r\n  constructor(props) {\r\n    super(props, MODEL_NAME, MENU);\r\n    this.state.filter.limit = 10;\r\n    this.state.filter.orderBy = 'name';\r\n  }\r\n\r\n  onSubmit = () => {\r\n    // console.debug(\"RECORD: \", this.state.record);\r\n    this.showConfirmation(\"Submit Data?\")\r\n      .then(ok => {\r\n        if (!ok) return;\r\n        if (this.state.record.id ?? 0 > 0) {\r\n          this.callApiUpdate(this.state.record.id, this.state.record);\r\n        } else {\r\n          this.callApiInsert(this.state.record);\r\n        }\r\n      })\r\n  }\r\n\r\n  emptyRecord = (): BaseEntity => new Category();\r\n  render() {\r\n    const filter: Filter = this.state.filter;\r\n    return (\r\n      <div className=\"container-fluid section-body\">\r\n        <h2>Kategori Pelanggaran</h2>\r\n        <hr />\r\n        <RecordForm formRef={this.formRef} resetForm={this.resetForm} onSubmit={this.onSubmit} record={this.state.record} updateRecordProp={this.updateRecordProp} />\r\n        <form onSubmit={this.reload}>\r\n          <FormGroup label=\"Cari\">\r\n            <input name=\"name\" placeholder=\"nama\" className=\"form-control-sm\" value={filter.fieldsFilter ? filter.fieldsFilter['name'] : \"\"} onChange={this.updateFieldsFilter} />\r\n          </FormGroup>\r\n          <FormGroup label=\"Jumlah Tampilan\">\r\n            <input name=\"limit\" type=\"number\" className=\"form-control-sm\" value={filter.limit ?? 5} onChange={this.updateFilter} />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <input className=\"btn btn-primary btn-sm\" type=\"submit\" value=\"Submit\" />\r\n          </FormGroup>\r\n        </form>\r\n        <NavigationButtons activePage={filter.page ?? 0} limit={filter.limit ?? 5} totalData={this.state.totalData}\r\n          onClick={this.loadAtPage} />\r\n        <ItemsList\r\n          recordLoaded={this.oneRecordLoaded}\r\n          recordDeleted={this.loadItems}\r\n          startingNumber={(filter.page ?? 0) * (filter.limit ?? 10)} items={this.state.items} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\nconst ItemsList = (props: { startingNumber: number, items: Category[], recordLoaded(item: any), recordDeleted() }) => {\r\n\r\n  return (\r\n    <div style={{ overflow: 'auto' }}>\r\n      <table className=\"table table-striped\">\r\n        {tableHeader(\"No\", \"Nama\", \"Deskripsi\", \"Opsi\")}\r\n        <tbody>\r\n          {props.items.map((item, i) => {\r\n\r\n            return (\r\n              <tr key={\"category-\" + i}>\r\n                <td>{i + 1 + props.startingNumber}</td>\r\n                <td>{item.name}</td>\r\n                <td>{item.description}</td>\r\n                <td>\r\n                  <EditDeleteButton\r\n                    recordLoaded={props.recordLoaded}\r\n                    recordDeleted={props.recordDeleted}\r\n                    record={item}\r\n                    modelName={MODEL_NAME}\r\n                    menu={MENU}\r\n                  />\r\n                </td>\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\nconst RecordForm = (props: { formRef: React.RefObject<Modal>, updateRecordProp(e: ChangeEvent): any, resetForm(): any, onSubmit(): any, record: Category }) => {\r\n\r\n  return (\r\n    <form className=\"record-form mb-3\" onSubmit={(e) => { e.preventDefault(); props.onSubmit() }}>\r\n      <Modal show={false} ref={props.formRef} toggleable={true} title=\"Record Form\" >\r\n        <FormGroup label=\"Nama\"><input required value={props.record.name ?? \"\"} onChange={props.updateRecordProp} className=\"form-control\" name=\"name\" /></FormGroup>\r\n        <FormGroup label=\"Deskripsi\">\r\n          <textarea required className=\"form-control\" name=\"description\" onChange={props.updateRecordProp} value={props.record.description ?? \"\"} />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-sm\" />\r\n          &nbsp;\r\n          <input type=\"reset\" className=\"btn btn-secondary btn-sm\" onClick={(e) => props.resetForm()} />\r\n        </FormGroup>\r\n      </Modal>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapCommonUserStateToProps\r\n  )(CategoryManagement)\r\n)","\r\nimport BaseEntity from './BaseEntity';\r\nimport Category from './Category';\r\nexport default class RulePoint extends BaseEntity {\r\n    ruleCategoryName?: string;\r\n    ruleCategoryId?: any;\r\n    name?: string;\r\n    description?: string;\r\n    point: number = 1;\r\n    droppable?: boolean = true;\r\n}","import React, { ChangeEvent } from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport RulePoint from './../../../models/RulePoint';\r\nimport Filter from '../../../models/commons/Filter';\r\nimport Modal from './../../container/Modal';\r\nimport FormGroup from './../../form/FormGroup';\r\nimport WebRequest from '../../../models/commons/WebRequest';\r\nimport NavigationButtons from './../../navigation/NavigationButtons';\r\nimport EditDeleteButton from './EditDeleteButton';\r\nimport { tableHeader } from './../../../utils/CollectionUtil';\r\nimport BaseManagementPage from './BaseManagementPage';\r\nimport Category from './../../../models/Category';\r\nimport WebResponse from '../../../models/commons/WebResponse';\r\nimport AnchorWithIcon from './../../navigation/AnchorWithIcon';\r\nclass State {\r\n  items: RulePoint[] = [];\r\n  filter: Filter = new Filter();\r\n  totalData: number = 0;\r\n  record: RulePoint = new RulePoint();\r\n  categories: Category[] = [];\r\n  categoriesLoaded: boolean = false;\r\n\r\n}\r\nconst MODEL_NAME = 'rule-points';\r\nconst MENU = 'asrama';\r\n\r\nclass RulePointManagement extends BaseManagementPage {\r\n  state: State = new State();\r\n  constructor(props) {\r\n    super(props, MODEL_NAME, MENU);\r\n    this.state.filter.limit = 10;\r\n    this.state.filter.orderBy = 'name'\r\n  }\r\n\r\n  onSubmit = () => {\r\n    // console.debug(\"RECORD: \", this.state.record);\r\n    this.showConfirmation(\"Submit Data?\")\r\n      .then(ok => {\r\n        if (!ok) return;\r\n        if (this.state.record.id ?? 0 > 0) {\r\n          this.callApiUpdate(this.state.record.id, this.state.record);\r\n        } else {\r\n          this.callApiInsert(this.state.record);\r\n        }\r\n      })\r\n  }\r\n  componentDidMount() {\r\n    this.validateLoginStatus(() => {\r\n      this.scrollTop();\r\n      this.loadCategories();\r\n    });\r\n  }\r\n  categoriesLoaded = (response: WebResponse) => {\r\n    this.setState({ categories: response.result.items, categoriesLoaded: true }, () => { this.resetForm(); this.loadItems() });\r\n  }\r\n  categoriesNotLoaded = (response: WebResponse) => {\r\n    this.setState({ categories: [], categoriesLoaded: true }, this.resetForm);\r\n  }\r\n  loadCategories = () => {\r\n    const filter: Filter = new Filter();\r\n    filter.limit = 0;\r\n    const req: WebRequest = {\r\n      filter: filter,\r\n      modelName: 'rule-categories'\r\n    }\r\n    this.commonAjax(\r\n      this.masterDataService.list,\r\n      this.categoriesLoaded,\r\n      this.categoriesNotLoaded,\r\n      req,\r\n      MENU\r\n    );\r\n  }\r\n\r\n  emptyRecord = (): any => {\r\n    const record = new RulePoint();\r\n    if (this.state.categories.length > 0) {\r\n      record.ruleCategoryId = this.state.categories[0].id;\r\n    }\r\n    return record;\r\n  }\r\n\r\n  render() {\r\n    const filter: Filter = this.state.filter;\r\n    const categories: Category[] = this.state.categories;\r\n    if (this.state.categoriesLoaded && categories.length == 0) {\r\n      return (\r\n        <div className=\"container-fluid section-body\">\r\n          <h2>Kategori pelanggaran belum ada</h2>\r\n        </div>\r\n      )\r\n    }\r\n    const selectedCategoryId = filter.fieldsFilter && filter.fieldsFilter['category_id'] ? filter.fieldsFilter['category_id'] : \"ALL\";\r\n    return (\r\n      <div className=\"container-fluid section-body\">\r\n        <h2>Poin Pelanggaran</h2>\r\n        <hr />\r\n        <RecordForm categories={categories} reloadCategories={this.loadCategories} formRef={this.formRef} resetForm={this.resetForm} onSubmit={this.onSubmit} record={this.state.record} updateRecordProp={this.updateRecordProp} />\r\n        <form onSubmit={this.reload}>\r\n          <FormGroup label=\"Cari\">\r\n            <div className=\"input-group\">\r\n              <input name=\"name\" placeholder=\"nama\" className=\"form-control-sm\" value={filter.fieldsFilter ? filter.fieldsFilter['name'] : \"\"} onChange={this.updateFieldsFilter} />\r\n              <select value={selectedCategoryId} className=\"form-control-sm\" name=\"category_id\" onChange={this.updateFieldsFilter} >\r\n                {[{ id: \"\", name: \"Semua Kategori\" }, ...categories].map((c) => {\r\n                  return <option key={\"filter-cat-\" + c.id} value={c.id}>{c.name}</option>\r\n                })}\r\n              </select>\r\n              <div className=\"input-group-append\">\r\n                <AnchorWithIcon className=\"btn btn-sm\" iconClassName=\"fas fa-redo\" onClick={this.loadCategories}>Reload</AnchorWithIcon>\r\n              </div>\r\n            </div>\r\n          </FormGroup>\r\n          <FormGroup label=\"Jumlah Tampilan\">\r\n            <input type=\"number\" name=\"limit\" className=\"form-control-sm\" value={filter.limit ?? 5} onChange={this.updateFilter} />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <input className=\"btn btn-primary btn-sm\" type=\"submit\" value=\"Submit\" />\r\n          </FormGroup>\r\n        </form>\r\n        <NavigationButtons activePage={filter.page ?? 0} limit={filter.limit ?? 5} totalData={this.state.totalData}\r\n          onClick={this.loadAtPage} />\r\n        <ItemsList\r\n          recordLoaded={this.oneRecordLoaded}\r\n          recordDeleted={this.loadItems}\r\n          startingNumber={(filter.page ?? 0) * (filter.limit ?? 10)} items={this.state.items} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\nconst ItemsList = (props: { startingNumber: number, items: RulePoint[], recordLoaded(item: any), recordDeleted() }) => {\r\n\r\n  return (\r\n    <div style={{ overflow: 'auto' }}>\r\n      <table className=\"table table-striped\">\r\n        {tableHeader(\"No\", \"Nama\", \"Poin\", \"Deskripsi\", \"Kategori\", \"Pemutihan\", \"Opsi\")}\r\n        <tbody>\r\n          {props.items.map((item, i) => {\r\n            return (\r\n              <tr key={`RulePoint-${i}`}>\r\n                <td>{i + 1 + props.startingNumber}</td>\r\n                <td>{item.name}</td>\r\n                <td>{item.point}</td>\r\n                <td>{item.description}</td>\r\n                <td>{item.ruleCategoryName}</td>\r\n                <td>{item.droppable ? \"Ya\" : \"TIdak\"}</td>\r\n                <td>\r\n                  <EditDeleteButton\r\n                    recordLoaded={props.recordLoaded}\r\n                    recordDeleted={props.recordDeleted}\r\n                    record={item}\r\n                    modelName={MODEL_NAME}\r\n                    menu={MENU}\r\n                  />\r\n                </td>\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\nconst RecordForm = (props: {\r\n  categories: Category[],\r\n  formRef: React.RefObject<Modal>,\r\n  updateRecordProp(e: ChangeEvent): any,\r\n  resetForm(): any, onSubmit(): any,\r\n  record: RulePoint, reloadCategories(): any\r\n}) => {\r\n\r\n  return (\r\n    <form className=\"record-form mb-3\" onSubmit={(e) => { e.preventDefault(); props.onSubmit() }}>\r\n      <Modal show={false} ref={props.formRef} toggleable={true} title=\"Record Form\" >\r\n        <FormGroup label=\"Nama\"><input value={props.record.name ?? \"\"} onChange={props.updateRecordProp} className=\"form-control \" name=\"name\" required /></FormGroup>\r\n        <FormGroup label=\"Pengurangan Poin\"><input type=\"number\" value={props.record.point} onChange={props.updateRecordProp} className=\"form-control \" name=\"point\" required /></FormGroup>\r\n        <FormGroup label=\"Deskripsi\">\r\n          <textarea className=\"form-control\" name=\"description\" onChange={props.updateRecordProp} value={props.record.description ?? \"\"} />\r\n        </FormGroup>\r\n        <FormGroup label=\"Dapat diputihkan\">\r\n          <select className=\"form-control-sm\" data-type=\"boolean\" name=\"droppable\" onChange={props.updateRecordProp} value={props.record.droppable == true ? \"true\" : \"false\"} required>\r\n            <option value={\"true\"} >Ya</option>\r\n            <option value={\"false\"}>Tidak</option>\r\n          </select>\r\n        </FormGroup>\r\n        <FormGroup label=\"Category\">\r\n          <div className=\"input-group\">\r\n            <select required value={props.record.ruleCategoryId} className=\"form-control-sm\" name=\"ruleCategoryId\" onChange={props.updateRecordProp} >\r\n              {props.categories.map((c) => {\r\n                return <option key={\"cat-\" + c.id} value={c.id}>{c.name}</option>\r\n              })}\r\n            </select>\r\n            <div className=\"input-group-append\">\r\n              <AnchorWithIcon className=\"btn btn-sm\" iconClassName=\"fas fa-redo\" onClick={props.reloadCategories}>Reload</AnchorWithIcon>\r\n            </div>\r\n          </div>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-sm\" />\r\n          &nbsp;\r\n          <input value=\"Reset\" type=\"reset\" className=\"btn btn-secondary btn-sm\" onClick={(e) => props.resetForm()} />\r\n        </FormGroup>\r\n      </Modal>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapCommonUserStateToProps\r\n  )(RulePointManagement)\r\n)\r\n","import React, { ChangeEvent } from 'react';\nimport Filter from '../../models/commons/Filter';\nimport { MONTHS } from './../../utils/DateUtil';\n\nconst days = (): number[] => {\n  const arr: number[] = [];\n  for (let i = 1; i <= 31; i++) {\n    arr.push(i);\n  }\n  return arr;\n}\nconst FilterPeriod = (props: {\n  date: Date,\n  onChange(e: ChangeEvent<HTMLSelectElement | HTMLInputElement>): any,\n  disableDay?: boolean,\n}) => {\n  const { date, disableDay } = props;\n  return (\n    <React.Fragment>\n      {\n        disableDay !== true &&\n        <select data-type=\"number\" className=\"form-control-sm\" name=\"day\" value={date.getDate()} onChange={props.onChange}>\n          {days().map((d) => {\n            return <option key={`td-${d}`} value={d}>{d == 0 ? 'day' : d}</option>\n          })}\n        </select>\n      }\n      <select data-type=\"number\" className=\"form-control-sm\" name=\"month\" value={date.getMonth()} onChange={props.onChange}>\n        {MONTHS.map((m, i) => {\n          return <option key={`tm-${i}`} value={i}>{m}</option>\n        })}\n      </select>\n      <input name=\"year\" placeholder=\"year\" className=\"form-control-sm\" value={date.getFullYear()} onChange={props.onChange} />\n    </React.Fragment>\n  )\n}\n\nexport default FilterPeriod;","import React, { ChangeEvent } from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport Student from '../../../models/Student';\r\nimport StudentService from '../../../services/StudentService';\r\nimport Filter from '../../../models/commons/Filter';\r\nimport WebResponse from '../../../models/commons/WebResponse';\r\nimport Class from '../../../models/Class';\r\nimport FormGroup from '../../form/FormGroup';\r\nimport NavigationButtons from '../../navigation/NavigationButtons';\r\nimport { tableHeader } from '../../../utils/CollectionUtil';\r\nimport AnchorWithIcon from '../../navigation/AnchorWithIcon';\r\nimport MasterDataService from '../../../services/MasterDataService';\r\nimport BaseManagementPage from '../management/BaseManagementPage';\r\nimport Spinner from '../../loader/Spinner';\r\nimport FilterPeriod from '../../form/FilterPeriod';\r\nimport { getInputReadableDate, MONTHS } from '../../../utils/DateUtil';\r\nimport ToggleButton from '../../navigation/ToggleButton';\r\nimport BaseComponent from './../../BaseComponent';\r\nclass State {\r\n  items: Student[] = [];\r\n  classes: Class[] = [];\r\n  totalData = 0;\r\n  filter = new Filter();\r\n  loading = false;\r\n}\r\nconst now = new Date();\r\nconst defaultFieldsFilter = {\r\n  'classLevel.id=': '',\r\n  'with_point_record': 'false',\r\n  'time>=d': getInputReadableDate(new Date(now.getFullYear(), 0, 1)),\r\n  'time<=d': getInputReadableDate(now)\r\n};\r\nclass StudentList extends BaseComponent {\r\n  readonly state: State = new State();\r\n  readonly studentService: StudentService;\r\n  constructor(props) {\r\n    super(props);\r\n    this.studentService = this.getServices().studentService;\r\n    this.state.filter.limit = 10;\r\n    this.state.filter.orderBy = 'student.user.fullName';\r\n    this.state.filter.fieldsFilter = defaultFieldsFilter;\r\n  }\r\n  itemsLoaded = (response: WebResponse) => {\r\n    this.setState({ items: response.result.items, totalData: response.result.totalData });\r\n  }\r\n  classesLoaded = (response: WebResponse) => {\r\n    this.setState({ classes: response.result }, this.loadItems);\r\n  }\r\n  loadItems = () => {\r\n    this.commonAjax(\r\n      this.studentService.getStudentWithPoints,\r\n      this.itemsLoaded,\r\n      this.showCommonErrorAlert,\r\n      this.state.filter\r\n    )\r\n  }\r\n  loadAtPage = (page: number) => {\r\n    const { filter } = this.state;\r\n    filter.page = page;\r\n    this.setState({ filter }, this.loadItems);\r\n  }\r\n  loadClasses = () => {\r\n    this.commonAjax(\r\n      this.studentService.getClasses,\r\n      this.classesLoaded,\r\n      this.showCommonErrorAlert,\r\n    )\r\n  }\r\n  componentDidMount() {\r\n    this.validateLoginStatus(() => {\r\n      this.scrollTop();\r\n      this.loadClasses();\r\n    })\r\n  }\r\n  updatePeriodFilter = (e: ChangeEvent<HTMLInputElement | HTMLSelectElement>, field: 'time<=d' | 'time>=d') => {\r\n    const { filter } = this.state;\r\n    Filter.updatePeriodFilter(filter, e, field);\r\n    this.setState({ filter });\r\n  }\r\n  updateFieldFilter = (e: ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\r\n    const { filter } = this.state;\r\n    filter.fieldsFilter[e.target.name] = e.target.value;\r\n    this.setState({ filter });\r\n  }\r\n  updateSelectedClass = (e: ChangeEvent) => {\r\n    const target = e.target as HTMLSelectElement;\r\n    const { filter } = this.state;\r\n    if (!filter.fieldsFilter) {\r\n      filter.fieldsFilter = {};\r\n    }\r\n    filter.fieldsFilter['classLevel.id='] = target.value;\r\n    this.setState({ filter });\r\n  }\r\n  inputPage = (type: string, s: Student) => {\r\n    switch (type) {\r\n      case 'pointrecord':\r\n        this.inputPoint(s);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  inputPoint = (student: Student) => {\r\n    this.props.history.push({\r\n      pathname: \"/asrama/inputpoint\",\r\n      state: { student }\r\n    })\r\n  }\r\n  updateWithPointRecord = (enable: boolean) => {\r\n    const { filter } = this.state;\r\n    filter.fieldsFilter['with_point_record'] = `${enable}`;\r\n    this.setState({ filter });\r\n  }\r\n  updateFilter = (e: ChangeEvent<any>) => {\r\n    const { filter } = this.state;\r\n    const { target } = e;\r\n    if (!target.value || target.value == \"\") {\r\n      return;\r\n    }\r\n    let value: any;\r\n    if (target.type == 'number' || (target.dataset && target.dataset['type'] == 'number')) {\r\n      value = parseInt(target.value);\r\n    } else {\r\n      value = target.value;\r\n    }\r\n    filter[target.name] = value;\r\n    this.setState({ filter })\r\n  }\r\n  onSubmit = (e) => { e.preventDefault(); this.loadAtPage(0) }\r\n  render() {\r\n    const { filter, classes, loading, totalData } = this.state;\r\n    const { fieldsFilter } = filter;\r\n    const defaultClass = { id: '', level: 'Semua Kelas' } as Class;\r\n    const selectedClassId = fieldsFilter['classLevel.id='] ?? '';\r\n    const showPointRecord = fieldsFilter['with_point_record'] === `${true}`;\r\n    return (\r\n      <div className=\"container-fluid section-body\">\r\n        <h2>Siswa</h2>\r\n        <hr />\r\n        <form onSubmit={this.onSubmit}>\r\n          <FormGroup label=\"Cari\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                name=\"student.user.fullName\"\r\n                placeholder=\"Nama\"\r\n                className=\"form-control-sm\"\r\n                value={fieldsFilter['student.user.fullName'] ?? ''}\r\n                onChange={this.updateFieldFilter}\r\n              />\r\n              <select\r\n                value={selectedClassId}\r\n                onChange={this.updateFieldFilter}\r\n                className=\"form-control-sm\"\r\n                name=\"classLevel.id=\"\r\n              >\r\n                {[defaultClass, ...classes].map((c) => {\r\n                  return <option key={`class_${c.id}`} value={c.id}>{c.level}{c.letter} - {c.schoolName}</option>\r\n                })}\r\n              </select>\r\n            </div>\r\n          </FormGroup>\r\n          <FormGroup label=\"Jumlah Tampilan\">\r\n            <input\r\n              name=\"limit\"\r\n              type=\"number\"\r\n              className=\"form-control-sm\"\r\n              value={filter.limit ?? 5}\r\n              onChange={this.updateFilter}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup label=\"Periode\">\r\n            <ToggleButton\r\n              active={showPointRecord}\r\n              yesLabel=\"tampilkan poin\"\r\n              noLabel=\"tanpa poin\"\r\n              onClick={this.updateWithPointRecord}\r\n            />\r\n            {\r\n              showPointRecord &&\r\n              <React.Fragment>\r\n                <div className=\"input-group\">\r\n                  <FilterPeriod date={new Date(fieldsFilter['time>=d'])} onChange={(e) => this.updatePeriodFilter(e, 'time>=d')} />\r\n                </div>\r\n                <div className=\"input-group\">\r\n                  <FilterPeriod date={new Date(fieldsFilter['time<=d'])} onChange={(e) => this.updatePeriodFilter(e, 'time<=d')} />\r\n                </div>\r\n              </React.Fragment>\r\n            }\r\n          </FormGroup>\r\n          {\r\n            showPointRecord &&\r\n            <FormGroup>\r\n              {new Date(fieldsFilter['time>=d']).toDateString()} - {new Date(fieldsFilter['time<=d']).toDateString()}\r\n            </FormGroup>\r\n          }\r\n          <FormGroup>\r\n            <input type=\"submit\" className=\"btn btn-primary btn-sm\" value=\"Submit\" />\r\n          </FormGroup>\r\n        </form>\r\n        <p />\r\n        <NavigationButtons onClick={this.loadAtPage} activePage={filter.page ?? 0} limit={filter.limit ?? 10} totalData={totalData} />\r\n        <ItemsList showPointRecord={showPointRecord} loading={loading} inputPage={this.inputPage} startingNumber={(filter.page ?? 0) * (filter.limit ?? 10)} items={this.state.items} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst ItemsList = (props: { showPointRecord: boolean, loading: boolean, startingNumber: number, inputPage(type: string, s: Student): any, items: Student[] }) => {\r\n\r\n  return (\r\n    <div style={{ overflow: 'auto' }}>\r\n      <table className=\"table table-striped\">\r\n        {props.showPointRecord ? tableHeader(\"No\", \"\", \"Name\", \"Kelas\", \"Point\") : tableHeader(\"No\", \"\", \"Name\", \"Kelas\")}\r\n        <tbody>\r\n          {props.loading ?\r\n            <tr>\r\n              <td colSpan={5}><Spinner /></td>\r\n            </tr>\r\n\r\n            : props.items.map((student, i) => {\r\n              return (\r\n                <tr key={student.id}>\r\n                  <td>{i + 1 + props.startingNumber}</td>\r\n                  <td>\r\n                    <div style={{ width: '100px' }}>\r\n                      <AnchorWithIcon className=\"btn\" onClick={(e) => props.inputPage('pointrecord', student)} iconClassName=\"far fa-edit\" />\r\n                      {/* <AnchorWithIcon className=\"btn\" onClick={(e) => props.inputPage('medicalrecord', student)} iconClassName=\"fas fa-notes-medical\" /> */}\r\n                    </div>\r\n                  </td>\r\n                  <td>\r\n                    {student.name}\r\n                  </td>\r\n                  <td>\r\n                    {student.classLevel}{student.classLetter} {student.schoolName}\r\n                  </td>\r\n                  {props.showPointRecord && <td>{student.point}</td>}\r\n                </tr>\r\n              )\r\n            })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(connect(\r\n  mapCommonUserStateToProps\r\n)(StudentList));\r\n","\r\nimport BaseEntity from './BaseEntity';\r\nimport User from './User';\r\nimport Class from './Class';\r\nexport default class Student extends BaseEntity\r\n{\r\n    nis?:string;\r\n    kelas?:Class;\r\n    user?:User;\r\n\r\n    point?:number;\r\n    name?: string;\r\n    classLetter?: string;\r\n    classLevel?: number;\r\n    schoolName?: string;\r\n}","\nimport BaseEntity from './BaseEntity';\nimport { parseDate } from './../utils/DateUtil';\nimport { twoDigits as td } from './../utils/StringUtil';\nimport RulePoint from './RulePoint';\nimport Student from './Student';\nimport Pictures from './Pictures';\nimport { contextPath } from './../constant/Url';\nexport default class PointRecord extends BaseEntity {\n  setTime = (h: number, m: number, s: number) => {\n    this.time = new Date();\n    this.time.setFullYear(this.year);\n    this.time.setMonth(this.month - 1);\n    this.time.setDate(this.day);\n    this.time.setHours(h, m, s);\n  }\n  dateString = (): string => {\n    return `${this.year}-${td(this.month)}-${td(this.day)}`;\n  }\n  get timeString() {\n    return `${this.time.getHours()}:${this.time.getMinutes()}:${this.time.getSeconds()}`;\n  }\n  location?: string;\n  get day() { return this.time.getDate() };\n  get month() { return this.time.getMonth() + 1; }\n  get year() { return this.time.getFullYear(); }\n  set day(d: number) { this.time.setDate(d); }\n  set month(m: number) { this.time.setMonth(m - 1); }\n  set year(y: number) { this.time.setFullYear(y); }\n  time = new Date();\n  description?: string;\n  classMemberId?: number;\n  rulePointId?: number;\n\n  rule_point?: RulePoint;\n  student?: Student;\n  dropped?: Date;\n\n  pictures: Pictures[] = [];\n\n  // reponse fields\n  ruleCategoryName?: string;\n  ruleName?: string;\n  studentName?: string;\n  schoolName?: string;\n  classLevel?: number;\n  classLetter?: string;\n  point?: number;\n  droppable?: boolean;\n\n  /**\n   * get picture URL\n   */\n  getPicture = () => contextPath(`api/public/asrama/broken-rule-img/${this.id}`);\n\n  getDate = (): Date => {\n    return parseDate(this.dateString());\n  }\n\n  getTimestamp = (): string => {\n\n    const d = this.getDate();\n    const day = DAYS[d.getDay()];\n    return day + \", \" + [\n      td(d.getDate()), td(d.getMonth() + 1), d.getFullYear()\n    ].join(\"/\") + \" \" + this.time;\n  }\n\n  public static clone = (p: PointRecord) => {\n    p = Object.assign(new PointRecord(), p);\n    p.time = new Date(p.time);\n    return p;\n  }\n}\n\nconst DAYS = [\n  \"Ahad\", \"Senin\", \"Selasa\", \"Rabu\", \"Kamis\", \"Jumat\", \"Sabtu\"\n]","import React from 'react';\nimport { Component, ChangeEvent } from 'react';\nimport { twoDigits } from './../../utils/StringUtil';\ninterface Props{\n    onChange(h:number,m:number,s:number):any,\n    value:string,\n}\nclass State {\n    hour:number = new Date().getHours();\n    minute:number = new Date().getMinutes();\n    second:number = new Date().getSeconds();\n}\nconst hours:number[] = [\n    0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,\n];\nconst minutesOrSeconds = ()  : number[]=> {\n    const arr:number[]=  [];\n    for (let i = 1; i < 60; i++) {\n        arr.push(i);   \n    }\n    return arr; \n}\nexport default class InputTime extends Component<Props, any> {\n    state:State = new State();\n    minutes:number[];\n    seconds:number[] ;\n    constructor (props) {\n        super(props);\n        this.minutes = minutesOrSeconds();\n        this.seconds = minutesOrSeconds();\n    }\n    componentDidMount() {\n        this.updateFromProps();\n    }\n    updateFromProps = () => {\n        try {\n            const val = this.props.value.split(\":\");\n            this.setState({hour: parseInt(val[0]), minute: parseInt(val[1]), second: parseInt(val[2])});\n        } catch (error) {\n            \n        }\n    }\n    updateValue = (e:ChangeEvent) => {\n        const target = e.target as HTMLSelectElement;\n        if (target) {\n            const name = target.name;\n            this.setState({[name]: target.value}, this.onChange);\n        }\n        \n    }\n    setNow = () => {\n        const date = new Date();\n        this.setState({\n            hour: date.getHours(),\n            minute: date.getMinutes(),\n            second: date.getSeconds()\n        }, this.onChange)\n    }\n    onChange = () => {\n        this.props.onChange(this.state.hour, this.state.minute, this.state.second)\n    }\n    render() {\n         \n        return (<div className=\"form-control bg-light\">\n            <select name=\"hour\" style={{border:'none'}} value={this.state.hour} onChange={this.updateValue} >\n                {hours.map((hour)=>{\n                    return <option key={\"HOUR-\"+hour} value={hour} >{twoDigits(hour)}</option>\n                })}\n            </select>\n            <select name=\"minute\" style={{border:'none'}}  value={this.state.minute} onChange={this.updateValue}>\n                {this.minutes.map((min)=>{\n                    return <option key={\"MIN-\"+min} value={min} >{twoDigits(min)}</option>\n                })}\n            </select>\n            <select name=\"second\" style={{border:'none'}}  value={this.state.second} onChange={this.updateValue}>\n                {this.seconds.map((sec)=>{\n                    return <option key={\"SEC-\"+sec} value={sec} >{twoDigits(sec)}</option>\n                })}\n            </select>\n            <a style={{marginLeft: 5}}  onClick={this.setNow} ><i className=\"fas fa-history\"/></a>\n        </div>)\n    }\n}","import React, { ChangeEvent } from 'react'\nimport BaseComponent from '../../../BaseComponent';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\nimport RulePoint from '../../../../models/RulePoint';\nimport FormGroup from '../../../form/FormGroup';\nimport PointRecord from '../../../../models/PointRecord';\nimport { parseDate } from '../../../../utils/DateUtil';\nimport InputTime from '../../../form/InputTime';\nimport { getAttachmentInfoFromFile } from '../../../../utils/ComponentUtil';\nimport AttachmentInfo from '../../../../models/settings/AttachmentInfo';\nclass State {\n  pointRecord: PointRecord = new PointRecord();\n}\nclass FormStepThree extends BaseComponent {\n  state: State = new State();\n  constructor(props) {\n    super(props, true);\n  }\n\n  onSubmit = () => {\n    this.showConfirmation(\"Submit Data?\")\n      .then(ok => {\n        if (ok) {\n          this.props.submit(this.state.pointRecord);\n        }\n      })\n  }\n  get rulePoint(): RulePoint {\n    return this.props.rulePoint;\n  }\n  updatePointRecord = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { target } = e;\n    const { pointRecord } = this.state;\n    pointRecord[target.name] = target.value;\n    this.setState({ pointRecord });\n\n  }\n  updateDate = (e: ChangeEvent<HTMLInputElement>) => {\n    const date = parseDate(e.target.value);\n    const { pointRecord } = this.state;\n    pointRecord.time = date;\n    this.setState({ pointRecord });\n  }\n  updateTime = (h: number, m: number, s: number) => {\n    const pointRecord = this.state.pointRecord;\n    pointRecord.setTime(h, m, s);\n    this.setState({ pointRecord: pointRecord });\n  }\n  setAttachment = (e: ChangeEvent) => {\n    const target = e.target as HTMLInputElement;\n    getAttachmentInfoFromFile(target).then((attachment: AttachmentInfo) => {\n      this.props.setAttachment(attachment);\n    });\n  }\n  removeAttachment = () => {\n    this.props.removeAttachment();\n  }\n  getAttachment = (): AttachmentInfo | undefined => {\n    return this.props.attachmentInfo;\n  }\n  render() {\n    const { rulePoint } = this;\n    const { pointRecord } = this.state;\n    const attachment = this.getAttachment();\n    return (\n      <form onSubmit={(e) => { e.preventDefault(); this.onSubmit() }}>\n        <FormGroup label=\"Category\">{rulePoint.ruleCategoryName} - {rulePoint.name} <span className=\"badge badge-dark\">{rulePoint.point}</span></FormGroup>\n        <FormGroup label=\"Date\">\n          <input type=\"date\" className=\"form-control\" onChange={this.updateDate} name=\"date\" value={pointRecord.dateString()} />\n        </FormGroup>\n        <FormGroup label=\"Time\">\n          <InputTime onChange={this.updateTime} value={pointRecord.timeString} />\n        </FormGroup>\n        <FormGroup label=\"Location\">\n          <input className=\"form-control\" onChange={this.updatePointRecord} name=\"location\" value={pointRecord.location ?? \"\"} />\n        </FormGroup>\n        <FormGroup label=\"Picture\">\n          {attachment ?\n            <>\n              <img style={{ marginRight: 10 }} className=\"border border-dark\" src={attachment.url} width={100} height={100} />\n              <AnchorWithIcon iconClassName=\"fas fa-times\" className=\"btn btn-danger\" onClick={this.removeAttachment}></AnchorWithIcon>\n            </>\n            : <input type=\"file\" accept={\"image/*\"} className=\"form-control\" onChange={this.setAttachment} name=\"attachment\" />\n          }\n        </FormGroup>\n        <FormGroup label=\"Description\">\n          <textarea value={pointRecord.description ?? ''} onChange={this.updatePointRecord} name=\"description\" className=\"form-control\"></textarea>\n        </FormGroup>\n        <AnchorWithIcon className=\"btn btn-secondary float-left\" iconClassName=\"fas fa-arrow-left\" onClick={this.props.onBack} >Back</AnchorWithIcon>\n        <button className=\"btn btn-success float-right\" >Submit</button>\n      </form>\n    )\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapCommonUserStateToProps\n  )(FormStepThree)\n)","\r\nimport React, { Component } from 'react';\r\nexport default class SimpleError extends Component<any, any>\r\n{\r\n\r\n    render() {\r\n        if (this.props.show == false) return null;\r\n        return (\r\n            <div style={ this.props.style} className=\"alert alert-danger\">\r\n                {this.props.children??\"Error Occured\"}\r\n            </div>\r\n        )\r\n    }\r\n}","\nimport React, { ChangeEvent } from 'react'\nimport BaseComponent from '../../../BaseComponent';\nimport MasterDataService from '../../../../services/MasterDataService';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\nimport FormGroup from '../../../form/FormGroup';\nimport Category from '../../../../models/Category';\nimport RulePoint from '../../../../models/RulePoint';\nimport WebRequest from '../../../../models/commons/WebRequest';\nimport WebResponse from '../../../../models/commons/WebResponse';\nimport Spinner from '../../../loader/Spinner';\nimport SimpleError from '../../../alert/SimpleError';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\nclass State {\n  rulePoints: RulePoint[] = [];\n  loading = false;\n}\nclass FormStepTwo extends BaseComponent {\n  masterDataService: MasterDataService;\n  state: State = new State();\n  constructor(props) {\n    super(props, true);\n    this.masterDataService = this.getServices().masterDataService;\n  }\n  startLoading = () => this.setState({ loading: true });\n  endLoading = () => this.setState({ loading: false });\n  rulePointsLoaded = (response: WebResponse) => {\n    this.setState({ rulePoints: response.result.items }, () => {\n      if (this.state.rulePoints.length > 0) {\n        if (!this.props.rulePoint) {\n          this.setRulePoint(this.state.rulePoints[0]);\n        }\n      }\n    });\n  }\n\n  loadRulePoints = () => {\n    if (null == this.getCategory()) return;\n    const req: WebRequest = {\n      filter: { limit: 0, fieldsFilter: { 'category.id=': this.getCategory().id } },\n      modelName: 'rule-points',\n    }\n    this.commonAjax(\n      this.masterDataService.list,\n      this.rulePointsLoaded,\n      this.showCommonErrorAlert,\n      req,\n      'asrama'\n    )\n  }\n  getCategory = (): Category => {\n    return this.props.category;\n  }\n  componentDidMount() {\n    super.componentDidMount();\n    this.loadRulePoints();\n  }\n  onSubmit = () => {\n    this.props.onSubmit();\n  }\n  setRulePoint = (r: RulePoint) => {\n    this.props.setRulePoint(r);\n  }\n  updateRulePoint = (e: ChangeEvent) => {\n    const select = (e.target as HTMLSelectElement);\n    const filtered = this.state.rulePoints.filter((r) => r.id?.toString() == select.value)\n    if (filtered.length == 0) return;\n    this.setRulePoint(filtered[0]);\n  }\n  render() {\n    const category = this.getCategory();\n\n    const { rulePoints, loading } = this.state;\n\n    if (null == category) {\n      return <SimpleError>Category not found</SimpleError>\n    }\n    if (loading) {\n      return <Spinner />\n    }\n    if (rulePoints.length == 0) {\n      return <SimpleError>Rule Points for {category.name} not found</SimpleError>\n    }\n    return (\n      <form onSubmit={e => { e.preventDefault(); this.onSubmit() }} >\n        <FormGroup label=\"Category\" children={category.name} />\n        <FormGroup label=\"Name\">\n          <select className=\"form-control\" onChange={this.updateRulePoint} value={this.props.rulePoint ? this.props.rulePoint.id : null} >\n            {rulePoints.map((r: RulePoint) => {\n              return <option key={`select-rulePoint-${r.id}`} value={r.id}>{r.name}</option>\n            })}\n          </select>\n        </FormGroup>\n        <FormGroup label=\"Point\" children={this.props.rulePoint?.point} />\n        <hr />\n        <AnchorWithIcon className=\"btn btn-secondary float-left\" iconClassName=\"fas fa-arrow-left\" onClick={this.props.onBack} >Back</AnchorWithIcon>\n        <AnchorWithIcon className=\"btn btn-info float-right\" iconClassName=\"fas fa-arrow-right\" onClick={this.onSubmit} >Next</AnchorWithIcon>\n      </form>\n    );\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapCommonUserStateToProps\n  )(FormStepTwo)\n)","\nimport React, { ChangeEvent } from 'react'\nimport BaseComponent from '../../../BaseComponent';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\nimport WebResponse from '../../../../models/commons/WebResponse';\nimport WebRequest from '../../../../models/commons/WebRequest';\nimport Category from '../../../../models/Category';\nimport MasterDataService from '../../../../services/MasterDataService';\nimport FormGroup from '../../../form/FormGroup';\nimport SimpleError from '../../../alert/SimpleError';\nimport Spinner from '../../../loader/Spinner';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\nimport Filter from '../../../../models/commons/Filter';\nclass State {\n  categories: Category[] = [];\n  loading = false;\n}\nclass FormStepOne extends BaseComponent {\n  state: State = new State();\n  masterDataService: MasterDataService;\n  constructor(props) {\n    super(props, true);\n    this.masterDataService = this.getServices().masterDataService;\n  }\n  categoriesLoaded = (response: WebResponse) => {\n    this.setState({ categories: response.result.items, categoriesLoaded: true }, () => {\n      if (this.state.categories.length > 0) {\n        if (!this.props.category) {\n          this.setCategory(this.state.categories[0]);\n        }\n      }\n    });\n  }\n  startLoading = () => this.setState({ loading: true });\n  endLoading = () => this.setState({ loading: false });\n  setCategory = (c: Category) => {\n    this.props.setSelectedCategory(c);\n  }\n  loadCategories = () => {\n    const req: WebRequest = {\n      filter: Filter.withLimit(0),\n      modelName: 'rule-categories'\n    }\n    this.commonAjax(\n      this.masterDataService.list,\n      this.categoriesLoaded,\n      this.showCommonErrorAlert,\n      req,\n      'asrama'\n    )\n  }\n  componentDidMount() {\n    super.componentDidMount();\n    this.loadCategories();\n  }\n  onSubmit = () => {\n    this.props.onSubmit();\n  }\n  updateCategory = (e: ChangeEvent<HTMLSelectElement>) => {\n    const select = e.target;\n    const filtered = this.state.categories.filter((c) => c.id?.toString() == select.value)\n    if (filtered.length == 0) return;\n    this.setCategory(filtered[0]);\n  }\n  render() {\n    const { categories, loading } = this.state;\n    const { category } = this.props;\n    if (loading) {\n      return <Spinner />\n    }\n    if (categories.length == 0) {\n      return <SimpleError>Categories not found</SimpleError>\n    }\n    return (\n      <form onSubmit={(e) => { e.preventDefault(); this.onSubmit() }}>\n        <FormGroup label=\"Category\">\n          <select className=\"form-control\" onChange={this.updateCategory} value={category ? category.id ?? \"\" : \"\"} >\n            {categories.map((c) => {\n              return <option key={`select-cat-${c.id}`} value={c.id}>{c.name}</option>\n            })}\n          </select>\n        </FormGroup>\n        <hr />\n        <AnchorWithIcon\n          className=\"btn btn-secondary float-left\"\n          iconClassName=\"fas fa-arrow-left\"\n          onClick={this.props.onBack}\n        >\n          Back\n        </AnchorWithIcon>\n        <AnchorWithIcon\n          className=\"btn btn-info float-right\"\n          iconClassName=\"fas fa-arrow-right\"\n          onClick={this.onSubmit}\n        >\n          Next\n        </AnchorWithIcon>\n      </form >\n\n\n    )\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapCommonUserStateToProps\n  )(FormStepOne)\n)","\nimport React from 'react'\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\nimport Student from '../../../models/Student';\nimport AnchorWithIcon from '../../navigation/AnchorWithIcon';\nimport Modal from '../../container/Modal';\nimport FormStepThree from './form/FormStepThree';\nimport FormStepTwo from './form/FormStepTwo';\nimport FormStepOne from './form/FormStepOne';\nimport Category from '../../../models/Category';\nimport RulePoint from '../../../models/RulePoint';\nimport SimpleError from '../../alert/SimpleError';\nimport PointRecord from '../../../models/PointRecord';\nimport StudentService from '../../../services/StudentService';\nimport WebResponse from '../../../models/commons/WebResponse';\nimport FormGroup from '../../form/FormGroup';\nimport { doItLater } from '../../../utils/EventUtil';\nimport AttachmentInfo from '../../../models/settings/AttachmentInfo';\nimport BasePage from '../BasePage';\n\nclass State {\n  student?: Student\n  category?: Category;\n  rulePoint?: RulePoint;\n  formStep: number = 0;\n  savedRecord?: PointRecord;\n  attachmentInfo?: AttachmentInfo;\n}\nclass InputPointForm extends BasePage {\n  state: State = new State();\n  studentService: StudentService;\n  totalStep: number = 4;\n  constructor(props) {\n    super(props, \"Input Point Record\", true);\n    this.studentService = this.getServices().studentService;\n  }\n  validateStudentData = () => {\n    if (!this.props.location.state) {\n      return;\n    }\n    const student = this.props.location.state.student;\n    if (student) {\n      this.setState({ student: Object.assign(new Student(), student) });\n    }\n  }\n  componentDidMount() {\n    super.componentDidMount();\n    this.validateStudentData();\n    this.scrollTop();\n    doItLater(() => {\n      this.nextStep(1);\n    }, 200);\n\n  }\n  setAttachment = (attachmentInfo: AttachmentInfo | undefined) => {\n    this.setState({ attachmentInfo: attachmentInfo });\n  }\n  removeStudent = () => {\n    this.setState({ formStep: 0 }, () => {\n      doItLater(() => {\n        this.setState({ student: undefined })\n      }, 500);\n    })\n  }\n  removeAttachment = () => {\n    this.setAttachment(undefined);\n  }\n  setCategory = (c: Category) => {\n    this.setState({ category: c });\n  }\n  setRulePoint = (r: RulePoint) => {\n    this.setState({ rulePoint: r });\n  }\n  nextStep = (step: number) => {\n    this.setState({ formStep: step });\n  }\n  submitRecord = (record: PointRecord) => {\n\n    if (!this.state.student || !this.state.rulePoint) {\n      alert(\"ERROR: student or rulePoint missing!\");\n      return;\n    }\n    record.classMemberId = this.state.student?.id;\n    record.rulePointId = this.state.rulePoint?.id;\n    this.commonAjax(\n      this.studentService.submitPointRecord,\n      this.recordSubmitted,\n      this.showCommonErrorAlert,\n      record,\n      this.state.attachmentInfo\n    )\n  }\n  recordSubmitted = (response: WebResponse) => {\n    this.setState({ savedRecord: response.result, formStep: 4 }, this.scrollTop);\n  }\n  render() {\n    const student: Student | undefined = this.state.student;\n    if (!student) {\n      return <Warning />\n    }\n\n    return (\n      <div className=\"container-fluid section-body\">\n        <h2>Form Input Pelanggaran</h2>\n        <Modal title={student.name + \" - \" + student.classLevel + student.classLetter + \" \" + student.schoolName}>\n          <Progress step={this.state.formStep} totalStep={this.totalStep} />\n          {\n            this.state.formStep == 1 &&\n            <FormStepOne\n              category={this.state.category}\n              onBack={this.removeStudent}\n              setSelectedCategory={this.setCategory}\n              onSubmit={() => { this.nextStep(2) }} />\n          }\n          {\n            this.state.formStep == 2 && this.state.category &&\n            <FormStepTwo\n              rulePoint={this.state.rulePoint}\n              setRulePoint={this.setRulePoint}\n              category={this.state.category}\n              onBack={() => this.nextStep(1)}\n              onSubmit={() => { this.nextStep(3) }}\n            />}\n          {\n            this.state.formStep == 3 && this.state.category && this.state.rulePoint &&\n            <FormStepThree\n              submit={this.submitRecord}\n              attachmentInfo={this.state.attachmentInfo}\n              setAttachment={this.setAttachment}\n              removeAttachment={this.removeAttachment}\n              rulePoint={this.state.rulePoint}\n              onBack={() => this.nextStep(2)}\n            />}\n          {this.state.formStep == 4 && this.state.savedRecord &&\n            <Detail back={() => this.setState({ student: null })} record={this.state.savedRecord} />}\n\n        </Modal>\n      </div>\n    )\n  }\n}\n\nconst Progress = (props: { step: number, totalStep: number }) => {\n  return (\n    <div className=\"progress\" style={{ height: '5px', marginBottom: 15 }}>\n      <div className=\"bg-info\" style={{ transitionDuration: '500ms', width: (props.step / props.totalStep * 100) + '%' }}  ></div>\n    </div>\n  )\n}\n\nconst Detail = (props: { record: PointRecord, back(): any }) => {\n  const record = PointRecord.clone(props.record);\n  const date = record.getDate();\n  return (\n    <div>\n      <h4 className=\"text-center text-success\"><i className=\"fas fa-check\" style={{ marginRight: 5 }} />Record saved</h4>\n      <p />\n      <FormGroup label=\"Date\">{new Date(record.time).toLocaleString()}</FormGroup>\n      <FormGroup label=\"Category\">{record.ruleCategoryName}</FormGroup>\n      <FormGroup label=\"Name\">{record.ruleName}</FormGroup>\n      <FormGroup label=\"Point\">{record.point}</FormGroup>\n      <FormGroup label=\"Location\">{record.location}</FormGroup>\n      {\n        record.getPicture() &&\n        <FormGroup label=\"Picture\">\n          <img src={record.getPicture() ?? ''} width={200} height={200} />\n        </FormGroup>\n      }\n      <hr />\n      <FormGroup><a onClick={props.back} className=\"btn btn-dark\">Ok</a></FormGroup>\n    </div>\n  )\n}\n\nconst Warning = () => {\n  return (\n    <div className=\"container-fluid section-body\">\n      <h2>Form Input Pelanggaran</h2>\n      <SimpleError>\n        <i className=\"fas fa-exclamation-circle\" />&nbsp;Please select student <hr />\n        <AnchorWithIcon to={\"/asrama/studentlist\"} iconClassName=\"fas fa-list\">Student List</AnchorWithIcon>\n      </SimpleError>\n    </div>\n  )\n}\n\nexport default withRouter(\n  connect(\n    mapCommonUserStateToProps\n  )(InputPointForm)\n)","\r\nimport React, { Component } from 'react';\r\nexport default class Card extends Component<any, any> {\r\n    constructor(props: any) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div {...this.props.attributes} className={\"card \" + this.props.className}>\r\n                {this.props.title ? <div className=\"card-header\">\r\n                    {this.props.title}\r\n                </div> : null}\r\n                <div className=\"card-body\">\r\n                    {this.props.children}\r\n                </div>\r\n                {this.props.footerContent != undefined ?\r\n                    <div className=\"card-footer\">\r\n                        {this.props.footerContent}\r\n                    </div>\r\n                    : null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","\nimport React, { Component } from 'react';\nimport PointRecord from '../../../../models/PointRecord';\nimport { doItLater } from '../../../../utils/EventUtil';\nimport Card from '../../../container/Card';\nimport FormGroup from '../../../form/FormGroup';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\n\ninterface IProps {\n  record: PointRecord;\n  close(): any;\n}\nexport default class PointRecordDetail extends Component<IProps, any> {\n\n  componentDidMount() {\n    const opt: ScrollToOptions = { top: 0, behavior: 'smooth' };\n    doItLater(() => {\n      window.scrollTo(opt);\n    }, 100);\n  }\n\n  render() {\n    const record = PointRecord.clone(this.props.record);\n    const pictureUrl = record.getPicture();\n    const timeStamp = new Date(record.time).toString();\n    return <Card title={\"Detail Pelanggaran\"} footerContent={<AnchorWithIcon className=\"btn btn-dark\" onClick={this.props.close} >Ok</AnchorWithIcon>}>\n      <FormGroup label=\"Nama\">{record.studentName} - {record.classLevel}{record.classLetter} {record.schoolName}</FormGroup>\n      <FormGroup label=\"Pelanggaran\">\n        <strong>{record.ruleCategoryName}</strong> - {record.ruleName} <span className=\"badge badge-dark\">{record.point}</span>\n      </FormGroup>\n      <FormGroup label=\"Waktu\" children={timeStamp} />\n      <FormGroup label=\"Lokasi\" children={record.location ?? '-'} />\n      <FormGroup label=\"Deskripsi\" children={record.description ?? '-'} />\n      <FormGroup label=\"Diputihkan\" children={record.dropped ? new Date(record.dropped).toString() : '-'} />\n\n      <FormGroup label=\"Gambar\">\n        {pictureUrl ?\n          <img src={pictureUrl} width={200} height={200} className=\"border border-dark\" /> : null}\n      </FormGroup>\n    </Card>\n  }\n}","import React from 'react'\nimport BaseComponent from '../../BaseComponent';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\nimport PointRecord from '../../../models/PointRecord';\nimport AnchorWithIcon from '../../navigation/AnchorWithIcon';\nimport StudentService from '../../../services/StudentService';\n\nclass State {\n  loading: boolean = false;\n}\nclass DropPointButtons extends BaseComponent {\n  studentService: StudentService;\n  state: State = new State();\n  constructor(props) {\n    super(props, true);\n    this.studentService = this.getServices().studentService;\n  }\n  startLoading = () => { this.setState({ loading: true }); }\n  endLoading = () => { this.setState({ loading: false }); }\n  getRecord = (): PointRecord => this.props.record;\n\n  setDropped = (isDropped: boolean) => {\n    const item = this.getRecord();\n    this.commonAjax(\n      this.studentService.setPointDropped,\n      this.props.onUpdated,\n      this.showCommonErrorAlert,\n      item.id, isDropped\n    );\n  }\n  render() {\n    const item = this.getRecord();\n    if (this.state.loading) {\n      return (\n        <button className=\"btn btn-info btn-sm\">\n          <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n        </button>\n      );\n    }\n    return (\n      item.dropped ?\n        <AnchorWithIcon onClick={(e) => this.setDropped(false)} className=\"btn btn-secondary btn-sm\" iconClassName=\"fas fa-arrow-up\">\n          Reset\n        </AnchorWithIcon> :\n        <AnchorWithIcon onClick={(e) => this.setDropped(true)} className=\"btn btn-success btn-sm\" iconClassName=\"fas fa-arrow-down\">\n          Putihkan\n        </AnchorWithIcon>\n    )\n  }\n}\n\nexport default withRouter(connect(\n  mapCommonUserStateToProps\n)(DropPointButtons))","import React, { ChangeEvent } from 'react'\nimport BaseManagementPage from './BaseManagementPage';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\nimport EditDeleteButton from './EditDeleteButton'\nimport PointRecord from '../../../models/PointRecord';\nimport Filter from '../../../models/commons/Filter';\nimport FormGroup from '../../form/FormGroup';\nimport NavigationButtons from '../../navigation/NavigationButtons';\nimport { tableHeader } from '../../../utils/CollectionUtil';\nimport FilterPeriod from '../../form/FilterPeriod';\nimport PointRecordDetail from '../asrama/point-record/PointRecordDetail';\nimport StudentService from '../../../services/StudentService';\nimport WebResponse from '../../../models/commons/WebResponse';\nimport Category from '../../../models/Category';\nimport Class from '../../../models/Class';\nimport { MONTHS, getInputReadableDate } from './../../../utils/DateUtil';\nimport DropPointButtons from '../asrama/DropPointButtons';\nclass State {\n  items: PointRecord[] = [];\n  filter: Filter = new Filter();\n  totalData: number = 0;\n  record?: PointRecord;\n  loading: boolean = false;\n  categories: Category[] = [];\n  classes: Class[] = [];\n  selectedCategory: Category | undefined;\n  showFilterDetail: boolean = false;\n}\nconst now = new Date();\nconst defaultFieldsFilter = {\n  'classMember.student.user.fullName': '',\n  dropped: '',\n  'classMember.classLevel.id=': '',\n  'rulePoint.name': '',\n  'rulePoint.category.name': '',\n  location: '',\n  'time>=d': getInputReadableDate(new Date(now.getFullYear(), 0, 1)),\n  'time<=d': getInputReadableDate(now),\n};\nconst MODEL_NAME = 'broken-rules';\nconst MENU = 'asrama';\nclass PointRecordSummary extends BaseManagementPage {\n  state: State = new State();\n  private studentService: StudentService;\n  constructor(props) {\n    super(props, MODEL_NAME, MENU, false);\n\n    this.studentService = this.getServices().studentService;\n\n    const f = new Filter();\n\n    f.limit = 10;\n    f.fieldsFilter = defaultFieldsFilter;\n    f.orderBy = 'time';\n    f.orderType = 'desc';\n\n    this.state.filter = f;\n  }\n\n  componentDidMount() {\n    super.componentDidMount();\n    this.loadCategories();\n    this.loadClasses();\n  }\n  loadClasses = () => {\n    this.commonAjax(this.studentService.getClasses,\n      this.classessLoaded, console.error)\n  }\n  loadCategories = () => {\n    this.commonAjax(this.studentService.getCategories,\n      this.categoriesLoaded, console.error);\n  }\n  categoriesLoaded = (response: WebResponse) => this.setState({ categories: response.result.items });\n  classessLoaded = (response: WebResponse) => this.setState({ classes: response.result });\n\n  setSelectedCategory = (selectedCategory: Category) => {\n    const { filter } = this.state;\n    if (!selectedCategory.id || selectedCategory.id?.toString() === '') {\n      filter.fieldsFilter['rulePoint.name'] = '';\n    }\n    this.setState({ filter, selectedCategory });\n  }\n\n  showDetail = (item: PointRecord) => this.setState({ record: item });\n  hideDetail = () => this.setState({ record: undefined }, this.scrollTop);\n  showFilterDetail = () => this.setState({ showFilterDetail: true });\n  hideFilterDetail = () => this.setState({ showFilterDetail: false });\n\n  openEditPage = (p: PointRecord) => {\n    this.props.history.push({\n      pathname: '/asrama/pointrecordedit',\n      state: { record: p }\n    })\n  }\n\n  resetFilter = () => {\n    const { filter } = this.state;\n    this.setState({ filter: Filter.resetFieldsFilter(filter) });\n  }\n  followUp = (p: PointRecord) => {\n    this.commonAjax(\n      this.studentService.followUp,\n      this.showCommonSuccessAlert,\n      this.showCommonErrorAlert,\n      p.id\n    )\n  }\n  dropAll = (e) => {\n    this.showConfirmation(\"Putihkan \" + this.state.items.length + \" data?\")\n      .then(ok => {\n        if (ok) {\n          this.commonAjax(\n            this.studentService.dropAll,\n            this.reload,\n            this.showCommonErrorAlert,\n            this.itemsId\n          )\n        }\n      })\n  }\n  undropAll = (e) => {\n    this.showConfirmation(\"Reset pemutihan \" + this.state.items.length + \" data?\")\n      .then(ok => {\n        if (ok) {\n          this.commonAjax(\n            this.studentService.undropAll,\n            this.reload,\n            this.showCommonErrorAlert,\n            this.itemsId\n          )\n        }\n      })\n  }\n  updatePeriodFilter = (e: ChangeEvent<HTMLInputElement | HTMLSelectElement>, field: 'time<=d' | 'time>=d') => {\n    const { filter } = this.state;\n    Filter.updatePeriodFilter(filter, e, field);\n    this.setState({ filter });\n  }\n  updateDroppedOption = (e: ChangeEvent<HTMLSelectElement>) => {\n    const { filter } = this.state;\n    const { fieldsFilter } = filter;\n    for (const key in fieldsFilter) {\n      if (key.startsWith('dropped')) {\n        delete fieldsFilter[key];\n      }\n    }\n    const split = e.target.value.split(':');\n    if (split[0] === 'dropped') {\n      return;\n    }\n    fieldsFilter[split[0]] = 'Dummy';\n    this.setState({ filter });\n  }\n\n  get itemsId() { return this.state.items.map(i => i.id); }\n\n  render() {\n    const { filter, record } = this.state;;\n    const { fieldsFilter } = filter;\n\n    const title = \"Rekap Pelanggaran\";\n    if (record) {\n      return (\n        <div className=\"container-fluid section-body\">\n          <h2>{title}</h2>\n          <PointRecordDetail record={record} close={this.hideDetail} />\n        </div>\n      )\n    }\n    const defaultClass: Class = { id: '', level: 'Semua Kelas', sekolah: {} };\n    const selectedClassId = filter.fieldsFilter['classMember.classLevel.id='] ? filter.fieldsFilter['classMember.classLevel.id='] : '';\n\n    return (\n      <div className=\"container-fluid section-body\">\n        <h2>{title}</h2>\n        <hr />\n        <form className=\"form-filter\" onSubmit={this.reload}>\n          <FormGroup label=\"Cari\">\n            <div className=\"input-group\">\n              <input autoComplete=\"off\" name=\"classMember.student.user.fullName\" placeholder=\"Nama siswa\" className=\"form-control-sm\" value={fieldsFilter['classMember.student.user.fullName'] ?? ''} onChange={this.updateFieldsFilter} />\n              <select autoComplete=\"off\" value={selectedClassId} onChange={this.updateFieldsFilter} className=\"form-control-sm\" name=\"classMember.classLevel.id=\">\n                {[defaultClass, ...this.state.classes].map((c) => {\n                  return <option key={`class_${c.id}`} value={c.id}>{c.level}{c.letter} - {c.schoolName}</option>\n                })}\n              </select>\n            </div>\n          </FormGroup>\n          {this.state.showFilterDetail ?\n            <><div className=\"filter-sticky bg-white border border-gray pt-3 pb-3 pl-3 pr-3\">\n              <FormGroup label=\"Kategori\">\n                <select value={fieldsFilter['rulePoint.category.id=']} onChange={this.updateFieldsFilter} className=\"form-control-sm\" name=\"rulePoint.category.id=\">\n                  {[Category.clone({ id: '', name: 'Semua' }), ...this.state.categories].map((c) => {\n                    return <option onClick={() => this.setSelectedCategory(c)} key={`cat_${c.id}`} value={c.id}>{c.name}</option>\n                  })}\n                </select>\n              </FormGroup>\n              {\n                this.state.selectedCategory && this.state.selectedCategory.points &&\n                <FormGroup label=\"Pelanggaran\">\n                  <select value={fieldsFilter['rulePoint.name']} onChange={this.updateFieldsFilter} className=\"form-control-sm\" name=\"rulePoint.name\">\n                    {[{ id: '', name: 'Semua' }, ...this.state.selectedCategory.points].map((c) => {\n                      return <option key={`rp_${c.id}`} value={c.id == '' ? c.id : c.name}>{c.name}</option>\n                    })}\n                  </select>\n                </FormGroup>\n              }\n              <FormGroup label=\"Periode\">\n                <div className=\"input-group\">\n                  <FilterPeriod date={new Date(fieldsFilter['time>=d'])} onChange={(e) => this.updatePeriodFilter(e, 'time>=d')} />\n                </div>\n                <div className=\"input-group\">\n                  <FilterPeriod date={new Date(fieldsFilter['time<=d'])} onChange={(e) => this.updatePeriodFilter(e, 'time<=d')} />\n                </div>\n              </FormGroup>\n              <FormGroup label=\"Pemutihan\">\n                <select\n                  className=\"form-control-sm\"\n                  onChange={this.updateDroppedOption}\n                >\n                  <option value=\"dropped:\">Semua</option>\n                  <option value=\"dropped=null:\">Belum</option>\n                  <option value=\"dropped!null:\">Sudah</option>\n                </select>\n              </FormGroup>\n              <FormGroup label=\"Lokasi\">\n                <input name=\"location\" placeholder=\"Lokasi\" className=\"form-control-sm\" value={fieldsFilter['location'] ?? ''} onChange={this.updateFieldsFilter} />\n              </FormGroup>\n              <FormGroup label=\"Jumlah Tampilan\">\n                <input type=\"number\" name=\"limit\" className=\"form-control-sm\" value={filter.limit ?? 5} onChange={this.updateFilter} />\n              </FormGroup>\n              <FormGroup label=\"\">\n                <a className=\"btn btn-dark btn-sm\" onClick={this.hideFilterDetail}>Tutup</a>\n                <input className=\"ml-3 btn btn-primary btn-sm\" type=\"submit\" value=\"Cari\" />\n              </FormGroup>\n            </div>\n              <FormGroup label=\"\">\n                <a className=\"btn btn-dark btn-sm\" onClick={this.hideFilterDetail}>Tutup Detail Filter</a>\n              </FormGroup>\n            </>\n            : <FormGroup label=\"\">\n              <a className=\"btn btn-dark btn-sm\" onClick={this.showFilterDetail}>Tampil Detail Filter</a>\n            </FormGroup>}\n          <FormGroup label=\"Periode\">\n            {new Date(filter.fieldsFilter['time>=d']).toDateString()} - {new Date(filter.fieldsFilter['time<=d']).toDateString()}\n          </FormGroup>\n          <FormGroup>\n            <input className=\"btn btn-primary btn-sm\" type=\"submit\" value=\"Submit\" />\n            <a className=\"btn btn-secondary btn-sm ml-2\" onClick={this.resetFilter}>Reset</a>\n            <a onClick={this.dropAll} className=\"ml-2 btn btn-info btn-sm\" >Putihkan Semua</a>\n            <a onClick={this.undropAll} className=\"ml-2 btn btn-warning btn-sm\" >Reset Pemutihan Semua</a>\n          </FormGroup>\n        </form>\n        <NavigationButtons\n          activePage={filter.page ?? 0}\n          limit={filter.limit ?? 10}\n          totalData={this.state.totalData}\n          onClick={this.loadAtPage}\n        />\n        <ItemsList\n          isAdmin={this.isAdmin()}\n          startingNumber={(filter.page ?? 0) * (filter.limit ?? 10)}\n          recordLoadedForDetail={this.showDetail}\n          recordLoadedForEdit={this.openEditPage}\n          recordUpdated={this.loadItems}\n          followUp={this.followUp}\n          items={this.state.items}\n        />\n      </div>\n    )\n  }\n}\ninterface ItemProps {\n  isAdmin: boolean,\n  startingNumber: number,\n  items: PointRecord[],\n  recordLoadedForDetail(p: PointRecord): any,\n  recordLoadedForEdit(p: PointRecord): any,\n  recordUpdated(): any,\n  followUp(p: PointRecord): any\n}\nconst ItemsList = (props: ItemProps) => {\n  return (\n    <div style={{ overflow: 'auto' }}>\n      <table className=\"table \">\n        {tableHeader(\"No\", \"Siswa\", \"Kelas\", \"Tanggal\", \"Pelanggaran\", \"Poin\", \"Lokasi\", \"Gambar\", \"Pemutihan\", \"Opsi\")}\n        <tbody>\n          {props.items.map((item, i) => {\n            item = PointRecord.clone(item);\n            const optionTypes = props.isAdmin ?\n              ['detail', 'delete'] :\n              [(item.dropped ? null : 'edit'), 'detail'];\n            return (\n              <tr key={\"PointRecord-\" + i} className={item.dropped ? \"alert alert-success\" : ''}>\n                <td>{i + 1 + props.startingNumber}</td>\n                <td>{item.studentName}</td>\n                <td>{item.classLevel}{item.classLetter} {item.schoolName}</td>\n                <td>{new Date(item.time).toLocaleDateString()}</td>\n                <td>{item.ruleCategoryName} ({item.ruleName})</td>\n                <td>{item.point}</td>\n                <td>{item.location}</td>\n                <td>\n                  <img src={item.getPicture() ?? ''} width={50} height={50} />\n                </td>\n                <td>{item.dropped ? <i className=\"fas fa-check\" /> : \"-\"} </td>\n                <td>\n                  <div style={{ width: 'max-content' }}>\n                    {\n                      item.droppable ?\n                        <><DropPointButtons record={item} onUpdated={props.recordUpdated} /><p /></> :\n                        <p><i>Tidak ada pemutihan</i></p>\n                    }\n                    {/* {\n                      props.isAdmin ?\n                        <><DropPointButtons record={item} onUpdated={props.recordUpdated} /><p /></> :\n                        <a className=\"btn btn-dark btn-sm\" onClick={() => props.followUp(item)}>Follow Up</a>\n                    } */}\n                    <EditDeleteButton\n                      record={item}\n                      types={optionTypes}\n                      recordLoadedForDetail={props.recordLoadedForDetail}\n                      recordLoaded={props.recordLoadedForEdit}\n                      modelName={MODEL_NAME}\n                      menu={MENU}\n                    />\n                  </div>\n\n                </td>\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default withRouter(\n  connect(\n    mapCommonUserStateToProps\n  )(PointRecordSummary)\n)","\r\nimport School from './School';\r\nimport Student from './Student';\r\n\r\nexport default class Class {\r\n    static studentClassString(student: Student| undefined): string {\r\n        return (student?.kelas?.level??\"\") +(student?.kelas?.rombel??\"\") + \" \" + (student?.kelas?.sekolah?.nama??\"\");\r\n    }\r\n    id?:string;\r\n    name?:string;\r\n    level?:string;\r\n    rombel?:string;\r\n    sekolah?:School;\r\n    //\r\n    letter?:string;\r\n    schoolName?:string;\r\n}","import React, { FormEvent } from 'react'\nimport BaseComponent from '../../../BaseComponent';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\nimport Card from '../../../container/Card';\nimport FormGroup from '../../../form/FormGroup';\nimport Student from '../../../../models/Student';\nimport MasterDataService from '../../../../services/MasterDataService';\nimport WebRequest from '../../../../models/commons/WebRequest';\nimport WebResponse from '../../../../models/commons/WebResponse';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\nimport Class from '../../../../models/Class';\nclass State {\n    studentName?:string;\n    items:Student[] = [];\n    item?:Student;\n}\nclass StudentForm extends BaseComponent{\n\n    state:State = new State();\n    masterDataService:MasterDataService;\n    constructor(props) {\n        super(props, true);\n        this.masterDataService = this.getServices().masterDataService;\n    }\n\n    submit = (e:FormEvent) => {\n        e.preventDefault();\n        this.loadStudent();\n    }\n    itemsLoaded = (response: WebResponse) => {\n        this.setState({items: response.items});\n    }\n    loadStudent = () => {\n        const request:WebRequest = {\n            modelName:'student',\n            filter:{\n                limit: 15,\n                fieldsFilter: {  name:this.state.studentName  }\n            }\n        }\n        this.commonAjax(\n            this.masterDataService.list,\n            this.itemsLoaded,\n            this.showCommonErrorAlert,\n            request\n        )\n    }\n    setSelectedItem = (item:Student) => {\n        this.setState({item:item,  items:[], studentName:undefined}, ()=> {\n            if (this.props.setItem) {\n                this.props.setItem(item);\n            }\n        });\n    }\n    reset = () => {\n        this.setState({item:undefined, items:[], studentName:undefined}, () => {\n            if (this.props.setItem) {\n                this.props.setItem(undefined);\n            }\n        });\n    }\n    render() {\n        const items:Student[] = this.state.items;\n        const selectedItem:Student | undefined = this.state.item;\n        return (\n            <form onReset={this.reset} onSubmit={this.submit}>\n                <Card title=\"Select Student\">\n                    <FormGroup label=\"Search\">\n                        <input placeholder=\"Name\" value={this.state.studentName??\"\"} className=\"form-control\" onChange={this.handleInputChange} name=\"studentName\" />\n                        {items.length > 0?<div style={{position:'absolute', zIndex: 200}} className=\"container-fluid bg-light rounded-sm border border-dark\">\n                                {items.map(item=>{\n                                    return (\n                                        <div className=\"option-item\"onClick={()=>{\n                                            this.setSelectedItem(item);\n                                        }} style={{cursor: 'pointer'}} key={\"Student-\"+item.id} >{item.user?.fullName}</div>\n                                    )\n                                })}\n                                <a onClick={this.reset} className=\"option-item\"><i className=\"fas fa-times\"/>&nbsp;close</a>\n                            </div>:null}\n                    </FormGroup>\n                    {selectedItem?\n                    <ItemDetail item={selectedItem} />\n                    :null}\n                    <hr/>\n                    <div className=\"btn-group float-right\">\n                        <input type=\"submit\" className=\"btn btn-dark\" value=\"Search\" />\n                        <input type=\"reset\" className=\"btn btn-secondary\" value=\"Reset\" />\n                        <AnchorWithIcon to={\"/asrama/studentlist\"} iconClassName=\"fas fa-list\">Student List</AnchorWithIcon>\n                    </div>\n                </Card>\n            </form>\n        )\n    }\n}\n\nconst ItemDetail = (props:{item:Student}) => {\n\n    return (\n        <>\n            <FormGroup label=\"Name\">{props.item.user?.fullName}</FormGroup>\n            <FormGroup label=\"Kelas\">{Class.studentClassString(props.item)}</FormGroup>\n            \n        </>\n    )\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(StudentForm)\n)","\nimport BaseEntity from './BaseEntity';\nimport Student from './Student';\nexport default class MedicalRecord extends BaseEntity {\n  day: number = new Date().getDate();\n  month: number = new Date().getMonth();\n  year: number = new Date().getFullYear();\n  temperature_morning?: number;\n  temperature_afternoon?: number;\n  breakfast?: boolean;\n  lunch?: boolean;\n  dinner?: boolean;\n  medicine_consumption: boolean = false;\n  genose_test?: boolean;\n  antigen_test?: boolean;\n  pcr_test?: boolean;\n  description?: string\n  student_id;\n  student?: Student;\n\n  public static clone = (obj: MedicalRecord): MedicalRecord => {\n    return Object.assign(new MedicalRecord(), obj);\n  }\n  public static instance = (student_id: number, d: number, m: number, y: number): MedicalRecord => {\n    const obj = new MedicalRecord();\n    obj.day = d;\n    obj.month = m;\n    obj.year = y;\n    obj.student_id = student_id;\n    return obj;\n  }\n}","import React, { ChangeEvent, Component, FormEvent } from 'react'\nimport BaseComponent from '../../../BaseComponent';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\nimport MedicalRecord from '../../../../models/MedicalRecord';\nimport StudentService from '../../../../services/StudentService';\nimport WebResponse from '../../../../models/commons/WebResponse';\nimport { twoDigits, monthName } from '../../../../utils/StringUtil';\n\nclass State {\n    record: MedicalRecord = new MedicalRecord();\n}\nclass MedicalRecordDailyInput extends BaseComponent {\n    state: State = new State();\n    studentService: StudentService;\n    constructor(props) {\n        super(props, true);\n        this.studentService = this.getServices().studentService;\n        this.state.record = MedicalRecord.instance(props.student.id, props.day, props.month, props.year);\n    }\n    reset = () => {\n        const props = this.props;\n        this.setState({ record: MedicalRecord.instance(props.student.id, props.day, props.month, props.year) });\n    }\n    setRecord = (record: MedicalRecord) => {\n        this.setState({ record: MedicalRecord.clone(record) });\n    }\n\n    onChange = (e: ChangeEvent) => {\n        const record = this.state.record;\n        const target = e.target as HTMLInputElement;\n        record[target.name] = target.type == 'checkbox' ? target.checked : target.value;\n        this.setState({ record: MedicalRecord.clone(record) });\n    }\n\n    recordSubmitted = (response: WebResponse) => {\n        this.showInfo(\"Data has been submitted\");\n    }\n\n    onSubmit = (e: FormEvent) => {\n        e.preventDefault();\n        const record: MedicalRecord = this.state.record;\n        record.student_id = this.props.student.id;\n        this.commonAjax(\n            this.studentService.submitMedicalRecord,\n            this.recordSubmitted,\n            this.showCommonErrorAlert,\n            record\n        )\n    }\n\n    render() {\n        const record = this.state.record;\n        const period = twoDigits(record.day) + \" \" + monthName(record.month - 1);\n        return (\n            <form onSubmit={this.onSubmit}>\n                <table className=\"table table-bordered table-striped\" style={{ fontSize: '0.8em' }}>\n                    <tbody>\n                        <SingleRow><h5 className='text-center'> {period}</h5></SingleRow>\n                        <SingleRow>\n                            <input type='number' onChange={this.onChange} placeholder=\"Suhu Pagi\" className=\"form-control\" name=\"temperature_morning\" value={record.temperature_morning ?? \"\"} />\n                        </SingleRow>\n                        <SingleRow>\n                            <input type='number' onChange={this.onChange} placeholder=\"Suhu Sore\" className=\"form-control\" name=\"temperature_afternoon\" value={record.temperature_afternoon ?? \"\"} />\n                        </SingleRow>\n                        <SingleRow>\n                            <Checkbox label=\"Sarapan\" onChange={this.onChange} name=\"breakfast\" checked={record.breakfast ?? false} />\n                        </SingleRow>\n                        <SingleRow>\n                            <Checkbox label=\"Makan Siang\" onChange={this.onChange} name=\"lunch\" checked={record.lunch ?? false} />\n                        </SingleRow>\n                        <SingleRow>\n                            <Checkbox label=\"Makan Malam\" onChange={this.onChange} name=\"dinner\" checked={record.dinner ?? false} />\n                        </SingleRow>\n                        <SingleRow>\n                            <Checkbox label=\"Konsumsi Obat\" onChange={this.onChange} name=\"medicine_consumption\" checked={record.medicine_consumption ?? false} />\n                        </SingleRow>\n                        <SingleRow>\n                            <Checkbox label=\"Tes Genose\" onChange={this.onChange} name=\"genose_test\" checked={record.genose_test ?? false} />\n                        </SingleRow>\n                        <SingleRow>\n                            <Checkbox label=\"Tes Antigen\" onChange={this.onChange} name=\"antigen_test\" checked={record.antigen_test ?? false} />\n                        </SingleRow>\n                        <SingleRow>\n                            <Checkbox label=\"Tes PCR\" onChange={this.onChange} name=\"pcr_test\" checked={record.pcr_test ?? false} />\n                        </SingleRow>\n                        <SingleRow>\n                            <textarea placeholder=\"Catatan\" onChange={this.onChange} style={{ fontSize: '0.9em' }} name=\"description\" value={record.description ?? \"\"}\n                                className=\"form-control\" rows={3} />\n                        </SingleRow>\n                        <SingleRow>\n                            <button className=\"btn btn-success\" type=\"submit\">\n                                <i className=\"fas fa-save\" /> {period}\n                            </button>\n                        </SingleRow>\n                    </tbody>\n                </table>\n            </form>\n        )\n    }\n}\n\nconst Checkbox = (props: { onChange(e: ChangeEvent): any, label: string, name: string, checked: boolean }) => {\n\n    return (\n        <>{props.label}\n            <input type=\"checkbox\" style={{ marginRight: 5 }} className=\"form-control\"\n                onChange={props.onChange}\n                name={props.name}\n                checked={props.checked} />\n        </>\n    )\n}\nconst SingleRow = (props: { children: any }) => {\n    return (\n        <tr><td>\n            <div className=\"text-center\" style={{ minHeight: 40 }}>{props.children}</div></td></tr>\n    )\n}\n\nexport default\n    connect(\n        mapCommonUserStateToProps, null, null, { forwardRef: true }\n    )(MedicalRecordDailyInput)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\nimport StudentForm from './StudentForm';\nimport Student from '../../../../models/Student';\nimport FilterPeriod from '../../../form/FilterPeriod';\nimport Filter from '../../../../models/commons/Filter';\nimport { getMonthDays } from '../../../../utils/DateUtil';\nimport Card from '../../../container/Card';\nimport MedicalRecord from '../../../../models/MedicalRecord';\nimport MedicalRecordDailyInput from './MedicalRecordDailyInput';\nimport StudentService from '../../../../services/StudentService';\nimport WebResponse from '../../../../models/commons/WebResponse';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\nimport { doItLater } from '../../../../utils/EventUtil';\nimport BasePage from '../../BasePage';\nimport SimpleError from '../../../alert/SimpleError';\nclass State {\n    student?: Student;\n    month: number = new Date().getMonth() + 1;\n    year: number = new Date().getFullYear();\n    mappedItems: Map<number, MedicalRecord> = new Map()\n}\nclass MedicalRecordForm extends BasePage {\n    state: State = new State();\n    studentService: StudentService;\n    inputRefs: Map<number, any> = new Map();\n    constructor(props) {\n        super(props, \"Medical Record\", true);\n        this.studentService = this.getServices().studentService;\n    }\n    setStudent = (student: Student | undefined) => {\n        if (student) {\n            student = Object.assign(new Student(), student);\n        }\n        this.setState({ student: student }, this.loadMonthlyRecord);\n    }\n    validateStudentData = () => {\n        const student = this.props.location.state?this.props.location.state.student : undefined;\n        if (student) {\n            this.setStudent(student);\n        }\n    }\n    \n    reset = () => {\n        doItLater(() => {\n            if (this.state.student)\n            this.inputRefs.forEach((ref: any, day: number) => {\n                if (ref) { ref.reset(); }\n            })\n        }, 100);\n    }\n    recordsLoaded = (response: WebResponse) => {\n\n        const mappedItems:Map<String, MedicalRecord> = this.toMap(response.items);\n        \n        this.setState({ mappedItems: mappedItems }, () => {\n            doItLater(() => {\n                this.inputRefs.forEach((ref: any, day: number) => {\n                    let record = mappedItems.get(day.toString());\n                    if (!record) {\n                        record = MedicalRecord.instance(this.state.student?.id ?? 0, day, this.state.month, this.state.year);\n                    } else {\n                        record = MedicalRecord.clone(record);\n                    }\n                    if (ref) {\n                        ref.setRecord(record);\n                    }\n                })\n            }, 100);\n        });\n    }\n\n\n    toMap = (items: MedicalRecord[]): Map<String, MedicalRecord> => {\n        const map: Map<String, MedicalRecord> = new Map();\n        for (let i = 0; i < items.length; i++) {\n            const item = items[i];\n            map.set(item.day.toString(), item);\n        }\n        return map;\n    }\n\n    loadMonthlyRecord = () => {\n        this.commonAjax(\n            this.studentService.loadMonthlyMedicalRecord,\n            this.recordsLoaded, this.showCommonErrorAlert,\n            this.state.student?.id, this.state.month, this.state.year\n        )\n    }\n\n    getFilter = (): Filter => {\n        const f = new Filter();\n        // f.month = this.state.month;\n        // f.year = this.state.year;\n        return f;\n    }\n\n    componentDidMount() {\n        this.validateLoginStatus(()=>{\n            this.scrollTop();\n            this.validateStudentData();\n        });\n    }\n    dayCount = () => {\n        return getMonthDays(this.state.month, this.state.year);\n    }\n    render() {\n        const student = this.state.student;\n        const filter = this.getFilter();\n        const dayCount = this.dayCount();\n        const days: number[] = [];\n        for (let i = 1; i <= dayCount; i++) {\n            days.push(i);\n        }\n        const gridTemplateColumns = ('150px ').repeat(dayCount);\n\n        return (\n            <div className=\"container-fluid section-body\">\n                <h2> {student ? student.user?.fullName: this.title}</h2> \n                <hr/>\n                <StudentForm setItem={this.setStudent} />\n                <p />\n                {student ?\n                    <Card>\n                        <div className=\"input-group\">\n                            <FilterPeriod date={new Date()} disableDay onChange={this.handleInputChange} />\n                            <div className=\"input-group-append\">\n                            <AnchorWithIcon iconClassName=\"fas fa-redo\" onClick={this.loadMonthlyRecord}>Load Data</AnchorWithIcon>\n                            </div>\n                        </div>\n                        <hr/>\n                        <div className=\"container-fluid  row\"> \n                            <div className=\"col-12\" style={{ overflow: 'auto' }}>\n                                <div style={{ display: 'grid', gridTemplateColumns: gridTemplateColumns }}>\n\n                                    {days.map(day =>\n                                        <MedicalRecordDailyInput key={\"record-input-\" + day} student={student}\n                                            ref={ref => {this.inputRefs.set(day, ref)}}\n                                            year={this.state.year}\n                                            month={this.state.month} day={day} />)}\n                                </div>\n                            </div>\n                        </div>\n                    </Card>\n                    : <Warning/>}\n            </div>\n        )\n    }\n\n}\n\n\nconst Warning = () => {\n    return (<SimpleError>\n                <i className=\"fas fa-exclamation-circle\" />&nbsp;Please select student <hr />\n                <AnchorWithIcon to={\"/asrama/studentlist\"} iconClassName=\"fas fa-list\">Student List</AnchorWithIcon>\n            </SimpleError> )\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(MedicalRecordForm)\n)","import React from 'react';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport Card from './../../container/Card';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport ApplicationProfile from './../../../models/ApplicationProfile';\r\nimport FormGroup from '../../form/FormGroup';\r\nclass AboutUs extends BaseComponent {\r\n    constructor(props) {\r\n        super(props, false);\r\n    }\r\n    componentDidMount() {\r\n        document.title = \"About Us\";\r\n    }\r\n    render() {\r\n        const appProfile:ApplicationProfile = this.getApplicationProfile();\r\n        return (<div className=\"section-body container-fluid\" style={{marginTop:'20px'}}>\r\n            <h2>About Us</h2>\r\n            <Card title=\"Application\">\r\n                <FormGroup label=\"Name\">{appProfile.appName}</FormGroup>\r\n                <FormGroup  ><i>{appProfile.appDescription}</i></FormGroup>\r\n                <FormGroup label=\"Contact\">{appProfile.contact}</FormGroup>\r\n                <FormGroup label=\"Address\">{appProfile.address}</FormGroup>\r\n            </Card>\r\n            <p/>\r\n            <Card title=\"Development Mode\">\r\n                {/* <FormGroup label=\"Repository\"><a target=\"_blank\" href=\"https://github.com/fajaralmu\">https://github.com/fajaralmu</a></FormGroup>\r\n                <FormGroup label=\"Front End\">React Js</FormGroup>\r\n                <FormGroup><a target=\"_blank\" href=\"https://github.com/fajaralmu/front-end-shopping-mart-v2\">https://github.com/fajaralmu/front-end-shopping-mart-v2</a></FormGroup>\r\n                <FormGroup label=\"Back End\">Java, Spring MVC</FormGroup>\r\n                <FormGroup><a target=\"_blank\" href=\"https://github.com/fajaralmu/universal-good-shop-v2\">https://github.com/fajaralmu/universal-good-shop-v2</a></FormGroup> */}\r\n            </Card>\r\n            <p/>\r\n        </div>);\r\n    }\r\n}\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps, \r\n)(AboutUs))","import React, { FormEvent } from 'react'\nimport BaseComponent from '../../BaseComponent';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\nimport MasterDataService from '../../../services/MasterDataService';\nimport Student from '../../../models/Student';\nimport WebRequest from '../../../models/commons/WebRequest';\nimport Filter from '../../../models/commons/Filter';\nimport WebResponse from '../../../models/commons/WebResponse';\nimport AnchorWithIcon from '../../navigation/AnchorWithIcon';\nimport './style.css'\nimport Class from '../../../models/Class';\n\nclass State {\n  items: Student[] = [];\n  keyword: string = \"\";\n}\nclass ClassMemberSearchForm extends BaseComponent {\n\n  state: State = new State();\n  private masterDataService: MasterDataService;\n  constructor(props) {\n    super(props, true);\n    this.masterDataService = this.getServices().masterDataService;\n  }\n  itemsLoaded = (response: WebResponse) => {\n    this.setState({ items: response.result });\n  }\n\n  loadItems = (e: FormEvent) => {\n    e.preventDefault();\n    if (\"\" == this.state.keyword) return;\n    const req: WebRequest = {\n      filter: new Filter(),\n      modelName: 'classmembers',\n    }\n    if (req.filter)\n      req.filter.fieldsFilter = {\n        'student.user.fullName': this.state.keyword\n      }\n    this.commonAjax(\n      this.masterDataService.list,\n      this.itemsLoaded,\n      this.showCommonErrorAlert,\n      req,\n      'school-data'\n    )\n  }\n  select = (s: Student) => {\n    console.log('select', s);\n    this.props.selectItem(s);\n    this.setState({ items: [], keyword: \"\" });\n  }\n  reset = () => this.setState({ items: [] });\n\n  render() {\n\n    return (\n      <form id=\"form-search-student\" onSubmit={this.loadItems}>\n        <div className=\"mb-3\" style={{ position: 'absolute' }}>\n          <div className=\"input-group\">\n            <input name=\"keyword\" className=\"form-control\" onChange={this.handleInputChange} value={this.state.keyword}\n              placeholder=\"Cari Nama\" />\n            <input type=\"submit\" value=\"Cari\" className=\"btn btn-secondary\" />\n          </div>\n          {this.state.items.length > 0 ?\n            <div className=\"bg-light border rounded border-secondary\" style={{ position: 'relative', zIndex: 10, padding: 3 }}>\n              {this.state.items.map(s => {\n                return (\n                  <div onClick={() => this.select(s)} className=\"option-item\" key={`s_form_${s.id}`}>\n                    {s.name} {s.classLevel}{s.classLetter} {s.schoolName}\n                  </div>\n                )\n              })}\n              <AnchorWithIcon iconClassName=\"fas fa-times\" className=\"btn btn-dark w-100\" onClick={this.reset} >Tutup</AnchorWithIcon>\n            </div>\n            : null}\n        </div>\n      </form>\n    )\n  }\n\n}\n\nexport default withRouter(\n  connect(\n    mapCommonUserStateToProps\n  )(ClassMemberSearchForm)\n)","import React, { ChangeEvent, FormEvent } from 'react'\nimport BasePage from '../../BasePage';\nimport { withRouter, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\nimport PointRecord from '../../../../models/PointRecord';\nimport FormGroup from '../../../form/FormGroup';\nimport Class from '../../../../models/Class';\nimport StudentService from '../../../../services/StudentService';\nimport WebResponse from '../../../../models/commons/WebResponse';\nimport Category from '../../../../models/Category';\nimport WebRequest from '../../../../models/commons/WebRequest';\nimport RulePoint from '../../../../models/RulePoint';\nimport MasterDataService from '../../../../services/MasterDataService';\nimport InputTime from '../../../form/InputTime';\nimport { parseDate } from '../../../../utils/DateUtil';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\nimport AttachmentInfo from '../../../../models/settings/AttachmentInfo';\nimport { getAttachmentInfoFromFile } from '../../../../utils/ComponentUtil';\nimport Student from '../../../../models/Student';\nimport StudentSearchForm from '../../shared/StudentSearchForm';\nimport ClassMemberSearchForm from '../../shared/ClassMemberSearchForm';\n\nclass State {\n  record: PointRecord = new PointRecord();\n  categories: Category[] = [];\n  pointsMap: Record<string, RulePoint[]> = {};\n\n  selectedCategoryId: string = \"\";\n  selectedPointId: string = \"\";\n\n  attachment: AttachmentInfo | undefined;\n}\nclass PointRecordEdit extends BasePage {\n\n  state: State = new State();\n  studentService: StudentService;\n  masterDataService: MasterDataService;\n  inputTimeRef = React.createRef<InputTime>();\n  constructor(props) {\n    super(props, \"Edit Pelanggaran\", true);\n    this.studentService = this.getServices().studentService;\n    this.masterDataService = this.getServices().masterDataService;\n  }\n\n  componentReady() {\n    this.checkPassedData();\n    this.loadCategories();\n  }\n\n  categoriesLoaded = (response: WebResponse) => {\n    this.setState({ categories: response.result.items });\n  }\n\n  loadCategories = () => {\n    this.commonAjax(\n      this.studentService.getCategories,\n      this.categoriesLoaded,\n      this.showCommonErrorAlert\n    )\n  }\n\n  rulePointsLoaded = (categoryId: string, response: WebResponse) => {\n    const pointsMap = this.state.pointsMap;\n    pointsMap[categoryId.toString()] = response.result.items;\n    this.setState({ pointsMap: pointsMap });\n  }\n  loadRulePoints = (catId: string) => {\n    if (catId === '' || this.state.pointsMap[catId] != undefined) {\n      return;\n    }\n    const req: WebRequest = {\n      filter: { limit: 0, fieldsFilter: { 'category.id=': catId } },\n      modelName: 'rule-points',\n    }\n    this.commonAjax(\n      this.masterDataService.list,\n      (resp) => this.rulePointsLoaded(catId, resp),\n      this.showCommonErrorAlert,\n      req,\n      'asrama'\n    )\n  }\n\n  checkPassedData = () => {\n    if (this.props.location && this.props.location.state) {\n      this.setState({\n        record: PointRecord.clone(this.props.location.state.record),\n        attachment: this.props.location.state.attachment\n      }, this.updateInput);\n    }\n  }\n  updateInput = () => {\n    /**\n     * time\n     */\n    if (this.inputTimeRef.current) {\n      this.inputTimeRef.current.updateFromProps();\n    }\n    /**\n     * etc\n     */\n  }\n\n  updateRecordField = (e: ChangeEvent) => {\n    const { record } = this.state;\n    const el = e.target as HTMLElement;\n    const name = el['name'];\n    const value = el['value']\n    record[name] = value;\n    this.setState({ record });\n  }\n  setSelectedRulePoint = (p: RulePoint) => {\n    const record = this.state.record;\n    record.rulePointId = p.id;\n    record.point = p.point;\n    record.ruleName = p.name;\n    this.setState({ record });\n  }\n\n  updateTime = (h: number, m: number, s: number) => {\n    const { record } = this.state;\n    record.setTime(h, m, s);\n    this.setState({ record });\n  }\n  updateDate = (e: ChangeEvent<HTMLInputElement>) => {\n    const date = parseDate(e.target.value);\n    const record = this.state.record;\n    record.time = date;\n    this.setState({ pointRecord: record });\n  }\n  submit = () => {\n    this.commonAjax(\n      this.studentService.submitPointRecord,\n      this.recordSubmitted,\n      this.showCommonErrorAlert,\n      this.state.record, this.state.attachment\n    )\n  }\n  recordSubmitted = (r: WebResponse) => {\n    this.setState({ record: new PointRecord(), attachment: undefined, selectedCategoryId: '' }, () => {\n      this.showInfo(\"Data berhasil disimpan\");\n      this.scrollTop();\n    })\n  }\n\n  validateInput = () => {\n    const { classMemberId, rulePointId } = this.state.record;\n    return (classMemberId && rulePointId)\n  }\n\n  onSubmit = (e: FormEvent) => {\n    e.preventDefault();\n    if (!this.validateInput()) {\n      this.showError(\"Input tidak lengkap\");\n      return;\n    }\n    this.showConfirmation(\"Simpan data?\")\n      .then(ok => {\n        if (ok) { this.submit(); }\n      })\n  }\n  removeImage = () => {\n    this.showConfirmationDanger(\"Hapus gambar?\")\n      .then(ok => {\n        if (ok) {\n          const { record } = this.state;\n          record.pictures = [];\n          this.setState({ record, attachment: undefined });\n        }\n      })\n  }\n  updatePicture = (e: ChangeEvent) => {\n    getAttachmentInfoFromFile(e.target as HTMLInputElement)\n      .then(attachment => {\n        this.setState({ attachment });\n      }).catch(console.error)\n  }\n  setStudent = (s: Student) => {\n    const { record } = this.state;\n    record.studentName = s.name\n    record.classMemberId = s.id;\n    record.classLetter = s.classLetter;\n    record.classLevel = s.classLevel;\n    record.schoolName = s.schoolName;\n    this.setState({ record });\n  }\n\n  updateCategory = (e: ChangeEvent<HTMLSelectElement>) => {\n    this.handleInputChange(e);\n    this.loadRulePoints(e.target.value);\n  }\n\n  updateRulePoint = (e: ChangeEvent<HTMLSelectElement>) => {\n    const { selectedCategoryId, pointsMap } = this.state;\n    const filtered = pointsMap[selectedCategoryId].filter((r) => r.id?.toString() == e.target.value);\n    if (filtered.length == 0) return;\n    this.setSelectedRulePoint(filtered[0]);\n  }\n\n  render() {\n    const { record, selectedCategoryId, pointsMap, attachment } = this.state;\n    const pictureUrl = attachment ? attachment.url : record.getPicture();\n\n    return (\n      <div className=\"section-body container-fluid\">\n        <h2>Form Input Pelanggaran</h2>\n        <hr />\n        <FormGroup label=\"Siswa\" >\n          <ClassMemberSearchForm selectItem={this.setStudent} />\n        </FormGroup>\n        {\n          record.classMemberId &&\n          <FormGroup>\n            <div>{record.studentName} {record.classLevel}{record.classLetter} {record.schoolName}\n            </div>\n          </FormGroup>\n        }\n\n        <form onSubmit={this.onSubmit}>\n          <FormGroup label=\"Pelanggaran\">\n            <p>{record.ruleName ?? '-'} {record.point ?? ''}</p>\n            <p />\n            <select value={selectedCategoryId} name=\"selectedCategoryId\" onChange={this.updateCategory} className=\"form-control\">\n              <option value=\"\">Pilih Kategori</option>\n              {this.state.categories.map((cat: Category) => {\n                return (\n                  <option key={`cat_ed_opt_${cat.id}`} value={cat.id}>\n                    {cat.name}\n                  </option>\n                )\n              })}\n            </select>\n            <p />\n            <select className=\"form-control\" onChange={this.updateRulePoint} >\n              <option value=\"\">Pilih Pelanggaran</option>\n              {\n                pointsMap[selectedCategoryId] &&\n                pointsMap[selectedCategoryId].map(p => {\n                  return (\n                    <option key={`rp_ed_opt_${p.id}`} value={p.id}>\n                      {p.name} ({p.point})\n                    </option>\n                  )\n                })\n              }\n            </select>\n          </FormGroup>\n          <FormGroup label=\"Tanggal\">\n            <input type=\"date\" className=\"form-control\" onChange={this.updateDate} name=\"date\" value={record.dateString()} />\n          </FormGroup>\n          <FormGroup label=\"Waktu\">\n            <InputTime ref={this.inputTimeRef} onChange={this.updateTime} value={record.timeString} />\n          </FormGroup>\n          <FormGroup label=\"Lokasi\">\n            <input type=\"text\" name=\"location\" onChange={this.updateRecordField} className=\"form-control\" value={record.location ?? \"\"} />\n          </FormGroup>\n          <FormGroup label=\"Deskripsi\">\n            <textarea className=\"form-control\" name=\"description\" onChange={this.updateRecordField} value={record.description ?? \"\"} />\n          </FormGroup>\n          <FormGroup label=\"Gambar\">\n            {pictureUrl ?\n              <>\n                <img src={pictureUrl} width={200} height={200} className=\"border border-dark\" />\n                <p />\n                <AnchorWithIcon className=\"btn btn-danger btn-sm\" onClick={this.removeImage} iconClassName=\"fas fa-times\"  >Hapus Gambar</AnchorWithIcon>\n              </> :\n              <div>\n                <input onChange={this.updatePicture} type=\"file\" accept=\"image/*\" className=\"form-control\" />\n              </div>\n            }\n          </FormGroup>\n          <FormGroup>\n            <Link className=\"btn btn-dark\" to=\"/asrama/pointsummary\">Kembali</Link>\n            <input type=\"submit\" className=\"btn btn-primary ml-3\" value=\"Submit\" />\n          </FormGroup>\n          {/* <FormGroup label=\"Siswa\">\n                        <input type=\"text\" className=\"form-control\" value={record.student?.user?.name} />\n                    </FormGroup> */}\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapCommonUserStateToProps\n\n  )(PointRecordEdit))\n","import React from 'react' \nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from './../../../../constant/stores';\nimport BasePage from './../../BasePage';\nimport StudentService from './../../../../services/StudentService';\nimport Student from './../../../../models/Student';\nimport { tableHeader } from './../../../../utils/CollectionUtil';\nimport WebResponse from './../../../../models/commons/WebResponse';\nimport Class from './../../../../models/Class';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\ninterface FollowUpInfo {\n    student:Student,\n    TOTAL_POINT:any,\n    FOLLOW_UP_COUNT:number,\n}\nclass State {\n    followUpInfos:FollowUpInfo[] = [];\n}\nclass FollowUpReminder extends BasePage\n{\n    state:State = new State();\n    private studentService:StudentService;\n    constructor(props) {\n        super(props, \"Follow Up Pelanggaran\",true);\n        this.studentService = this.getServices().studentService;\n    }\n    componentReady(){\n        // if (this.isAdmin()) return;\n        this.loadReminder();\n    }\n    loadReminder = () => {\n        this.commonAjax(\n            this.studentService.getFollowUpReminders,\n            this.recordsLoaded,\n            console.error\n        )\n    }\n    recordsLoaded = (r:WebResponse) => {\n        this.setState({followUpInfos:r.items});\n    }\n\n    render(){\n\n        return (\n            <div className=\"section-body container-fluid\">\n                <h2>Follow Up Pelanggaran</h2>\n                <p>Pelanggaran dengan poin di bawah {this.getApplicationProfile().warningPointLimit}</p>\n                <AnchorWithIcon iconClassName=\"fas fa-redo\" onClick={this.loadReminder} children=\"Reload\"/>\n                <table className=\"table\">\n                    {tableHeader(\"No\", \"Siswa\", \"Kelas\", \"Poin\", \"Penanganan\", \"Opsi\")}\n                    <tbody>\n                        {this.state.followUpInfos.map((info, i)=>{\n                            return (\n                                <tr key={`f-i-${i}`}>\n                                    <td>{i+1}</td>\n                                    <td>{info.student.user?.fullName}</td>\n                                    <td>{Class.studentClassString(info.student)}</td>\n                                    <td>{info.TOTAL_POINT}</td>\n                                    <td>{info.FOLLOW_UP_COUNT}</td>\n                                    <td>\n                                        <a className=\"btn btn-info btn-sm\" >\n                                            Follow Up\n                                        </a>\n                                    </td>\n                                </tr>\n                            )\n                        })}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(FollowUpReminder)\n)","\nimport BaseEntity from './BaseEntity';\n\nexport default class WarningAction extends BaseEntity {\n    name: string = \"SP1\";\n    description: string | undefined;\n    classMemberId?: number;\n    classLevel?: number;\n    classLetter?: string;\n    // time?: Date;\n    // location?: string;\n\n    classMemberName?: string;\n    schoolName?: string;\n}","import React, { ChangeEvent } from 'react'\nimport BaseManagementPage from './BaseManagementPage';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\nimport WarningAction from '../../../models/WarningAction';\nimport Filter from './../../../models/commons/Filter';\nimport WebRequest from './../../../models/commons/WebRequest';\nimport FormGroup from './../../form/FormGroup';\nimport NavigationButtons from './../../navigation/NavigationButtons';\nimport { tableHeader } from './../../../utils/CollectionUtil';\nimport EditDeleteButton from './EditDeleteButton';\nimport Class from './../../../models/Class';\nimport Modal from './../../container/Modal';\nimport StudentSearchForm from '../shared/StudentSearchForm';\nimport Student from './../../../models/Student';\nimport BaseEntity from './../../../models/BaseEntity';\nimport ClassMemberSearchForm from '../shared/ClassMemberSearchForm';\nclass State {\n  items: WarningAction[] = [];\n  filter: Filter = new Filter();\n  totalData: number = 0;\n  record: WarningAction = new WarningAction();\n}\nconst MODEL_NAME = 'warning-letters';\nconst MENU = 'asrama';\nclass WarningActionManagement extends BaseManagementPage {\n\n  state: State = new State();\n  constructor(props) {\n    super(props, MODEL_NAME, MENU);\n  }\n  setStudent = (s: Student) => {\n    const { record } = this.state;\n    record.classMemberId = s.id;\n    record.classMemberName = s.name;\n    record.classLetter = s.classLetter;\n    record.classLevel = s.classLevel;\n    record.schoolName = s.schoolName;\n    this.setState({ record });\n  }\n  emptyRecord = () => new WarningAction();\n  onSubmit = () => {\n    console.log('his.state.record', this.state.record);\n    if (!this.state.record.classMemberId) {\n      this.showError(\"Input tidak lengkap\");\n      return;\n    }\n    this.showConfirmation(\"Submit Data?\")\n      .then(ok => {\n        if (!ok) return;\n        if (this.state.record.id ?? 0 > 0) {\n          this.callApiUpdate(this.state.record.id, this.state.record);\n        } else {\n          this.callApiInsert(this.state.record);\n        }\n      })\n  }\n  render() {\n    const { filter } = this.state;\n    return (\n      <div className=\"container-fluid section-body\">\n        <h2>Peringatan</h2>\n        <hr />\n        {\n          this.isAdmin() &&\n          <RecordForm\n            formRef={this.formRef}\n            setStudent={this.setStudent}\n            resetForm={this.resetForm}\n            onSubmit={this.onSubmit}\n            record={this.state.record}\n            updateRecordProp={this.updateRecordProp}\n          />\n        }\n        <form onSubmit={this.reload}>\n          <FormGroup label=\"Cari\">\n            <select name=\"name\" className=\"form-control-sm\" value={filter.fieldsFilter['name'] ?? \"\"} onChange={this.updateFieldsFilter}>\n              <option value=\"\">Semua</option>\n              <option>SP1</option>\n              <option>SP2</option>\n              <option>SP3</option>\n            </select>\n            <input name=\"classMember.student.user.fullName\" placeholder=\"nama siswa\" className=\"form-control-sm\" value={filter.fieldsFilter['classMember.student.user.fullName'] ?? \"\"} onChange={this.updateFieldsFilter} />\n          </FormGroup>\n          <FormGroup label=\"Jumlah Tampilan\">\n            <input name=\"limit\" type=\"number\" className=\"form-control-sm\" value={filter.limit ?? 5} onChange={this.updateFilter} />\n          </FormGroup>\n          <FormGroup>\n            <input className=\"btn btn-primary btn-sm\" type=\"submit\" value=\"Submit\" />\n          </FormGroup>\n        </form>\n        <NavigationButtons\n          activePage={filter.page ?? 0}\n          limit={filter.limit ?? 10}\n          totalData={this.state.totalData}\n          onClick={this.loadAtPage}\n        />\n        <ItemsList\n          items={this.state.items}\n          isAdmin={this.isAdmin()}\n          recordLoaded={this.oneRecordLoaded}\n          recordDeleted={this.loadItems}\n          startingNumber={(filter.page ?? 0) * (filter.limit ?? 10)}\n        />\n      </div>\n    )\n  }\n\n}\ninterface ItemProps { isAdmin: boolean, startingNumber: number, items: WarningAction[], recordLoaded(item: any), recordDeleted() }\nconst ItemsList = (props: ItemProps) => {\n\n  return (\n    <div style={{ overflow: 'auto' }}>\n      <table className=\"table table-striped\">\n        {tableHeader(\"No\", \"Siswa\", \"Kelas\", \"Nama\", \"Deskripsi\", \"Tgl Simpan\", \"Opsi\")}\n        <tbody>\n          {props.items.map((item: WarningAction, i) => {\n\n            return (\n              <tr key={\"category-\" + i}>\n                <td>{i + 1 + props.startingNumber}</td>\n                <td>{item.classMemberName}</td>\n                <td>{item.classLevel}{item.classLetter} {item.schoolName}</td>\n                <td>{item.name}</td>\n                <td>{item.description}</td>\n                <td>{item.created_at}</td>\n                <td>{props.isAdmin &&\n                  <EditDeleteButton\n                    recordLoaded={props.recordLoaded}\n                    recordDeleted={props.recordDeleted}\n                    record={item}\n                    modelName={MODEL_NAME}\n                    menu={MENU}\n                  />\n                }\n                </td>\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n    </div>\n  )\n}\nconst RecordForm = (props: { formRef: React.RefObject<Modal>, setStudent(s: Student), updateRecordProp(e: ChangeEvent): any, resetForm(): any, onSubmit(): any, record: WarningAction }) => {\n  const record = props.record;\n  return (\n    <div className=\"record-form mb-3\" >\n      <Modal show={false} ref={props.formRef} toggleable={true} title=\"Record Form\" >\n        <FormGroup label=\"Siswa\">\n          <ClassMemberSearchForm selectItem={props.setStudent} />\n        </FormGroup>\n        <FormGroup>\n          {record.classMemberName ?? ''} {record.classLevel ?? ''}{record.classLetter ?? ''} {record.schoolName ?? ''}\n        </FormGroup>\n        <form onSubmit={(e) => { e.preventDefault(); props.onSubmit() }}>\n          <FormGroup label=\"Nama\">\n            <select required value={record.name} onChange={props.updateRecordProp} className=\"form-control\" name=\"name\" >\n              <option>SP1</option>\n              <option>SP2</option>\n              <option>SP3</option>\n            </select>\n          </FormGroup>\n          <FormGroup label=\"Deskripsi\">\n            <textarea required className=\"form-control\" name=\"description\" onChange={props.updateRecordProp} value={record.description ?? \"\"} />\n          </FormGroup>\n          <FormGroup>\n            <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-sm\" />\n            &nbsp;\n            <input type=\"reset\" className=\"btn btn-secondary btn-sm\" onClick={(e) => props.resetForm()} />\n          </FormGroup>\n        </form>\n      </Modal>\n    </div>\n  )\n}\n\nexport default withRouter(\n  connect(\n    mapCommonUserStateToProps\n  )(WarningActionManagement)\n)","import React, { ChangeEvent } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport FormGroup from '../../form/FormGroup';\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\nimport ApplicationProfile from './../../../models/ApplicationProfile';\nimport ConfigurationService from './../../../services/ConfigurationService';\nimport BasePage from './../BasePage';\n\nclass State {\n  applicationProfile: ApplicationProfile = {}\n}\nclass ConfigSettingPage extends BasePage {\n  readonly state = new State();\n  readonly configService: ConfigurationService;\n  constructor(props) {\n    super(props, \"Konfigurasi\", true);\n    this.configService = this.getServices().configurationService;\n  }\n\n  componentReady() {\n    this.setState({\n      applicationProfile: Object.assign({}, this.getApplicationProfile())\n    });\n  }\n\n  submit = () => {\n    this.commonAjax(\n      this.configService.update,\n      this.configUpdated,\n      this.showCommonErrorAlert,\n      this.state.applicationProfile\n    )\n  }\n  updateField = (e: ChangeEvent<HTMLInputElement>) => {\n    const { applicationProfile } = this.state;\n    applicationProfile[e.target.name] = e.target.type === 'number' ? parseInt(e.target.value) : e.target.value;\n    this.setState({ applicationProfile });\n  }\n  configUpdated = () => {\n    this.showInfo(\"Sukses, silakan muat ulang halaman\");\n  }\n  render() {\n    const profile = this.state.applicationProfile;\n    return (\n      <div className=\"container-fluid section-body\" >\n        <h2>Konfigurasi</h2>\n        <hr />\n        <div style={{ padding: 20 }} className=\"border border-secondary rounded \">\n          <form>\n            <FormGroup label=\"Nama Aplikasi\">\n              <input name='appName' onChange={this.updateField} className=\"form-control\" value={profile.appName ?? \"\"} />\n            </FormGroup>\n            <FormGroup label=\"Deskripsi Aplikasi\">\n              <input name='appDescription' onChange={this.updateField} className=\"form-control\" value={profile.appDescription ?? \"\"} />\n            </FormGroup>\n            <FormGroup label=\"Batas Poin Peringatan\">\n              <input name='warningPointLimit' onChange={this.updateField} className=\"form-control\" type=\"number\" value={profile.warningPointLimit ?? -30} />\n            </FormGroup>\n          </form>\n          <FormGroup>\n            <button className=\"btn btn-primary\" onClick={this.submit} >\n              Simpan\n            </button>\n          </FormGroup>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapCommonUserStateToProps\n  )(ConfigSettingPage)\n);","import React from 'react'\nimport BasePage from './../BasePage';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\nimport StudentService from './../../../services/StudentService';\nimport Class from './../../../models/Class';\nimport WebResponse from './../../../models/commons/WebResponse';\nimport FormGroup from '../../form/FormGroup';\nimport AttachmentInfo from './../../../models/settings/AttachmentInfo';\nimport { tableHeader } from './../../../utils/CollectionUtil';\nimport { contextPath } from './../../../constant/Url';\nimport StudentReportSummary from './StudentReportSummary';\nimport './StudentSemesterReport.scss';\n\nclass State {\n  classes: Class[] = [];\n  items: StudentReportSummary[] = [];\n}\n\nclass StudentSemesterReport extends BasePage {\n  state: State = new State();\n  private studentService: StudentService;\n  selectClassRef = React.createRef<HTMLSelectElement>();\n  constructor(props) {\n    super(props, \"Rapor Semester\", true);\n    this.studentService = this.getServices().studentService;\n  }\n\n  componentReady() {\n    this.commonAjax(\n      this.studentService.getClasses,\n      this.classesLoaded,\n      this.showCommonErrorAlert\n    );\n  }\n\n  loadRaporData = (e: any) => {\n    if (e && e.preventDefault) {\n      e.preventDefault();\n    }\n    if (!this.selectClassRef.current) {\n      return;\n    }\n    const { value: classId } = this.selectClassRef.current;\n    this.commonAjax(\n      this.studentService.getRaporData,\n      this.raporDataLoaded,\n      this.showCommonErrorAlert,\n      classId\n    )\n  }\n  downloadData = () => {\n    if (!this.selectClassRef.current) {\n      return;\n    }\n    const { value: classId } = this.selectClassRef.current;\n    this.commonAjax(\n      this.studentService.downloadRaporData,\n      this.reportCreated,\n      this.showCommonErrorAlert,\n      classId\n    )\n  }\n  downloadRapor = () => {\n    if (!this.selectClassRef.current) {\n      return;\n    }\n    const { value: classId } = this.selectClassRef.current;\n    window.open(contextPath(`pages/asrama/report/${classId}`));\n  }\n\n  reportCreated = (attachment: AttachmentInfo) => {\n    this.showConfirmation(`Save File ${attachment.name}?`)\n      .then((ok) => {\n        if (!ok) return;\n        Object.assign(document.createElement('a'), {\n          target: '_blank',\n          download: attachment.name,\n          style: { display: 'none' },\n          href: attachment.url,\n        }).click();\n      })\n\n  }\n\n  classesLoaded = (response: WebResponse) => {\n    this.setState({ classes: response.result });\n  }\n  raporDataLoaded = (response: WebResponse) => {\n    this.setState({ items: response.result });\n  }\n  get reportHeader() {\n    const headers = ['No', 'Siswa', 'Kelas']\n    const { items } = this.state;\n    if (items.length == 0) return [];\n\n    items[0].categories.forEach((cat) => {\n      headers.push(cat.name);\n      headers.push(\"Predikat\");\n      headers.push(\"Keterangan\");\n    });\n    return headers;\n  }\n  render() {\n    const { classes, items } = this.state;\n\n    return (\n      <div className=\"container-fluid section-body\">\n        <h2>{this.title}</h2>\n        <form onSubmit={this.loadRaporData} className=\"mt-5\">\n          <FormGroup label=\"Kelas\">\n            <select ref={this.selectClassRef} className=\"form-control\">\n              {classes.map((c) => {\n                const { level, letter, id, schoolName } = c;\n                return <option key={`rapor_class_${id}`} value={id}>{level}{letter} {schoolName}</option>\n              })}\n            </select>\n          </FormGroup>\n          <FormGroup>\n            <input type=\"submit\" className=\"btn btn-success\" value=\"Load Data\" />\n            <a className=\"btn btn-link ml-2\" onClick={this.downloadData} >Download Detail Data</a>\n            <a className=\"btn btn-link ml-2\" onClick={this.downloadRapor} >Download Rapor</a>\n          </FormGroup>\n        </form>\n        {\n          items.length == 0 ?\n            <div className=\"alert alert-warning\">Tidak ada data</div> :\n            <div className=\"mt-5 bg-white border border-secondary\" style={{ overflow: 'auto' }}>\n              <table id=\"table-report-summary\" className=\"table table-striped\">\n                {tableHeader(...this.reportHeader)}\n                <tbody>\n                  {items.map((item, i) => {\n                    const { classMember, categories } = item;\n                    return (\n                      <tr key={`report_sum_${classMember.id}`} >\n                        <td>{i + 1}</td>\n                        <td>{classMember.name}</td>\n                        <td>{classMember.classLevel}{classMember.classLetter}</td>\n                        {categories.map((c) => {\n                          return (\n                            <React.Fragment key={`cat_items_${c.categoryId}_${classMember.id}`}>\n                              <td>{c.score}</td>\n                              <td children={c.predicateLetter} />\n                              <td children={c.predicateDescription} />\n                            </React.Fragment>\n                          )\n                        })}\n                      </tr>\n                    )\n                  })}\n                </tbody>\n              </table>\n            </div>\n        }\n      </div>\n    )\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapCommonUserStateToProps\n  )(StudentSemesterReport)\n)","\nimport BaseEntity from './BaseEntity';\nimport Category from './Category';\nexport default class CategoryPredicate extends BaseEntity {\n    name: string | undefined;\n    code = 'A';\n    description: string | undefined;\n    ruleCategoryName;\n    ruleCategoryId: number | undefined;\n}","import React, { ChangeEvent } from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport RulePoint from '../../../models/RulePoint';\r\nimport Filter from '../../../models/commons/Filter';\r\nimport Modal from '../../container/Modal';\r\nimport FormGroup from '../../form/FormGroup';\r\nimport WebRequest from '../../../models/commons/WebRequest';\r\nimport NavigationButtons from '../../navigation/NavigationButtons';\r\nimport EditDeleteButton from './EditDeleteButton';\r\nimport { tableHeader } from '../../../utils/CollectionUtil';\r\nimport BaseManagementPage from './BaseManagementPage';\r\nimport Category from '../../../models/Category';\r\nimport WebResponse from '../../../models/commons/WebResponse';\r\nimport AnchorWithIcon from '../../navigation/AnchorWithIcon';\r\nimport CategoryPredicate from './../../../models/CategoryPredicate';\r\nclass State {\r\n  items: CategoryPredicate[] = [];\r\n  filter: Filter = new Filter();\r\n  totalData: number = 0;\r\n  record: CategoryPredicate = new CategoryPredicate();\r\n  categories: Category[] = [];\r\n  categoriesLoaded: boolean = false;\r\n\r\n}\r\nconst MODEL_NAME = 'rule-category-predicates';\r\nconst MENU = 'asrama';\r\nclass CategoryPredicateManagement extends BaseManagementPage {\r\n  state: State = new State();\r\n\r\n  constructor(props) {\r\n    super(props, MODEL_NAME, MENU);\r\n    this.state.filter.limit = 10;\r\n    this.state.filter.orderBy = 'name';\r\n  }\r\n\r\n  onSubmit = () => {\r\n    // console.debug(\"RECORD: \", this.state.record);\r\n    this.showConfirmation(\"Submit Data?\")\r\n      .then(ok => {\r\n        if (!ok) return;\r\n        if (this.state.record.id ?? 0 > 0) {\r\n          this.callApiUpdate(this.state.record.id, this.state.record);\r\n        } else {\r\n          this.callApiInsert(this.state.record);\r\n        }\r\n      })\r\n  }\r\n  componentDidMount() {\r\n    this.validateLoginStatus(() => {\r\n      this.scrollTop();\r\n      this.loadCategories();\r\n    });\r\n  }\r\n  categoriesLoaded = (response: WebResponse) => {\r\n    this.setState({ categories: response.result.items, categoriesLoaded: true }, () => { this.resetForm(); this.loadItems() });\r\n  }\r\n  categoriesNotLoaded = (response: WebResponse) => {\r\n    this.setState({ categories: [], categoriesLoaded: true }, this.resetForm);\r\n  }\r\n  loadCategories = () => {\r\n    const filter: Filter = new Filter();\r\n    filter.limit = 0;\r\n    const req: WebRequest = {\r\n      filter: filter,\r\n      modelName: 'rule-categories'\r\n    }\r\n    this.commonAjax(\r\n      this.masterDataService.list,\r\n      this.categoriesLoaded,\r\n      this.categoriesNotLoaded,\r\n      req,\r\n      'asrama'\r\n    )\r\n  }\r\n\r\n  emptyRecord = (): any => {\r\n    const record = new CategoryPredicate();\r\n    if (this.state.categories.length > 0) {\r\n      record.ruleCategoryId = this.state.categories[0].id;\r\n    }\r\n    return record;\r\n  }\r\n\r\n  render() {\r\n    const filter: Filter = this.state.filter;\r\n    const categories: Category[] = this.state.categories;\r\n    if (this.state.categoriesLoaded && categories.length == 0) {\r\n      return (\r\n        <div className=\"container-fluid section-body\">\r\n          <h2>Kategori belum ada</h2>\r\n        </div>\r\n      )\r\n    }\r\n    const selectedCategoryId = filter.fieldsFilter && filter.fieldsFilter['category_id'] ? filter.fieldsFilter['category_id'] : \"ALL\";\r\n    return (\r\n      <div className=\"container-fluid section-body\">\r\n        <h2>Predikat Rapor</h2>\r\n        <hr />\r\n        <RecordForm categories={categories} reloadCategories={this.loadCategories} formRef={this.formRef} resetForm={this.resetForm} onSubmit={this.onSubmit}\r\n          record={this.state.record} updateRecordProp={this.updateRecordProp} />\r\n        <form onSubmit={this.reload}>\r\n          <FormGroup label=\"Cari\">\r\n            <div className=\"input-group\">\r\n              <input name=\"name\" placeholder=\"nama\" className=\"form-control-sm\" value={filter.fieldsFilter ? filter.fieldsFilter['name'] : \"\"} onChange={this.updateFieldsFilter} />\r\n              <input name=\"code\" placeholder=\"kode\" className=\"form-control-sm\" value={filter.fieldsFilter ? filter.fieldsFilter['kode'] : \"\"} onChange={this.updateFieldsFilter} />\r\n              <select value={selectedCategoryId} className=\"form-control-sm\" name=\"category_id\" onChange={this.updateFieldsFilter} >\r\n                {[{ id: \"\", name: \"Semua Kategori\" }, ...categories].map((c) => {\r\n                  return <option key={\"filter-cat-\" + c.id} value={c.id}>{c.name}</option>\r\n                })}\r\n              </select>\r\n              <div className=\"input-group-append\">\r\n                <AnchorWithIcon className=\"btn btn-sm\" iconClassName=\"fas fa-redo\" onClick={this.loadCategories}>Reload</AnchorWithIcon>\r\n              </div>\r\n            </div>\r\n          </FormGroup>\r\n          <FormGroup label=\"Jumlah Tampilan\">\r\n            <input type=\"number\" name=\"limit\" className=\"form-control-sm\" value={filter.limit ?? 5} onChange={this.updateFilter} />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <input className=\"btn btn-primary btn-sm\" type=\"submit\" value=\"Submit\" />\r\n          </FormGroup>\r\n        </form>\r\n        <NavigationButtons activePage={filter.page ?? 0} limit={filter.limit ?? 5} totalData={this.state.totalData}\r\n          onClick={this.loadAtPage} />\r\n        <ItemsList\r\n          recordLoaded={this.oneRecordLoaded}\r\n          recordDeleted={this.loadItems}\r\n          startingNumber={(filter.page ?? 0) * (filter.limit ?? 10)} items={this.state.items} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\nconst ItemsList = (props: { startingNumber: number, items: CategoryPredicate[], recordLoaded(item: any), recordDeleted() }) => {\r\n\r\n  return (\r\n    <div style={{ overflow: 'auto' }}>\r\n      <table className=\"table table-striped\">\r\n        {tableHeader(\"No\", \"Kode\", \"Nama\", \"Deskripsi\", \"Kategori\", \"Opsi\")}\r\n        <tbody>\r\n          {props.items.map((item, i) => {\r\n            return (\r\n              <tr key={`RulePoint-${i}`}>\r\n                <td>{i + 1 + props.startingNumber}</td>\r\n                <td>{item.code}</td>\r\n                <td>{item.name}</td>\r\n                <td>{item.description}</td>\r\n                <td>{item.ruleCategoryName}</td>\r\n                <td>\r\n                  <EditDeleteButton\r\n                    recordLoaded={props.recordLoaded}\r\n                    recordDeleted={props.recordDeleted}\r\n                    record={item}\r\n                    modelName={MODEL_NAME}\r\n                    menu={MENU}\r\n                  />\r\n                </td>\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\nconst RecordForm = (props: {\r\n  categories: Category[], formRef: React.RefObject<Modal>,\r\n  updateRecordProp(e: ChangeEvent): any,\r\n  resetForm(): any, onSubmit(): any,\r\n  record: CategoryPredicate, reloadCategories(): any\r\n}) => {\r\n\r\n  return (\r\n    <form className=\"record-form mb-3\" onSubmit={(e) => { e.preventDefault(); props.onSubmit() }}>\r\n      <Modal show={false} ref={props.formRef} toggleable={true} title=\"Record Form\" >\r\n        <FormGroup label=\"Kode\">\r\n          <select required value={props.record.code} className=\"form-control-sm\" name=\"code\" onChange={props.updateRecordProp} >\r\n            <option>A</option>\r\n            <option>B</option>\r\n            <option>C</option>\r\n            <option>D</option>\r\n          </select>\r\n        </FormGroup>\r\n        <FormGroup label=\"Nama\">\r\n          <textarea className=\"form-control\" name=\"name\" onChange={props.updateRecordProp} value={props.record.name ?? \"\"} />\r\n        </FormGroup>\r\n        <FormGroup label=\"Deskripsi\">\r\n          <textarea className=\"form-control\" name=\"description\" onChange={props.updateRecordProp} value={props.record.description ?? \"\"} />\r\n        </FormGroup>\r\n        <FormGroup label=\"Category\">\r\n          <div className=\"input-group\">\r\n            <select required value={props.record.ruleCategoryId} className=\"form-control-sm\" name=\"ruleCategoryId\" onChange={props.updateRecordProp} >\r\n              {props.categories.map((c) => {\r\n                return <option key={\"cat-\" + c.id} value={c.id}>{c.name}</option>\r\n              })}\r\n            </select>\r\n            <div className=\"input-group-append\">\r\n              <AnchorWithIcon className=\"btn btn-sm\" iconClassName=\"fas fa-redo\" onClick={props.reloadCategories}>Reload</AnchorWithIcon>\r\n            </div>\r\n          </div>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-sm\" />\r\n          &nbsp;\r\n          <input value=\"Reset\" type=\"reset\" className=\"btn btn-secondary btn-sm\" onClick={(e) => props.resetForm()} />\r\n        </FormGroup>\r\n      </Modal>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapCommonUserStateToProps\r\n  )(CategoryPredicateManagement)\r\n)","\nimport BaseEntity from './BaseEntity';\nimport Student from './Student';\nexport default class RuleViolation extends BaseEntity {\n    name: string = \"\";\n    description: string | undefined;\n    student: Student | undefined;\n    classMemberId?: number;\n\n    classMemberName?: string;\n    classLevel?: number;\n    classLetter?: string;\n    schoolName?: string;\n    point: number = 0;\n\n}","import React, { ChangeEvent } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\nimport RuleViolation from '../../../models/RuleViolation';\nimport ClassMemberSearchForm from '../shared/ClassMemberSearchForm';\nimport BaseEntity from './../../../models/BaseEntity';\nimport Class from './../../../models/Class';\nimport Filter from './../../../models/commons/Filter';\nimport Student from './../../../models/Student';\nimport { tableHeader } from './../../../utils/CollectionUtil';\nimport Modal from './../../container/Modal';\nimport FormGroup from './../../form/FormGroup';\nimport NavigationButtons from './../../navigation/NavigationButtons';\nimport BaseManagementPage from './BaseManagementPage';\nimport EditDeleteButton from './EditDeleteButton';\n\nclass State {\n  items: RuleViolation[] = [];\n  filter: Filter = new Filter();\n  totalData: number = 0;\n  record: RuleViolation = new RuleViolation();\n}\n\nconst MODEL_NAME = 'general-broken-rules';\nconst MENU = 'asrama';\n\nclass RuleViolationManagement extends BaseManagementPage {\n\n  state: State = new State();\n  constructor(props) {\n    super(props, MODEL_NAME, MENU);\n    this.state.filter = new Filter();\n    this.state.filter.orderBy = 'classMember.student.user.fullName';\n  }\n  setStudent = (s: Student) => {\n    const record = this.state.record;\n    record.student = s;\n    record.classMemberId = s.id;\n    record.classMemberName = s.name;\n    record.classLetter = s.classLetter;\n    record.classLevel = s.classLevel;\n    record.schoolName = s.schoolName;\n    this.setState({ record });\n  }\n  emptyRecord = (): BaseEntity => {\n    return new RuleViolation();\n  }\n  onSubmit = () => {\n    if (!this.state.record.classMemberId) {\n      this.showError(\"Input tidak lengkap\");\n      return;\n    }\n    this.showConfirmation(\"Submit Data?\")\n      .then(ok => {\n        if (!ok) return;\n        if (this.state.record.id ?? 0 > 0) {\n          this.callApiUpdate(this.state.record.id, this.state.record);\n        } else {\n          this.callApiInsert(this.state.record);\n        }\n      })\n  }\n  render() {\n    const filter: Filter = this.state.filter;\n    return (\n      <div className=\"container-fluid section-body\">\n        <h2>Pelanggaran Umum</h2>\n        <hr />\n        <RecordForm formRef={this.formRef} setStudent={this.setStudent} resetForm={this.resetForm} onSubmit={this.onSubmit} record={this.state.record} updateRecordProp={this.updateRecordProp} />\n        <form onSubmit={this.reload}>\n          <FormGroup label=\"Cari\">\n            <input name=\"name\" placeholder=\"nama pelanggaran\" className=\"form-control-sm\" value={filter.fieldsFilter['name'] ?? \"\"} onChange={this.updateFieldsFilter} />\n            <input name=\"classMember.student.user.fullName\" placeholder=\"nama siswa\" className=\"form-control-sm\" value={filter.fieldsFilter['classMember.student.user.fullName'] ?? \"\"} onChange={this.updateFieldsFilter} />\n          </FormGroup>\n          <FormGroup label=\"Jumlah Tampilan\">\n            <input name=\"limit\" type=\"number\" className=\"form-control-sm\" value={filter.limit ?? 5} onChange={this.updateFilter} />\n          </FormGroup>\n          <FormGroup>\n            <input className=\"btn btn-primary btn-sm\" type=\"submit\" value=\"Submit\" />\n          </FormGroup>\n        </form>\n        <NavigationButtons\n          activePage={filter.page ?? 0}\n          limit={filter.limit ?? 10}\n          totalData={this.state.totalData}\n          onClick={this.loadAtPage}\n        />\n        <ItemsList\n          items={this.state.items}\n          isAdmin={this.isAdmin()}\n          recordLoaded={this.oneRecordLoaded}\n          recordDeleted={this.loadItems}\n          startingNumber={(filter.page ?? 0) * (filter.limit ?? 10)}\n        />\n      </div>\n    )\n  }\n\n}\ninterface ItemProps { isAdmin: boolean, startingNumber: number, items: RuleViolation[], recordLoaded(item: any), recordDeleted() }\nconst ItemsList = (props: ItemProps) => {\n\n  return (\n    <div style={{ overflow: 'auto' }}>\n      <table className=\"table table-striped\">\n        {tableHeader(\"No\", \"Siswa\", \"Kelas\", \"Nama\", \"Deskripsi\", \"Poin\", \"Opsi\")}\n        <tbody>\n          {props.items.map((item: RuleViolation, i) => {\n\n            return (\n              <tr key={\"category-\" + i}>\n                <td>{i + 1 + props.startingNumber}</td>\n                <td>{item.classMemberName}</td>\n                <td>{item.classLevel}{item.classLetter} {item.schoolName}</td>\n                <td>{item.name}</td>\n                <td>{item.description}</td>\n                <td>{item.point}</td>\n                <td>\n                  <EditDeleteButton\n                    recordLoaded={props.recordLoaded}\n                    recordDeleted={props.recordDeleted}\n                    record={item}\n                    menu={MENU}\n                    modelName={MODEL_NAME} />\n                </td>\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n    </div>\n  )\n}\nconst RecordForm = (props: { formRef: React.RefObject<Modal>, setStudent(s: Student), updateRecordProp(e: ChangeEvent): any, resetForm(): any, onSubmit(): any, record: RuleViolation }) => {\n  const record = props.record;\n  return (\n    <div className=\"record-form mb-3\" >\n      <Modal show={false} ref={props.formRef} toggleable={true} title=\"Record Form\" >\n        <FormGroup label=\"Siswa\">\n          <ClassMemberSearchForm selectItem={props.setStudent} />\n        </FormGroup>\n        <FormGroup>\n          {record.classMemberName} - {record.classLevel}{record.classLetter} {record.schoolName}\n        </FormGroup>\n        <form onSubmit={(e) => { e.preventDefault(); props.onSubmit() }}>\n          <FormGroup label=\"Pelanggaran\">\n            <input required value={record.name} onChange={props.updateRecordProp} className=\"form-control\" name=\"name\" />\n          </FormGroup>\n          <FormGroup label=\"Deskripsi\">\n            <textarea required className=\"form-control\" name=\"description\" onChange={props.updateRecordProp} value={record.description ?? \"\"} />\n          </FormGroup>\n          <FormGroup label=\"Poin\">\n            <input required className=\"form-control\" name=\"point\" onChange={props.updateRecordProp} value={record.point} />\n          </FormGroup>\n          <FormGroup>\n            <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-sm\" />\n            &nbsp;\n            <input type=\"reset\" className=\"btn btn-secondary btn-sm\" onClick={(e) => props.resetForm()} />\n          </FormGroup>\n        </form>\n      </Modal>\n    </div>\n  )\n}\n\nexport default withRouter(\n  connect(\n    mapCommonUserStateToProps\n  )(RuleViolationManagement)\n)","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../constant/stores';\r\nimport { withRouter, Switch, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Login from '../pages/login/Login';\r\nimport DashboardMain from '../pages/dashboard/main/DashboardMain';\r\nimport HomeMain from '../pages/home/HomeMain';\r\nimport Menu from '../../models/settings/Menu';\r\nimport MusyrifManagement from '../pages/management/MusyrifManagement';\r\nimport ManagementMain from '../pages/management/ManagementMain';\r\nimport CategoryManagement from '../pages/management/CategoryManagement';\r\nimport RulePointManagement from '../pages/management/RulePointManagement';\r\nimport StudentList from '../pages/asrama/StudentList';\r\nimport InputPointForm from '../pages/asrama/InputPointForm';\r\nimport PointRecordsManagement from '../pages/management/PointRecordsSummary';\r\nimport MedicalRecordForm from '../pages/asrama/medicalrecord/MedicalRecordForm';\r\nimport AboutUs from './../pages/home/AboutUs';\r\nimport Register from '../pages/login/Register';\r\nimport PointRecordEdit from '../pages/asrama/point-record/PointRecordEdit';\r\nimport FollowUpReminder from '../pages/dashboard/main/FollowUpReminder';\r\nimport WarningActionManagement from '../pages/management/WarningActionManagement';\r\nimport ConfigSettingPage from '../pages/settings/ConfigSettingPage';\r\nimport StudentSemesterReport from '../pages/report/StudentSemesterReport';\r\nimport CategoryPredicateManagement from '../pages/management/CategoryPredicateManagement';\r\nimport RuleViolationManagement from '../pages/management/RuleViolationManagement';\r\n\r\nclass ApplicationContent extends BaseComponent {\r\n\r\n  constructor(props: any) {\r\n    super(props, false);\r\n  }\r\n  setSidebarMenus = (menus: Menu[]) => {\r\n    this.props.setSidebarMenus(menus);\r\n  }\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Switch>\r\n\r\n          {/* -------- home -------- */}\r\n          <Route exact path=\"/home\" render={\r\n            (props: any) => {\r\n              return <HomeMain />\r\n            }\r\n          } />\r\n          <Route exact path=\"/\" render={\r\n            (props: any) =>\r\n              <HomeMain />\r\n          } />\r\n          <Route exact path=\"/about\" render={\r\n            (props: any) =>\r\n              <AboutUs />\r\n          } />\r\n\r\n          {/* \r\n                     \r\n                    <Route exact path=\"/management\" render={\r\n                        (props: any) => {\r\n                            console.debug(\"MANAGEMENTS path\")\r\n                            return <MasterDataMain setSidebarMenus={this.setSidebarMenus} />\r\n                        }\r\n                    } />\r\n                    <Route exact path=\"/management/:code\" render={\r\n                        (props: any) =>\r\n                            <MasterDataMain setSidebarMenus={this.setSidebarMenus} />\r\n                    } /> */}\r\n\r\n\r\n          {/* ///////// PUBLIC ///////// */}\r\n\r\n        </Switch>\r\n        <LoginRoute />\r\n        <Asrama />\r\n        <Management />\r\n        <Dashboard />\r\n        <Setting />\r\n        <Report />\r\n      </Fragment>\r\n    )\r\n  }\r\n  componentDidMount() {\r\n    // document.title = \"Login\";\r\n  }\r\n\r\n}\r\n\r\nconst Setting = (props) => {\r\n\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/settings/config\" render={\r\n        (props: any) => <ConfigSettingPage />\r\n      } />\r\n    </Switch>\r\n  )\r\n}\r\nconst Report = (props) => {\r\n\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/report/studentreport\" render={\r\n        (props: any) => <StudentSemesterReport />\r\n      } />\r\n    </Switch>\r\n  )\r\n}\r\nconst Management = (props) => {\r\n\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/management\" render={\r\n        (props: any) => <ManagementMain />\r\n      } />\r\n      <Route exact path=\"/management/musyrifmanagement\" render={\r\n        (props: any) => <MusyrifManagement />\r\n      } />\r\n      <Route exact path=\"/management/rule_category\" render={\r\n        (props: any) => <CategoryManagement />\r\n      } />\r\n      <Route exact path=\"/management/rule_point\" render={\r\n        (props: any) => <RulePointManagement />\r\n      } />\r\n      <Route exact path=\"/management/warning_action\" render={\r\n        (props: any) => <WarningActionManagement />\r\n      } />\r\n      <Route exact path=\"/management/category_predicate\" render={\r\n        (props: any) => <CategoryPredicateManagement />\r\n      } />\r\n      <Route exact path=\"/management/rule_violation\" render={\r\n        (props: any) => <RuleViolationManagement />\r\n      } />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nconst Asrama = (proos) => {\r\n\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/asrama/studentlist\" render={\r\n        (props: any) => <StudentList />\r\n      } />\r\n      <Route exact path=\"/asrama/inputpoint\" render={\r\n        (props: any) => <InputPointForm />\r\n      } />\r\n      <Route exact path=\"/asrama/pointsummary\" render={\r\n        (props: any) => <PointRecordsManagement />\r\n      } />\r\n      <Route exact path=\"/asrama/pointrecordedit\" render={\r\n        (props: any) => <PointRecordEdit />\r\n      } />\r\n      <Route exact path=\"/asrama/medicalrecord\" render={\r\n        (props: any) => <MedicalRecordForm />\r\n      } />\r\n\r\n    </Switch>\r\n  )\r\n}\r\nconst LoginRoute = (props) => {\r\n\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/login\" render={\r\n        (props: any) =>\r\n          <Login />\r\n      } />\r\n    </Switch>\r\n  )\r\n}\r\n\r\n\r\nconst Dashboard = (props) => {\r\n  return (\r\n    <Switch>\r\n      {/* -------- dashboard -------- */}\r\n      <Route exact path=\"/dashboard\" render={\r\n        (props: any) => {\r\n\r\n          console.debug(\"dashboard path\")\r\n          return <DashboardMain />\r\n        }\r\n\r\n      } />\r\n      <Route exact path=\"/dashboard/followup\" render={\r\n        (props: any) =>\r\n          <FollowUpReminder />\r\n      } />\r\n    </Switch>\r\n  )\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => ({})\r\n\r\n\r\nexport default withRouter(connect(\r\n  mapCommonUserStateToProps,\r\n  mapDispatchToProps\r\n)(ApplicationContent))","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../constant/stores';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { performLogout } from './../../redux/actionCreators';\r\nimport Menu from '../../models/settings/Menu';\r\nimport './SideBar.css'\r\n\r\nclass SideBar extends BaseComponent {\r\n    constructor(props: { sidebarMenus?: Menu[] }) {\r\n        super(props, false);\r\n    }\r\n    isSidebarActive = (menu: Menu) => {\r\n        const parentMenu: Menu = this.props.parentMenu;\r\n        if (null == parentMenu) { return false; }\r\n        const pathName = this.props.location.pathname;\r\n        return parentMenu.url + \"/\" + menu.url == pathName;\r\n    }\r\n    componentDidMount() {\r\n        window.addEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    handleScroll(event) {\r\n        let scrollTop = event.srcElement.body.scrollTop,\r\n            itemTranslate = Math.min(0, scrollTop / 3 - 60);\r\n        // console.debug(\"scrollTop: \", scrollTop);\r\n\r\n    }\r\n    render() {\r\n        const parentMenu: Menu = this.props.parentMenu;\r\n        if (null == parentMenu) { return null }\r\n        const menus: Menu[] = this.props.sidebarMenus == null ? [] : this.props.sidebarMenus;\r\n        const user = this.getLoggedUser();\r\n        return (\r\n            <ul id=\"sidebar\" className=\"sidebar-nav bg-light\">\r\n                <Brand show={parentMenu != null} brand={parentMenu} />\r\n\r\n                {menus.map(menu => {\r\n                    if (menu.userAuthorized && !menu.userAuthorized(user)) return null;\r\n                    const isActive: boolean = this.isSidebarActive(menu);\r\n                    const menuClassName = isActive ? 'menu-active' : 'regular-menu';\r\n                    return (\r\n                        <li className={\"sidebar-item \" + menuClassName} key={\"SIDEBAR_\" + menu.code}><Link to={parentMenu.url + \"/\" + menu.url}>\r\n                            <span className=\"sidebar-icon\"><i className={Menu.getIconClassName(menu)}></i></span>\r\n                            <span className={'menu-label'} >{menu.name}</span>\r\n                        </Link></li>\r\n                    )\r\n                })\r\n                }\r\n            </ul >\r\n        )\r\n    }\r\n\r\n}\r\nconst Brand = (props) => {\r\n    if (props.show == false) return null;\r\n    return (\r\n        <Fragment>\r\n            <li id=\"sidebar-brand\" className=\"sidebar-brand\" style={{ marginBottom: '20px' }}>\r\n                <div style={{\r\n                    textAlign: 'center', paddingTop: '10px',\r\n                    paddingBottom: '10px'\r\n                }}>\r\n                    <h3 className=\"text-dark\">\r\n                        <i className={Menu.getIconClassName(props.brand)}></i>\r\n                    </h3>\r\n                    <Link to={props.brand.url} style={{ textDecoration: 'none' }}><h4 className=\"text-dark\">{props.brand.name}</h4></Link>\r\n                </div>\r\n            </li>\r\n            <li className={\"sidebar-item-brand \"} >\r\n                <Link to={props.brand.url}>\r\n                    <span className=\"sidebar-icon\"><i className={Menu.getIconClassName(props.brand)}></i></span>\r\n                </Link>\r\n            </li>\r\n        </Fragment>\r\n    )\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    performLogout: (app: any) => dispatch(performLogout(app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(SideBar))","import React, { Fragment } from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../constant/stores';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { performLogout } from './../../redux/actionCreators';\r\nimport Header from '../navigation/Header';\r\nimport ApplicationContent from './ApplicationContent';\r\nimport SideBar from '../navigation/SideBar';\r\nimport './Layout.css';\r\nimport Menu from '../../models/settings/Menu';\r\nimport { getMenuByMenuPath, extractMenuPath } from './../../constant/Menus';\r\nclass IState {\r\n    showSidebar: boolean = false;\r\n    activeMenuCode: any = null;\r\n    menu?: Menu;\r\n    sidebarMenus?: Menu[]\r\n};\r\nclass MainLayout extends BaseComponent {\r\n    state: IState = new IState();\r\n    currentPathName: string = \"\";\r\n    constructor(props: any) {\r\n        super(props, false);\r\n        this.state = {\r\n            ...this.state,\r\n        }\r\n    }\r\n    setMenuNull = () => {\r\n        this.setState({ menu: undefined, showSidebar: false, activeMenuCode: null, sidebarMenus: null });\r\n    }\r\n    setMenu = (menu: Menu) => {\r\n        if (menu == null) {\r\n            return;\r\n        }\r\n        this.setState({ menu: menu, sidebarMenus: null, showSidebar: menu.showSidebar, activeMenuCode: menu.code });\r\n    }\r\n    setSidebarMenus = (menus: Menu[]) => {\r\n        // console.debug(\"Set sidebar menus: \", menus);\r\n        this.setState({ sidebarMenus: menus });\r\n    }\r\n    componentDidMount() {\r\n        this.setCurrentMenu();\r\n    }\r\n    componentDidUpdate() {\r\n        this.setCurrentMenu();\r\n    }\r\n    setCurrentMenu = () => {\r\n        const pathName = extractMenuPath(this.props.location.pathname);\r\n\r\n        if (pathName == this.currentPathName) {\r\n            return;\r\n        }\r\n        this.currentPathName = pathName;\r\n        const menu = getMenuByMenuPath(pathName);\r\n        if (menu == null) {\r\n            this.setMenuNull();\r\n        } else {\r\n            this.setMenu(menu);\r\n        }\r\n    }\r\n    getSubMenus = () :Menu[]|null => {\r\n        const menuState:Menu|undefined = this.state.menu;\r\n        if (menuState && menuState.subMenus != null && menuState.subMenus?.length > 0) {\r\n            return menuState.subMenus;\r\n        }\r\n        if (this.state.sidebarMenus) {\r\n            return this.state.sidebarMenus;\r\n        }\r\n        return null;\r\n    }\r\n    render() {\r\n        const showSidebar: boolean = this.state.showSidebar == true;\r\n        const className = showSidebar ? \"app-content\" : \"content\";\r\n        return (\r\n            <Fragment>\r\n                <Header setMenuNull={this.setMenuNull} activeMenuCode={this.state.activeMenuCode} setMenu={this.setMenu} />\r\n                <div id=\"content-wrapper\" className={\"container-fluid  \" + className}>\r\n                    <ApplicationContent setSidebarMenus={this.setSidebarMenus} />\r\n                </div>\r\n                {showSidebar ?\r\n                    <SideBar sidebarMenus={this.getSubMenus()} parentMenu={this.state.menu} />\r\n                    : null}\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    performLogout: (app: any) => dispatch(performLogout(app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(MainLayout))","\nimport React, { Component, Fragment, RefObject } from 'react';\nimport './App.css';\nimport { withRouter } from 'react-router-dom'\nimport * as actions from './redux/actionCreators'\nimport { connect } from 'react-redux'\nimport SockJsClient from 'react-stomp';\nimport * as url from './constant/Url';\nimport { mapCommonUserStateToProps } from './constant/stores';\nimport Loader from './component/loader/Loader';\nimport Alert from './component/alert/Alert';\nimport MainLayout from './component/layout/MainLayout';\nimport WebResponse from './models/commons/WebResponse';\nimport Spinner from './component/loader/Spinner';\nimport { performWebsocketConnection, setWebSocketUrl, registerWebSocketCallbacks } from './utils/websockets';\nimport UserService from './services/UserService';\nimport AnchorWithIcon from './component/navigation/AnchorWithIcon';\nimport { time } from 'console';\nimport { doItLater, updateFavicon } from './utils/EventUtil';\nimport User from './models/User';\n\nclass IState {\n  loading: boolean = false;\n  loadingPercentage: number = 0;\n  requestId?: string;\n  mainAppUpdated: Date = new Date();\n  showAlert: boolean = false;\n  realtime: boolean = false;\n  appIdStatus: string = \"Loading App Id\";\n  errorAuthenticatingApp: boolean = false;\n}\nclass App extends Component<any, IState> {\n  wsConnected: boolean = false;\n  loadings: number = 0;\n  alertTitle: String = \"Info\";\n  alertBody: any = null;\n  alertIsYesOnly: boolean = true;\n  alertIsError: boolean = false;\n  alertOnYesCallback: Function = function (e) { };\n  alertOnCancelCallback: Function = function (e) { };\n  wsUpdateHandler: Function | undefined = undefined;\n  clientRef: RefObject<SockJsClient> = React.createRef();\n  userService: UserService;\n  // alertRef: RefObject<Alert> = React.createRef();\n  alertCallback = {\n    title: \"Info\", message: \"Info\", yesOnly: false,\n    onOk: () => { }, onNo: () => { }\n  }\n\n  constructor(props: any) {\n    super(props);\n    this.state = new IState();\n    this.userService = this.props.services.userService;\n\n    this.props.setMainApp(this);\n  }\n  refresh = () => { this.setState({ mainAppUpdated: new Date() }); }\n\n  requestAppId = () => {\n    this.setState({ appIdStatus: \"Authenticating application\", errorAuthenticatingApp: false });\n    this.userService.requestApplicationId((reqIdResp) => {\n      this.getLoggedUser(reqIdResp);\n    }, this.retryRequestAppId)\n  }\n  getLoggedUser = (reqIdResp) => {\n    const onSuccess = (data) => {\n      this.setState({ errorAuthenticatingApp: false }, () => {\n        this.props.setRequestId(reqIdResp, this);\n        this.props.setLoggedUser(data.result);\n        this.refresh();\n      });\n    }\n    this.userService.getLoggedUser(onSuccess, console.error);\n  }\n  retryRequestAppId = () => {\n    this.setState({ appIdStatus: \"Authenticating application (Retrying)\", errorAuthenticatingApp: false });\n    this.userService.requestApplicationIdNoAuth((response) => {\n      this.props.setRequestId(response, this);\n      this.setState({ errorAuthenticatingApp: false });\n    },\n      () =>\n        this.setState({ errorAuthenticatingApp: true }))\n\n  }\n  incrementLoadings() {\n    this.loadings++;\n  }\n\n  decrementLoadings() {\n    this.loadings--;\n    if (this.loadings < 0) {\n      this.loadings = 0;\n    }\n  }\n\n  startLoading(realtime: boolean = false) {\n    this.incrementLoadings();\n    this.setState({ loading: true, realtime: realtime });\n  }\n\n  endLoading() {\n    this.decrementLoadings();\n    if (this.loadings == 0) {\n      if (this.state.realtime) {\n        this.setState({ loadingPercentage: 100 }, this.smoothEndLoading);\n      } else {\n        this.setState({ loading: false, loadingPercentage: 0 });\n      }\n    }\n  }\n\n  smoothEndLoading = () => {\n    doItLater(() => {\n      this.setState({ loading: false, loadingPercentage: 0 });\n    }, 100);\n  }\n\n  handleProgress = (msg: WebResponse) => {\n    const percentageFloat: number = msg.percentage ?? 0;\n    let percentage = Math.floor(percentageFloat);\n    if (percentageFloat < 0 || percentageFloat > 100) {\n      this.endLoading();\n    }\n    this.setState({ loadingPercentage: percentage });\n  }\n\n  showAlert(title: string, body: any, yesOnly: boolean, yesCallback: Function, noCallback?: Function) {\n    this.alertTitle = title;\n    this.alertBody = body;\n    this.alertIsYesOnly = yesOnly;\n    const app = this;\n    this.alertOnYesCallback = function (e) {\n      app.dismissAlert();\n      yesCallback(e);\n    }\n    if (!yesOnly) {\n      this.alertOnCancelCallback = function (e) {\n        app.dismissAlert();\n        if (noCallback != null) {\n          noCallback(e);\n        }\n      };\n    }\n    this.setState({ showAlert: true });\n  }\n\n  dismissAlert() {\n    this.alertIsError = false;\n    this.setState({ showAlert: false })\n  }\n  showAlertError(title: string, body: any, yesOnly: boolean, yesCallback: Function, noCallback?: Function) {\n    this.alertIsError = true;\n    this.showAlert(title, body, yesOnly, yesCallback, noCallback)\n  }\n\n  componentDidUpdate() {\n    // console.debug(\"APP UPDATED\");\n    if (this.props.applicationProfile) {\n      updateFavicon(this.props.applicationProfile);\n    }\n    if (this.props.requestId && !this.wsConnected) {\n      this.initWebsocket();\n    }\n  }\n\n  componentDidMount() {\n    this.requestAppId();\n    this.setState({ loadingPercentage: 0 });\n  }\n\n  initWebsocket = () => {\n    setWebSocketUrl(url.contextPath() + 'realtime-app');\n    registerWebSocketCallbacks({\n      subscribeUrl: \"/wsResp/progress/\" + this.props.requestId,\n      callback: this.handleProgress  //must use lambda\n    },\n      {\n        subscribeUrl: \"/wsResp/\" + this.props.requestId + \"/update\",\n        callback: (response) => this.handleWsUpdate(response)\n      });\n    performWebsocketConnection();\n    this.wsConnected = true;\n  }\n\n  private handleWsUpdate = (response: any) => {\n\n    if (this.wsUpdateHandler) {\n      this.wsUpdateHandler(response);\n    }\n  }\n\n  setWsUpdateHandler = (handler: Function | undefined) => {\n    this.wsUpdateHandler = handler;\n  }\n  resetWsUpdateHandler = () => {\n    this.setWsUpdateHandler(undefined);\n  }\n\n  render() {\n    if (!this.props.requestId) {\n      return (\n        <div className=\"text-center\" style={{ paddingTop: '10%' }}>\n          <h2>{this.state.appIdStatus}</h2>\n          {this.state.errorAuthenticatingApp ?\n            <AnchorWithIcon iconClassName=\"fas fa-redo\" onClick={this.retryRequestAppId} children=\"Retry\" /> :\n            <Spinner />}\n        </div>\n      )\n    }\n    return (\n      <Fragment>\n        <Loading realtime={this.state.realtime} loading={this.state.loading} loadingPercentage={this.state.loadingPercentage} />\n        {this.state.showAlert ?\n          <Alert title={this.alertTitle}\n            isError={this.alertIsError}\n            onClose={(e) => this.setState({ showAlert: false })}\n            yesOnly={this.alertIsYesOnly}\n            onYes={this.alertOnYesCallback} onNo={this.alertOnCancelCallback}\n          >{this.alertBody}</Alert> :\n          null}\n        <MainLayout />\n        {/* <SockJsClient url={usedHost + 'realtime-app'} topics={['/wsResp/progress/' + this.props.requestId]}\n\n          onMessage={(msg: WebResponse) => { this.handleMessage(msg) }}\n          ref={this.clientRef} /> */}\n      </Fragment>\n    )\n  }\n}\n\nfunction Loading(props) {\n  if (props.loading == true) {\n    return (\n      <Loader realtime={props.realtime} progress={props.loadingPercentage} text=\"Please wait...\" type=\"loading\" />\n    );\n  }\n  return null;\n}\n\n\nconst mapDispatchToProps = (dispatch: Function) => ({\n  setLoggedUser: (user: User) => dispatch(actions.setLoggedUser(user)),\n  setMainApp: (app: App) => dispatch(actions.setMainApp(app)),\n  setRequestId: (response: WebResponse, app: App) => dispatch(actions.setRequestId(response, app)),\n})\n\nexport default withRouter(connect(\n  mapCommonUserStateToProps,\n  mapDispatchToProps\n)(App))\n","import * as types from './types'\r\n\r\nexport const initState = { \r\n    mainApp: undefined\r\n\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case types.SET_MAIN_APP:\r\n              \r\n            return { ...state, mainApp: action.payload }; \r\n       \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import { AxiosResponse } from 'axios';\r\nimport { getStore } from '../redux/configureStore';\r\nexport const commonAuthorizedHeader = (contentType = 'application/json') => {\r\n  return {\r\n    'Content-Type': contentType,\r\n    'requestId': getRequestId(),//'localStorage.getItem(\"requestId\")',\r\n    'Authorization': 'Bearer ' + getLoginKey()\r\n  }\r\n};\r\nexport const commonHeader = () => {\r\n  return {\r\n    'Content-Type': 'application/json',\r\n    'requestId': getRequestId(),\r\n  }\r\n};\r\n\r\nconst LOGIN_KEY: string = \"dormitory-app-login-key-3\";\r\n\r\nexport const getRequestId = (): string => {\r\n  const store = getStore();\r\n  if (null == store) return \"\";\r\n  const state = store.getState();\r\n  return state.userState.requestId;\r\n}\r\nexport const getLoginKey = () => {\r\n  return getCookie(LOGIN_KEY);\r\n}\r\n\r\nexport const updateAccessToken = (resp: AxiosResponse) => {\r\n  if (resp && resp.headers && resp.headers['access-token']) {\r\n    const accessToken = resp.headers['access-token'];\r\n    setCookie(LOGIN_KEY, accessToken);\r\n  }\r\n}\r\nexport const setLoginKeyCookie = (cookieValue: any) => {\r\n  setCookie(LOGIN_KEY, cookieValue);\r\n}\r\nexport const setCookie = function (cname, cvalue, exdays = 1) {\r\n  var d = new Date();\r\n  d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\r\n  var expires = \"expires=\" + d.toUTCString();\r\n  document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n}\r\nexport const getCookie = function (cname) {\r\n  var name = cname + \"=\";\r\n  var decodedCookie = decodeURIComponent(document.cookie);\r\n  var ca = decodedCookie.split(';');\r\n  for (var i = 0; i < ca.length; i++) {\r\n    var c = ca[i];\r\n    while (c.charAt(0) == ' ') {\r\n      c = c.substring(1);\r\n    }\r\n    if (c.indexOf(name) == 0) {\r\n      return c.substring(name.length, c.length);\r\n    }\r\n  }\r\n  return \"\";\r\n}","import * as types from './types'\r\nimport * as menuData from '../constant/Menus' \r\nimport { setLoginKeyCookie } from './../middlewares/Common';\r\n\r\nexport const initState = {\r\n    loginKey: null,\r\n    loginStatus: false,\r\n    loginFailed: false,\r\n    menus: menuData.getMenus(),\r\n    loggedUser: null,\r\n    loginAttempt: false,\r\n    requestId: null,\r\n    applicationProfile: {},\r\n    assetsPath: \"\"\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    \r\n    let result = {};\r\n    switch (action.type) { \r\n        case types.SET_REQUEST_ID:\r\n            \r\n            result = {\r\n                ...state,\r\n                requestId: action.payload.requestId,\r\n                applicationProfile: action.payload.result ?? {},\r\n                assetsPath: \"http://FIXME\"\r\n            };\r\n            \r\n            result.loginStatus = false;\r\n            result.loggedUser = null;\r\n            // console.debug(\"result\");\r\n            // console.debug(\"action.payload.requestId: \",action.payload.message); \r\n            // console.debug(\"REQUEST_ID result.loginStatus:\", result.loginStatus)\r\n            action.payload.referer.refresh();\r\n\r\n            return result;\r\n        case types.DO_LOGIN:\r\n            result = {\r\n                ...state,\r\n                loginAttempt: true,\r\n                loginStatus: action.payload.loginStatus,\r\n                loginKey: action.payload.loginKey,\r\n                loginFailed: action.payload.loginStatus == false,\r\n                loggedUser: action.payload.loggedUser\r\n            };\r\n            return result;\r\n        case types.DO_LOGOUT:\r\n            result = {\r\n                ...state,\r\n                loginStatus: false,\r\n                loggedUser: null\r\n            };\r\n            setLoginKeyCookie(null);\r\n            return result;\r\n        case types.REFRESH_LOGIN:\r\n            result = {\r\n                ...state,\r\n                loginStatus: action.payload.loginStatus,\r\n                loggedUser: action.payload.loggedUser,\r\n                requestId: action.payload.requestId,\r\n            };\r\n            return result;\r\n        case types.GET_LOGGED_USER:\r\n            result = {\r\n                ...state, loggedUser: action.payload.data\r\n            };\r\n            return result;\r\n        case types.SET_LOGGED_USER:\r\n            result = {\r\n                ...state, loggedUser: action.payload, loginStatus: true\r\n            };\r\n            return result;\r\n        case types.SET_APPLICATION_PROFILE:\r\n            result = {\r\n                ...state, applicationProfile: action.payload.applicationProfile\r\n            };\r\n            return result;\r\n        default:\r\n            return { ...state };\r\n\r\n    }\r\n}\r\n\r\nexport default reducer;","\r\nimport { commonAuthorizedHeader, commonHeader } from '../middlewares/Common';\r\nimport WebResponse from '../models/commons/WebResponse';\r\nimport { updateAccessToken } from './../middlewares/Common';\r\nimport AttachmentInfo from '../models/settings/AttachmentInfo';\r\n\r\nconst axios = require('axios');\r\n\r\nexport const rejectedPromise = (message: any) => {\r\n  return new Promise((res, rej) => {\r\n    rej(message);\r\n  });\r\n}\r\n\r\nexport const emptyPromise = (defaultResponse: any) => new Promise(function (res, rej) {\r\n  res(defaultResponse);\r\n});\r\n\r\nexport const commonAjaxPostCalls = (endpoint: string, payload?: any, contentType = 'application/json') => {\r\n  const request = payload ?? {};\r\n  return new Promise<WebResponse>(function (resolve, reject) {\r\n    axios.post(endpoint, request, {\r\n      headers: commonAuthorizedHeader(contentType)\r\n    })\r\n      .then(axiosResponse => {\r\n        updateAccessToken(axiosResponse);\r\n        const response: WebResponse = axiosResponse.data;\r\n        response.rawAxiosResponse = axiosResponse;\r\n        if (response.code == \"00\") {\r\n\r\n          resolve(response);\r\n        }\r\n        else { reject(response); }\r\n      })\r\n      .catch((e: any) => {\r\n\r\n        console.error(e);\r\n        reject(e);\r\n      });\r\n  })\r\n}\r\nexport const commonAjaxPutCalls = (endpoint: string, payload?: any) => {\r\n  const request = payload == null ? {} : payload;\r\n  return new Promise<WebResponse>(function (resolve, reject) {\r\n    axios.put(endpoint, request, {\r\n      headers: commonAuthorizedHeader()\r\n    })\r\n      .then(axiosResponse => {\r\n        updateAccessToken(axiosResponse);\r\n        const response: WebResponse = axiosResponse.data;\r\n        response.rawAxiosResponse = axiosResponse;\r\n        if (response.code == \"00\") {\r\n\r\n          resolve(response);\r\n        }\r\n        else { reject(response); }\r\n      })\r\n      .catch((e: any) => {\r\n\r\n        console.error(e);\r\n        reject(e);\r\n      });\r\n  })\r\n}\r\nexport const commonAjaxGetCalls = (endpoint: string) => {\r\n  return new Promise<WebResponse>(function (resolve, reject) {\r\n    axios.get(endpoint, {\r\n      headers: commonAuthorizedHeader()\r\n    })\r\n      .then(axiosResponse => {\r\n        updateAccessToken(axiosResponse);\r\n        const response: WebResponse = axiosResponse.data;\r\n        response.rawAxiosResponse = axiosResponse;\r\n        if (response.code == \"00\") {\r\n\r\n          resolve(response);\r\n        }\r\n        else { reject(response); }\r\n      })\r\n      .catch((e: any) => {\r\n\r\n        console.error(e);\r\n        reject(e);\r\n      });\r\n  })\r\n}\r\nexport const commonAjaxDeleteCalls = (endpoint: string) => {\r\n  return new Promise<WebResponse>(function (resolve, reject) {\r\n    axios.delete(endpoint, {\r\n      headers: commonAuthorizedHeader()\r\n    })\r\n      .then(axiosResponse => {\r\n        updateAccessToken(axiosResponse);\r\n        const response: WebResponse = axiosResponse.data;\r\n        response.rawAxiosResponse = axiosResponse;\r\n        if (response.code == \"00\") {\r\n\r\n          resolve(response);\r\n        }\r\n        else { reject(response); }\r\n      })\r\n      .catch((e: any) => {\r\n\r\n        console.error(e);\r\n        reject(e);\r\n      });\r\n  })\r\n}\r\n\r\n\r\nexport const commonAjaxPublicPostCalls = (endpoint: string, payload?: any) => {\r\n  const request = payload == null ? {} : payload;\r\n  return new Promise<WebResponse>(function (resolve, reject) {\r\n    axios.get(endpoint, {\r\n      headers: commonHeader()\r\n    })\r\n      .then(axiosResponse => {\r\n\r\n        const response: WebResponse = axiosResponse.data;\r\n        response.rawAxiosResponse = axiosResponse;\r\n        if (response.code == \"00\") {\r\n          resolve(response);\r\n        }\r\n        else { reject(response); }\r\n      })\r\n      .catch((e: any) => {\r\n\r\n        console.error(e);\r\n        reject(e);\r\n      });\r\n  })\r\n}\r\nexport const commonAjaxPublicGetCalls = (endpoint: string) => {\r\n  return new Promise<WebResponse>(function (resolve, reject) {\r\n    axios.get(endpoint, {\r\n      headers: commonHeader()\r\n    })\r\n      .then(axiosResponse => {\r\n\r\n        const response: WebResponse = axiosResponse.data;\r\n        response.rawAxiosResponse = axiosResponse;\r\n        if (response.code == \"00\") {\r\n          resolve(response);\r\n        }\r\n        else { reject(response); }\r\n      })\r\n      .catch((e: any) => {\r\n\r\n        console.error(e);\r\n        reject(e);\r\n      });\r\n  })\r\n}\r\n\r\nexport const commonAjaxPostCallsWithBlob = (endpoint: string, payload?: any) => {\r\n  const request = payload == null ? {} : payload;\r\n  return new Promise<AttachmentInfo>(function (resolve, reject) {\r\n    axios.post(endpoint, request, {\r\n      responseType: 'blob',\r\n      headers: commonAuthorizedHeader()\r\n    })\r\n      .then(axiosResponse => {\r\n        updateAccessToken(axiosResponse);\r\n\r\n        const response: any = axiosResponse.data;\r\n        response.rawAxiosResponse = axiosResponse;\r\n        console.debug(\"axiosResponse.headers: \", axiosResponse.headers);\r\n        let contentDisposition = axiosResponse.headers[\"content-disposition\"];\r\n        let fileName = contentDisposition.split(\"filename=\")[1];\r\n        let rawSplit = fileName.split(\".\");\r\n        let extension = rawSplit[rawSplit.length - 1];\r\n        let blob = new Blob([response], { type: extension });\r\n        let url = window.URL.createObjectURL(blob);\r\n        // let a = document.createElement(\"a\");\r\n\r\n        // document.body.appendChild(a);\r\n\r\n        // a.href = url;\r\n        // a.style.display = 'none';\r\n        // a.download = fileName;\r\n        // a.click();\r\n\r\n        // window.URL.revokeObjectURL(url);\r\n        const attachmentInfo: AttachmentInfo = new AttachmentInfo();\r\n        attachmentInfo.name = fileName;\r\n        attachmentInfo.blob = blob;\r\n        attachmentInfo.url = url;\r\n        resolve(attachmentInfo);\r\n\r\n      })\r\n      .catch((e: any) => { console.error(e); reject(e); });\r\n  })\r\n}\r\nexport const commonAjaxGetCallsWithBlob = (endpoint: string) => {\r\n  return new Promise<AttachmentInfo>(function (resolve, reject) {\r\n    axios.get(endpoint, {\r\n      responseType: 'blob',\r\n      headers: commonAuthorizedHeader()\r\n    })\r\n      .then(axiosResponse => {\r\n        updateAccessToken(axiosResponse);\r\n\r\n        const response: any = axiosResponse.data;\r\n        response.rawAxiosResponse = axiosResponse;\r\n        console.debug(\"axiosResponse.headers: \", axiosResponse.headers);\r\n        let contentDisposition = axiosResponse.headers[\"content-disposition\"];\r\n        let fileName = contentDisposition.split(\"filename=\")[1];\r\n        let rawSplit = fileName.split(\".\");\r\n        let extension = rawSplit[rawSplit.length - 1];\r\n        let blob = new Blob([response], { type: extension });\r\n        let url = window.URL.createObjectURL(blob);\r\n        \r\n        const attachmentInfo: AttachmentInfo = new AttachmentInfo();\r\n        attachmentInfo.name = fileName;\r\n        attachmentInfo.blob = blob;\r\n        attachmentInfo.url = url;\r\n        resolve(attachmentInfo);\r\n\r\n      })\r\n      .catch((e: any) => { console.error(e); reject(e); });\r\n  })\r\n}","\r\nimport Filter from '../models/commons/Filter';\r\nimport WebRequest from '../models/commons/WebRequest';\r\nimport { contextPath } from './../constant/Url';\r\nimport { commonAjaxDeleteCalls, commonAjaxGetCalls, commonAjaxPostCalls, commonAjaxPostCallsWithBlob, commonAjaxPutCalls } from './Promises';\r\ntype Menus = 'asrama' | 'management' | 'school-data';\r\n\r\nexport default class MasterDataService {\r\n    private static instance?: MasterDataService;\r\n\r\n    static getInstance(): MasterDataService {\r\n        if (this.instance == null) {\r\n            this.instance = new MasterDataService();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    getOne = (menu: Menus, modelName: string, id: any) => {\r\n        const endpoint = contextPath().concat(`api/admin/${menu}/${modelName}/${id}`);\r\n        return commonAjaxGetCalls(endpoint);\r\n    }\r\n    delete = (menu: Menus, modelName: string, id: any) => {\r\n        const endpoint = contextPath().concat(`api/admin/${menu}/${modelName}/${id}`);\r\n        return commonAjaxDeleteCalls(endpoint);\r\n    }\r\n    list = (request: WebRequest, menu: Menus) => {\r\n        console.log('filter', request.filter);\r\n        const endpoint = contextPath().concat(`api/admin/${menu}/${request.modelName}`);\r\n        return commonAjaxGetCalls(endpoint + Filter.queryString(request.filter));\r\n    }\r\n\r\n    insert = (modelName: string, menu: Menus, body: any) => {\r\n        const endpoint = contextPath().concat(`api/admin/${menu}/${modelName}`);\r\n        return commonAjaxPostCalls(endpoint, body);\r\n    }\r\n    update = (modelName: string, menu: Menus, id: any, body: any) => {\r\n        const endpoint = contextPath().concat(`api/admin/${menu}/${modelName}/${id}`);\r\n        return commonAjaxPutCalls(endpoint, body);\r\n    }\r\n    generateReport(request: WebRequest) {\r\n        const endpoint: string = contextPath().concat(\"api/app/report/records\");\r\n        return commonAjaxPostCallsWithBlob(endpoint, request);\r\n\r\n    }\r\n}","\r\nimport User from './../models/User';\r\nimport WebRequest from '../models/commons/WebRequest';\r\nimport { contextPath } from './../constant/Url';\r\nimport { commonAjaxGetCalls, commonAjaxPostCalls, commonAjaxPublicGetCalls, commonAjaxPublicPostCalls } from './Promises';\r\nimport WebResponse from '../models/commons/WebResponse';\r\nimport { updateAccessToken } from './../middlewares/Common';\r\nimport { AxiosResponse } from 'axios';\r\nexport default class UserService {\r\n  private static instance?: UserService;\r\n\r\n  static getInstance = () => UserService.instance ? UserService.instance : UserService.instance = new UserService();\r\n\r\n  requestApplicationId = (callbackSuccess: (response: WebResponse) => any, callbackError: () => any) => {\r\n    const url = contextPath() + \"api/public/asrama/config\";\r\n    commonAjaxGetCalls(url).then((data) => {\r\n      if (data.code != \"00\") {\r\n        alert(\"Error requesting app ID\");\r\n        return;\r\n      }\r\n      const response = data.rawAxiosResponse as AxiosResponse;\r\n      if (!response.headers['access-token'] || response.headers['access-token'] == '') {\r\n        throw new Error('Unauthenticated');\r\n      }\r\n      updateAccessToken(response);\r\n      console.debug(\"response header:\", response.headers['access-token']);\r\n      callbackSuccess(data);\r\n    }).catch(e => {\r\n      console.error(\"ERROR requestApplicationId: \", e);\r\n      callbackError();\r\n    });\r\n  }\r\n  getLoggedUser = (callbackSuccess: (data) => any, callbackError: () => any) => {\r\n    const url = contextPath() + \"api/user\";\r\n    commonAjaxGetCalls(url).then(callbackSuccess)\r\n      .catch(e => {\r\n        console.error(\"ERROR requestApplicationId: \", e);\r\n        callbackError();\r\n      });\r\n  }\r\n  requestApplicationIdNoAuth = (callbackSuccess: (response: WebResponse) => any, callbackError: () => any) => {\r\n    const url = contextPath() + \"api/public/asrama/config\";\r\n    commonAjaxPublicGetCalls(url).then(data => {\r\n      if (data.code != \"00\") {\r\n        alert(\"Error requesting app ID\");\r\n        return;\r\n      }\r\n      callbackSuccess(data);\r\n    }).catch(e => {\r\n      console.error(\"ERROR requestApplicationId No Auth: \", e);\r\n      //   alert(\"Error, please reload OR try again\");\r\n      callbackError();\r\n    })\r\n\r\n  }\r\n\r\n}","\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport { contextPath } from './../constant/Url';\r\nimport Filter from '../models/commons/Filter';\r\nimport Employee from '../models/Employee';\r\nimport WebRequest from '../models/commons/WebRequest';\r\nexport default class MusyrifManagementService {\r\n\r\n  private static instance?: MusyrifManagementService;\r\n\r\n  static getInstance(): MusyrifManagementService {\r\n    if (this.instance == null) {\r\n      this.instance = new MusyrifManagementService();\r\n    }\r\n    return this.instance;\r\n  }\r\n  public employeeList(filter: Filter) {\r\n    return commonAjaxPostCalls(contextPath() + \"/api/musyrifmanagement/employees\", {\r\n      filter: filter\r\n    });\r\n  }\r\n  activate(emp: Employee, active: boolean) {\r\n    const path = `api/admin/asrama/musyrif/set-active/${emp.id}/${active}`;\r\n    return commonAjaxPostCalls(contextPath() + path);\r\n  }\r\n}","import { commonAjaxGetCalls, commonAjaxGetCallsWithBlob, commonAjaxPostCalls, commonAjaxPostCallsWithBlob } from './Promises';\r\nimport { contextPath } from '../constant/Url';\r\nimport PointRecord from './../models/PointRecord';\r\nimport AttachmentInfo from './../models/settings/AttachmentInfo';\r\nimport WebRequest from './../models/commons/WebRequest';\r\nimport MedicalRecord from './../models/MedicalRecord';\r\nimport WebResponse from '../models/commons/WebResponse';\r\nimport Filter from './../models/commons/Filter';\r\nexport default class StudentService {\r\n\r\n  private static instance?: StudentService;\r\n\r\n  static getInstance() {\r\n    if (this.instance == null) {\r\n      this.instance = new StudentService();\r\n    }\r\n    return this.instance;\r\n  }\r\n  public submitPointRecord(req: PointRecord, attachmentInfo?: AttachmentInfo) {\r\n    if (attachmentInfo) {\r\n      attachmentInfo.data = '';\r\n    }\r\n    const data = new FormData();\r\n    data.append('day', req.day?.toString() ?? '');\r\n    data.append('month', req.month?.toString() ?? '');\r\n    data.append('year', req.year?.toString() ?? '');\r\n    data.append('time', new Date(req.time ?? new Date()).getTime().toString());\r\n    data.append('description', req.description ?? '');\r\n    data.append('location', req.location ?? '');\r\n    data.append('rulePointId', req.rulePointId?.toString() ?? '');\r\n    data.append('classMemberId', req.classMemberId?.toString() ?? '');\r\n    const imgFile = attachmentInfo?.file;\r\n    if (imgFile)\r\n      data.append('image', imgFile);\r\n    return commonAjaxPostCalls(contextPath('api/asrama/student-points/insert'), data, 'multipart/form-data');\r\n  }\r\n  public getClasses() {\r\n    return commonAjaxGetCalls(contextPath('api/admin/school-data/classlevels'));\r\n  }\r\n  public getStudentWithPoints(filter: Filter) {\r\n    const q = Filter.queryString(filter);\r\n    return commonAjaxGetCalls(contextPath(`api/asrama/student-points${q}`));\r\n  }\r\n  public getCategories() {\r\n    return commonAjaxGetCalls(contextPath('api/admin/asrama/rule-categories'));\r\n  }\r\n  public followUp = (pointRecordId: number): Promise<WebResponse> => {\r\n    return commonAjaxPostCalls(contextPath('api/dormitorymanagement/followup'), {\r\n      record_id: pointRecordId\r\n    });\r\n  }\r\n  public getFollowUpReminders = (): Promise<WebResponse> => {\r\n    return commonAjaxPostCalls(contextPath() + 'api/dormitorymanagement/followupreminders', {});\r\n  }\r\n  public getRaporData = (classId: string): Promise<WebResponse> => {\r\n    return commonAjaxGetCalls(contextPath() + `api/asrama/report/load-data/${classId}`);\r\n  }\r\n  public downloadRaporData = (classId: string): Promise<any> => {\r\n    // return commonAjaxPostCallsWithBlob(endpoint, request);\r\n    return commonAjaxGetCallsWithBlob(contextPath() + `api/asrama/report/load-data-xls/${classId}`);\r\n  }\r\n\r\n\r\n  public submitMedicalRecord = (record: MedicalRecord) => {\r\n    return commonAjaxPostCalls(contextPath() + 'api/dormitorymanagement/submitmedicalrecord', record)\r\n  }\r\n  public loadMonthlyMedicalRecord = (studentId: number, month: number, year: number) => {\r\n    const req: WebRequest = {\r\n      filter: {\r\n        fieldsFilter: { student_id: studentId }\r\n      }\r\n    }\r\n    return commonAjaxPostCalls(contextPath() + 'api/dormitorymanagement/monthlymedicalrecord', req)\r\n  }\r\n\r\n  public setPointDropped = (id: number, dropped: boolean) => {\r\n    const path = dropped ? contextPath('api/asrama/student-points/drop-points') : contextPath('api/asrama/student-points/undrop-points');\r\n    return commonAjaxPostCalls(`${path}?id=${id}`);\r\n  }\r\n\r\n  /**\r\n   * pemutihan\r\n   * @param ids \r\n   */\r\n  public dropAll = (ids: number[]) => {\r\n    const path = contextPath('api/asrama/student-points/drop-points');\r\n    const q = '?' + ids.map(id => `id=${id}`).join('&');\r\n    return commonAjaxPostCalls(path + q);\r\n  }\r\n  /**\r\n   * reset pemutihan\r\n   * @param ids \r\n   */\r\n  public undropAll = (ids: number[]) => {\r\n    const path = contextPath('api/asrama/student-points/undrop-points');\r\n    const q = '?' + ids.map(id => `id=${id}`).join('&');\r\n    return commonAjaxPostCalls(path + q);\r\n  }\r\n\r\n}","\nimport { contextPath } from './../constant/Url';\nimport { commonAjaxPostCalls, commonAjaxGetCalls } from './Promises';\nimport ApplicationProfile from './../models/ApplicationProfile';\nimport WebRequest from './../models/commons/WebRequest';\nexport default class ConfigurationService {\n    private static instance?: ConfigurationService;\n    static getInstance(): ConfigurationService {\n        if (this.instance == null) {\n            this.instance = new ConfigurationService();\n        }\n        return this.instance;\n    }\n    update = (appProfile: ApplicationProfile) => {\n        const endpoint = contextPath().concat(\"api/admin/asrama/config\");\n        return commonAjaxPostCalls(endpoint, appProfile);\n    }\n    loadConfig = () => {\n        const endpoint = contextPath().concat(\"api/admin/asrama/config\");\n        return commonAjaxGetCalls(endpoint);\n    }\n}","\r\nimport MasterDataService from '../services/MasterDataService';\r\nimport UserService from '../services/UserService';\r\n\r\nimport Services from './../services/Services';\r\nimport MusyrifManagementService from './../services/MusyrifManagementService';\r\nimport StudentService from '../services/StudentService';\r\nimport ConfigurationService from '../services/ConfigurationService';\r\n\r\nexport const initState: { services: Services } = {\r\n    services: {\r\n        userService: UserService.getInstance(), \r\n        masterDataService: MasterDataService.getInstance(),\r\n        musyrifManagementService: MusyrifManagementService.getInstance(),\r\n        studentService: StudentService.getInstance(),\r\n        configurationService: ConfigurationService.getInstance()\r\n    }\r\n\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default reducer;","import * as appReducer from \"./appReducer\"\r\nimport * as userReducer from \"./userReducer\" \r\nimport  * as servicesReducers from './servicesReducer';\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport const rootReducer = combineReducers(\r\n    {\r\n        appState: appReducer.reducer,\r\n        userState: userReducer.reducer, \r\n        servicesState: servicesReducers.reducer\r\n    }\r\n);\r\n\r\nexport const initialState = {\r\n    appState: appReducer.initState,\r\n    userState: userReducer.initState, \r\n    servicesState: servicesReducers.initState\r\n}\r\n\r\nexport default rootReducer;","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\nimport { AxiosResponse } from 'axios';\r\nconst axios = require('axios');\r\n\r\nexport const performLoginMiddleware = store => next => action => {\r\n  if (!action.meta || action.meta.type !== types.DO_LOGIN) {\r\n    return next(action);\r\n  }\r\n  const { app } = action.meta;\r\n  const parameters = [\r\n    'username=' + action.meta.email,\r\n    'password=' + action.meta.password,\r\n    'transport_type=rest'\r\n  ];\r\n  axios.post(action.meta.url, parameters.join('&'), {\r\n    headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\r\n  }).then(axiosResponse => {\r\n    const responseJson = axiosResponse.data;\r\n    let loginKey: string = '';\r\n    let loginSuccess: boolean = false;\r\n\r\n    if (responseJson.code != null && responseJson.code == '00') {\r\n      loginKey = axiosResponse.headers['access-token'];\r\n      // console.log('api_token: ', loginKey);\r\n      loginSuccess = true;\r\n    } else {\r\n    }\r\n    let newAction = Object.assign({}, action, {\r\n      payload: {\r\n        loginStatus: loginSuccess,\r\n        loginKey: loginKey,\r\n        loggedUser: responseJson.result\r\n      }\r\n    });\r\n    common.updateAccessToken(axiosResponse);\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n  })\r\n    .catch(console.log)\r\n    .finally(() => { app.endLoading(); });\r\n\r\n}\r\n\r\n\r\nexport const getLoggedUserMiddleware = store => next => action => {\r\n  if (!action.meta || action.meta.type !== types.GET_LOGGED_USER) { return next(action); }\r\n\r\n  let headers = common.commonAuthorizedHeader();\r\n\r\n  axios.post(action.meta.url, (action.payload), {\r\n    headers: headers\r\n  }).then(response => {\r\n    const data = response.data;\r\n\r\n    if (!data) {\r\n      alert('Error performing request');\r\n      return;\r\n    }\r\n\r\n    let newAction = Object.assign({}, action, { payload: { data } });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n  })\r\n    .catch(console.log).finally(param => {\r\n      action.meta.app.endLoading();\r\n      action.meta.app.refresh();\r\n    });\r\n}\r\n\r\n\r\nexport const performLogoutMiddleware = store => next => action => {\r\n  if (!action.meta || action.meta.type !== types.DO_LOGOUT) {\r\n    return next(action);\r\n  }\r\n  const app = action.meta.app;\r\n\r\n  axios.post(action.meta.url, action.payload, {\r\n    headers: common.commonAuthorizedHeader()\r\n  })\r\n    .then((r: AxiosResponse) => {\r\n      const responseJson = r.data;\r\n      let logoutSuccess = false;\r\n      if (responseJson.code == '00') {\r\n        logoutSuccess = true;\r\n      } else {\r\n        alert('Logout Failed');\r\n      }\r\n\r\n      let newAction = Object.assign({}, action, {\r\n        payload: {\r\n          loginStatus: !logoutSuccess\r\n        }\r\n      });\r\n      delete newAction.meta;\r\n      store.dispatch(newAction);\r\n    })\r\n    .catch(console.log).finally(param => app.endLoading());\r\n}\r\n\r\nexport const setLoggedUserMiddleware = store => next => action => {\r\n  if (!action.meta || action.meta.type !== types.SET_LOGGED_USER) { return next(action); }\r\n  let newAction = Object.assign({}, action, { payload: action.payload });\r\n  delete newAction.meta;\r\n  store.dispatch(newAction);\r\n}","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\n\r\nconst POST_METHOD = \"post\"; \r\n\r\nexport const getMessagesMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_MESSAGE) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: common.commonAuthorizedHeader()\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"sendChatMessageMiddleware Response:\", data);\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n \r\nexport const storeChatMessageLocallyMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.STORE_MESSAGE) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n} \r\n\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport { initialState, rootReducer } from './reducers' \r\nimport * as userMiddleware from '../middlewares/UserMiddleware' \r\nimport * as realtimeChatMiddleware from '../middlewares/RealtimeChatMiddleware' \r\n \r\nlet store = null;\r\nexport const getStore = () => {\r\n    return store;\r\n}\r\nexport const configureStore = () => {\r\n    store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        applyMiddleware(   \r\n\r\n            //user related\r\n            userMiddleware.performLoginMiddleware,\r\n            userMiddleware.performLogoutMiddleware,  \r\n            userMiddleware.getLoggedUserMiddleware, \r\n            userMiddleware.setLoggedUserMiddleware,\r\n \r\n\r\n            /*realtime chat*/\r\n            realtimeChatMiddleware.storeChatMessageLocallyMiddleware,\r\n            realtimeChatMiddleware.getMessagesMiddleware,\r\n\r\n        )\r\n    );\r\n\r\n    return store;\r\n}\r\n   \r\n\r\nexport default configureStore;","import React from 'react'\r\nimport App from './App'\r\nimport configureStore from './redux/configureStore'\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n \r\nconst Root = (props:any)  => {\r\n\r\n    const store = configureStore();\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <App/>\r\n            </HashRouter>\r\n        </Provider>  \r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Root;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './Root.tsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}