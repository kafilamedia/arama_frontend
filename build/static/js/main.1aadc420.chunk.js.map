{"version":3,"sources":["constant/Url.js","utils/EventUtil.ts","component/alert/Alert.tsx","models/AuthorityType.ts","models/BaseEntity.ts","models/User.ts","utils/websockets.js","component/BaseComponent.tsx","constant/stores.js","redux/actionCreators.ts","redux/types.js","utils/StringUtil.ts","models/settings/Menu.ts","constant/Menus.ts","component/navigation/Header.tsx","component/loader/Spinner.tsx","component/pages/login/Login.tsx","models/settings/AttachmentInfo.ts","utils/ComponentUtil.ts","component/pages/BasePage.tsx","component/pages/dashboard/main/DashboardMain.tsx","component/pages/home/HomeMain.tsx","models/Employee.ts","utils/CollectionUtil.tsx","utils/DateUtil.ts","models/commons/Filter.ts","component/form/FormGroup.tsx","component/navigation/NavigationButtons.tsx","middlewares/UserMiddleware.ts","redux/appReducer.js","redux/userReducer.js","redux/reducers.js","redux/configureStore.js","middlewares/Common.ts","services/Promises.ts","services/MusyrifManagementService.ts","component/navigation/AnchorWithIcon.tsx","component/pages/management/EmployeeRow.tsx","component/navigation/AnchorButton.tsx","component/navigation/ToggleButton.tsx","services/MasterDataService.ts","component/pages/management/BaseManagementPage.tsx","component/pages/management/MusyrifManagement.tsx","component/pages/management/ManagementMain.tsx","models/Category.ts","component/container/Modal.tsx","component/pages/management/EditDeleteButton.tsx","component/pages/management/CategoryManagement.tsx","models/RulePoint.ts","component/pages/management/RulePointManagement.tsx","services/StudentService.ts","component/form/FilterPeriod.tsx","component/pages/asrama/StudentList.tsx","models/Student.ts","models/PointRecord.ts","component/form/InputTime.tsx","component/pages/asrama/form/FormStepThree.tsx","component/alert/SimpleError.tsx","component/pages/asrama/form/FormStepTwo.tsx","component/pages/asrama/form/FormStepOne.tsx","component/pages/asrama/InputPointForm.tsx","component/container/Card.tsx","component/pages/asrama/point-record/PointRecordDetail.tsx","component/pages/asrama/DropPointButtons.tsx","component/pages/management/PointRecordsSummary.tsx","component/pages/asrama/medicalrecord/StudentForm.tsx","models/MedicalRecord.ts","component/pages/asrama/medicalrecord/MedicalRecordDailyInput.tsx","component/pages/asrama/medicalrecord/MedicalRecordForm.tsx","component/pages/home/AboutUs.tsx","component/pages/shared/ClassMemberSearchForm.tsx","component/pages/asrama/point-record/PointRecordEdit.tsx","component/pages/dashboard/main/FollowUpReminder.tsx","models/WarningAction.ts","component/pages/management/WarningActionManagement.tsx","services/ConfigurationService.ts","component/pages/settings/ConfigSettingPage.tsx","component/pages/report/StudentSemesterReport.tsx","models/CategoryPredicate.ts","component/pages/management/CategoryPredicateManagement.tsx","models/RuleViolation.ts","component/pages/management/RuleViolationManagement.tsx","component/layout/ApplicationContent.tsx","component/navigation/SideBar.tsx","component/layout/MainLayout.tsx","component/loader/Loader.tsx","services/UserService.ts","App.tsx","inversify.config.ts","Root.tsx","serviceWorker.js","index.js"],"names":["rootValue","document","getElementById","value","contextPath","path","baseImageUrl","doItLater","callback","intervalMs","timeout","setTimeout","clearTimeout","State","backColor","marginTop","Backdrop","props","className","style","transitionDuration","backgroundColor","bgColor","Footer","ref","yesButtonRef","type","onClick","onYes","yesOnly","noButtonRef","onNo","Header","fontClassName","id","title","onClose","aria-hidden","Alert","AuthorityType","React","createRef","state","e","close","setState","isError","this","current","focus","headerClassName","display","children","Component","BaseEntity","createdAt","updatedAt","User","displayName","fullName","email","password","profileImage","authorities","name","ROLE_EMPLOYEE","requestId","role","i","length","user","Object","assign","stompClient","undefined","wsConnected","subscriptionCallbacks","Array","sendToWebsocket","url","requestObject","console","debug","send","JSON","stringify","info","BaseComponent","authenticated","parentApp","updated","Date","validateLoginStatus","isUserLoggedIn","backToLogin","sendWebSocket","payload","setWsUpdateHandler","handler","resetWsUpdateHandler","getApplicationProfile","applicationProfile","handleInputChange","event","stateFieldName","target","checked","parseInt","el","stateVal","doAjax","method","withProgress","successCallback","errorCallback","startLoading","params","then","response","catch","alert","finally","endLoading","commonAjax","commonAjaxWithProgress","getLoggedUser","loggedUser","isAdmin","hasRole","ROLE_SUPERADMIN","scrollTop","opt","top","behavior","window","scrollTo","propsAny","loginStatus","showConfirmation","body","app","Promise","resolve","reject","showAlert","showConfirmationDanger","showAlertError","showInfo","showError","refresh","forceUpdate","showCommonSuccessAlert","showCommonErrorAlert","message","error","data","mainApp","history","push","mapCommonUserStateToProps","userState","appState","performLogout","meta","concat","globalIndex","uniqueId","string","String","getUTCMilliseconds","toString","months","twoDigits","Menu","code","description","pathVariables","iconUrl","color","fontColor","active","menuClass","showSidebar","subMenus","userAuthorized","clone","element","defaultMenuIconClassName","getIconClassName","menu","getMenus","menuSet","_menus","subMenu","ROLE_ASRAMA_MUSYRIF","showNavLinks","buttonToggleNavRef","toggleNavLinks","onLogout","ok","setMenu","click","menus","profile","appName","position","zIndex","padding","margin","href","semester","year","data-toggle","data-target","aria-controls","aria-expanded","aria-label","map","isActive","activeMenuCode","key","to","setMenuNull","NavBarTop","paddingLeft","fontSize","UserIcon","withRouter","connect","dispatch","Spinner","innerDivs","width","height","visibility","show","loading","editPassword","Login","updateCredentialProperty","getAttribute","preventDefault","performLogin","onSubmit","login","onChange","marginRight","PasswordField","placeholder","required","EmailField","autoFocus","username","AttachmentInfo","file","blob","Blob","arg0","split","getAttachmentInfoFromFile","fileInput","files","reader","FileReader","readAsDataURL","onload","setUrl","result","onerror","Error","BasePage","componentReady","attachment","DashboardMain","addPointRecord","pathname","updateImage","accept","src","HomeMain","imageUrl","backgroundUrl","backgroundImage","backgroundSize","appDescription","welcoming_message","Employee","nisdm","tableHeader","values","MONTHS","leapMonths","regularMonths","getInputReadableDate","date","getFullYear","getMonth","getDate","join","parseDate","s","b","m","Filter","limit","page","orderType","orderBy","contains","exacts","module","fieldsFilter","maxValue","availabilityCheck","resetFieldsFilter","filter","endsWith","withLimit","queryString","q","prototype","hasOwnProperty","call","encodeURIComponent","updatePeriodFilter","field","val","isNaN","periodFilter","setDate","setMonth","setFullYear","FormGroup","orientation","label","generateButtonValues","totalData","currentPage","displayed_buttons","buttonCount","Math","ceil","min","max","NavigationButtons","btnIndexes","activePage","lastIndex","nextPage","previusPage","axios","require","performLoginMiddleware","store","next","action","parameters","post","headers","axiosResponse","responseJson","loginKey","loginSuccess","newAction","common","log","getLoggedUserMiddleware","param","performLogoutMiddleware","r","logoutSuccess","setLoggedUserMiddleware","initState","reducer","loginFailed","menuData","loginAttempt","assetsPath","referer","setLoginKeyCookie","rootReducer","combineReducers","appReducer","userReducer","initialState","configureStore","createStore","applyMiddleware","userMiddleware","commonAuthorizedHeader","contentType","getRequestId","getLoginKey","commonHeader","LOGIN_KEY","getState","getCookie","updateAccessToken","resp","accessToken","setCookie","cookieValue","cname","cvalue","exdays","d","setTime","getTime","expires","toUTCString","cookie","ca","decodeURIComponent","c","charAt","substring","indexOf","commonAjaxPostCalls","endpoint","request","Axios","rawAxiosResponse","commonAjaxGetCalls","get","MusyrifManagementService","injectable","emp","AnchorWithIcon","btnClassName","attributes","iconClassName","tyle","EmployeeRow","getEmployee","employee","activeStatusUpdate","onUpdated","activateMusyrif","musyrifManagementService","activate","isMusyrif","startingNumber","AnchorButton","ToggleButton","yesLabel","noLabel","MasterDataService","getOne","modelName","delete","commonAjaxDeleteCalls","list","insert","update","put","commonAjaxPutCalls","responseType","fileName","rawSplit","extension","URL","createObjectURL","attachmentInfo","commonAjaxPostCallsWithBlob","BaseManagementPage","overrideLoading","formRef","emptyRecord","loadItems","masterDataService","itemsLoaded","items","updateFilter","dataset","updateFieldsFilter","loadAtPage","updateRecordProp","record","resetForm","oneRecordLoaded","showModal","recordUpdated","hideModal","callApiInsert","callApiUpdate","reload","MusyrifManagement","setMusyrifOnly","musyrifOnly","onEmployeeStatusUpdate","EmployeeList","overflow","ManagementMain","Category","points","object","Modal","toggleable","marginBottom","footerContent","showFooter","EditDeleteButton","getRecord","rec","recordLoaded","recordLoadedForDetail","recordDeleted","loadRecord","loadRecordRequest","record_id","loadRecordForDetail","deleteRecord","hasType","types","CategoryManagement","ItemsList","item","RecordForm","RulePoint","ruleCategoryName","ruleCategoryId","point","droppable","categories","categoriesLoaded","RulePointManagement","categoriesNotLoaded","loadCategories","req","selectedCategoryId","reloadCategories","data-type","StudentService","followUp","pointRecordId","getFollowUpReminders","getRaporData","classId","downloadRaporData","submitMedicalRecord","loadMonthlyMedicalRecord","studentId","month","student_id","setPointDropped","dropped","dropAll","ids","undropAll","removeImage","FormData","append","day","time","location","rulePointId","classMemberId","imgFile","FilterPeriod","disableDay","Fragment","arr","days","classes","now","defaultFieldsFilter","StudentList","classesLoaded","studentService","getStudentWithPoints","loadClasses","getClasses","updateFieldFilter","updateSelectedClass","inputPage","inputPoint","student","updateWithPointRecord","enable","selectedClassId","showPointRecord","level","letter","schoolName","toDateString","colSpan","classLevel","classLetter","Student","nis","kelas","PointRecord","h","setHours","dateString","td","ruleName","studentName","getPicture","getTimestamp","DAYS","getDay","getHours","getMinutes","getSeconds","y","p","hour","minute","second","hours","minutesOrSeconds","InputTime","minutes","seconds","updateFromProps","updateValue","setNow","border","sec","marginLeft","pointRecord","FormStepThree","submit","updatePointRecord","updateDate","updateTime","setAttachment","removeAttachment","getAttachment","rulePoint","timeString","onBack","SimpleError","rulePoints","FormStepTwo","rulePointsLoaded","setRulePoint","loadRulePoints","getCategory","category","updateRulePoint","select","filtered","FormStepOne","setCategory","setSelectedCategory","updateCategory","formStep","savedRecord","InputPointForm","totalStep","validateStudentData","removeStudent","nextStep","step","submitRecord","insertPointRecord","recordSubmitted","back","Progress","Detail","toLocaleString","Warning","Card","PointRecordDetail","pictureUrl","timeStamp","DropPointButtons","setDropped","isDropped","selectedCategory","showFilterDetail","PointRecordSummary","classessLoaded","getCategories","showDetail","hideDetail","hideFilterDetail","openEditPage","resetFilter","itemsId","updateDroppedOption","startsWith","autoComplete","recordLoadedForEdit","optionTypes","toLocaleDateString","StudentForm","loadStudent","setSelectedItem","setItem","reset","selectedItem","onReset","cursor","ItemDetail","MedicalRecord","temperature_morning","temperature_afternoon","breakfast","lunch","dinner","medicine_consumption","genose_test","antigen_test","pcr_test","obj","instance","MedicalRecordDailyInput","setRecord","index","period","rows","Checkbox","SingleRow","minHeight","forwardRef","mappedItems","Map","MedicalRecordForm","inputRefs","setStudent","loadMonthlyRecord","forEach","recordsLoaded","toMap","set","getFilter","dayCount","getMonthDays","gridTemplateColumns","repeat","AboutUs","appProfile","contact","address","keyword","ClassMemberSearchForm","selectItem","pointsMap","selectedPointId","editMode","editModeRemoveImage","PointRecordEdit","inputTimeRef","categoryId","catId","checkPassedData","updateInput","updateRecordField","setSelectedRulePoint","validateInput","onRemoveImageOptionChanged","updatePicture","cat","htmlFor","followUpInfos","FollowUpReminder","loadReminder","warningPointLimit","TOTAL_POINT","FOLLOW_UP_COUNT","WarningAction","classMemberName","WarningActionManagement","ConfigurationService","loadConfig","ConfigSettingPage","configService","configUpdated","updateField","reportDate","StudentSemesterReport","selectClassRef","loadRaporData","raporDataLoaded","downloadData","reportCreated","downloadRapor","open","createElement","download","reportHeader","classMember","score","predicateLetter","predicateDescription","CategoryPredicate","CategoryPredicateManagement","RuleViolation","RuleViolationManagement","ApplicationContent","setSidebarMenus","exact","render","Setting","Report","Management","Asrama","proos","LoginRoute","Dashboard","SideBar","isSidebarActive","parentMenu","pathName","addEventListener","handleScroll","removeEventListener","srcElement","sidebarMenus","brand","menuClassName","Brand","textDecoration","MainLayout","currentPathName","setCurrentMenu","pathRaw","firstPath","trim","extractMenuPath","getMenuByMenuPath","getSubMenus","menuState","LoaderContent","realtime","progress","disabled","Loader","timer","clearInterval","intervalId","endMessage","withTimer","setInterval","UserService","requestApplicationId","callbackSuccess","callbackError","requestApplicationIdNoAuth","loadingPercentage","mainAppUpdated","appIdStatus","errorAuthenticatingApp","App","loadings","alertTitle","alertBody","alertIsYesOnly","alertIsError","alertOnYesCallback","alertOnCancelCallback","wsUpdateHandler","alertCallback","onOk","requestAppId","userService","reqIdResp","retryRequestAppId","setRequestId","setLoggedUser","smoothEndLoading","handleProgress","msg","percentageFloat","percentage","floor","initWebsocket","callBackObjects","registerWebSocketCallbacks","subscribeUrl","handleWsUpdate","setMainApp","incrementLoadings","decrementLoadings","yesCallback","noCallback","dismissAlert","pageIcon","link","querySelector","setAttribute","head","appendChild","updateFavicon","Loading","paddingTop","text","actions","loggedIn","inversifyContainer","Container","bind","toSelf","inSingletonScope","Root","container","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1aadc420.chunk.js","sourcesContent":["const rootValue = `${document.getElementById(\"${ROOT_PATH}\").value}`;\r\n\r\n/**\r\n * \r\n * @param {string} path \r\n * @returns \r\n */\r\nexport const contextPath = (path = null) => {\r\n    return `${rootValue}/${path ?? ''}`;\r\n}\r\nexport const baseImageUrl = () => contextPath('images/');\r\n","\r\nimport ApplicationProfile from './../models/ApplicationProfile';\r\nimport { baseImageUrl } from './../constant/Url';\r\nexport const doItLater = (callback:()=>any, intervalMs:number) => {\r\n    const timeout = setTimeout(()=>{\r\n       callback();\r\n        clearTimeout(timeout);\r\n      }, intervalMs)\r\n}\r\n\r\n\r\nexport const  updateFavicon = (profile: ApplicationProfile) => {\r\n    if (profile.pageIcon) {\r\n      let link = document.querySelector('link[rel=\"shortcut icon\"]') ||\r\n        document.querySelector('link[rel=\"icon\"]');\r\n      if (!link) {\r\n        link = document.createElement('link');\r\n        link.id = 'favicon';\r\n        link.setAttribute(\"rel\", 'shortcut icon');\r\n        document.head.appendChild(link);\r\n      }\r\n      link.setAttribute(\"href\", baseImageUrl() + profile.pageIcon);\r\n    }\r\n  }","import React, { Component } from 'react'\r\nimport { doItLater } from '../../utils/EventUtil';\r\nconst initialMargin = '-200px';\r\nconst transitionDuration = '200ms';\r\nclass State {\r\n  backColor = 'transparent';\r\n  marginTop = initialMargin;\r\n}\r\nclass Alert extends Component<any, State> {\r\n  private yesButtonRef = React.createRef<HTMLButtonElement>();\r\n  private noButtonRef = React.createRef<HTMLButtonElement>();\r\n  state = new State();\r\n  onYes = (e) => {\r\n    this.close(() => {\r\n      if (this.props.onYes) {\r\n        this.props.onYes(e);\r\n      }\r\n    });\r\n  }\r\n  close = (callback) => {\r\n    doItLater(() => {\r\n      this.setState({ backColor: 'transparent', marginTop: initialMargin }, () => {\r\n        doItLater(callback, 100);\r\n      });\r\n    }, 100);\r\n  }\r\n  onNo = (e) => {\r\n    this.close(() => {\r\n      if (this.props.onNo) {\r\n        this.props.onNo(e);\r\n      }\r\n    });\r\n  }\r\n  onClose = (e) => {\r\n    this.close(() => {\r\n      if (this.props.onClose) {\r\n        this.props.onClose(e);\r\n      }\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const isError = this.props.isError == true;\r\n    if (!isError && this.yesButtonRef.current) {\r\n      this.yesButtonRef.current.focus();\r\n    } else if (isError && this.noButtonRef.current) {\r\n      this.noButtonRef.current.focus();\r\n    } else if (isError && this.yesButtonRef.current) {\r\n      this.yesButtonRef.current.focus();\r\n    }\r\n\r\n    doItLater(() => {\r\n      this.setState({ backColor: 'rgba(100,100,100,0.7)', marginTop: '30vh' })\r\n    }, 100);\r\n  }\r\n\r\n  render() {\r\n    const title = this.props.title ? this.props.title : \"Info\";\r\n    const yesOnly = this.props.yesOnly == true;\r\n    const isError = this.props.isError == true;\r\n    const headerClassName = isError ? 'bg-danger' : 'bg-info';\r\n    const headerFontClassName = 'text-light';\r\n    return (\r\n      <>\r\n        <Backdrop bgColor={this.state.backColor} />\r\n        <div className=\"modal show\" style={{ display: 'block' }}  >\r\n          <div className=\"modal-dialog -modal-dialog-centered\"\r\n            style={{\r\n              transitionDuration: transitionDuration,\r\n              marginTop: this.state.marginTop\r\n            }}\r\n          >\r\n            <div className=\"modal-content\" style={{ marginTop: '5px', }} >\r\n              <Header fontClassName={headerFontClassName} className={headerClassName} title={title} onClose={this.onClose} />\r\n              <div className=\"modal-body\" > {this.props.children} </div>\r\n              <Footer noButtonRef={this.noButtonRef} yesButtonRef={this.yesButtonRef} yesOnly={yesOnly} onYes={this.onYes} onNo={this.onNo} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nfunction Backdrop(props) {\r\n  return (\r\n    <div className=\"modal-backdrop\" style={{ transitionDuration: transitionDuration, backgroundColor: props.bgColor }\r\n    } > </div>\r\n  );\r\n}\r\n\r\nfunction Footer(props) {\r\n  return (\r\n    <div className={`modal-footer ${props.className}`} >\r\n      <button\r\n        ref={props.yesButtonRef}\r\n        type=\"button\"\r\n        onClick={props.onYes}\r\n        className=\"btn btn-outline-primary\"\r\n      >\r\n        Yes\r\n      </button>\r\n      {\r\n        !props.yesOnly &&\r\n        <button\r\n          ref={props.noButtonRef}\r\n          type=\"button\"\r\n          onClick={props.onNo}\r\n          className=\"btn btn-outline-secondary\"\r\n        >\r\n          No\r\n        </button>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Header(props) {\r\n  return (<div className={`modal-header ${props.className}`} >\r\n    <h5 className={`modal-title ${props.fontClassName}`} id=\"exampleModalCenterTitle\">\r\n      {props.title}\r\n    </h5>\r\n    <button onClick={props.onClose} type=\"button\" className=\"close\" >\r\n      <span aria-hidden=\"true\" className={props.fontClassName}>\r\n        <i className=\"fas fa-times\" />\r\n      </span>\r\n    </button>\r\n  </div>)\r\n}\r\n\r\nexport default Alert;","\nexport   enum AuthorityType{\n    \n    ROLE_SUPERADMIN = \"ROLE_SUPERADMIN\",\n    ROLE_ASRAMA_MUSYRIF = \"ROLE_ASRAMA_MUSYRIF\",\n    ROLE_EMPLOYEE = \"ROLE_EMPLOYEE\"\n}\n","\nexport default abstract class BaseEntity {\n\tid?: number;\n\tcreatedAt?: string;\n\tupdatedAt?: string;\n}\n","import Authority from './Authority';\nimport { AuthorityType } from './AuthorityType';\nimport BaseEntity from './BaseEntity';\n\nexport default class User extends BaseEntity {\n  static clone(user: User): User {\n    return Object.assign(new User(), user);\n  }\n  hasRole(role: AuthorityType): boolean {\n    for (let i = 0; i < this.authorities.length; i++) {\n      const element = this.authorities[i];\n      if (element.name == role) {\n        return true;\n      }\n    }\n    return false;\n  }\n  displayName?: string;\n  fullName?: string;\n  email?: string;\n  password?: string;\n  profileImage?: string;\n  authorities: Authority[] = [ { name: AuthorityType.ROLE_EMPLOYEE } ];\n  requestId?: string;\n\n}\n","import { doItLater } from './EventUtil';\r\nlet stompClient = undefined;\r\nlet wsConnected = false;\r\nlet websocketUrl = undefined;\r\nconst onConnectCallbacks = new Array();\r\nconst subscriptionCallbacks = new Array();\r\n\r\nexport const isWsConnected = () => {\r\n  return wsConnected == true;\r\n}\r\nexport const setWebSocketUrl = (url) => {\r\n  websocketUrl = url;\r\n}\r\nexport const sendToWebsocket = (url, requestObject) => {\r\n  if (!wsConnected || !stompClient) {\r\n    console.info(\"Connecting\");\r\n    return false;\r\n  }\r\n  console.debug(\"SEND WEBSOCKET\")\r\n  stompClient.send(url, {}, JSON.stringify(requestObject));\r\n  return true;\r\n}\r\n\r\nexport const addOnWsConnectCallbacks = (...callbacks) => {\r\n  for (let i = 0; i < callbacks.length; i++) {\r\n    const element = callbacks[i];\r\n    onConnectCallbacks.push(element);\r\n  }\r\n}\r\n\r\nexport const performWebsocketConnection = () => {\r\n\r\n  return;\r\n  var socket = new window.SockJS(websocketUrl);\r\n  stompClient = window.Stomp.over(socket);\r\n  stompClient.connect({}, function (frame) {\r\n    wsConnected = true;\r\n    // setConnected(true);\r\n    console.log('Websocket CONNECTED: ', websocketUrl, 'frame :', frame, stompClient.ws._transport.ws.url);\r\n    console.debug(\"subscriptionCallbacks :\", subscriptionCallbacks.length);\r\n    // document.getElementById(\"ws-info\").innerHTML =\r\n    // stompClients.ws._transport.ws.url;\r\n    for (let i = 0; i < subscriptionCallbacks.length; i++) {\r\n      const callBackObject = subscriptionCallbacks[i];\r\n\r\n      if (callBackObject) {\r\n\r\n        stompClient.subscribe(callBackObject.subscribeUrl, (response) => {\r\n          var respObject = JSON.parse(response.body);\r\n          callBackObject.callback(respObject);\r\n        });\r\n      }\r\n    }\r\n\r\n    for (var i = 0; i < onConnectCallbacks.length; i++) {\r\n      const callback = onConnectCallbacks[i];\r\n      callback(frame);\r\n    }\r\n\r\n  }, (e) => {\r\n    console.warn(\"Error connection websocket, reconnect\");\r\n    doItLater(performWebsocketConnection, 2000);\r\n  });\r\n\r\n\r\n}\r\n\r\n/**\r\n * \r\n * @param  {...WsCallback} callBackObjects \r\n */\r\nexport const registerWebSocketCallbacks = (...callBackObjects) => {\r\n\r\n  if (null == callBackObjects) {\r\n    return;\r\n  }\r\n  for (var i = 0; i < callBackObjects.length; i++) {\r\n    subscriptionCallbacks.push(callBackObjects[i]);\r\n  }\r\n}\r\n","import { Component } from 'react';\r\nimport WebResponse from '../models/commons/WebResponse';\r\nimport ApplicationProfile from './../models/ApplicationProfile';\r\nimport User from './../models/User';\r\nimport { AuthorityType } from '../models/AuthorityType';\r\nimport WebRequest from '../models/commons/WebRequest';\r\nimport { sendToWebsocket } from './../utils/websockets';\r\nimport { doItLater } from './../utils/EventUtil';\r\n\r\nexport default class BaseComponent<P, S> extends Component<P, S> {\r\n  parentApp: any;\r\n  authenticated: boolean = true;\r\n  state: any = { updated: new Date() };\r\n  constructor(props: any, authenticated = false) {\r\n    super(props);\r\n\r\n    this.authenticated = authenticated\r\n    this.parentApp = props.mainApp;\r\n  }\r\n\r\n  validateLoginStatus = (callback?: () => any) => {\r\n    if (this.authenticated == false) {\r\n      if (callback) {\r\n        callback();\r\n      }\r\n      return true;\r\n    }\r\n    if (this.isUserLoggedIn() == false) {\r\n      this.backToLogin();\r\n      return false;\r\n    }\r\n    if (callback) {\r\n      callback();\r\n    }\r\n    return true;\r\n  }\r\n\r\n  protected sendWebSocket = (url: string, payload: WebRequest) => {\r\n    sendToWebsocket(url, payload);\r\n  }\r\n\r\n  protected setWsUpdateHandler = (handler: Function | undefined) => {\r\n    this.parentApp?.setWsUpdateHandler(handler);\r\n  }\r\n  protected resetWsUpdateHandler = () => {\r\n    this.parentApp?.resetWsUpdateHandler();\r\n  }\r\n\r\n  getApplicationProfile = (): ApplicationProfile => {\r\n    return (this.props as any).applicationProfile;\r\n  }\r\n\r\n  handleInputChange = (event: any, stateFieldName?: string | undefined) => {\r\n    const target = event.target;\r\n    let value = target.type == 'checkbox' ? target.checked : target.value;\r\n    if (target.type == 'number') {\r\n      value = parseInt(value);\r\n    }\r\n    if (stateFieldName) {\r\n      const el = this.state[stateFieldName];\r\n      el[target.name] = value;\r\n      const stateVal: any = { [stateFieldName]: el };\r\n      this.setState(stateVal);\r\n    } else {\r\n      const stateVal: any = { [target.name]: value };\r\n      this.setState(stateVal);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * \r\n   * @param {boolean} withProgress \r\n   */\r\n  startLoading(withProgress: boolean) {\r\n    this.parentApp?.startLoading(withProgress);\r\n  }\r\n\r\n  endLoading() {\r\n    this.parentApp?.endLoading();\r\n  }\r\n  /**\r\n   * api response must be instance of WebResponse\r\n   * @param method returning Promise\r\n   * @param withProgress \r\n   * @param successCallback \r\n   * @param errorCallback \r\n   * @param params \r\n   */\r\n  doAjax = (method: Function, withProgress: boolean, successCallback: Function, errorCallback?: Function, ...params: any) => {\r\n    this.startLoading(withProgress);\r\n\r\n    method(...params).then((response: WebResponse) => {\r\n      if (successCallback) {\r\n        successCallback(response);\r\n      }\r\n    }).catch((e) => {\r\n      if (errorCallback) {\r\n        errorCallback(e);\r\n      } else {\r\n        if (typeof (e) == 'string') {\r\n          alert(\"Operation Failed: \" + e);\r\n        }\r\n        alert(\"resource not found\");\r\n      }\r\n    }).finally(() => {\r\n      this.endLoading();\r\n    })\r\n  }\r\n\r\n  commonAjax = (method: Function, successCallback: Function, errorCallback: Function, ...params: any) => {\r\n    this.doAjax(method, false, successCallback, errorCallback, ...params);\r\n  }\r\n  commonAjaxWithProgress = (method: Function, successCallback: Function, errorCallback: Function, ...params: any) => {\r\n    this.doAjax(method, true, successCallback, errorCallback, ...params);\r\n  }\r\n  getLoggedUser = (): User | undefined => {\r\n    const user: User | undefined = (this.props as any).loggedUser;\r\n    if (!user) return undefined;\r\n    user.password = \"^_^\";\r\n    return Object.assign(new User(), user);\r\n  }\r\n  isAdmin = (): boolean => {\r\n    const user = this.getLoggedUser();\r\n    if (!user) return false;\r\n    return user.hasRole(AuthorityType.ROLE_SUPERADMIN);\r\n  }\r\n  scrollTop = () => {\r\n    // console.info(\"SCROLL TOP\");\r\n    const opt: ScrollToOptions = { top: 0, behavior: 'smooth' };\r\n    doItLater(() => {\r\n      window.scrollTo(opt);\r\n    }, 100);\r\n  }\r\n  get propsAny() {\r\n    return this.props as any;\r\n  }\r\n  isUserLoggedIn = (): boolean => {\r\n    const loggedIn = true == this.propsAny.loginStatus && null != this.propsAny.loggedUser;\r\n    return loggedIn;\r\n  }\r\n  showConfirmation = (body: any): Promise<boolean> => {\r\n    const app = this;\r\n    return new Promise(function (resolve, reject) {\r\n      const onYes = function (e) {\r\n        resolve(true);\r\n      }\r\n      const onNo = function (e) {\r\n        resolve(false);\r\n      }\r\n      app.parentApp.showAlert(\"Konfirmasi\", body, false, onYes, onNo);\r\n    });\r\n\r\n  }\r\n  showConfirmationDanger = (body: any): Promise<any> => {\r\n    const app = this;\r\n    return new Promise(function (resolve, reject) {\r\n      const onYes = function (e) {\r\n        resolve(true);\r\n      }\r\n      const onNo = function (e) {\r\n        resolve(false);\r\n      }\r\n      app.parentApp.showAlertError(\"Konfirmasi\", body, false, onYes, onNo);\r\n    });\r\n\r\n  }\r\n  showInfo = (body: any) => {\r\n    this.parentApp.showAlert(\"Info\", body, true, function () { });\r\n  }\r\n  showError = (body: any) => {\r\n    this.parentApp.showAlertError(\"Error\", body, true, function () { });\r\n  }\r\n\r\n  backToLogin() {\r\n    if (!this.authenticated || this.propsAny.history == null) {\r\n      return;\r\n    }\r\n    this.propsAny.history.push(\"/login\");\r\n  }\r\n  refresh = () => this.forceUpdate();\r\n  showCommonSuccessAlert = () => {\r\n    this.showInfo(\"Success\");\r\n  }\r\n  showCommonErrorAlert = (e: any) => {\r\n    console.error(e);\r\n\r\n    let message;\r\n    if (e.response && e.response.data) {\r\n      message = e.response.data.message;\r\n    } else {\r\n      message = e;\r\n    }\r\n    this.showError(\"Operasi Gagal: \" + message);\r\n  }\r\n  componentDidMount() {\r\n    if (this.validateLoginStatus()) {\r\n    }\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.authenticated == true && this.isUserLoggedIn() == false) {\r\n      console.debug(typeof this, \"BACK TO LOGIN\");\r\n      this.validateLoginStatus();\r\n    }\r\n  }\r\n}","\r\nexport const mapCommonUserStateToProps = (state) => {\r\n    return {\r\n        applicationProfile: state.userState.applicationProfile,\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n        requestId: state.userState.requestId, \r\n        mainApp: state.appState.mainApp\r\n    }\r\n}","import * as types from './types'\r\nimport * as url from '../constant/Url'\r\nimport { contextPath } from '../constant/Url';\r\nimport User from './../models/User';\r\nimport ApplicationProfile from './../models/ApplicationProfile';\r\nimport WebResponse from '../models/commons/WebResponse';\r\n\r\nconst usedHost = url.contextPath();\r\nconst apiEntityBaseUrl = usedHost + \"api/app/entity/\"\r\nconst apiAdmin = usedHost + \"api/app/admin/\"\r\n\r\nexport const setRequestId = (data: WebResponse, app) => ({\r\n  type: types.SET_REQUEST_ID,\r\n  payload: { loginStatus: data.loggedIn, referer: app, ...data },\r\n  meta: {\r\n    type: types.SET_REQUEST_ID,\r\n  }\r\n});\r\n\r\nexport const performLogout = (app) => {\r\n  app.startLoading();\r\n  let loginRequest = {\r\n    type: types.DO_LOGOUT,\r\n    payload: {},\r\n    meta: { app: app, type: types.DO_LOGOUT, url: contextPath().concat(\"api/user/logout\") }\r\n  };\r\n  return loginRequest;\r\n}\r\n\r\nexport const performLogin = (email, password, app) => {\r\n  app.startLoading();\r\n  let loginRequest = {\r\n    type: types.DO_LOGIN,\r\n    payload: {},\r\n    meta: {\r\n      type: types.DO_LOGIN,\r\n      url: contextPath().concat(\"login\"),\r\n      email: email, password: password,\r\n      app: app\r\n    }\r\n  };\r\n  return loginRequest;\r\n}\r\n\r\nexport const getLoggedUser = (app) => {\r\n  app.startLoading();\r\n  let request = {\r\n    type: types.GET_LOGGED_USER,\r\n    payload: {},\r\n    meta: { type: types.GET_LOGGED_USER, url: contextPath('api/user'), app }\r\n  };\r\n  return request;\r\n}\r\n\r\nexport const setLoggedUser = (user: User) => ({\r\n  type: types.SET_LOGGED_USER,\r\n  payload: Object.assign(new User(), user),\r\n  meta: { type: types.SET_LOGGED_USER }\r\n});\r\n\r\nexport const setApplicationProfile = (applicationProfile: ApplicationProfile) => ({\r\n  type: types.SET_APPLICATION_PROFILE,\r\n  payload: { applicationProfile },\r\n  meta: { type: types.SET_APPLICATION_PROFILE }\r\n});\r\n\r\nexport const setMainApp = (mainApp: any) => ({\r\n  type: types.SET_MAIN_APP,\r\n  payload: mainApp,\r\n  meta: { type: types.SET_MAIN_APP }\r\n});\r\n\r\n","/**\r\n * \r\n */\r\n \r\nexport const DO_LOGIN = \"do_login\";\r\nexport const DO_LOGOUT = \"do_logout\";    \r\nexport const SET_REQUEST_ID = \"SET_REQUEST_ID\"; \r\nexport const SET_MAIN_APP = \"SET_MAIN_APP\"; \r\nexport const REFRESH_LOGIN = \"refresh_login\";\r\nexport const GET_LOGGED_USER = \"get_logged_user\";\r\nexport const SET_LOGGED_USER = \"set_logged_user\";\r\nexport const SET_APPLICATION_PROFILE = \"SET_APPLICATION_PROFILE\";","let globalIndex = 1;\r\nexport const uniqueId = function () {\r\n\tlet string = new String(new Date().getUTCMilliseconds()).toString();\r\n\tglobalIndex++;\r\n\treturn globalIndex + '-' + string;\r\n}\r\n\r\nexport function beautifyNominal(val:any) {\r\n\tif (val == '' || val == null) return '0';\r\n\tconst isDecimal:boolean = new String(val).includes('.');\r\n\tconst isNegative:boolean = new String(val).startsWith('-');\r\n\tif (isNegative) {\r\n\t\tval = new String(val).replace('-','');\r\n\t}\r\n\tconst rawVal = isDecimal? parseInt( new String(val).split('.')[0]) : parseInt(val);\r\n\tlet nominal = Math.abs(rawVal).toString();\r\n\tlet result = '';\r\n\tif (nominal.length > 3) { \r\n\t\tlet zeroIndex: number = 0;\r\n\t\tfor (let i = nominal.length - 1; i > 0; i--) {\r\n\t\t\tzeroIndex++; \r\n\t\t\tresult = nominal[i] + result;\r\n\t\t\tif (zeroIndex == 3 ) {\r\n\t\t\t\tresult = '.' + result;\r\n\t\t\t\tzeroIndex = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\tresult = nominal[0] + result;\r\n\t} else {\r\n\t\tresult = val;\r\n\t}\r\n\tif (rawVal < 0) {\r\n\t\treturn rawVal;\r\n\t}\r\n\tif (isDecimal) {\r\n\t\tresult+= ','+ new String(val).split('.')[1];\r\n\t}\r\n\tif (isNegative) {\r\n\t\tresult = '-'+result;\r\n\t}\r\n\treturn result;\r\n}\r\n \r\n\r\nconst months = [\r\n\t'Januari', 'Ferbuari', 'Maret', 'April', 'Mei', 'Juni',\r\n\t'Juli', 'Agustus', 'September', 'Oktober', 'November', 'Desember'\r\n]\r\n\r\nexport const monthName = (index:number) => {\r\n\treturn months[index];\r\n}\r\n\r\nexport const monthYearString = function (m, y) {\r\n\tif (m == null || y == null) {\r\n\t\treturn '-';\r\n\t}\r\n\treturn months[m - 1] + ' ' + y;\r\n}\r\nexport const twoDigits = (value:number) :string => {\r\n    if (value >= 10) {\r\n        return   value.toString();\r\n    }\r\n    return '0'+value;\r\n}","import BaseEntity from '../BaseEntity';\nimport { uniqueId } from '../../utils/StringUtil';\nimport { AuthorityType } from '../AuthorityType';\nimport User from './../User';\n\nexport default class Menu extends BaseEntity {\n\tstatic defaultMenuIconClassName = \"fas fa-folder\";\n\n\tcode = uniqueId();\n\tname?: string;\n\tdescription?: string;\n\turl?: string;\n\tpathVariables?: string;\n\ticonUrl?: string;\n\tcolor?: string;\n\tfontColor?: string;\n\trole: AuthorityType[] = [];\n\n\t//\n\tactive?: boolean = false;\n\tmenuClass?: string = \"fas fa-folder\";\n\tauthenticated?: boolean = false;\n\tshowSidebar?: boolean = false;\n\tsubMenus?: Menu[] = undefined;\n\n\tstatic getIconClassName = (menu: Menu) => {\n\t\tif (undefined == menu.menuClass) {\n\t\t\treturn Menu.defaultMenuIconClassName;\n\t\t}\n\t\treturn menu.menuClass;\n\t}\n\n\tuserAuthorized?= (user?: User): boolean => {\n\t\tif (this.role.length == 0) return true;\n\t\tif (!user) return false;\n\t\tuser = User.clone(user);\n\t\tfor (let i = 0; i < this.role.length; i++) {\n\t\t\tconst element = this.role[i];\n\t\t\tif (user.hasRole(element)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n","\r\nimport { AuthorityType } from '../models/AuthorityType';\r\nimport Menu from '../models/settings/Menu';\r\n \r\n\r\nexport const getMenus = () => {\r\n    let menuSet: Menu[] = [];\r\n    for (let i = 0; i < _menus.length; i++) {\r\n        const element: Menu = _menus[i];\r\n        const menu:Menu = Object.assign(new Menu, element);\r\n        const subMenus:Menu[] = [];\r\n        if (element.subMenus) {\r\n            for (let i = 0; i < element.subMenus.length; i++) {\r\n                const subMenu = element.subMenus[i];\r\n                subMenus.push(Object.assign(new Menu, subMenu));\r\n            }\r\n            menu.subMenus = subMenus;\r\n        }\r\n        menuSet.push(menu);\r\n    }\r\n    \r\n    return menuSet;\r\n}\r\nexport const extractMenuPath = (pathName: string) => {\r\n    const pathRaw = pathName.split('/');\r\n   \r\n    let firstPath = pathRaw[0];\r\n    if (firstPath.trim() == \"\") {\r\n        firstPath = pathRaw[1];\r\n    }\r\n    return firstPath;\r\n}\r\nexport const getMenuByMenuPath = (pathName: string): Menu | null => {\r\n    const menus = getMenus();\r\n    try {\r\n        for (let i = 0; i < menus.length; i++) {\r\n            const menu: Menu = menus[i];\r\n            if (menu.url == \"/\" + pathName) {\r\n                return menu;\r\n            }\r\n        }\r\n        return null;\r\n    } catch (error) {\r\n        return null;\r\n    }\r\n}\r\n\r\nconst _menus: Menu[] = [\r\n    {\r\n        code: 'home',\r\n        name: \"Home\",\r\n        url: \"/home\",\r\n        menuClass: \"fa fa-home\",\r\n        active: false,\r\n        authenticated: false,\r\n        showSidebar: false,\r\n        role : []\r\n    },\r\n    \r\n    {\r\n        code: 'dashboard',\r\n        name: \"Dashboard\",\r\n        url: \"/dashboard\",\r\n        menuClass: \"fas fa-tachometer-alt\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true,\r\n        role: [AuthorityType.ROLE_SUPERADMIN, AuthorityType.ROLE_ASRAMA_MUSYRIF],\r\n        subMenus: [\r\n            {\r\n                code: 'followup',\r\n                name: 'Follow Up',\r\n                url: 'followup',\r\n                menuClass: 'fas fa-history',\r\n                role: [ AuthorityType.ROLE_ASRAMA_MUSYRIF],\r\n            },\r\n            // {\r\n            //     code: 'dashboard_productsales',\r\n            //     name: 'Product Sales',\r\n            //     url: 'productsales',\r\n            //     menuClass: 'fas fa-chart-line',\r\n            //     role: [],\r\n            // }\r\n        ]\r\n    }, \r\n    {\r\n        code: 'management',\r\n        name: \"Manajemen\",\r\n        url: \"/management\",\r\n        menuClass: \"fas fa-mail-bulk\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true,\r\n        role: [AuthorityType.ROLE_SUPERADMIN, AuthorityType.ROLE_ASRAMA_MUSYRIF],\r\n        subMenus: [\r\n            {\r\n                code: 'musyrifmanagement',\r\n                name: 'Musyrif',\r\n                url: 'musyrifmanagement',\r\n                menuClass: 'fas fa-users',\r\n                role: [AuthorityType.ROLE_SUPERADMIN],\r\n            },\r\n            {\r\n                code: 'rule_category',\r\n                name: 'Kategori Pelanggaran',\r\n                url: 'rule_category',\r\n                menuClass: 'fas fa-tags',\r\n                role: [AuthorityType.ROLE_SUPERADMIN],\r\n            },\r\n            {\r\n                code: 'rule_point',\r\n                name: 'Poin Pelanggaran',\r\n                url: 'rule_point',\r\n                menuClass: 'fas fa-puzzle-piece',\r\n                role: [AuthorityType.ROLE_SUPERADMIN],\r\n            }, \r\n            {\r\n                code: 'warning_action',\r\n                name: 'Peringatan',\r\n                url: 'warning_action',\r\n                menuClass: 'fas fa-exclamation-triangle',\r\n                role: [AuthorityType.ROLE_SUPERADMIN, AuthorityType.ROLE_ASRAMA_MUSYRIF],\r\n            }, \r\n            {\r\n                code: 'category_predicate',\r\n                name: 'Predikat Rapor',\r\n                url: 'category_predicate',\r\n                menuClass: 'far fa-flag',\r\n                role: [AuthorityType.ROLE_SUPERADMIN, ],\r\n            }, \r\n            {\r\n                code: 'rule_violation',\r\n                name: 'Pelanggaran Umum',\r\n                url: 'rule_violation',\r\n                menuClass: 'fas fa-times-circle',\r\n                role: [AuthorityType.ROLE_ASRAMA_MUSYRIF, ],\r\n            }, \r\n        ]\r\n    }, \r\n    {\r\n        code: 'asrama',\r\n        name: \"Asrama\",\r\n        url: \"/asrama\",\r\n        menuClass: \"fas fa-school\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true,\r\n        role: [  AuthorityType.ROLE_ASRAMA_MUSYRIF, AuthorityType.ROLE_SUPERADMIN],\r\n        subMenus: [\r\n            {\r\n                code: 'studentlist',\r\n                name: 'Siswa',\r\n                url: 'studentlist',\r\n                menuClass: 'fas fa-users',\r\n                role: [ AuthorityType.ROLE_ASRAMA_MUSYRIF],\r\n            },\r\n            {\r\n                code: 'input_point',\r\n                name: 'Form Pelanggaran Tipe 1',\r\n                url: 'inputpoint',\r\n                menuClass: 'fas fa-edit',\r\n                role: [ AuthorityType.ROLE_ASRAMA_MUSYRIF],\r\n            }, \r\n            {\r\n                code: 'pointrecordedit',\r\n                name: 'Form Pelanggaran Tipe 2',\r\n                url: 'pointrecordedit',\r\n                menuClass: 'fas fa-edit',\r\n                role: [ AuthorityType.ROLE_ASRAMA_MUSYRIF],\r\n            },\r\n            // {\r\n            //     code: 'medicalrecord',\r\n            //     name: 'Medical Record',\r\n            //     url: 'medicalrecord',\r\n            //     menuClass: 'fas fa-briefcase-medical',\r\n            //     role: [ AuthorityType.musyrif_asrama],\r\n            // },\r\n            {\r\n                code: 'pointsummary',\r\n                name: 'Rekap Pelanggaran',\r\n                url: 'pointsummary',\r\n                menuClass: 'fas fa-clipboard',\r\n                role: [ AuthorityType.ROLE_ASRAMA_MUSYRIF, AuthorityType.ROLE_SUPERADMIN],\r\n            },\r\n           \r\n            \r\n        ]\r\n    }, \r\n    {\r\n        code: 'report',\r\n        name: \"Laporan\",\r\n        url: \"/report\",\r\n        menuClass: \"fas fa-file\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true,\r\n        role: [  AuthorityType.ROLE_ASRAMA_MUSYRIF, AuthorityType.ROLE_SUPERADMIN],\r\n        subMenus: [\r\n            {\r\n                code: 'studentreport',\r\n                name: 'Rapor',\r\n                url: 'studentreport',\r\n                menuClass: 'fas fa-file',\r\n                role: [ AuthorityType.ROLE_ASRAMA_MUSYRIF, AuthorityType.ROLE_SUPERADMIN],\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        code: 'settings',\r\n        name: \"Setting\",\r\n        url: \"/settings\",\r\n        menuClass: \"fas fa-cogs\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true,\r\n        role: [  AuthorityType.ROLE_SUPERADMIN],\r\n        subMenus: [\r\n            {\r\n                code: 'config',\r\n                name: 'Konfigurasi',\r\n                url: 'config',\r\n                menuClass: 'fas fa-cog',\r\n                role: [ AuthorityType.ROLE_SUPERADMIN],\r\n            },\r\n        ]\r\n    }\r\n    \r\n];\r\n","\r\nimport React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { getMenus } from '../../constant/Menus';\r\nimport { mapCommonUserStateToProps } from './../../constant/stores';\r\nimport ApplicationProfile from './../../models/ApplicationProfile';\r\nimport Menu from './../../models/settings/Menu';\r\nimport User from './../../models/User';\r\nimport { performLogout } from './../../redux/actionCreators';\r\nimport BaseComponent from './../BaseComponent';\r\nimport './Header.css';\r\nclass State {\r\n  showNavLinks: boolean = false;\r\n}\r\nclass Header extends BaseComponent<any, State> {\r\n  state = new State();\r\n  private buttonToggleNavRef: React.RefObject<HTMLButtonElement> = React.createRef();\r\n  constructor(props: any) {\r\n    super(props, false);\r\n  }\r\n  toggleNavLinks = () => {\r\n    this.setState({ showNavLinks: !this.state.showNavLinks });\r\n  }\r\n  onLogout = (e: any) => {\r\n    const app = this;\r\n    app.showConfirmation(\"Logout?\").then((ok) => {\r\n        if (ok) {\r\n          app.props.performLogout(app.parentApp);\r\n        }\r\n      }\r\n    )\r\n  }\r\n  setMenu = (menu: Menu) => {\r\n    if (this.state.showNavLinks && this.buttonToggleNavRef.current) {\r\n      this.buttonToggleNavRef.current.click();\r\n    }\r\n    this.props.setMenu(menu);\r\n  }\r\n  render() {\r\n    const showNavLinks = this.state.showNavLinks;\r\n    const menus = getMenus();\r\n    const user = this.getLoggedUser();\r\n    const profile = this.getApplicationProfile();\r\n    const { appName } = profile;\r\n    return (\r\n      <div\r\n        className=\"bg-dark container-fluid\"\r\n        style={{ position: 'fixed', zIndex: 55, padding: 0, margin: 0 }}\r\n      >\r\n        <NavBarTop profile={profile} />\r\n        <nav id=\"navbar\" className=\"w-100 navbar navbar-expand-lg navbar-dark bg-dark\">\r\n          <a id=\"navbar-brand\" className=\"navbar-brand\" href=\"#\">\r\n            {appName} | Semester: {profile.semester} {profile.year}\r\n          </a>\r\n          <button\r\n            ref={this.buttonToggleNavRef}\r\n            onClick={this.toggleNavLinks}\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarToggler\"\r\n            aria-controls=\"navbarToggler\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <i className={showNavLinks ? \"fas fa-times\" : \"fas fa-bars\"} />\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarToggler\">\r\n            <ul id=\"navbar-top\" className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n              {menus.map(menu => {\r\n                if (menu == null || (menu.authenticated && !user)) return null;\r\n                if (menu.userAuthorized && menu.userAuthorized(user) == false) return null;\r\n                const isActive = this.props.activeMenuCode == menu.code;\r\n                return (\r\n                  <li key={\"header-menu-\" + new String(menu.code)} className={\"nav-item \" + (isActive ? \"active nav-active\" : \"nav-inactive\")}>\r\n                    <Link onClick={() => this.setMenu(menu)} className={\"nav-link  \"}\r\n                      to={menu.url}><span>{menu.name}</span>\r\n                    </Link></li>\r\n                )\r\n              })}\r\n            </ul >\r\n            <form className=\"form-inline my-2 my-lg-0\">\r\n              <UserIcon setMenuNull={this.props.setMenuNull}\r\n                onLogout={this.onLogout} user={user} />\r\n            </form >\r\n          </div >\r\n        </nav >\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\nconst NavBarTop = (props: { profile: ApplicationProfile }) => {\r\n  const { profile } = props;\r\n  return (\r\n    <div id=\"navbar-brand-top\" style={{ paddingLeft: '0.5rem' }} className=\"container-fluid\">\r\n      <a style={{ fontSize: '15px' }} className=\"text-white navbar-brand\" href=\"#\">\r\n        <strong>{profile.appName} | Semester {profile.semester} {profile.year}</strong>\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\nconst UserIcon = (props: { user?: User, setMenuNull(): any, onLogout(e): any }) => {\r\n  if (props.user) {\r\n    return (\r\n      <Fragment>\r\n        <Link\r\n          onClick={props.setMenuNull}\r\n          className=\"btn btn-light btn-sm my-2 my-sm-0 mr-2\"\r\n          to='/settings/user-profile'\r\n        >\r\n          <i className=\"fas fa-user-circle mr-2\" />\r\n          <span>{props.user.displayName}</span>\r\n        </Link>\r\n        <a className=\"mr-1 btn btn-danger btn-sm  my-2 my-sm-0\"\r\n          onClick={props.onLogout}><i className=\"fas fa-sign-out-alt mr-2\" /><span>Logout</span>\r\n        </a>\r\n      </Fragment>);\r\n  }\r\n  return (\r\n    <Link\r\n      onClick={props.setMenuNull}\r\n      className=\"btn btn-sm btn-info my-2 my-sm-0 mr-2\"\r\n      to='/login'\r\n    >\r\n      <i className=\"fas fa-sign-in-alt mr-2\"></i><span>Login</span>\r\n    </Link>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n  performLogout: (app: any) => dispatch(performLogout(app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n  mapCommonUserStateToProps,\r\n  mapDispatchToProps\r\n)(Header))","\r\nimport React, { Component } from 'react';\r\nimport './Spinner.css';\r\n\r\nexport default class Spinner extends Component<any, any>{\r\n\r\n  render() {\r\n    const innerDivs = new Array<JSX.Element>();\r\n    for (let i = 0; i <= 11; i++) {\r\n      innerDivs.push(<div key={\"spinner-item-\" + i}></div>);\r\n    }\r\n    return (\r\n      <div style={{ width: '85px', height: '85px', display: 'block' }} className=\"container-fluid text-center\" >\r\n        <div style={{ visibility: this.props.show == false ? 'hidden' : 'visible' }} className=\"lds-spinner\">\r\n          {innerDivs}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","\r\n\r\nimport React, { ChangeEvent, FormEvent, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { performLogin } from '../../../redux/actionCreators';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport Spinner from './../../loader/Spinner';\r\nimport './Login.css';\r\nclass State {\r\n  loading = false; email = \"\"; editPassword = \"\";\r\n}\r\nclass Login extends BaseComponent<any, State> {\r\n  state: State = new State();\r\n  constructor(props: any) {\r\n    super(props, false);\r\n  }\r\n  startLoading = () => this.setState({ loading: true });\r\n  endLoading = () => this.setState({ loading: false });\r\n  login(e: FormEvent) {\r\n    e.preventDefault();\r\n    this.props.performLogin(this.state.email, this.state.editPassword, this);\r\n  }\r\n  componentDidMount() {\r\n    document.title = \"Login\";\r\n    if (this.isUserLoggedIn()) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n  componentDidUpdate() {\r\n\r\n    if (this.isUserLoggedIn()) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n  updateCredentialProperty = (e: ChangeEvent) => {\r\n    const target = e.target as HTMLInputElement;\r\n    const name: string | null = target.getAttribute(\"name\");\r\n    if (null == name) return;\r\n    this.setState({ [name]: target.value } as any);\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"Login\" className=\"mt-4\" >\r\n        <form name='login' onSubmit={(e) => { this.login(e) }} className=\"form-signin\">\r\n          <div className=\"text-center\">\r\n            <h2><i className=\"fas fa-user-circle\"></i></h2>\r\n            <h1 className=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\r\n          </div>\r\n          <EmailField value={this.state.email} onChange={this.updateCredentialProperty} />\r\n          <PasswordField value={this.state.editPassword} onChange={this.updateCredentialProperty} />\r\n          {\r\n            this.state.loading ?\r\n              <Spinner /> :\r\n              <Fragment>\r\n                <button className=\"btn text-light\" style={{ marginRight: '5px', backgroundColor: 'rgb(9,26,78)' }} type=\"submit\">\r\n                  Sign in\r\n                </button>\r\n              </Fragment>\r\n          }\r\n          <input name=\"transport_type\" type=\"hidden\" value=\"rest\" />\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\nconst PasswordField = ({ value, onChange }) => {\r\n  return <Fragment>\r\n    <label className=\"sr-only\">Password</label>\r\n    <input name=\"editPassword\" value={value} onChange={onChange} type=\"password\" id=\"inputPassword\" className=\"form-control\"\r\n      placeholder=\"Password\" required />\r\n  </Fragment>\r\n}\r\nconst EmailField = ({ value, onChange }) => {\r\n  return (<Fragment>\r\n    <label className=\"sr-only\">Email</label>\r\n    <input name=\"email\" value={value} onChange={onChange} type=\"text\" className=\"form-control\"\r\n      placeholder=\"Email\" required autoFocus />\r\n  </Fragment>)\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n  performLogin: (username: string, password: string, app: any) => dispatch(performLogin(username, password, app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n  mapCommonUserStateToProps,\r\n  mapDispatchToProps\r\n)(Login))","export default class AttachmentInfo {\r\n    setUrl(arg0: string) {\r\n        this.url = arg0;\r\n        this.data = arg0.split(\",\")[1];\r\n    }\r\n    static nameOnly(name: any) {\r\n        const info = new AttachmentInfo();\r\n        info.name = name;\r\n        return info;\r\n    }\r\n    static instance(name: any, url: string) {\r\n        const info = new AttachmentInfo();\r\n        info.name = name;\r\n        info.url = url;\r\n        return info;\r\n    }\r\n    constructor(public file?: File) {\r\n        //\r\n    }\r\n    name: string = \"\";\r\n    blob: Blob = new Blob();\r\n    url: string = \"\";\r\n    data: string = \"\";\r\n}","import AttachmentInfo from '../models/settings/AttachmentInfo';\r\n \r\n  \r\nexport const getAttachmentInfoFromFile = (fileInput:HTMLInputElement): Promise<AttachmentInfo> => {\r\n    return new Promise<AttachmentInfo>((resolve, reject) =>{\r\n        if (null == fileInput.files || !fileInput.files[0]) {\r\n            reject(new Error(\"No file\"));\r\n            return;\r\n        }\r\n        try { \r\n            const file = fileInput.files[0]; \r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            console.debug(\"fileInput.files[0]: \", file);\r\n            reader.onload = function () { \r\n                const info = new AttachmentInfo(file);\r\n                info.setUrl(new String(reader.result).toString());\r\n                // info.\r\n                info.name = file.name;\r\n                resolve(info);\r\n             }\r\n            reader.onerror = function (error) {\r\n                reject(error);\r\n            }\r\n        } catch (e) {\r\n            reject(e);\r\n        }\r\n    });\r\n\r\n}\r\n \r\n\r\n/**\r\n * \r\n * @param {Number} totalButton \r\n * @param {Number} currentPage \r\n */\r\nexport const createNavButtons = (totalButton, currentPage) => {\r\n    totalButton = Math.ceil(totalButton);\r\n    if (!currentPage) { currentPage = 0 }\r\n    let buttonData = new Array();\r\n    let min = currentPage - 3 < 0 ? 0 : currentPage - 3;\r\n    let max = currentPage + 3 > totalButton ? totalButton : currentPage + 3;\r\n\r\n    if (min != 0) {\r\n        buttonData.push({\r\n            text: 1,\r\n            value: 0\r\n        });\r\n    }\r\n\r\n    for (let index = min; index < max; index++) {\r\n        buttonData.push({\r\n            text: index + 1,\r\n            value: index\r\n        });\r\n    }\r\n\r\n    if (max != totalButton) {\r\n        buttonData.push({\r\n            text: totalButton,\r\n            value: totalButton - 1\r\n        });\r\n    }\r\n\r\n\r\n    return buttonData;\r\n}\r\n\r\n ","\nimport BaseComponent from './../BaseComponent';\n\nexport default class BasePage<P, S> extends BaseComponent<P, S> {\n  constructor(props,\n             protected title: string | undefined | null,\n             authenticated: boolean = false) {\n    super(props, authenticated);\n    if (title !== undefined && title !== null) {\n      document.title = title;\n    } else {\n      document.title = \"Asrama KIIS\";\n    }\n  }\n\n  componentDidMount() {\n    this.validateLoginStatus(() => {\n      this.scrollTop();\n      this.componentReady();\n    })\n  }\n\n  protected componentReady() { }\n}","\r\n\r\nimport React, { ChangeEvent, FormEvent } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\r\nimport { AuthorityType } from '../../../../models/AuthorityType';\r\nimport AttachmentInfo from './../../../../models/settings/AttachmentInfo';\r\nimport User from './../../../../models/User';\r\nimport { getAttachmentInfoFromFile } from './../../../../utils/ComponentUtil';\r\nimport BasePage from './../../BasePage';\r\n\r\nclass State {\r\n  attachment?: AttachmentInfo;\r\n}\r\nclass DashboardMain extends BasePage<any, State> {\r\n  state = new State();\r\n  constructor(props: any) {\r\n    super(props, \"Dashboard\", true);\r\n  }\r\n\r\n  addPointRecord = (e: FormEvent) => {\r\n    e.preventDefault();\r\n    if (!this.state.attachment) return;\r\n\r\n    this.props.history.push({\r\n      pathname: '/asrama/pointrecordedit',\r\n      state: { attachment: this.state.attachment }\r\n    })\r\n  }\r\n  updateImage = (e: ChangeEvent) => {\r\n    getAttachmentInfoFromFile(e.target as HTMLInputElement)\r\n      .then(attachment => {\r\n        this.setState({ attachment: attachment });\r\n      }).catch(console.error)\r\n  }\r\n  render() {\r\n    const user: User | undefined = this.getLoggedUser();\r\n    if (!user) return null;\r\n    return (\r\n      <div className=\" section-body container-fluid\">\r\n        <h2>Dashboard</h2>\r\n        <div className=\"alert alert-info\">\r\n          Welcome, <strong>{user.fullName}  </strong>\r\n          <hr />\r\n          {/* <p className=\"badge badge-dark text-capitalize\">{(user.roles).join(\", \")}</p> */}\r\n\r\n        </div>\r\n        {!this.getLoggedUser()?.hasRole(AuthorityType.ROLE_ASRAMA_MUSYRIF) ? null :\r\n          <form className=\"mt-10 text-center\" onSubmit={this.addPointRecord}>\r\n            <h1><i className=\"fas fa-camera\" /></h1>\r\n            <h3> Input Pelanggaran</h3>\r\n            <input onChange={this.updateImage} type=\"file\" accept=\"image/*\" className=\"form-control mt-3\" />\r\n            <p />\r\n            {this.state.attachment ?\r\n              <div>\r\n                <input type=\"submit\" className=\"btn btn-dark btn-large\" value=\"Selanjutnya\" />\r\n                <img className=\"w-100 mt-5\" src={this.state.attachment.url} />\r\n\r\n              </div>\r\n              : null}\r\n          </form>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(\r\n  mapCommonUserStateToProps\r\n)(DashboardMain))","\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport { baseImageUrl } from '../../../constant/Url';\r\nimport ApplicationProfile from '../../../models/ApplicationProfile';\r\nimport BaseComponent from '../../BaseComponent';\r\n\r\nclass HomeMain extends BaseComponent<any, any> {\r\n  constructor(props: any) {\r\n    super(props, false);\r\n  }\r\n  componentDidMount() {\r\n    document.title = \"Home\";\r\n  }\r\n  render() {\r\n    const applicationProfile = this.getApplicationProfile();\r\n    const imageUrl = baseImageUrl() + applicationProfile.backgroundUrl;\r\n    return (\r\n      <div className=\"section-body container-fluid\" style={{ padding: 0 }}>\r\n        <div className=\"jumbotron\"\r\n          style={{\r\n            margin: '0px',\r\n            marginTop: '20px',\r\n            backgroundImage: 'url(\"' + imageUrl + '\")',\r\n            backgroundSize: 'cover',\r\n            color: applicationProfile.fontColor ?? \"rgb(0,0,0)\"\r\n          }}\r\n        >\r\n          <h1 className=\"display-4\">{applicationProfile.appName}</h1>\r\n          <p className=\"lead\">{applicationProfile.appDescription}</p>\r\n          <hr className=\"my-4\" />\r\n          <p>{applicationProfile.welcoming_message}</p>\r\n          <Link className=\"btn btn-primary btn-lg\" to=\"/about\" role=\"button\">About Us</Link>\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(connect(mapCommonUserStateToProps)(HomeMain));\r\n","\r\nimport BaseEntity from './BaseEntity';\r\nimport User from './User';\r\nexport default class Employee extends BaseEntity {\r\n    user?: User;\r\n    nisdm?: string;\r\n}","import React from 'react'\r\nimport { uniqueId } from './StringUtil';\r\nexport const tableHeader = (...values: string[]) => {\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        {values.map((value) => {\r\n          return <th key={uniqueId()}>{value}</th>\r\n        })}\r\n      </tr>\r\n    </thead>\r\n  )\r\n}\r\nexport const groupArray = (array, division) => {\r\n  if (null == array || array.length == 0) { return []; }\r\n  const groupedArray = new Array();\r\n  const itemPerDivision = Math.ceil(array.length / division)\r\n\r\n  if (itemPerDivision == 1) {\r\n    groupedArray.push(array);\r\n    return groupedArray;\r\n  }\r\n\r\n  for (let i = 0; i < division; i++) {\r\n    groupedArray.push(new Array());\r\n  }\r\n\r\n  let index = 1;\r\n  let divisionIndex = 0;\r\n  for (let i = 0; i < array.length; i++) {\r\n    const element = array[i];\r\n    groupedArray[divisionIndex].push(element);\r\n\r\n    index++;\r\n    if (index > itemPerDivision) {\r\n      divisionIndex++;\r\n      index = 1;\r\n    }\r\n  }\r\n  return groupedArray;\r\n}\r\n","import { twoDigits } from './StringUtil';\r\n\r\nexport const MONTHS = [\r\n    'Januari',\r\n    'Februari',\r\n    'Maret',\r\n    'April',\r\n    'Mei',\r\n    'Juni',\r\n    'Juli',\r\n    'Agustus',\r\n    'September',\r\n    'Oktober',\r\n    'November',\r\n    'Desember'\r\n]\r\n\r\nconst leapMonths = [ 31, (  29  ), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\r\nconst regularMonths = [ 31, (  28  ), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\r\n/**\r\n * \r\n * @param {Number} month starts at 0\r\n */\r\nexport const getMonthDays = (month:number, year:number = new Date().getFullYear()) : number=> {\r\n    if(year % 4 == 0){\r\n        return leapMonths[month];\r\n    }\r\n    return regularMonths[month];\r\n}\r\n\r\nexport const getInputReadableDate = (date:Date) :string => {\r\n    const year = date.getFullYear();\r\n\r\n    const arr = [year, twoDigits(date.getMonth()+1), twoDigits(date.getDate())];\r\n    return arr.join('-');\r\n}\r\nexport function addDays(date:Date, days:number) :Date{\r\n    const result:Date = new Date(date);\r\n    result.setDate(result.getDate() + days);\r\n    return result;\r\n  }\r\n  export const getDiffDays = (a:Date, b:Date) : number => {\r\n    // Discard the time and time-zone information.\r\n\r\n    console.debug('DIFF DATE ',a,' vs ', b);\r\n    const _MS_PER_DAY = 1000 * 60 * 60 * 24;\r\n    const utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());\r\n    const utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate()); \r\n    return Math.floor((utc2 - utc1) / _MS_PER_DAY);\r\n}\r\n\r\nexport const parseDate = (s:string) :Date => {\r\n    var b:string[] = s.split(/\\D/);\r\n    var m = parseInt(b[1]);\r\n    return new Date(parseInt(b[0]), --m, parseInt(b[2]));\r\n  }\r\nexport const timerString = (inputSeconds:number ) => {\r\n    let hour = 0;\r\n    let minutes:number = 0;\r\n    let seconds = 0;\r\n    let totalSeconds = inputSeconds;\r\n    if (totalSeconds >= 3600) {\r\n        hour = totalSeconds/ 3600;\r\n        totalSeconds = totalSeconds % 3600;\r\n    }\r\n    if (totalSeconds >= 60) {\r\n        minutes = totalSeconds/60;\r\n        totalSeconds = totalSeconds%60;\r\n    }\r\n    seconds = totalSeconds; \r\n\r\n    return  twoDigits(hour)+':'+twoDigits(Math.floor(minutes))+':'+twoDigits(seconds);\r\n}\r\n\r\n\r\n\r\n","\nimport { ChangeEvent } from 'react';\nimport { getInputReadableDate } from './../../utils/DateUtil'\n;\nexport default class Filter {\n  static resetFieldsFilter = (filter: Filter): Filter => {\n    for (const key in filter.fieldsFilter) {\n      if (key.endsWith('=d')) {\n        filter.fieldsFilter[key] = getInputReadableDate(new Date());\n      } else {\n        filter.fieldsFilter[key] = '';\n      }\n    }\n    return filter;\n  }\n  static withLimit = (arg0: number): Filter => {\n    const filter = new Filter();\n    filter.limit = arg0;\n    return filter;\n  }\n  limit?: number = 5;\n  page?: number = 0;\n  orderType?: 'desc' | 'asc';\n  orderBy?: string;\n  contains?: boolean;\n  exacts?: boolean;\n  module?: string;\n  fieldsFilter: Record<string, any> = {};\n  maxValue?: number;\n  availabilityCheck?: boolean;\n\n\n  public static queryString = (filter?: Filter) => {\n    if (!filter) return '';\n    let q: string[] = [];\n    if (filter.page && filter.page >= 0) {\n      q.push(`page=${filter.page}`);\n    }\n    if (filter.limit && filter.limit >= 0) {\n      q.push(`limit=${filter.limit}`);\n    }\n    if (filter.orderBy) {\n      q.push(`order=${filter.orderBy}`);\n    }\n    if (filter.orderType && (filter.orderType === 'asc' || filter.orderType === 'desc')) {\n      q.push(`orderDesc=${filter.orderType === 'desc' ? 'true' : 'false'}`);\n    }\n    if (filter.fieldsFilter)\n      for (const key in filter.fieldsFilter) {\n        if (Object.prototype.hasOwnProperty.call(filter.fieldsFilter, key)) {\n          const element = filter.fieldsFilter[key];\n          q.push(`filter=${encodeURIComponent(key)}:${encodeURIComponent(element)}`);\n        }\n      }\n    return '?' + q.join('&');\n  }\n  public static updatePeriodFilter = (filter: Filter, e: ChangeEvent<HTMLInputElement | HTMLSelectElement>, field: 'time<=d' | 'time>=d') => {\n    const val = parseInt(e.target.value);\n    if (isNaN(val)) {\n      return;\n    }\n    const periodFilter = new Date(filter.fieldsFilter[field]);\n    switch (e.target.name) {\n      case 'day':\n        periodFilter.setDate(val);\n        break;\n      case 'month':\n        periodFilter.setMonth(val);\n        break;\n      case 'year':\n        periodFilter.setFullYear(val);\n        break;\n      default:\n        return;\n    }\n    filter.fieldsFilter[field] = getInputReadableDate(periodFilter);\n  }\n}\n","\r\nimport React, { Component } from 'react';\r\ninterface Props {\r\n    orientation?: string,\r\n    show?: boolean,\r\n    children: any,\r\n    label?: any,\r\n    className?: string,\r\n}\r\nconst FormGroup = (props: Props) => {\r\n    if (false == props.show) return null;\r\n    const orientation = props.orientation == 'vertical' ? 'vertical' : 'horizontal';\r\n    return (\r\n        <div className={`form-group ${props.className} ${(orientation == 'vertical' ? '' : 'row')}`}>\r\n            <label className={(orientation == 'vertical' ? '' : 'col-sm-3')}>\r\n                <strong>{props.label ?? ''}</strong>\r\n            </label>\r\n            <div className={(orientation == 'vertical' ? '' : 'col-sm-9')}>\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default FormGroup;\r\n","\r\nimport React, { Component } from 'react';\r\nimport { uniqueId } from './../../utils/StringUtil';\r\ninterface IProps {\r\n  limit: number,\r\n  totalData: number,\r\n  activePage: number,\r\n  onClick: any\r\n}\r\nconst NavigationButtons = (props: IProps) => {\r\n  const btnIndexes = generateButtonValues(props.limit, props.totalData, props.activePage);\r\n  if (btnIndexes.length == 0) {\r\n    return null;\r\n  }\r\n  const lastIndex = btnIndexes[btnIndexes.length - 1];\r\n  const nextPage = props.activePage + 1 >= lastIndex ? 0 : props.activePage + 1;\r\n  const previusPage = props.activePage - 1 < 0 ? lastIndex - 1 : props.activePage - 1;\r\n  return (\r\n    <div>\r\n      <nav aria-label=\"Page navigation example\">\r\n        <ul className=\"pagination\">\r\n          <li className=\"page-item\">\r\n            <a className=\"page-link\" onClick={(e) => props.onClick(previusPage)}>Previous</a>\r\n          </li>\r\n          {btnIndexes.map((page, i) => {\r\n            return <li key={`NAV-${uniqueId()}`} className={\"page-item \" + (page - 1 == props.activePage ? \"active\" : \"\")}><a className=\"page-link \" onClick={(e) => props.onClick(page - 1)} >{page}</a></li>\r\n          })}\r\n          <li className=\"page-item\">\r\n            <a className=\"page-link\" onClick={(e) => props.onClick(nextPage)}>Next</a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst generateButtonValues = (limit: number, totalData: number, currentPage: number) => {\r\n\r\n  /* DISPLAYED BUTTONS */\r\n  const displayed_buttons: number[] = [];\r\n  const buttonCount = Math.ceil(totalData / limit);\r\n\r\n  // console.debug(\"current page:\", currentPage);\r\n  const min = (currentPage) - 1;\r\n  const max = (currentPage) + 3;\r\n  // const min = (currentPage) - 2;\r\n  // const max = (currentPage) + 2;\r\n\r\n  // console.debug(\"min\", min, \"current page:\", currentPage, \"max\", max);\r\n  if (buttonCount > 1) {\r\n    displayed_buttons.push(1);\r\n  }\r\n  for (let i = min; i <= max; i++) {\r\n    if (i > 1 && i <= buttonCount) {\r\n      (displayed_buttons.push(i));\r\n    }\r\n  }\r\n  if (max < buttonCount) {\r\n    displayed_buttons.push(buttonCount);\r\n  }\r\n  return displayed_buttons;\r\n}\r\n\r\nexport default NavigationButtons;\r\n","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\nimport { AxiosResponse } from 'axios';\r\nconst axios = require('axios');\r\n\r\nexport const performLoginMiddleware = store => next => action => {\r\n  if (!action.meta || action.meta.type !== types.DO_LOGIN) {\r\n    return next(action);\r\n  }\r\n  const { app } = action.meta;\r\n  const parameters = [\r\n    'username=' + action.meta.email,\r\n    'password=' + action.meta.password,\r\n    'transport_type=rest'\r\n  ];\r\n  axios.post(action.meta.url, parameters.join('&'), {\r\n    headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\r\n  }).then(axiosResponse => {\r\n    const responseJson = axiosResponse.data;\r\n    let loginKey: string = '';\r\n    let loginSuccess: boolean = false;\r\n\r\n    if (responseJson.code != null && responseJson.code == '00') {\r\n      loginKey = axiosResponse.headers['access-token'];\r\n      // console.log('api_token: ', loginKey);\r\n      loginSuccess = true;\r\n    } else {\r\n    }\r\n    let newAction = Object.assign({}, action, {\r\n      payload: {\r\n        loginStatus: loginSuccess,\r\n        loginKey: loginKey,\r\n        loggedUser: responseJson.result\r\n      }\r\n    });\r\n    common.updateAccessToken(axiosResponse);\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n  })\r\n    .catch(console.log)\r\n    .finally(() => { app.endLoading(); });\r\n\r\n}\r\n\r\n\r\nexport const getLoggedUserMiddleware = store => next => action => {\r\n  if (!action.meta || action.meta.type !== types.GET_LOGGED_USER) { return next(action); }\r\n\r\n  let headers = common.commonAuthorizedHeader();\r\n\r\n  axios.post(action.meta.url, (action.payload), {\r\n    headers: headers\r\n  }).then(response => {\r\n    const data = response.data;\r\n\r\n    if (!data) {\r\n      alert('Error performing request');\r\n      return;\r\n    }\r\n\r\n    let newAction = Object.assign({}, action, { payload: { data } });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n  })\r\n    .catch(console.log).finally(param => {\r\n      action.meta.app.endLoading();\r\n      action.meta.app.refresh();\r\n    });\r\n}\r\n\r\n\r\nexport const performLogoutMiddleware = store => next => action => {\r\n  if (!action.meta || action.meta.type !== types.DO_LOGOUT) {\r\n    return next(action);\r\n  }\r\n  const app = action.meta.app;\r\n\r\n  axios.post(action.meta.url, action.payload, {\r\n    headers: common.commonAuthorizedHeader()\r\n  })\r\n    .then((r: AxiosResponse) => {\r\n      const responseJson = r.data;\r\n      let logoutSuccess = false;\r\n      if (responseJson.code == '00') {\r\n        logoutSuccess = true;\r\n      } else {\r\n        alert('Logout Failed');\r\n      }\r\n\r\n      let newAction = Object.assign({}, action, {\r\n        payload: {\r\n          loginStatus: !logoutSuccess\r\n        }\r\n      });\r\n      delete newAction.meta;\r\n      store.dispatch(newAction);\r\n    })\r\n    .catch(console.log).finally(param => app.endLoading());\r\n}\r\n\r\nexport const setLoggedUserMiddleware = store => next => action => {\r\n  if (!action.meta || action.meta.type !== types.SET_LOGGED_USER) { return next(action); }\r\n  let newAction = Object.assign({}, action, { payload: action.payload });\r\n  delete newAction.meta;\r\n  store.dispatch(newAction);\r\n}","import * as types from './types'\r\n\r\nexport const initState = { \r\n    mainApp: undefined\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case types.SET_MAIN_APP:\r\n              \r\n            return { ...state, mainApp: action.payload }; \r\n       \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as types from './types'\r\nimport * as menuData from '../constant/Menus'\r\nimport { setLoginKeyCookie } from './../middlewares/Common';\r\n\r\nexport const initState = {\r\n  loginKey: null,\r\n  loginStatus: false,\r\n  loginFailed: false,\r\n  menus: menuData.getMenus(),\r\n  loggedUser: null,\r\n  loginAttempt: false,\r\n  requestId: null,\r\n  applicationProfile: {},\r\n  assetsPath: \"\"\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n\r\n  let result = {};\r\n  switch (action.type) {\r\n    case types.SET_REQUEST_ID:\r\n\r\n      result = {\r\n        ...state,\r\n        requestId: action.payload.requestId,\r\n        applicationProfile: action.payload.result ?? {},\r\n        assetsPath: \"http://FIXME\"\r\n      };\r\n\r\n      result.loginStatus = false;\r\n      result.loggedUser = null;\r\n      // console.debug(\"result\");\r\n      // console.debug(\"action.payload.requestId: \",action.payload.message); \r\n      // console.debug(\"REQUEST_ID result.loginStatus:\", result.loginStatus)\r\n      action.payload.referer.refresh();\r\n\r\n      return result;\r\n    case types.DO_LOGIN:\r\n      result = {\r\n        ...state,\r\n        loginAttempt: true,\r\n        loginStatus: action.payload.loginStatus,\r\n        loginKey: action.payload.loginKey,\r\n        loginFailed: action.payload.loginStatus == false,\r\n        loggedUser: action.payload.loggedUser\r\n      };\r\n      return result;\r\n    case types.DO_LOGOUT:\r\n      result = {\r\n        ...state,\r\n        loginStatus: false,\r\n        loggedUser: null\r\n      };\r\n      setLoginKeyCookie(null);\r\n      return result;\r\n    case types.REFRESH_LOGIN:\r\n      result = {\r\n        ...state,\r\n        loginStatus: action.payload.loginStatus,\r\n        loggedUser: action.payload.loggedUser,\r\n        requestId: action.payload.requestId,\r\n      };\r\n      return result;\r\n    case types.GET_LOGGED_USER:\r\n      result = {\r\n        ...state, loggedUser: action.payload.data\r\n      };\r\n      return result;\r\n    case types.SET_LOGGED_USER:\r\n      result = {\r\n        ...state, loggedUser: action.payload, loginStatus: true\r\n      };\r\n      return result;\r\n    case types.SET_APPLICATION_PROFILE:\r\n      result = {\r\n        ...state, applicationProfile: action.payload.applicationProfile\r\n      };\r\n      return result;\r\n    default:\r\n      return { ...state };\r\n\r\n  }\r\n}\r\n\r\nexport default reducer;","import * as appReducer from \"./appReducer\"\r\nimport * as userReducer from \"./userReducer\"\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport const rootReducer = combineReducers(\r\n    {\r\n        appState: appReducer.reducer,\r\n        userState: userReducer.reducer,\r\n    }\r\n);\r\n\r\nexport const initialState = {\r\n    appState: appReducer.initState,\r\n    userState: userReducer.initState,\r\n}\r\n\r\nexport default rootReducer;","import { applyMiddleware, createStore } from 'redux';\r\nimport * as userMiddleware from '../middlewares/UserMiddleware';\r\nimport { initialState, rootReducer } from './reducers';\r\n \r\nlet store = null;\r\nexport const getStore = () => {\r\n    return store;\r\n}\r\nexport const configureStore = () => {\r\n    store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        applyMiddleware(   \r\n\r\n            //user related\r\n            userMiddleware.performLoginMiddleware,\r\n            userMiddleware.performLogoutMiddleware,  \r\n            userMiddleware.getLoggedUserMiddleware, \r\n            userMiddleware.setLoggedUserMiddleware,\r\n\r\n        )\r\n    );\r\n\r\n    return store;\r\n}\r\n   \r\n\r\nexport default configureStore;","import { AxiosResponse } from 'axios';\r\nimport { getStore } from '../redux/configureStore';\r\nexport const commonAuthorizedHeader = (contentType = 'application/json') => {\r\n  return {\r\n    'Content-Type': contentType,\r\n    'requestId': getRequestId(),//'localStorage.getItem(\"requestId\")',\r\n    'Authorization': 'Bearer ' + getLoginKey()\r\n  }\r\n};\r\nexport const commonHeader = () => {\r\n  return {\r\n    'Content-Type': 'application/json',\r\n    'requestId': getRequestId(),\r\n  }\r\n};\r\n\r\nconst LOGIN_KEY: string = \"dormitory-app-login-key-3\";\r\n\r\nexport const getRequestId = (): string => {\r\n  const store = getStore();\r\n  if (null == store) return \"\";\r\n  const state = store.getState();\r\n  return state.userState.requestId;\r\n}\r\nexport const getLoginKey = () => {\r\n  return getCookie(LOGIN_KEY);\r\n}\r\n\r\nexport const updateAccessToken = (resp: AxiosResponse) => {\r\n  if (resp && resp.headers && resp.headers['access-token']) {\r\n    const accessToken = resp.headers['access-token'];\r\n    setCookie(LOGIN_KEY, accessToken);\r\n  }\r\n}\r\nexport const setLoginKeyCookie = (cookieValue: any) => {\r\n  setCookie(LOGIN_KEY, cookieValue);\r\n}\r\nexport const setCookie = function (cname, cvalue, exdays = 1) {\r\n  var d = new Date();\r\n  d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\r\n  var expires = \"expires=\" + d.toUTCString();\r\n  document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n}\r\nexport const getCookie = function (cname) {\r\n  var name = cname + \"=\";\r\n  var decodedCookie = decodeURIComponent(document.cookie);\r\n  var ca = decodedCookie.split(';');\r\n  for (var i = 0; i < ca.length; i++) {\r\n    var c = ca[i];\r\n    while (c.charAt(0) == ' ') {\r\n      c = c.substring(1);\r\n    }\r\n    if (c.indexOf(name) == 0) {\r\n      return c.substring(name.length, c.length);\r\n    }\r\n  }\r\n  return \"\";\r\n}","\r\nimport { commonAuthorizedHeader, commonHeader } from '../middlewares/Common';\r\nimport WebResponse from '../models/commons/WebResponse';\r\nimport { updateAccessToken } from './../middlewares/Common';\r\nimport AttachmentInfo from '../models/settings/AttachmentInfo';\r\nimport Axios from 'axios';\r\n\r\nconst CODE_SUCCESS = '00';\r\n\r\nexport const rejectedPromise = (message: any) => {\r\n  return new Promise((res, rej) => rej(message));\r\n}\r\n\r\nexport const emptyPromise = (defaultResponse: any) => new Promise(function (res, rej) {\r\n  res(defaultResponse);\r\n});\r\n\r\nexport const commonAjaxPostCalls = (endpoint: string, payload?: any, contentType = 'application/json') => {\r\n  const request = payload ?? {};\r\n  return new Promise<WebResponse>(function (resolve, reject) {\r\n    Axios.post(endpoint, request, {\r\n      headers: commonAuthorizedHeader(contentType)\r\n    })\r\n      .then(axiosResponse => {\r\n        updateAccessToken(axiosResponse);\r\n        const response: WebResponse = axiosResponse.data;\r\n        response.rawAxiosResponse = axiosResponse;\r\n        if (response.code == CODE_SUCCESS) {\r\n\r\n          resolve(response);\r\n        }\r\n        else { reject(response); }\r\n      })\r\n      .catch((e: any) => {\r\n        console.error(e);\r\n        reject(e);\r\n      });\r\n  })\r\n}\r\nexport const commonAjaxPutCalls = (endpoint: string, payload?: any, contentType = 'application/json') => {\r\n  const request = payload ?? {};\r\n  return new Promise<WebResponse>(function (resolve, reject) {\r\n    Axios.put(endpoint, request, {\r\n      headers: commonAuthorizedHeader(contentType)\r\n    })\r\n      .then(axiosResponse => {\r\n        updateAccessToken(axiosResponse);\r\n        const response: WebResponse = axiosResponse.data;\r\n        response.rawAxiosResponse = axiosResponse;\r\n        if (response.code == CODE_SUCCESS) {\r\n          resolve(response);\r\n        }\r\n        else { reject(response); }\r\n      })\r\n      .catch((e: any) => {\r\n        console.error(e);\r\n        reject(e);\r\n      });\r\n  })\r\n}\r\nexport const commonAjaxGetCalls = (endpoint: string) => {\r\n  return new Promise<WebResponse>(function (resolve, reject) {\r\n    Axios.get(endpoint, {\r\n      headers: commonAuthorizedHeader()\r\n    })\r\n      .then(axiosResponse => {\r\n        updateAccessToken(axiosResponse);\r\n        const response: WebResponse = axiosResponse.data;\r\n        response.rawAxiosResponse = axiosResponse;\r\n        if (response.code == CODE_SUCCESS) {\r\n\r\n          resolve(response);\r\n        }\r\n        else { reject(response); }\r\n      })\r\n      .catch((e: any) => {\r\n        console.error(e);\r\n        reject(e);\r\n      });\r\n  })\r\n}\r\nexport const commonAjaxDeleteCalls = (endpoint: string) => {\r\n  return new Promise<WebResponse>(function (resolve, reject) {\r\n    Axios.delete(endpoint, {\r\n      headers: commonAuthorizedHeader()\r\n    })\r\n      .then(axiosResponse => {\r\n        updateAccessToken(axiosResponse);\r\n        const response: WebResponse = axiosResponse.data;\r\n        response.rawAxiosResponse = axiosResponse;\r\n        if (response.code == CODE_SUCCESS) {\r\n\r\n          resolve(response);\r\n        }\r\n        else { reject(response); }\r\n      })\r\n      .catch((e: any) => {\r\n        console.error(e);\r\n        reject(e);\r\n      });\r\n  })\r\n}\r\n\r\nexport const commonAjaxPublicPostCalls = (endpoint: string, payload?: any) => {\r\n  const request = payload == null ? {} : payload;\r\n  return new Promise<WebResponse>(function (resolve, reject) {\r\n    Axios.post(endpoint, request, {\r\n      headers: commonHeader()\r\n    })\r\n      .then(axiosResponse => {\r\n\r\n        const response: WebResponse = axiosResponse.data;\r\n        response.rawAxiosResponse = axiosResponse;\r\n        if (response.code == CODE_SUCCESS) {\r\n          resolve(response);\r\n        }\r\n        else { reject(response); }\r\n      })\r\n      .catch((e: any) => {\r\n        console.error(e);\r\n        reject(e);\r\n      });\r\n  })\r\n}\r\nexport const commonAjaxPublicGetCalls = (endpoint: string) => {\r\n  return new Promise<WebResponse>(function (resolve, reject) {\r\n    Axios.get(endpoint, {\r\n      headers: commonHeader()\r\n    })\r\n      .then(axiosResponse => {\r\n\r\n        const response: WebResponse = axiosResponse.data;\r\n        response.rawAxiosResponse = axiosResponse;\r\n        if (response.code == CODE_SUCCESS) {\r\n          resolve(response);\r\n        }\r\n        else { reject(response); }\r\n      })\r\n      .catch((e: any) => {\r\n        console.error(e);\r\n        reject(e);\r\n      });\r\n  })\r\n}\r\n\r\nexport const commonAjaxPostCallsWithBlob = (endpoint: string, payload?: any) => {\r\n  const request = payload ?? {};\r\n  return new Promise<AttachmentInfo>((resolve, reject) => {\r\n    Axios.post(endpoint, request, {\r\n      responseType: 'blob',\r\n      headers: commonAuthorizedHeader()\r\n    })\r\n      .then(axiosResponse => {\r\n        updateAccessToken(axiosResponse);\r\n\r\n        const response: any = axiosResponse.data;\r\n        response.rawAxiosResponse = axiosResponse;\r\n        console.debug('axiosResponse.headers: ', axiosResponse.headers);\r\n        const contentDisposition = axiosResponse.headers['content-disposition'];\r\n        const fileName = contentDisposition.split('filename=')[1];\r\n        const rawSplit = fileName.split('.');\r\n        const extension = rawSplit[rawSplit.length - 1];\r\n        const blob = new Blob([response], { type: extension });\r\n        const url = window.URL.createObjectURL(blob);\r\n        const attachmentInfo: AttachmentInfo = new AttachmentInfo();\r\n        attachmentInfo.name = fileName;\r\n        attachmentInfo.blob = blob;\r\n        attachmentInfo.url = url;\r\n        resolve(attachmentInfo);\r\n\r\n      })\r\n      .catch((e: any) => { console.error(e); reject(e); });\r\n  })\r\n}\r\nexport const commonAjaxGetCallsWithBlob = (endpoint: string) => {\r\n  return new Promise<AttachmentInfo>(function (resolve, reject) {\r\n    Axios.get(endpoint, {\r\n      responseType: 'blob',\r\n      headers: commonAuthorizedHeader()\r\n    })\r\n      .then(axiosResponse => {\r\n        updateAccessToken(axiosResponse);\r\n\r\n        const response: any = axiosResponse.data;\r\n        response.rawAxiosResponse = axiosResponse;\r\n        console.debug('axiosResponse.headers: ', axiosResponse.headers);\r\n        const contentDisposition = axiosResponse.headers['content-disposition'];\r\n        const fileName = contentDisposition.split('filename=')[1];\r\n        const rawSplit = fileName.split('.');\r\n        const extension = rawSplit[rawSplit.length - 1];\r\n        const blob = new Blob([response], { type: extension });\r\n        const url = window.URL.createObjectURL(blob);\r\n        \r\n        const attachmentInfo: AttachmentInfo = new AttachmentInfo();\r\n        attachmentInfo.name = fileName;\r\n        attachmentInfo.blob = blob;\r\n        attachmentInfo.url = url;\r\n        resolve(attachmentInfo);\r\n\r\n      })\r\n      .catch((e: any) => { console.error(e); reject(e); });\r\n  })\r\n}\r\n","import 'reflect-metadata';\r\nimport { injectable } from 'inversify';\r\nimport Employee from '../models/Employee';\r\nimport { contextPath } from './../constant/Url';\r\nimport { commonAjaxPostCalls } from './Promises';\r\n\r\n@injectable()\r\nexport default class MusyrifManagementService {\r\n  activate(emp: Employee, active: boolean) {\r\n    const path = `api/admin/asrama/musyrif/set-active/${emp.id}/${active}`;\r\n    return commonAjaxPostCalls(contextPath() + path);\r\n  }\r\n}","\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\ninterface IProps {\r\n  show?: boolean, attributes?: any, iconClassName?: string, to?: string, className?: string,\r\n  style?: any, onClick?(e: any): any, children?: any\r\n}\r\nconst AnchorWithIcon = (props: IProps) => {\r\n  if (props.show == false) return null;\r\n  const btnClassName = props.className ?? \"btn btn-outline-secondary\";\r\n  if (props.to) {\r\n    return <Link {...props.attributes} to={props.to} style={props.style} onClick={props.onClick} className={btnClassName} >\r\n      {\r\n        props.iconClassName &&\r\n        <span style={{ marginRight: props.children ? '5px' : '0px' }}>\r\n          <i className={props.iconClassName} />\r\n        </span>\r\n      }\r\n      {props.children}\r\n    </Link>\r\n  }\r\n  return (\r\n    <a {...props.attributes} tyle={props.style} onClick={props.onClick} className={btnClassName} >\r\n      {\r\n        props.iconClassName &&\r\n        <span style={{ marginRight: props.children ? '5px' : '0px' }}>\r\n          <i className={props.iconClassName} />\r\n        </span>\r\n      }\r\n      {props.children}\r\n    </a>\r\n  )\r\n}\r\nexport default AnchorWithIcon;\r\n","import React from 'react';\r\nimport { resolve } from 'inversify-react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { AuthorityType } from '../../../models/AuthorityType';\r\nimport WebResponse from '../../../models/commons/WebResponse';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport Employee from './../../../models/Employee';\r\nimport MusyrifManagementService from './../../../services/MusyrifManagementService';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport AnchorWithIcon from './../../navigation/AnchorWithIcon';\r\n\r\nclass EmployeeRow extends BaseComponent<any, any> {\r\n  @resolve(MusyrifManagementService)\r\n  private musyrifManagementService: MusyrifManagementService;\r\n  constructor(props) {\r\n    super(props, true);\r\n  }\r\n  getEmployee = () => this.props.employee as Employee;\r\n  activeStatusUpdate = (response: WebResponse) => {\r\n    // this.showInfo(\"Success\");\r\n    if (this.props.onUpdated) {\r\n      this.props.onUpdated();\r\n    }\r\n  }\r\n  activateMusyrif = (active: boolean) => {\r\n    const emp = this.getEmployee();\r\n    this.commonAjax(\r\n      this.musyrifManagementService.activate,\r\n      this.activeStatusUpdate,\r\n      this.showCommonErrorAlert,\r\n      emp, active);\r\n\r\n  }\r\n  render() {\r\n    const { props } = this;\r\n    const emp = this.getEmployee();\r\n    const isMusyrif = emp.user?.hasRole(AuthorityType.ROLE_ASRAMA_MUSYRIF);\r\n    return (\r\n      <tr key={emp.id} >\r\n        <td>{props.startingNumber + 1}</td>\r\n        <td>{emp.user?.fullName}</td>\r\n        <td>{emp.user?.email}</td>\r\n        <td>{emp.nisdm}</td>\r\n        <td><i className={isMusyrif ? \"fas fa-check text-success\" : \"fas fa-times\"} /></td>\r\n        <td> {isMusyrif == true ?\r\n          <AnchorWithIcon className=\"btn btn-danger btn-sm\" onClick={(e) => this.activateMusyrif(false)} >\r\n            Nonaktifkan\r\n          </AnchorWithIcon> :\r\n          <AnchorWithIcon className=\"btn btn-success btn-sm\" onClick={(e) => this.activateMusyrif(true)} >\r\n            Jadikan musyrif\r\n          </AnchorWithIcon>\r\n        }\r\n        </td>\r\n      </tr>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapCommonUserStateToProps)(EmployeeRow))","\r\nimport React, { Component } from 'react';\r\ninterface IProps {\r\n  show?: boolean;\r\n  className?: string;\r\n  style?: any;\r\n  onClick?: any;\r\n  iconClassName?: string;\r\n  attributes?: any;\r\n  children?: any;\r\n}\r\nconst AnchorButton = (props: IProps) => {\r\n  if (props.show == false) return null;\r\n  const btnClassName = props.className ?? \"btn btn-outline-secondary\";\r\n  return (\r\n    <a style={props.style} {...props.attributes} onClick={props.onClick} className={btnClassName} >\r\n      {\r\n        props.iconClassName &&\r\n        <span style={props.children ? { marginRight: '5px' } : {}}>\r\n          <i className={props.iconClassName} />\r\n        </span>\r\n      }\r\n      {props.children}\r\n    </a>\r\n  )\r\n}\r\nexport default AnchorButton;\r\n","import React, { Component } from 'react'\r\nimport AnchorButton from './AnchorButton';\r\ninterface Props {\r\n  onClick(val: boolean): void,\r\n  active: boolean,\r\n  yesLabel?: string,\r\n  noLabel?: string\r\n}\r\nconst ToggleButton = (props: Props) => {\r\n  const { active, onClick } = props;\r\n  return (\r\n    <div className=\"btn-group\">\r\n      <AnchorButton\r\n        className={`btn  btn-sm ${(active ? 'btn-dark' : 'btn-outline-dark')}`}\r\n        onClick={(e) => onClick(true)}\r\n      >\r\n        {props.yesLabel ?? 'Yes'}\r\n      </AnchorButton>\r\n      <AnchorButton\r\n        className={`btn  btn-sm ${(active == false ? 'btn-dark' : 'btn-outline-dark')}`}\r\n        onClick={(e) => onClick(false)}\r\n      >\r\n        {props.noLabel ?? 'No'}\r\n      </AnchorButton>\r\n    </div>\r\n  );\r\n}\r\nexport default ToggleButton;","import 'reflect-metadata';\r\nimport { injectable } from 'inversify';\r\nimport Filter from '../models/commons/Filter';\r\nimport WebRequest from '../models/commons/WebRequest';\r\nimport { contextPath } from './../constant/Url';\r\nimport { commonAjaxDeleteCalls, commonAjaxGetCalls, commonAjaxPostCalls, commonAjaxPostCallsWithBlob, commonAjaxPutCalls } from './Promises';\r\ntype Menus = 'asrama' | 'management' | 'school-data';\r\n\r\n@injectable()\r\nexport default class MasterDataService {\r\n  getOne = (menu: Menus, modelName: string, id: any) => {\r\n    const endpoint = contextPath().concat(`api/admin/${menu}/${modelName}/${id}`);\r\n    return commonAjaxGetCalls(endpoint);\r\n  }\r\n  delete = (menu: Menus, modelName: string, id: any) => {\r\n    const endpoint = contextPath().concat(`api/admin/${menu}/${modelName}/${id}`);\r\n    return commonAjaxDeleteCalls(endpoint);\r\n  }\r\n  list = (request: WebRequest, menu: Menus) => {\r\n    console.log('filter', request.filter);\r\n    const endpoint = contextPath().concat(`api/admin/${menu}/${request.modelName}`);\r\n    return commonAjaxGetCalls(endpoint + Filter.queryString(request.filter));\r\n  }\r\n\r\n  insert = (modelName: string, menu: Menus, body: any) => {\r\n    const endpoint = contextPath().concat(`api/admin/${menu}/${modelName}`);\r\n    return commonAjaxPostCalls(endpoint, body);\r\n  }\r\n  update = (modelName: string, menu: Menus, id: any, body: any) => {\r\n    const endpoint = contextPath().concat(`api/admin/${menu}/${modelName}/${id}`);\r\n    return commonAjaxPutCalls(endpoint, body);\r\n  }\r\n  generateReport(request: WebRequest) {\r\n    const endpoint = contextPath().concat('api/app/report/records');\r\n    return commonAjaxPostCallsWithBlob(endpoint, request);\r\n  }\r\n}","import React, { ChangeEvent } from 'react'\r\nimport BaseComponent from './../../BaseComponent';\r\nimport Modal from './../../container/Modal';\r\nimport MasterDataService from './../../../services/MasterDataService';\r\nimport WebResponse from '../../../models/commons/WebResponse';\r\nimport WebRequest from '../../../models/commons/WebRequest';\r\nimport BasePage from './../BasePage';\r\nimport './Management.css'\r\nimport BaseEntity from './../../../models/BaseEntity';\r\nimport { resolve } from 'inversify-react';\r\n\r\nexport default abstract class BaseManagementPage<P, S> extends BasePage<P, S> {\r\n  @resolve(MasterDataService)\r\n  protected masterDataService: MasterDataService;\r\n  protected formRef: React.RefObject<Modal> = React.createRef();\r\n\r\n  emptyRecord = (): BaseEntity => {\r\n    throw new Error(\"Empty Record Method is Not Implemented....\");\r\n  }\r\n\r\n  constructor(props,\r\n              protected modelName: string,\r\n              protected menu: 'asrama' | 'school-data',\r\n              protected overrideLoading: boolean = false) {\r\n    super(props, \"Asrama KIIS\", true);\r\n    this.modelName = modelName ?? this.modelName;\r\n  }\r\n  startLoading = (withProgress: boolean = false) => {\r\n    if (this.overrideLoading) {\r\n      // FIXME\r\n      this.setState({ loading: true } as any);\r\n    } else {\r\n      super.startLoading(withProgress);\r\n    }\r\n  }\r\n  endLoading = () => {\r\n    if (this.overrideLoading) {\r\n      // FIXME\r\n      this.setState({ loading: false } as any);\r\n    } else {\r\n      super.endLoading();\r\n    }\r\n  }\r\n  loadItems = () => {\r\n    const request: WebRequest = {\r\n      filter: this.state.filter,\r\n      modelName: this.modelName\r\n    }\r\n    this.commonAjax(\r\n      this.masterDataService.list,\r\n      this.itemsLoaded,\r\n      this.showCommonErrorAlert,\r\n      request,\r\n      this.menu\r\n    )\r\n  }\r\n  itemsLoaded = (response: WebResponse) => {\r\n    this.setState({ items: response.result.items, totalData: response.result.totalData } as any);\r\n  }\r\n\r\n  updateFilter = (e: ChangeEvent<any>) => {\r\n    const { filter } = this.state;\r\n    const { target } = e;\r\n    if (!target.value || target.value == \"\") {\r\n      return;\r\n    }\r\n    let value: any;\r\n    if (target.type == 'number' || (target.dataset && target.dataset['type'] == 'number')) {\r\n      value = parseInt(target.value);\r\n    } else {\r\n      value = target.value;\r\n    }\r\n    filter[target.name] = value;\r\n    this.setState({ filter } as any)\r\n  }\r\n  updateFieldsFilter = (e: ChangeEvent) => {\r\n    const { filter } = this.state;\r\n    const target = (e.target as any);\r\n    if (!filter.fieldsFilter) {\r\n      filter.fieldsFilter = {};\r\n    }\r\n    filter.fieldsFilter[target.name] = target.value;\r\n    this.setState({ filter } as any)\r\n  }\r\n  loadAtPage = (page: number) => {\r\n    const filter = this.state.filter;\r\n    filter.page = page;\r\n    this.setState({ filter } as any, this.loadItems);\r\n  }\r\n  updateRecordProp = (e: ChangeEvent) => {\r\n    const target = e.target as any;\r\n    const dataset = target.dataset;\r\n    let value: any;\r\n    if (dataset['type'] && dataset['type'] == 'boolean') {\r\n      value = target.value == \"true\" ? true : false;\r\n    } else {\r\n      value = target.value;\r\n    }\r\n    const record = this.state.record;\r\n    record[target.name] = value;\r\n    this.setState({ record: record } as any);\r\n  }\r\n  resetForm = (callback?: () => any) => {\r\n    this.setState({ record: this.emptyRecord() } as any, callback);\r\n  }\r\n  oneRecordLoaded = (record: any) => {\r\n    this.setState({ record } as any, () => {\r\n      if (this.formRef.current) {\r\n        this.formRef.current.showModal();\r\n      }\r\n      this.scrollTop();\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    super.componentDidMount();\r\n    this.scrollTop();\r\n    this.loadItems();\r\n  }\r\n  recordUpdated = (response: WebResponse) => {\r\n    this.resetForm(() => {\r\n      if (this.formRef.current) {\r\n        this.formRef.current.hideModal();\r\n      }\r\n      this.showInfo(\"Success Update\");\r\n      this.loadItems();\r\n    });\r\n  }\r\n  protected callApiInsert = (body: any) => {\r\n    this.commonAjax(\r\n      this.masterDataService.insert,\r\n      this.recordUpdated,\r\n      this.showCommonErrorAlert,\r\n      this.modelName,\r\n      this.menu,\r\n      body\r\n    )\r\n  }\r\n  protected callApiUpdate = (id: any, body: any) => {\r\n    this.commonAjax(\r\n      this.masterDataService.update,\r\n      this.recordUpdated,\r\n      this.showCommonErrorAlert,\r\n      this.modelName,\r\n      this.menu,\r\n      id,\r\n      body\r\n    )\r\n  }\r\n\r\n  reload = (e: any) => {\r\n    if (e && e.preventDefault) {\r\n      e.preventDefault();\r\n    }\r\n    this.loadAtPage(0);\r\n  }\r\n}","import React, { ChangeEvent } from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport Employee from './../../../models/Employee';\r\nimport { tableHeader } from './../../../utils/CollectionUtil';\r\nimport Filter from '../../../models/commons/Filter';\r\nimport FormGroup from './../../form/FormGroup';\r\nimport NavigationButtons from './../../navigation/NavigationButtons';\r\nimport EmployeeRow from './EmployeeRow';\r\nimport User from '../../../models/User';\r\nimport ToggleButton from './../../navigation/ToggleButton';\r\nimport BaseManagementPage from './BaseManagementPage';\r\nimport { AuthorityType } from '../../../models/AuthorityType';\r\nclass State {\r\n  items: Employee[] = [];\r\n  filter: Filter = new Filter();\r\n  totalData: number = 0;\r\n}\r\nclass MusyrifManagement extends BaseManagementPage<any, State> {\r\n  state = new State();\r\n  constructor(props) {\r\n    super(props, 'musyrif', 'asrama');\r\n    this.state.filter.limit = 10;\r\n    this.state.filter.orderBy = 'user.fullName';\r\n    this.state.filter.fieldsFilter = {}\r\n  }\r\n  emptyRecord = () => new Employee();\r\n  setMusyrifOnly = (musyrifOnly: boolean) => {\r\n    const filter = this.state.filter;\r\n    if (!filter.fieldsFilter) {\r\n      filter.fieldsFilter = {};\r\n    }\r\n    filter.fieldsFilter['user.authorities.name'] = musyrifOnly ? AuthorityType.ROLE_ASRAMA_MUSYRIF : AuthorityType.ROLE_EMPLOYEE;\r\n    this.setState({ filter: filter }, () => this.loadAtPage(0))\r\n  }\r\n  onEmployeeStatusUpdate = () => {\r\n    this.loadItems();\r\n  }\r\n  render() {\r\n    const { filter } = this.state;\r\n    const musyrifOnly = filter?.fieldsFilter && filter.fieldsFilter['user.authorities.name'] === AuthorityType.ROLE_ASRAMA_MUSYRIF;\r\n    return (\r\n      <div className=\"section-body container-fluid\">\r\n        <h2>Musyrif</h2>\r\n        <hr />\r\n        <form onSubmit={this.reload}>\r\n          <FormGroup label=\"Cari\">\r\n            <input name=\"user.fullName\" placeholder=\"Nama\" className=\"form-control-sm\" value={filter.fieldsFilter ? filter.fieldsFilter['user.fullName'] : ''} onChange={this.updateFieldsFilter} />\r\n          </FormGroup>\r\n          <FormGroup label=\"Jumlah Tampilan\">\r\n            <input name=\"limit\" type=\"number\" className=\"form-control-sm\" value={filter.limit ?? 5} onChange={this.updateFilter} />\r\n          </FormGroup>\r\n          <FormGroup label=\"Opsi\">\r\n            <ToggleButton active={musyrifOnly} onClick={this.setMusyrifOnly} noLabel=\"Semua pegawai\" yesLabel=\"Hanya musyrif\" />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <input className=\"btn btn-primary btn-sm\" type=\"submit\" value=\"Submit\" />\r\n          </FormGroup>\r\n        </form>\r\n        <NavigationButtons activePage={filter.page ?? 0} limit={filter.limit ?? 5} totalData={this.state.totalData}\r\n          onClick={this.loadAtPage} />\r\n        <EmployeeList onUpdated={this.onEmployeeStatusUpdate} startingNumber={(filter.page ?? 0) * (filter.limit ?? 5)} items={this.state.items} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\nconst EmployeeList = (props: { onUpdated: () => void, startingNumber: number, items: Employee[] }) => {\r\n  const items = props.items;\r\n  return (\r\n    <div className=\"container-fluid\" style={{ overflow: 'auto' }}>\r\n      <table className=\"table table-striped\" >\r\n        {tableHeader(\"No\", \"Nama\", \"Email\", \"NIP\", \"Role: Musyrif\", \"Opsi\")}\r\n        <tbody>\r\n          {items.map((emp, i) => {\r\n            if (emp.user) {\r\n              emp.user = User.clone(emp.user);\r\n            }\r\n            return (\r\n              <EmployeeRow onUpdated={props.onUpdated} employee={emp} startingNumber={props.startingNumber + i} key={emp.id} />\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapCommonUserStateToProps\r\n  )(MusyrifManagement)\r\n)","import React from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport BasePage from './../BasePage';\r\n\r\nclass ManagementMain extends BasePage<any, any> {\r\n  constructor(props) {\r\n    super(props, \"Management\", true);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid section-body\">\r\n        <h2>Halaman Manajemen</h2>\r\n        <div className=\"alert alert-info\">\r\n          Welcome, <strong>{this.getLoggedUser()?.fullName}</strong>\r\n          <hr />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapCommonUserStateToProps\r\n  )(ManagementMain)\r\n)","\r\nimport BaseEntity from './BaseEntity';\r\nimport RulePoint from './RulePoint';\r\nexport default class Category extends BaseEntity {\r\n    name?:string;\r\n    description?:string;\r\n    //TODO: remove field\r\n    points:RulePoint[] | undefined;\r\n\r\n    static clone = (object:any) : Category => {\r\n        return Object.assign(new Category, object);\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nimport AnchorButton from '../navigation/AnchorButton';\r\n\r\nclass State { show = true }\r\ninterface IProps {\r\n  toggleable?: boolean, show?: boolean, title?: string, style?: any, footerContent?: any, showFooter?: boolean\r\n}\r\nexport default class Modal extends Component<IProps, State> {\r\n  state = new State();\r\n  hideModal = () => {\r\n    this.setState({ show: false });\r\n  }\r\n  showModal = () => {\r\n    this.setState({ show: true });\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.show == false) { this.setState({ show: false }); }\r\n  }\r\n  render() {\r\n    //    if (this.props.show == false) { return null; }\r\n    const title = this.props.title ?? 'Title'\r\n    if (this.props.toggleable == true && this.state.show == false) {\r\n      return (\r\n        <AnchorButton style={{ marginBottom: '10px' }} onClick={this.showModal} iconClassName=\"fas fa-angle-down\" >Show {title}</AnchorButton>\r\n      )\r\n    }\r\n    const props = (({ style, show, footerContent, toggleable, ...props }) => props)(this.props) // remove b and c\r\n    return (\r\n      <div {...props} className=\"modal-content \" style={{ ...this.props.style, marginBottom: '10px' }}>\r\n        <div className=\"modal-header\">\r\n          <h5 className=\"modal-title\">{title}</h5>\r\n          {this.props.toggleable ?\r\n            <button type=\"button\" className=\"btn btn-sm\" onClick={this.hideModal} aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">\r\n                <i className='fas fa-times' />\r\n              </span>\r\n            </button>\r\n            :\r\n            null}\r\n        </div>\r\n        <div className=\"modal-body\">\r\n          {this.props.children}\r\n        </div>\r\n        {this.props.footerContent || this.props.showFooter == true ?\r\n          <div className=\"modal-footer\">\r\n            {this.props.footerContent}\r\n          </div>\r\n          : null}\r\n      </div>\r\n    )\r\n  }\r\n\r\n}","import React from 'react'\r\nimport BaseComponent from './../../BaseComponent';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport AnchorWithIcon from './../../navigation/AnchorWithIcon';\r\nimport BaseEntity from './../../../models/BaseEntity';\r\nimport MasterDataService from './../../../services/MasterDataService';\r\nimport WebRequest from '../../../models/commons/WebRequest';\r\nimport WebResponse from '../../../models/commons/WebResponse';\r\nimport { resolve } from 'inversify-react';\r\n\r\nclass EditDeleteButton extends BaseComponent<any, any> {\r\n  @resolve(MasterDataService)\r\n  private masterDataService: MasterDataService;\r\n  constructor(props) {\r\n    super(props, true);\r\n  }\r\n\r\n  get modelName() { return this.props.modelName as string; }\r\n  getRecord = () => {\r\n    const rec = this.props.record as BaseEntity;\r\n    if (!rec) {\r\n      alert(\"this.props.record undefined\");\r\n      return {};\r\n    }\r\n    return rec;\r\n  }\r\n  recordLoaded = (response: WebResponse) => {\r\n    if (this.props.recordLoaded) {\r\n      this.props.recordLoaded(response.result);\r\n    }\r\n  }\r\n  recordLoadedForDetail = (response: WebResponse) => {\r\n    if (this.props.recordLoadedForDetail) {\r\n      this.props.recordLoadedForDetail(response.result);\r\n    }\r\n  }\r\n  recordDeleted = (response: WebResponse) => {\r\n    this.showInfo(\"Record has been deleted\");\r\n    if (this.props.recordDeleted) {\r\n      this.props.recordDeleted(response.result);\r\n    }\r\n  }\r\n  get loadRecordRequest() {\r\n    const req: WebRequest = {\r\n      record_id: this.getRecord().id,\r\n      modelName: this.modelName\r\n    }\r\n    return req;\r\n  }\r\n  loadRecord = () => {\r\n    this.commonAjax(\r\n      this.masterDataService.getOne,\r\n      this.recordLoaded,\r\n      this.showCommonErrorAlert,\r\n      this.props.menu,\r\n      this.props.modelName,\r\n      this.loadRecordRequest.record_id\r\n    )\r\n  }\r\n  loadRecordForDetail = () => {\r\n    this.commonAjax(\r\n      this.masterDataService.getOne,\r\n      this.recordLoadedForDetail,\r\n      this.showCommonErrorAlert,\r\n      this.props.menu,\r\n      this.props.modelName,\r\n      this.loadRecordRequest.record_id\r\n    )\r\n  }\r\n  deleteRecord = () => {\r\n    this.showConfirmationDanger(\"Delete record?\")\r\n      .then(ok => {\r\n        if (!ok) return;\r\n        this.commonAjax(\r\n          this.masterDataService.delete,\r\n          this.recordDeleted,\r\n          this.showCommonErrorAlert,\r\n          this.props.menu,\r\n          this.props.modelName,\r\n          this.loadRecordRequest.record_id\r\n        )\r\n      })\r\n  }\r\n  hasType = (type: string) => {\r\n    if (!this.props.types) return false;\r\n    return (this.props.types as string[]).indexOf(type) >= 0;\r\n  }\r\n  render() {\r\n    const types: string[] | undefined = this.props.types ?? undefined;\r\n    return (\r\n      <div className=\"btn-group\">\r\n        {\r\n          this.hasType('detail') &&\r\n          <AnchorWithIcon onClick={this.loadRecordForDetail} iconClassName=\"fas fa-info-circle\" className=\"btn btn-info btn-sm\" />\r\n        }\r\n        {\r\n          types === undefined || this.hasType('edit') &&\r\n          <AnchorWithIcon onClick={this.loadRecord} iconClassName=\"fas fa-edit\" className=\"btn btn-warning btn-sm\" />\r\n        }\r\n        {\r\n          types === undefined || this.hasType('delete') &&\r\n          <AnchorWithIcon onClick={this.deleteRecord} iconClassName=\"fas fa-times\" className=\"btn btn-danger btn-sm\" />\r\n        }\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapCommonUserStateToProps\r\n  )(EditDeleteButton)\r\n)","\r\nimport React, { ChangeEvent } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Filter from '../../../models/commons/Filter';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport Category from './../../../models/Category';\r\nimport { tableHeader } from './../../../utils/CollectionUtil';\r\nimport Modal from './../../container/Modal';\r\nimport FormGroup from './../../form/FormGroup';\r\nimport NavigationButtons from './../../navigation/NavigationButtons';\r\nimport BaseManagementPage from './BaseManagementPage';\r\nimport EditDeleteButton from './EditDeleteButton';\r\n\r\nclass State {\r\n  items: Category[] = [];\r\n  filter = new Filter();\r\n  totalData  = 0;\r\n  record = new Category();\r\n}\r\nconst MODEL_NAME = 'rule-categories';\r\nconst MENU = 'asrama';\r\n\r\nclass CategoryManagement extends BaseManagementPage<any, State> {\r\n  state = new State();\r\n  constructor(props) {\r\n    super(props, MODEL_NAME, MENU);\r\n    this.state.filter.limit = 10;\r\n    this.state.filter.orderBy = 'name';\r\n  }\r\n  onSubmit = () => {\r\n    this.showConfirmation(\"Submit Data?\")\r\n      .then(ok => {\r\n        const { record } = this.state;\r\n        if (!ok) return;\r\n        if (record.id ?? 0 > 0) {\r\n          this.callApiUpdate(record.id, record);\r\n        } else {\r\n          this.callApiInsert(record);\r\n        }\r\n      });\r\n  }\r\n  emptyRecord = () => new Category();\r\n  render() {\r\n    const { filter } = this.state;\r\n    return (\r\n      <div className=\"container-fluid section-body\">\r\n        <h2>Kategori Pelanggaran</h2>\r\n        <hr />\r\n        <RecordForm\r\n          formRef={this.formRef}\r\n          resetForm={this.resetForm}\r\n          onSubmit={this.onSubmit}\r\n          record={this.state.record}\r\n          updateRecordProp={this.updateRecordProp}\r\n        />\r\n        <form onSubmit={this.reload}>\r\n          <FormGroup label=\"Cari\">\r\n            <input name=\"name\" placeholder=\"nama\" className=\"form-control-sm\" value={filter.fieldsFilter ? filter.fieldsFilter['name'] : \"\"} onChange={this.updateFieldsFilter} />\r\n          </FormGroup>\r\n          <FormGroup label=\"Jumlah Tampilan\">\r\n            <input name=\"limit\" type=\"number\" className=\"form-control-sm\" value={filter.limit ?? 5} onChange={this.updateFilter} />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <input className=\"btn btn-primary btn-sm\" type=\"submit\" value=\"Submit\" />\r\n          </FormGroup>\r\n        </form>\r\n        <NavigationButtons\r\n          activePage={filter.page ?? 0}\r\n          limit={filter.limit ?? 5}\r\n          totalData={this.state.totalData}\r\n          onClick={this.loadAtPage}\r\n        />\r\n        <ItemsList\r\n          recordLoaded={this.oneRecordLoaded}\r\n          recordDeleted={this.loadItems}\r\n          startingNumber={(filter.page ?? 0) * (filter.limit ?? 10)}\r\n          items={this.state.items}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\nconst ItemsList = (props: {\r\n  startingNumber: number,\r\n  items: Category[],\r\n  recordLoaded(item: any),\r\n  recordDeleted()\r\n}) => {\r\n  return (\r\n    <div style={{ overflow: 'auto' }}>\r\n      <table className=\"table table-striped\">\r\n        {tableHeader(\"No\", \"Nama\", \"Deskripsi\", \"Opsi\")}\r\n        <tbody>\r\n          {props.items.map((item, i) => {\r\n            return (\r\n              <tr key={\"category-\" + i}>\r\n                <td>{i + 1 + props.startingNumber}</td>\r\n                <td>{item.name}</td>\r\n                <td>{item.description}</td>\r\n                <td>\r\n                  <EditDeleteButton\r\n                    recordLoaded={props.recordLoaded}\r\n                    recordDeleted={props.recordDeleted}\r\n                    record={item}\r\n                    modelName={MODEL_NAME}\r\n                    menu={MENU}\r\n                  />\r\n                </td>\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\nconst RecordForm = (props: {\r\n  formRef: React.RefObject<Modal>,\r\n  updateRecordProp(e: ChangeEvent): any,\r\n  resetForm(): any,\r\n  onSubmit(): any,\r\n  record: Category,\r\n}) => {\r\n  return (\r\n    <form className=\"record-form mb-3\" onSubmit={(e) => { e.preventDefault(); props.onSubmit() }}>\r\n      <Modal\r\n        show={false}\r\n        ref={props.formRef}\r\n        toggleable={true}\r\n        title=\"Record Form\"\r\n      >\r\n        <FormGroup label=\"Nama\">\r\n          <input\r\n            required\r\n            value={props.record.name ?? \"\"}\r\n            onChange={props.updateRecordProp}\r\n            className=\"form-control\"\r\n            name=\"name\"\r\n          />\r\n        </FormGroup>\r\n        <FormGroup label=\"Deskripsi\">\r\n          <textarea\r\n            required\r\n            className=\"form-control\"\r\n            name=\"description\"\r\n            onChange={props.updateRecordProp}\r\n            value={props.record.description ?? \"\"}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-sm mr-2\" />\r\n          <input type=\"reset\" className=\"btn btn-secondary btn-sm\" onClick={(e) => props.resetForm()} />\r\n        </FormGroup>\r\n      </Modal>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapCommonUserStateToProps\r\n  )(CategoryManagement)\r\n)","\r\nimport BaseEntity from './BaseEntity';\r\nexport default class RulePoint extends BaseEntity {\r\n    ruleCategoryName?: string;\r\n    ruleCategoryId?: number;\r\n    name?: string;\r\n    description?: string;\r\n    point = 0;\r\n    droppable = true;\r\n}","import React, { ChangeEvent } from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport RulePoint from './../../../models/RulePoint';\r\nimport Filter from '../../../models/commons/Filter';\r\nimport Modal from './../../container/Modal';\r\nimport FormGroup from './../../form/FormGroup';\r\nimport WebRequest from '../../../models/commons/WebRequest';\r\nimport NavigationButtons from './../../navigation/NavigationButtons';\r\nimport EditDeleteButton from './EditDeleteButton';\r\nimport { tableHeader } from './../../../utils/CollectionUtil';\r\nimport BaseManagementPage from './BaseManagementPage';\r\nimport Category from './../../../models/Category';\r\nimport WebResponse from '../../../models/commons/WebResponse';\r\nimport AnchorWithIcon from './../../navigation/AnchorWithIcon';\r\nclass State {\r\n  items: RulePoint[] = [];\r\n  filter: Filter = new Filter();\r\n  totalData: number = 0;\r\n  record: RulePoint = new RulePoint();\r\n  categories: Category[] = [];\r\n  categoriesLoaded: boolean = false;\r\n\r\n}\r\nconst MODEL_NAME = 'rule-points';\r\nconst MENU = 'asrama';\r\n\r\nclass RulePointManagement extends BaseManagementPage<any, State> {\r\n  state = new State();\r\n  constructor(props) {\r\n    super(props, MODEL_NAME, MENU);\r\n    this.state.filter.limit = 10;\r\n    this.state.filter.orderBy = 'name'\r\n  }\r\n\r\n  onSubmit = () => {\r\n    // console.debug(\"RECORD: \", this.state.record);\r\n    this.showConfirmation(\"Submit Data?\")\r\n      .then(ok => {\r\n        if (!ok) return;\r\n        if (this.state.record.id ?? 0 > 0) {\r\n          this.callApiUpdate(this.state.record.id, this.state.record);\r\n        } else {\r\n          this.callApiInsert(this.state.record);\r\n        }\r\n      })\r\n  }\r\n  componentDidMount() {\r\n    this.validateLoginStatus(() => {\r\n      this.scrollTop();\r\n      this.loadCategories();\r\n    });\r\n  }\r\n  categoriesLoaded = (response: WebResponse) => {\r\n    this.setState({ categories: response.result.items, categoriesLoaded: true }, () => { this.resetForm(); this.loadItems() });\r\n  }\r\n  categoriesNotLoaded = (response: WebResponse) => {\r\n    this.setState({ categories: [], categoriesLoaded: true }, this.resetForm);\r\n  }\r\n  loadCategories = () => {\r\n    const filter: Filter = new Filter();\r\n    filter.limit = 0;\r\n    const req: WebRequest = {\r\n      filter: filter,\r\n      modelName: 'rule-categories'\r\n    }\r\n    this.commonAjax(\r\n      this.masterDataService.list,\r\n      this.categoriesLoaded,\r\n      this.categoriesNotLoaded,\r\n      req,\r\n      MENU\r\n    );\r\n  }\r\n\r\n  emptyRecord = (): any => {\r\n    const record = new RulePoint();\r\n    if (this.state.categories.length > 0) {\r\n      record.ruleCategoryId = this.state.categories[0].id;\r\n    }\r\n    return record;\r\n  }\r\n\r\n  render() {\r\n    const filter: Filter = this.state.filter;\r\n    const categories: Category[] = this.state.categories;\r\n    if (this.state.categoriesLoaded && categories.length == 0) {\r\n      return (\r\n        <div className=\"container-fluid section-body\">\r\n          <h2>Kategori pelanggaran belum ada</h2>\r\n        </div>\r\n      )\r\n    }\r\n    const selectedCategoryId = filter.fieldsFilter && filter.fieldsFilter['category_id'] ? filter.fieldsFilter['category_id'] : \"ALL\";\r\n    return (\r\n      <div className=\"container-fluid section-body\">\r\n        <h2>Poin Pelanggaran</h2>\r\n        <hr />\r\n        <RecordForm categories={categories} reloadCategories={this.loadCategories} formRef={this.formRef} resetForm={this.resetForm} onSubmit={this.onSubmit} record={this.state.record} updateRecordProp={this.updateRecordProp} />\r\n        <form onSubmit={this.reload}>\r\n          <FormGroup label=\"Cari\">\r\n            <div className=\"input-group\">\r\n              <input name=\"name\" placeholder=\"nama\" className=\"form-control-sm\" value={filter.fieldsFilter ? filter.fieldsFilter['name'] : \"\"} onChange={this.updateFieldsFilter} />\r\n              <select value={selectedCategoryId} className=\"form-control-sm\" name=\"category_id\" onChange={this.updateFieldsFilter} >\r\n                {[{ id: \"\", name: \"Semua Kategori\" }, ...categories].map((c) => {\r\n                  return <option key={\"filter-cat-\" + c.id} value={c.id}>{c.name}</option>\r\n                })}\r\n              </select>\r\n              <div className=\"input-group-append\">\r\n                <AnchorWithIcon className=\"btn btn-sm\" iconClassName=\"fas fa-redo\" onClick={this.loadCategories}>Reload</AnchorWithIcon>\r\n              </div>\r\n            </div>\r\n          </FormGroup>\r\n          <FormGroup label=\"Jumlah Tampilan\">\r\n            <input type=\"number\" name=\"limit\" className=\"form-control-sm\" value={filter.limit ?? 5} onChange={this.updateFilter} />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <input className=\"btn btn-primary btn-sm\" type=\"submit\" value=\"Submit\" />\r\n          </FormGroup>\r\n        </form>\r\n        <NavigationButtons activePage={filter.page ?? 0} limit={filter.limit ?? 5} totalData={this.state.totalData}\r\n          onClick={this.loadAtPage} />\r\n        <ItemsList\r\n          recordLoaded={this.oneRecordLoaded}\r\n          recordDeleted={this.loadItems}\r\n          startingNumber={(filter.page ?? 0) * (filter.limit ?? 10)} items={this.state.items} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\nconst ItemsList = (props: { startingNumber: number, items: RulePoint[], recordLoaded(item: any), recordDeleted() }) => {\r\n\r\n  return (\r\n    <div style={{ overflow: 'auto' }}>\r\n      <table className=\"table table-striped\">\r\n        {tableHeader(\"No\", \"Nama\", \"Poin\", \"Deskripsi\", \"Kategori\", \"Pemutihan\", \"Opsi\")}\r\n        <tbody>\r\n          {props.items.map((item, i) => {\r\n            return (\r\n              <tr key={`RulePoint-${i}`}>\r\n                <td>{i + 1 + props.startingNumber}</td>\r\n                <td>{item.name}</td>\r\n                <td>{item.point}</td>\r\n                <td>{item.description}</td>\r\n                <td>{item.ruleCategoryName}</td>\r\n                <td>{item.droppable ? \"Ya\" : \"TIdak\"}</td>\r\n                <td>\r\n                  <EditDeleteButton\r\n                    recordLoaded={props.recordLoaded}\r\n                    recordDeleted={props.recordDeleted}\r\n                    record={item}\r\n                    modelName={MODEL_NAME}\r\n                    menu={MENU}\r\n                  />\r\n                </td>\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\nconst RecordForm = (props: {\r\n  categories: Category[],\r\n  formRef: React.RefObject<Modal>,\r\n  updateRecordProp(e: ChangeEvent): any,\r\n  resetForm(): any, onSubmit(): any,\r\n  record: RulePoint, reloadCategories(): any\r\n}) => {\r\n\r\n  return (\r\n    <form className=\"record-form mb-3\" onSubmit={(e) => { e.preventDefault(); props.onSubmit() }}>\r\n      <Modal show={false} ref={props.formRef} toggleable={true} title=\"Record Form\" >\r\n        <FormGroup label=\"Nama\"><input value={props.record.name ?? \"\"} onChange={props.updateRecordProp} className=\"form-control \" name=\"name\" required /></FormGroup>\r\n        <FormGroup label=\"Pengurangan Poin\"><input type=\"number\" value={props.record.point} onChange={props.updateRecordProp} className=\"form-control \" name=\"point\" required /></FormGroup>\r\n        <FormGroup label=\"Deskripsi\">\r\n          <textarea className=\"form-control\" name=\"description\" onChange={props.updateRecordProp} value={props.record.description ?? \"\"} />\r\n        </FormGroup>\r\n        <FormGroup label=\"Dapat diputihkan\">\r\n          <select className=\"form-control-sm\" data-type=\"boolean\" name=\"droppable\" onChange={props.updateRecordProp} value={props.record.droppable == true ? \"true\" : \"false\"} required>\r\n            <option value={\"true\"} >Ya</option>\r\n            <option value={\"false\"}>Tidak</option>\r\n          </select>\r\n        </FormGroup>\r\n        <FormGroup label=\"Category\">\r\n          <div className=\"input-group\">\r\n            <select required value={props.record.ruleCategoryId} className=\"form-control-sm\" name=\"ruleCategoryId\" onChange={props.updateRecordProp} >\r\n              {props.categories.map((c) => {\r\n                return <option key={\"cat-\" + c.id} value={c.id}>{c.name}</option>\r\n              })}\r\n            </select>\r\n            <div className=\"input-group-append\">\r\n              <AnchorWithIcon className=\"btn btn-sm\" iconClassName=\"fas fa-redo\" onClick={props.reloadCategories}>Reload</AnchorWithIcon>\r\n            </div>\r\n          </div>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-sm mr-2\" />\r\n          <input value=\"Reset\" type=\"reset\" className=\"btn btn-secondary btn-sm\" onClick={(e) => props.resetForm()} />\r\n        </FormGroup>\r\n      </Modal>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapCommonUserStateToProps\r\n  )(RulePointManagement)\r\n)\r\n","import 'reflect-metadata';\r\nimport { injectable } from 'inversify';\r\nimport { contextPath } from '../constant/Url';\r\nimport WebResponse from '../models/commons/WebResponse';\r\nimport Filter from './../models/commons/Filter';\r\nimport WebRequest from './../models/commons/WebRequest';\r\nimport MedicalRecord from './../models/MedicalRecord';\r\nimport PointRecord from './../models/PointRecord';\r\nimport AttachmentInfo from './../models/settings/AttachmentInfo';\r\nimport { commonAjaxGetCalls, commonAjaxGetCallsWithBlob, commonAjaxPostCalls } from './Promises';\r\n\r\n@injectable()\r\nexport default class StudentService {\r\n  public updatePointRecord(req: PointRecord, attachmentInfo?: AttachmentInfo, removeImage = false) {\r\n    if (attachmentInfo) {\r\n      attachmentInfo.data = '';\r\n    }\r\n    const data = new FormData();\r\n    data.append('id', req.id?.toString() ?? '');\r\n    data.append('day', req.day?.toString() ?? '');\r\n    data.append('month', req.month?.toString() ?? '');\r\n    data.append('year', req.year?.toString() ?? '');\r\n    data.append('time', new Date(req.time ?? new Date()).getTime().toString());\r\n    data.append('description', req.description ?? '');\r\n    data.append('location', req.location ?? '');\r\n    data.append('rulePointId', req.rulePointId?.toString() ?? '');\r\n    data.append('classMemberId', req.classMemberId?.toString() ?? '');\r\n    data.append('removeImage', removeImage ? 'true' : 'false');\r\n    const imgFile = attachmentInfo?.file;\r\n    if (imgFile)\r\n      data.append('image', imgFile);\r\n    return commonAjaxPostCalls(contextPath('api/asrama/student-points/update'), data, 'multipart/form-data');\r\n  }\r\n  public insertPointRecord(req: PointRecord, attachmentInfo?: AttachmentInfo) {\r\n    if (attachmentInfo) {\r\n      attachmentInfo.data = '';\r\n    }\r\n    const data = new FormData();\r\n    data.append('day', req.day?.toString() ?? '');\r\n    data.append('month', req.month?.toString() ?? '');\r\n    data.append('year', req.year?.toString() ?? '');\r\n    data.append('time', new Date(req.time ?? new Date()).getTime().toString());\r\n    data.append('description', req.description ?? '');\r\n    data.append('location', req.location ?? '');\r\n    data.append('rulePointId', req.rulePointId?.toString() ?? '');\r\n    data.append('classMemberId', req.classMemberId?.toString() ?? '');\r\n    const imgFile = attachmentInfo?.file;\r\n    if (imgFile)\r\n      data.append('image', imgFile);\r\n    return commonAjaxPostCalls(contextPath('api/asrama/student-points/insert'), data, 'multipart/form-data');\r\n  }\r\n  public getClasses() {\r\n    return commonAjaxGetCalls(contextPath('api/admin/school-data/classlevels'));\r\n  }\r\n  public getStudentWithPoints(filter: Filter) {\r\n    const q = Filter.queryString(filter);\r\n    return commonAjaxGetCalls(contextPath(`api/asrama/student-points${q}`));\r\n  }\r\n  public getCategories() {\r\n    return commonAjaxGetCalls(contextPath('api/admin/asrama/rule-categories?order=name'));\r\n  }\r\n  public followUp = (pointRecordId: number): Promise<WebResponse> => {\r\n    return commonAjaxPostCalls(contextPath('api/dormitorymanagement/followup'), {\r\n      record_id: pointRecordId\r\n    });\r\n  }\r\n  public getFollowUpReminders = (): Promise<WebResponse> => {\r\n    return commonAjaxPostCalls(contextPath('api/dormitorymanagement/followupreminders'), {});\r\n  }\r\n  public getRaporData = (classId: string): Promise<WebResponse> => {\r\n    return commonAjaxGetCalls(contextPath(`api/asrama/report/load-data/${classId}`));\r\n  }\r\n  public downloadRaporData = (classId: string): Promise<any> => {\r\n    // return commonAjaxPostCallsWithBlob(endpoint, request);\r\n    return commonAjaxGetCallsWithBlob(contextPath(`api/asrama/report/load-data-xls/${classId}`));\r\n  }\r\n\r\n\r\n  public submitMedicalRecord = (record: MedicalRecord) => {\r\n    return commonAjaxPostCalls(contextPath('api/dormitorymanagement/submitmedicalrecord'), record)\r\n  }\r\n  public loadMonthlyMedicalRecord = (studentId: number, month: number, year: number) => {\r\n    const req: WebRequest = {\r\n      filter: {\r\n        fieldsFilter: { student_id: studentId }\r\n      }\r\n    }\r\n    return commonAjaxPostCalls(contextPath('api/dormitorymanagement/monthlymedicalrecord'), req)\r\n  }\r\n\r\n  public setPointDropped = (id: number, dropped: boolean) => {\r\n    const path = dropped ? contextPath('api/asrama/student-points/drop-points') : contextPath('api/asrama/student-points/undrop-points');\r\n    return commonAjaxPostCalls(`${path}?id=${id}`);\r\n  }\r\n\r\n  /**\r\n   * pemutihan\r\n   * @param ids \r\n   */\r\n  public dropAll = (ids: number[]) => {\r\n    const path = contextPath('api/asrama/student-points/drop-points');\r\n    const q = '?' + ids.map(id => `id=${id}`).join('&');\r\n    return commonAjaxPostCalls(path + q);\r\n  }\r\n  /**\r\n   * reset pemutihan\r\n   * @param ids \r\n   */\r\n  public undropAll = (ids: number[]) => {\r\n    const path = contextPath('api/asrama/student-points/undrop-points');\r\n    const q = '?' + ids.map(id => `id=${id}`).join('&');\r\n    return commonAjaxPostCalls(path + q);\r\n  }\r\n}\r\n","import React, { ChangeEvent } from 'react';\nimport Filter from '../../models/commons/Filter';\nimport { MONTHS } from './../../utils/DateUtil';\n\nconst days = (): number[] => {\n  const arr: number[] = [];\n  for (let i = 1; i <= 31; i++) {\n    arr.push(i);\n  }\n  return arr;\n}\nconst FilterPeriod = (props: {\n  date: Date,\n  onChange(e: ChangeEvent<HTMLSelectElement | HTMLInputElement>): any,\n  disableDay?: boolean,\n}) => {\n  const { date, disableDay } = props;\n  return (\n    <React.Fragment>\n      {\n        disableDay !== true &&\n        <select data-type=\"number\" className=\"form-control-sm\" name=\"day\" value={date.getDate()} onChange={props.onChange}>\n          {days().map((d) => {\n            return <option key={`td-${d}`} value={d}>{d == 0 ? 'day' : d}</option>\n          })}\n        </select>\n      }\n      <select data-type=\"number\" className=\"form-control-sm\" name=\"month\" value={date.getMonth()} onChange={props.onChange}>\n        {MONTHS.map((m, i) => {\n          return <option key={`tm-${i}`} value={i}>{m}</option>\n        })}\n      </select>\n      <input name=\"year\" placeholder=\"year\" className=\"form-control-sm\" value={date.getFullYear()} onChange={props.onChange} />\n    </React.Fragment>\n  )\n}\n\nexport default FilterPeriod;","import { resolve } from 'inversify-react';\r\nimport React, { ChangeEvent } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport Class from '../../../models/Class';\r\nimport Filter from '../../../models/commons/Filter';\r\nimport WebResponse from '../../../models/commons/WebResponse';\r\nimport Student from '../../../models/Student';\r\nimport StudentService from '../../../services/StudentService';\r\nimport { tableHeader } from '../../../utils/CollectionUtil';\r\nimport { getInputReadableDate } from '../../../utils/DateUtil';\r\nimport FilterPeriod from '../../form/FilterPeriod';\r\nimport FormGroup from '../../form/FormGroup';\r\nimport Spinner from '../../loader/Spinner';\r\nimport AnchorWithIcon from '../../navigation/AnchorWithIcon';\r\nimport NavigationButtons from '../../navigation/NavigationButtons';\r\nimport ToggleButton from '../../navigation/ToggleButton';\r\nimport BaseComponent from './../../BaseComponent';\r\n\r\nclass State {\r\n  items: Student[] = [];\r\n  classes: Class[] = [];\r\n  totalData = 0;\r\n  filter = new Filter();\r\n  loading = false;\r\n}\r\nconst now = new Date();\r\nconst defaultFieldsFilter = {\r\n  'classLevel.id=': '',\r\n  'with_point_record': 'false',\r\n  'time>=d': getInputReadableDate(new Date(now.getFullYear(), 0, 1)),\r\n  'time<=d': getInputReadableDate(now)\r\n};\r\nclass StudentList extends BaseComponent<any, State> {\r\n  readonly state = new State();\r\n  @resolve(StudentService)\r\n  private studentService: StudentService;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state.filter.limit = 10;\r\n    this.state.filter.orderBy = 'student.user.fullName';\r\n    this.state.filter.fieldsFilter = defaultFieldsFilter;\r\n  }\r\n  itemsLoaded = (response: WebResponse) => {\r\n    this.setState({ items: response.result.items, totalData: response.result.totalData });\r\n  }\r\n  classesLoaded = (response: WebResponse) => {\r\n    this.setState({ classes: response.result }, this.loadItems);\r\n  }\r\n  loadItems = () => {\r\n    this.commonAjax(\r\n      this.studentService.getStudentWithPoints,\r\n      this.itemsLoaded,\r\n      this.showCommonErrorAlert,\r\n      this.state.filter\r\n    )\r\n  }\r\n  loadAtPage = (page: number) => {\r\n    const { filter } = this.state;\r\n    filter.page = page;\r\n    this.setState({ filter }, this.loadItems);\r\n  }\r\n  loadClasses = () => {\r\n    this.commonAjax(\r\n      this.studentService.getClasses,\r\n      this.classesLoaded,\r\n      this.showCommonErrorAlert,\r\n    )\r\n  }\r\n  componentDidMount() {\r\n    this.validateLoginStatus(() => {\r\n      this.scrollTop();\r\n      this.loadClasses();\r\n    })\r\n  }\r\n  updatePeriodFilter = (e: ChangeEvent<HTMLInputElement | HTMLSelectElement>, field: 'time<=d' | 'time>=d') => {\r\n    const { filter } = this.state;\r\n    Filter.updatePeriodFilter(filter, e, field);\r\n    this.setState({ filter });\r\n  }\r\n  updateFieldFilter = (e: ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\r\n    const { filter } = this.state;\r\n    filter.fieldsFilter[e.target.name] = e.target.value;\r\n    this.setState({ filter });\r\n  }\r\n  updateSelectedClass = (e: ChangeEvent) => {\r\n    const target = e.target as HTMLSelectElement;\r\n    const { filter } = this.state;\r\n    if (!filter.fieldsFilter) {\r\n      filter.fieldsFilter = {};\r\n    }\r\n    filter.fieldsFilter['classLevel.id='] = target.value;\r\n    this.setState({ filter });\r\n  }\r\n  inputPage = (type: string, s: Student) => {\r\n    switch (type) {\r\n      case 'pointrecord':\r\n        this.inputPoint(s);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  inputPoint = (student: Student) => {\r\n    this.props.history.push({\r\n      pathname: \"/asrama/inputpoint\",\r\n      state: { student }\r\n    })\r\n  }\r\n  updateWithPointRecord = (enable: boolean) => {\r\n    const { filter } = this.state;\r\n    filter.fieldsFilter['with_point_record'] = `${enable}`;\r\n    this.setState({ filter });\r\n  }\r\n  updateFilter = (e: ChangeEvent<any>) => {\r\n    const { filter } = this.state;\r\n    const { target } = e;\r\n    if (!target.value || target.value == \"\") {\r\n      return;\r\n    }\r\n    let value: any;\r\n    if (target.type == 'number' || (target.dataset && target.dataset['type'] == 'number')) {\r\n      value = parseInt(target.value);\r\n    } else {\r\n      value = target.value;\r\n    }\r\n    filter[target.name] = value;\r\n    this.setState({ filter })\r\n  }\r\n  onSubmit = (e) => { e.preventDefault(); this.loadAtPage(0) }\r\n  render() {\r\n    const { filter, classes, loading, totalData } = this.state;\r\n    const { fieldsFilter } = filter;\r\n    const defaultClass = { id: 0, level: 'Semua Kelas' } as Class;\r\n    const selectedClassId = fieldsFilter['classLevel.id='] ?? '';\r\n    const showPointRecord = fieldsFilter['with_point_record'] === `${true}`;\r\n    return (\r\n      <div className=\"container-fluid section-body\">\r\n        <h2>Siswa</h2>\r\n        <hr />\r\n        <form onSubmit={this.onSubmit}>\r\n          <FormGroup label=\"Cari\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                name=\"student.user.fullName\"\r\n                placeholder=\"Nama\"\r\n                className=\"form-control-sm\"\r\n                value={fieldsFilter['student.user.fullName'] ?? ''}\r\n                onChange={this.updateFieldFilter}\r\n              />\r\n              <select\r\n                value={selectedClassId}\r\n                onChange={this.updateFieldFilter}\r\n                className=\"form-control-sm\"\r\n                name=\"classLevel.id=\"\r\n              >\r\n                {[defaultClass, ...classes].map((c) => {\r\n                  return <option key={`class_${c.id}`} value={c.id}>{c.level}{c.letter} - {c.schoolName}</option>\r\n                })}\r\n              </select>\r\n            </div>\r\n          </FormGroup>\r\n          <FormGroup label=\"Jumlah Tampilan\">\r\n            <input\r\n              name=\"limit\"\r\n              type=\"number\"\r\n              className=\"form-control-sm\"\r\n              value={filter.limit ?? 5}\r\n              onChange={this.updateFilter}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup label=\"Periode\">\r\n            <ToggleButton\r\n              active={showPointRecord}\r\n              yesLabel=\"tampilkan poin\"\r\n              noLabel=\"tanpa poin\"\r\n              onClick={this.updateWithPointRecord}\r\n            />\r\n            {\r\n              showPointRecord &&\r\n              <React.Fragment>\r\n                <div className=\"input-group\">\r\n                  <FilterPeriod date={new Date(fieldsFilter['time>=d'])} onChange={(e) => this.updatePeriodFilter(e, 'time>=d')} />\r\n                </div>\r\n                <div className=\"input-group\">\r\n                  <FilterPeriod date={new Date(fieldsFilter['time<=d'])} onChange={(e) => this.updatePeriodFilter(e, 'time<=d')} />\r\n                </div>\r\n              </React.Fragment>\r\n            }\r\n          </FormGroup>\r\n          {\r\n            showPointRecord &&\r\n            <FormGroup>\r\n              {new Date(fieldsFilter['time>=d']).toDateString()} - {new Date(fieldsFilter['time<=d']).toDateString()}\r\n            </FormGroup>\r\n          }\r\n          <FormGroup>\r\n            <input type=\"submit\" className=\"btn btn-primary btn-sm\" value=\"Submit\" />\r\n          </FormGroup>\r\n        </form>\r\n        <p />\r\n        <NavigationButtons onClick={this.loadAtPage} activePage={filter.page ?? 0} limit={filter.limit ?? 10} totalData={totalData} />\r\n        <ItemsList showPointRecord={showPointRecord} loading={loading} inputPage={this.inputPage} startingNumber={(filter.page ?? 0) * (filter.limit ?? 10)} items={this.state.items} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst ItemsList = (props: { showPointRecord: boolean, loading: boolean, startingNumber: number, inputPage(type: string, s: Student): any, items: Student[] }) => {\r\n\r\n  return (\r\n    <div style={{ overflow: 'auto' }}>\r\n      <table className=\"table table-striped\">\r\n        {props.showPointRecord ? tableHeader(\"No\", \"\", \"Name\", \"Kelas\", \"Point\") : tableHeader(\"No\", \"\", \"Name\", \"Kelas\")}\r\n        <tbody>\r\n          {props.loading ?\r\n            <tr>\r\n              <td colSpan={5}><Spinner /></td>\r\n            </tr>\r\n\r\n            : props.items.map((student, i) => {\r\n              return (\r\n                <tr key={student.id}>\r\n                  <td>{i + 1 + props.startingNumber}</td>\r\n                  <td>\r\n                    <div style={{ width: '100px' }}>\r\n                      <AnchorWithIcon className=\"btn\" onClick={(e) => props.inputPage('pointrecord', student)} iconClassName=\"far fa-edit\" />\r\n                      {/* <AnchorWithIcon className=\"btn\" onClick={(e) => props.inputPage('medicalrecord', student)} iconClassName=\"fas fa-notes-medical\" /> */}\r\n                    </div>\r\n                  </td>\r\n                  <td>\r\n                    {student.name}\r\n                  </td>\r\n                  <td>\r\n                    {student.classLevel}{student.classLetter} {student.schoolName}\r\n                  </td>\r\n                  {props.showPointRecord && <td>{student.point}</td>}\r\n                </tr>\r\n              )\r\n            })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(connect(\r\n  mapCommonUserStateToProps\r\n)(StudentList));\r\n","\r\nimport BaseEntity from './BaseEntity';\r\nimport User from './User';\r\nimport Class from './Class';\r\nexport default class Student extends BaseEntity\r\n{\r\n    nis?:string;\r\n    kelas?:Class;\r\n    user?:User;\r\n\r\n    point?:number;\r\n    name?: string;\r\n    classLetter?: string;\r\n    classLevel?: number;\r\n    schoolName?: string;\r\n}","\nimport { contextPath } from './../constant/Url';\nimport { parseDate } from './../utils/DateUtil';\nimport { twoDigits as td } from './../utils/StringUtil';\nimport BaseEntity from './BaseEntity';\nimport Student from './Student';\nexport default class PointRecord extends BaseEntity {\n  setTime = (h: number, m: number, s: number) => {\n    this.time = new Date();\n    this.time.setFullYear(this.year);\n    this.time.setMonth(this.month - 1);\n    this.time.setDate(this.day);\n    this.time.setHours(h, m, s);\n  }\n  dateString = (): string => {\n    return `${this.year}-${td(this.month)}-${td(this.day)}`;\n  }\n  get timeString() {\n    return `${this.time.getHours()}:${this.time.getMinutes()}:${this.time.getSeconds()}`;\n  }\n  location?: string;\n  get day() { return this.time.getDate() };\n  get month() { return this.time.getMonth() + 1; }\n  get year() { return this.time.getFullYear(); }\n  set day(d: number) { this.time.setDate(d); }\n  set month(m: number) { this.time.setMonth(m - 1); }\n  set year(y: number) { this.time.setFullYear(y); }\n  time = new Date();\n  description?: string;\n  classMemberId?: number;\n  rulePointId?: number;\n  ruleCategoryId?: number;\n\n  student?: Student;\n  dropped?: Date;\n\n  // response fields\n  ruleCategoryName?: string;\n  ruleName?: string;\n  studentName?: string;\n  schoolName?: string;\n  classLevel?: number;\n  classLetter?: string;\n  point?: number;\n  droppable?: boolean;\n\n  /**\n   * get picture URL\n   */\n  getPicture = () => this.id ? contextPath(`api/public/asrama/broken-rule-img/${this.id}`) : undefined;\n\n  getDate = (): Date => {\n    return parseDate(this.dateString());\n  }\n\n  getTimestamp = () => {\n    const d = this.getDate();\n    const day = DAYS[d.getDay()];\n    return day + ', ' + [\n      td(d.getDate()), td(d.getMonth() + 1), d.getFullYear()\n    ].join('/') + ' ' + this.time;\n  }\n\n  public static clone = (p: PointRecord) => {\n    p = Object.assign(new PointRecord(), p);\n    p.time = new Date(p.time);\n    return p;\n  }\n}\n\nconst DAYS = [\n  'Ahad', 'Senin', 'Selasa', 'Rabu', 'Kamis', 'Jumat', 'Sabtu'\n]","import React from 'react';\nimport { Component, ChangeEvent } from 'react';\nimport { twoDigits } from './../../utils/StringUtil';\ninterface Props {\n  onChange(h: number, m: number, s: number): any,\n  value: string,\n}\nclass State {\n  hour = new Date().getHours();\n  minute = new Date().getMinutes();\n  second = new Date().getSeconds();\n}\nconst hours = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,\n];\nconst minutesOrSeconds = () => {\n  const arr: number[] = [];\n  for (let i = 1; i < 60; i++) {\n    arr.push(i);\n  }\n  return arr;\n}\nexport default class InputTime extends Component<Props, State> {\n  state = new State();\n  minutes: number[];\n  seconds: number[];\n  constructor(props) {\n    super(props);\n    this.minutes = minutesOrSeconds();\n    this.seconds = minutesOrSeconds();\n  }\n  componentDidMount() {\n    this.updateFromProps();\n  }\n  updateFromProps = () => {\n    try {\n      const val = this.props.value.split(\":\");\n      this.setState({ hour: parseInt(val[0]), minute: parseInt(val[1]), second: parseInt(val[2]) });\n    } catch (error) {\n\n    }\n  }\n  updateValue = (e: ChangeEvent<HTMLSelectElement>) => {\n    const { target } = e;\n    const { name } = target;\n    this.setState({ [name]: target.value } as any, this.onChange);\n  }\n  setNow = () => {\n    const date = new Date();\n    this.setState({\n      hour: date.getHours(),\n      minute: date.getMinutes(),\n      second: date.getSeconds()\n    }, this.onChange)\n  }\n  onChange = () => {\n    this.props.onChange(this.state.hour, this.state.minute, this.state.second)\n  }\n  render() {\n\n    return (<div className=\"form-control bg-light\">\n      <select name=\"hour\" style={{ border: 'none' }} value={this.state.hour} onChange={this.updateValue} >\n        {hours.map((hour) => {\n          return <option key={\"HOUR-\" + hour} value={hour} >{twoDigits(hour)}</option>\n        })}\n      </select>\n      <select name=\"minute\" style={{ border: 'none' }} value={this.state.minute} onChange={this.updateValue}>\n        {this.minutes.map((min) => {\n          return <option key={\"MIN-\" + min} value={min} >{twoDigits(min)}</option>\n        })}\n      </select>\n      <select name=\"second\" style={{ border: 'none' }} value={this.state.second} onChange={this.updateValue}>\n        {this.seconds.map((sec) => {\n          return <option key={\"SEC-\" + sec} value={sec} >{twoDigits(sec)}</option>\n        })}\n      </select>\n      <a style={{ marginLeft: 5 }} onClick={this.setNow} ><i className=\"fas fa-history\" /></a>\n    </div>)\n  }\n}","import React, { ChangeEvent, FormEvent } from 'react'\nimport BaseComponent from '../../../BaseComponent';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\nimport RulePoint from '../../../../models/RulePoint';\nimport FormGroup from '../../../form/FormGroup';\nimport PointRecord from '../../../../models/PointRecord';\nimport { parseDate } from '../../../../utils/DateUtil';\nimport InputTime from '../../../form/InputTime';\nimport { getAttachmentInfoFromFile } from '../../../../utils/ComponentUtil';\nimport AttachmentInfo from '../../../../models/settings/AttachmentInfo';\nclass State {\n  pointRecord = new PointRecord();\n}\nclass FormStepThree extends BaseComponent<any, State> {\n  state = new State();\n  constructor(props) {\n    super(props, true);\n  }\n\n  onSubmit = (e: FormEvent) => {\n    e.preventDefault();\n    this.showConfirmation(\"Submit Data?\")\n      .then(ok => {\n        if (ok) {\n          this.props.submit(this.state.pointRecord);\n        }\n      })\n  }\n  get rulePoint(): RulePoint {\n    return this.props.rulePoint;\n  }\n  updatePointRecord = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { target } = e;\n    const { pointRecord } = this.state;\n    pointRecord[target.name] = target.value;\n    this.setState({ pointRecord });\n\n  }\n  updateDate = (e: ChangeEvent<HTMLInputElement>) => {\n    const date = parseDate(e.target.value);\n    const { pointRecord } = this.state;\n    pointRecord.time = date;\n    this.setState({ pointRecord });\n  }\n  updateTime = (h: number, m: number, s: number) => {\n    const { pointRecord } = this.state;\n    pointRecord.setTime(h, m, s);\n    this.setState({ pointRecord });\n  }\n  setAttachment = (e: ChangeEvent) => {\n    const target = e.target as HTMLInputElement;\n    getAttachmentInfoFromFile(target).then((attachment: AttachmentInfo) => {\n      this.props.setAttachment(attachment);\n    });\n  }\n  removeAttachment = () => {\n    this.props.removeAttachment();\n  }\n  getAttachment = (): AttachmentInfo | undefined => {\n    return this.props.attachmentInfo;\n  }\n  render() {\n    const { rulePoint } = this;\n    const { pointRecord } = this.state;\n    const attachment = this.getAttachment();\n    return (\n      <form onSubmit={this.onSubmit}>\n        <FormGroup label=\"Category\">\n          <span>{rulePoint.ruleCategoryName} - {rulePoint.name}</span>\n          <span className=\"badge badge-dark\">{rulePoint.point}</span>\n        </FormGroup>\n        <FormGroup label=\"Date\">\n          <input type=\"date\" className=\"form-control\" onChange={this.updateDate} name=\"date\" value={pointRecord.dateString()} />\n        </FormGroup>\n        <FormGroup label=\"Time\">\n          <InputTime onChange={this.updateTime} value={pointRecord.timeString} />\n        </FormGroup>\n        <FormGroup label=\"Location\">\n          <input className=\"form-control\" onChange={this.updatePointRecord} name=\"location\" value={pointRecord.location ?? \"\"} />\n        </FormGroup>\n        <FormGroup label=\"Picture\">\n          {attachment ?\n            <>\n              <img\n                className=\"border border-dark mr-2\"\n                src={attachment.url} width={100} height={100} />\n              <AnchorWithIcon\n                iconClassName=\"fas fa-times\"\n                className=\"btn btn-danger\"\n                onClick={this.removeAttachment}\n              />\n            </>\n            :\n            <input\n              type=\"file\"\n              accept=\"image/*\"\n              className=\"form-control\"\n              onChange={this.setAttachment}\n              name=\"attachment\"\n            />\n          }\n        </FormGroup>\n        <FormGroup label=\"Description\">\n          <textarea\n            value={pointRecord.description ?? ''}\n            onChange={this.updatePointRecord}\n            name=\"description\"\n            className=\"form-control\"\n          />\n        </FormGroup>\n        <AnchorWithIcon\n          className=\"btn btn-secondary float-left\"\n          iconClassName=\"fas fa-arrow-left\"\n          onClick={this.props.onBack}\n        >\n          Back\n        </AnchorWithIcon>\n        <button className=\"btn btn-success float-right\" >Submit</button>\n      </form>\n    )\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapCommonUserStateToProps\n  )(FormStepThree)\n)","\r\nimport React, { CSSProperties } from 'react';\r\nconst SimpleError = (props: { show?: boolean, style?: CSSProperties, children?: any }) => {\r\n  if (props.show == false) return null;\r\n  return (\r\n    <div style={props.style} className=\"alert alert-danger\">\r\n      {props.children ?? \"Error Occured\"}\r\n    </div>\r\n  );\r\n}\r\nexport default SimpleError;","\nimport React, { ChangeEvent, FormEvent } from 'react'\nimport { resolve } from 'inversify-react';\nimport BaseComponent from '../../../BaseComponent';\nimport MasterDataService from '../../../../services/MasterDataService';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\nimport FormGroup from '../../../form/FormGroup';\nimport Category from '../../../../models/Category';\nimport RulePoint from '../../../../models/RulePoint';\nimport WebRequest from '../../../../models/commons/WebRequest';\nimport WebResponse from '../../../../models/commons/WebResponse';\nimport Spinner from '../../../loader/Spinner';\nimport SimpleError from '../../../alert/SimpleError';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\nclass State {\n  rulePoints: RulePoint[] = [];\n  loading = false;\n}\nclass FormStepTwo extends BaseComponent<any, State> {\n  @resolve(MasterDataService)\n  private masterDataService: MasterDataService;\n  state = new State();\n  constructor(props) {\n    super(props, true);\n  }\n  startLoading = () => this.setState({ loading: true });\n  endLoading = () => this.setState({ loading: false });\n  rulePointsLoaded = (response: WebResponse) => {\n    this.setState({ rulePoints: response.result.items }, () => {\n      if (this.state.rulePoints.length > 0) {\n        if (!this.props.rulePoint) {\n          this.setRulePoint(this.state.rulePoints[0]);\n        }\n      }\n    });\n  }\n\n  loadRulePoints = () => {\n    if (null == this.getCategory()) return;\n    const req: WebRequest = {\n      filter: { limit: 0, fieldsFilter: { 'category.id=': this.getCategory().id } },\n      modelName: 'rule-points',\n    }\n    this.commonAjax(\n      this.masterDataService.list,\n      this.rulePointsLoaded,\n      this.showCommonErrorAlert,\n      req,\n      'asrama'\n    )\n  }\n  getCategory = (): Category => {\n    return this.props.category;\n  }\n  componentDidMount() {\n    super.componentDidMount();\n    this.loadRulePoints();\n  }\n  onSubmit = (e: FormEvent) => {\n    e.preventDefault();\n    this.props.onSubmit();\n  }\n  setRulePoint = (rulePoint: RulePoint) => {\n    this.props.setRulePoint(rulePoint);\n  }\n  updateRulePoint = (e: ChangeEvent<HTMLSelectElement>) => {\n    const select = e.target;\n    const filtered = this.state.rulePoints.filter((r) => r.id?.toString() == select.value)\n    if (filtered.length == 0) return;\n    this.setRulePoint(filtered[0]);\n  }\n  render() {\n    const category = this.getCategory();\n    const { rulePoints, loading } = this.state;\n\n    if (null == category) {\n      return <SimpleError>Category not found</SimpleError>\n    }\n    if (loading) {\n      return <Spinner />\n    }\n    if (rulePoints.length == 0) {\n      return <SimpleError>Rule Points for {category.name} not found</SimpleError>\n    }\n    return (\n      <form onSubmit={this.onSubmit} >\n        <FormGroup label=\"Category\" children={category.name} />\n        <FormGroup label=\"Name\">\n          <select className=\"form-control\" onChange={this.updateRulePoint} value={this.props.rulePoint ? this.props.rulePoint.id : null} >\n            {rulePoints.map((r) => {\n              return <option key={`select-rulePoint-${r.id}`} value={r.id}>{r.name}</option>\n            })}\n          </select>\n        </FormGroup>\n        <FormGroup label=\"Point\" children={this.props.rulePoint?.point} />\n        <hr />\n        <AnchorWithIcon className=\"btn btn-secondary float-left\" iconClassName=\"fas fa-arrow-left\" onClick={this.props.onBack} >Back</AnchorWithIcon>\n        <AnchorWithIcon className=\"btn btn-info float-right\" iconClassName=\"fas fa-arrow-right\" onClick={this.onSubmit} >Next</AnchorWithIcon>\n      </form>\n    );\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapCommonUserStateToProps\n  )(FormStepTwo)\n)","import { resolve } from 'inversify-react';\nimport React, { ChangeEvent } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\nimport Category from '../../../../models/Category';\nimport Filter from '../../../../models/commons/Filter';\nimport WebRequest from '../../../../models/commons/WebRequest';\nimport WebResponse from '../../../../models/commons/WebResponse';\nimport MasterDataService from '../../../../services/MasterDataService';\nimport SimpleError from '../../../alert/SimpleError';\nimport BaseComponent from '../../../BaseComponent';\nimport FormGroup from '../../../form/FormGroup';\nimport Spinner from '../../../loader/Spinner';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\nclass State {\n  categories: Category[] = [];\n  loading = false;\n  categoriesLoaded = false;\n}\nclass FormStepOne extends BaseComponent<any, State> {\n  state = new State();\n\n  @resolve(MasterDataService)\n  private masterDataService: MasterDataService;\n  constructor(props) {\n    super(props, true);\n  }\n  categoriesLoaded = (response: WebResponse) => {\n    this.setState({ categories: response.result.items, categoriesLoaded: true }, () => {\n      if (this.state.categories.length > 0) {\n        if (!this.props.category) {\n          this.setCategory(this.state.categories[0]);\n        }\n      }\n    });\n  }\n  startLoading = () => this.setState({ loading: true });\n  endLoading = () => this.setState({ loading: false });\n  setCategory = (c: Category) => {\n    this.props.setSelectedCategory(c);\n  }\n  loadCategories = () => {\n    const req: WebRequest = {\n      filter: Filter.withLimit(0),\n      modelName: 'rule-categories'\n    }\n    this.commonAjax(\n      this.masterDataService.list,\n      this.categoriesLoaded,\n      this.showCommonErrorAlert,\n      req,\n      'asrama'\n    )\n  }\n  componentDidMount() {\n    super.componentDidMount();\n    this.loadCategories();\n  }\n  onSubmit = () => {\n    this.props.onSubmit();\n  }\n  updateCategory = (e: ChangeEvent<HTMLSelectElement>) => {\n    const select = e.target;\n    const filtered = this.state.categories.filter((c) => c.id?.toString() == select.value)\n    if (filtered.length == 0) return;\n    this.setCategory(filtered[0]);\n  }\n  render() {\n    const { categories, loading } = this.state;\n    const { category } = this.props;\n    if (loading) {\n      return <Spinner />\n    }\n    if (categories.length == 0) {\n      return <SimpleError>Categories not found</SimpleError>\n    }\n    return (\n      <form onSubmit={(e) => { e.preventDefault(); this.onSubmit() }}>\n        <FormGroup label=\"Category\">\n          <select className=\"form-control\" onChange={this.updateCategory} value={category ? category.id ?? \"\" : \"\"} >\n            {categories.map((c) => {\n              return <option key={`select-cat-${c.id}`} value={c.id}>{c.name}</option>\n            })}\n          </select>\n        </FormGroup>\n        <hr />\n        <AnchorWithIcon\n          className=\"btn btn-secondary float-left\"\n          iconClassName=\"fas fa-arrow-left\"\n          onClick={this.props.onBack}\n        >\n          Back\n        </AnchorWithIcon>\n        <AnchorWithIcon\n          className=\"btn btn-info float-right\"\n          iconClassName=\"fas fa-arrow-right\"\n          onClick={this.onSubmit}\n        >\n          Next\n        </AnchorWithIcon>\n      </form >\n    )\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapCommonUserStateToProps\n  )(FormStepOne)\n)","\nimport React from 'react'\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\nimport Student from '../../../models/Student';\nimport AnchorWithIcon from '../../navigation/AnchorWithIcon';\nimport Modal from '../../container/Modal';\nimport FormStepThree from './form/FormStepThree';\nimport FormStepTwo from './form/FormStepTwo';\nimport FormStepOne from './form/FormStepOne';\nimport Category from '../../../models/Category';\nimport RulePoint from '../../../models/RulePoint';\nimport SimpleError from '../../alert/SimpleError';\nimport PointRecord from '../../../models/PointRecord';\nimport StudentService from '../../../services/StudentService';\nimport WebResponse from '../../../models/commons/WebResponse';\nimport FormGroup from '../../form/FormGroup';\nimport { doItLater } from '../../../utils/EventUtil';\nimport AttachmentInfo from '../../../models/settings/AttachmentInfo';\nimport BasePage from '../BasePage';\nimport { resolve } from 'inversify-react';\nclass State {\n  student?: Student\n  category?: Category;\n  rulePoint?: RulePoint;\n  formStep: number = 0;\n  savedRecord?: PointRecord;\n  attachmentInfo?: AttachmentInfo;\n}\nclass InputPointForm extends BasePage<any, State> {\n  state: State = new State();\n  @resolve(StudentService)\n  private studentService: StudentService;\n  totalStep: number = 4;\n  constructor(props) {\n    super(props, 'Input Point Record', true);\n  }\n  validateStudentData = () => {\n    if (!this.props.location.state) {\n      return;\n    }\n    const student = this.props.location.state.student;\n    if (student) {\n      this.setState({ student: Object.assign(new Student(), student) });\n    }\n  }\n  componentDidMount() {\n    super.componentDidMount();\n    this.validateStudentData();\n    this.scrollTop();\n    doItLater(() => {\n      this.nextStep(1);\n    }, 200);\n\n  }\n  setAttachment = (attachmentInfo: AttachmentInfo | undefined) => {\n    this.setState({ attachmentInfo: attachmentInfo });\n  }\n  removeStudent = () => {\n    this.setState({ formStep: 0 }, () => {\n      doItLater(() => {\n        this.setState({ student: undefined })\n      }, 500);\n    })\n  }\n  removeAttachment = () => {\n    this.setAttachment(undefined);\n  }\n  setCategory = (c: Category) => {\n    this.setState({ category: c });\n  }\n  setRulePoint = (r: RulePoint) => {\n    this.setState({ rulePoint: r });\n  }\n  nextStep = (step: number) => {\n    this.setState({ formStep: step });\n  }\n  submitRecord = (record: PointRecord) => {\n\n    if (!this.state.student || !this.state.rulePoint) {\n      alert(\"ERROR: student or rulePoint missing!\");\n      return;\n    }\n    record.classMemberId = this.state.student?.id;\n    record.rulePointId = this.state.rulePoint?.id;\n    this.commonAjax(\n      this.studentService.insertPointRecord,\n      this.recordSubmitted,\n      this.showCommonErrorAlert,\n      record,\n      this.state.attachmentInfo\n    )\n  }\n  recordSubmitted = (response: WebResponse) => {\n    this.setState({ savedRecord: response.result, formStep: 4 }, this.scrollTop);\n  }\n  render() {\n    const student: Student | undefined = this.state.student;\n    if (!student) {\n      return <Warning />\n    }\n\n    return (\n      <div className=\"container-fluid section-body\">\n        <h2>Form Input Pelanggaran</h2>\n        <Modal title={student.name + \" - \" + student.classLevel + student.classLetter + \" \" + student.schoolName}>\n          <Progress step={this.state.formStep} totalStep={this.totalStep} />\n          {\n            this.state.formStep == 1 &&\n            <FormStepOne\n              category={this.state.category}\n              onBack={this.removeStudent}\n              setSelectedCategory={this.setCategory}\n              onSubmit={() => { this.nextStep(2) }}\n            />\n          }\n          {\n            this.state.formStep == 2 && this.state.category &&\n            <FormStepTwo\n              rulePoint={this.state.rulePoint}\n              setRulePoint={this.setRulePoint}\n              category={this.state.category}\n              onBack={() => this.nextStep(1)}\n              onSubmit={() => { this.nextStep(3) }}\n            />\n          }\n          {\n            this.state.formStep == 3 && this.state.category && this.state.rulePoint &&\n            <FormStepThree\n              submit={this.submitRecord}\n              attachmentInfo={this.state.attachmentInfo}\n              setAttachment={this.setAttachment}\n              removeAttachment={this.removeAttachment}\n              rulePoint={this.state.rulePoint}\n              onBack={() => this.nextStep(2)}\n            />\n          }\n          {\n            this.state.formStep == 4 &&\n            this.state.savedRecord &&\n            <Detail\n              back={() => this.setState({ student: undefined })}\n              record={this.state.savedRecord}\n            />\n          }\n\n        </Modal>\n      </div>\n    )\n  }\n}\n\nconst Progress = (props: { step: number, totalStep: number }) => {\n  return (\n    <div className=\"progress\" style={{ height: '5px', marginBottom: 15 }}>\n      <div className=\"bg-info\" style={{ transitionDuration: '500ms', width: (props.step / props.totalStep * 100) + '%' }}  ></div>\n    </div>\n  )\n}\n\nconst Detail = (props: { record: PointRecord, back(): any }) => {\n  const record = PointRecord.clone(props.record);\n  const date = record.getDate();\n  return (\n    <div>\n      <h4 className=\"text-center text-success\"><i className=\"fas fa-check\" style={{ marginRight: 5 }} />Record saved</h4>\n      <p />\n      <FormGroup label=\"Date\">{new Date(record.time).toLocaleString()}</FormGroup>\n      <FormGroup label=\"Category\">{record.ruleCategoryName}</FormGroup>\n      <FormGroup label=\"Name\">{record.ruleName}</FormGroup>\n      <FormGroup label=\"Point\">{record.point}</FormGroup>\n      <FormGroup label=\"Location\">{record.location}</FormGroup>\n      {\n        record.getPicture() &&\n        <FormGroup label=\"Picture\">\n          <img src={record.getPicture() ?? ''} width={200} height={200} />\n        </FormGroup>\n      }\n      <hr />\n      <FormGroup>\n        <a onClick={props.back} className=\"btn btn-dark\">Ok</a>\n      </FormGroup>\n    </div>\n  )\n}\n\nconst Warning = () => {\n  return (\n    <div className=\"container-fluid section-body\">\n      <h2>Form Input Pelanggaran</h2>\n      <SimpleError>\n        <i className=\"fas fa-exclamation-circle mr-2\" />\n        <span>Please select student</span>\n        <hr />\n        <AnchorWithIcon to=\"/asrama/studentlist\" iconClassName=\"fas fa-list\">\n          Student List\n        </AnchorWithIcon>\n      </SimpleError>\n    </div>\n  )\n}\n\nexport default withRouter(connect(mapCommonUserStateToProps)(InputPointForm));\n","\r\nimport React, { Component } from 'react';\r\nconst Card = (props: { attributes?: any, className?: string, title?: string, children?: any, footerContent?: any }) => {\r\n  return (\r\n    <div {...props.attributes} className={\"card \" + props.className}>\r\n      {\r\n        props.title &&\r\n        <div className=\"card-header\">\r\n          {props.title}\r\n        </div>\r\n      }\r\n      <div className=\"card-body\">\r\n        {props.children}\r\n      </div>\r\n      {\r\n        props.footerContent != undefined &&\r\n        <div className=\"card-footer\">\r\n          {props.footerContent}\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Card;\r\n","\nimport React, { Component } from 'react';\nimport PointRecord from '../../../../models/PointRecord';\nimport { doItLater } from '../../../../utils/EventUtil';\nimport Card from '../../../container/Card';\nimport FormGroup from '../../../form/FormGroup';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\n\ninterface IProps {\n  record: PointRecord;\n  close(): any;\n}\nexport default class PointRecordDetail extends Component<IProps, any> {\n\n  componentDidMount() {\n    const opt: ScrollToOptions = { top: 0, behavior: 'smooth' };\n    doItLater(() => {\n      window.scrollTo(opt);\n    }, 100);\n  }\n\n  render() {\n    const record = PointRecord.clone(this.props.record);\n    const pictureUrl = record.getPicture();\n    const timeStamp = new Date(record.time).toString();\n    return <Card title={\"Detail Pelanggaran\"} footerContent={<AnchorWithIcon className=\"btn btn-dark\" onClick={this.props.close} >Ok</AnchorWithIcon>}>\n      <FormGroup label=\"Nama\">{record.studentName} - {record.classLevel}{record.classLetter} {record.schoolName}</FormGroup>\n      <FormGroup label=\"Pelanggaran\">\n        <strong>{record.ruleCategoryName}</strong> - {record.ruleName} <span className=\"badge badge-dark\">{record.point}</span>\n      </FormGroup>\n      <FormGroup label=\"Waktu\" children={timeStamp} />\n      <FormGroup label=\"Lokasi\" children={record.location ?? '-'} />\n      <FormGroup label=\"Deskripsi\" children={record.description ?? '-'} />\n      <FormGroup label=\"Diputihkan\" children={record.dropped ? new Date(record.dropped).toString() : '-'} />\n\n      <FormGroup label=\"Gambar\">\n        {pictureUrl ?\n          <img src={pictureUrl} width={200} height={200} className=\"border border-dark\" /> : null}\n      </FormGroup>\n    </Card>\n  }\n}","import React from 'react'\nimport BaseComponent from '../../BaseComponent';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\nimport PointRecord from '../../../models/PointRecord';\nimport AnchorWithIcon from '../../navigation/AnchorWithIcon';\nimport StudentService from '../../../services/StudentService';\nimport { resolve } from 'inversify-react';\n\nclass State {\n  loading = false;\n}\nclass DropPointButtons extends BaseComponent<any, State> {\n  @resolve(StudentService)\n  private studentService: StudentService;\n  state: State = new State();\n  constructor(props) {\n    super(props, true);\n  }\n  startLoading = () => { this.setState({ loading: true }); }\n  endLoading = () => { this.setState({ loading: false }); }\n  getRecord = (): PointRecord => this.props.record;\n\n  setDropped = (isDropped: boolean) => {\n    const item = this.getRecord();\n    this.commonAjax(\n      this.studentService.setPointDropped,\n      this.props.onUpdated,\n      this.showCommonErrorAlert,\n      item.id, isDropped\n    );\n  }\n  render() {\n    const item = this.getRecord();\n    if (this.state.loading) {\n      return (\n        <button className=\"btn btn-info btn-sm\">\n          <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n        </button>\n      );\n    }\n    return (\n      item.dropped ?\n        <AnchorWithIcon onClick={(e) => this.setDropped(false)} className=\"btn btn-secondary btn-sm\" iconClassName=\"fas fa-arrow-up\">\n          Reset\n        </AnchorWithIcon> :\n        <AnchorWithIcon onClick={(e) => this.setDropped(true)} className=\"btn btn-success btn-sm\" iconClassName=\"fas fa-arrow-down\">\n          Putihkan\n        </AnchorWithIcon>\n    )\n  }\n}\n\nexport default withRouter(connect(\n  mapCommonUserStateToProps\n)(DropPointButtons))","import React, { ChangeEvent } from 'react'\nimport BaseManagementPage from './BaseManagementPage';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\nimport EditDeleteButton from './EditDeleteButton'\nimport PointRecord from '../../../models/PointRecord';\nimport Filter from '../../../models/commons/Filter';\nimport FormGroup from '../../form/FormGroup';\nimport NavigationButtons from '../../navigation/NavigationButtons';\nimport { tableHeader } from '../../../utils/CollectionUtil';\nimport FilterPeriod from '../../form/FilterPeriod';\nimport PointRecordDetail from '../asrama/point-record/PointRecordDetail';\nimport StudentService from '../../../services/StudentService';\nimport WebResponse from '../../../models/commons/WebResponse';\nimport Category from '../../../models/Category';\nimport Class from '../../../models/Class';\nimport { MONTHS, getInputReadableDate } from './../../../utils/DateUtil';\nimport DropPointButtons from '../asrama/DropPointButtons';\nimport { resolve } from 'inversify-react';\n\nclass State {\n  items: PointRecord[] = [];\n  filter: Filter = new Filter();\n  totalData: number = 0;\n  record?: PointRecord;\n  loading: boolean = false;\n  categories: Category[] = [];\n  classes: Class[] = [];\n  selectedCategory: Category | undefined;\n  showFilterDetail: boolean = false;\n}\nconst now = new Date();\nconst defaultFieldsFilter = {\n  'classMember.student.user.fullName': '',\n  dropped: '',\n  'classMember.classLevel.id=': '',\n  'rulePoint.name': '',\n  'rulePoint.category.name': '',\n  location: '',\n  'time>=d': getInputReadableDate(new Date(now.getFullYear(), 0, 1)),\n  'time<=d': getInputReadableDate(now),\n};\nconst MODEL_NAME = 'broken-rules';\nconst MENU = 'asrama';\nclass PointRecordSummary extends BaseManagementPage<any, State> {\n  state = new State();\n  @resolve(StudentService)\n  private studentService: StudentService;\n  constructor(props) {\n    super(props, MODEL_NAME, MENU, false);\n\n    const filter = new Filter();\n    filter.limit = 10;\n    filter.fieldsFilter = defaultFieldsFilter;\n    filter.orderBy = 'time';\n    filter.orderType = 'desc';\n\n    this.state.filter = filter;\n  }\n\n  componentDidMount() {\n    super.componentDidMount();\n    this.loadCategories();\n    this.loadClasses();\n  }\n  loadClasses = () => {\n    this.commonAjax(this.studentService.getClasses,\n      this.classessLoaded, console.error)\n  }\n  loadCategories = () => {\n    this.commonAjax(this.studentService.getCategories,\n      this.categoriesLoaded, console.error);\n  }\n  categoriesLoaded = (response: WebResponse) => this.setState({ categories: response.result.items });\n  classessLoaded = (response: WebResponse) => this.setState({ classes: response.result });\n\n  setSelectedCategory = (selectedCategory: Category) => {\n    const { filter } = this.state;\n    if (!selectedCategory.id || selectedCategory.id?.toString() === '') {\n      filter.fieldsFilter['rulePoint.name'] = '';\n    }\n    this.setState({ filter, selectedCategory });\n  }\n\n  showDetail = (item: PointRecord) => this.setState({ record: item });\n  hideDetail = () => this.setState({ record: undefined }, this.scrollTop);\n  showFilterDetail = () => this.setState({ showFilterDetail: true });\n  hideFilterDetail = () => this.setState({ showFilterDetail: false });\n\n  openEditPage = (p: PointRecord) => {\n    this.props.history.push({\n      pathname: '/asrama/pointrecordedit',\n      state: { record: p }\n    })\n  }\n\n  resetFilter = () => {\n    const { filter } = this.state;\n    this.setState({ filter: Filter.resetFieldsFilter(filter) });\n  }\n  followUp = (p: PointRecord) => {\n    this.commonAjax(\n      this.studentService.followUp,\n      this.showCommonSuccessAlert,\n      this.showCommonErrorAlert,\n      p.id\n    )\n  }\n  dropAll = (e) => {\n    this.showConfirmation(\"Putihkan \" + this.state.items.length + \" data?\")\n      .then(ok => {\n        if (ok) {\n          this.commonAjax(\n            this.studentService.dropAll,\n            this.reload,\n            this.showCommonErrorAlert,\n            this.itemsId\n          )\n        }\n      })\n  }\n  undropAll = (e) => {\n    this.showConfirmation(\"Reset pemutihan \" + this.state.items.length + \" data?\")\n      .then(ok => {\n        if (ok) {\n          this.commonAjax(\n            this.studentService.undropAll,\n            this.reload,\n            this.showCommonErrorAlert,\n            this.itemsId\n          )\n        }\n      })\n  }\n  updatePeriodFilter = (e: ChangeEvent<HTMLInputElement | HTMLSelectElement>, field: 'time<=d' | 'time>=d') => {\n    const { filter } = this.state;\n    Filter.updatePeriodFilter(filter, e, field);\n    this.setState({ filter });\n  }\n  updateDroppedOption = (e: ChangeEvent<HTMLSelectElement>) => {\n    const { filter } = this.state;\n    const { fieldsFilter } = filter;\n    for (const key in fieldsFilter) {\n      if (key.startsWith('dropped')) {\n        delete fieldsFilter[key];\n      }\n    }\n    const split = e.target.value.split(':');\n    if (split[0] === 'dropped') {\n      return;\n    }\n    fieldsFilter[split[0]] = 'Dummy';\n    this.setState({ filter });\n  }\n\n  get itemsId() { return this.state.items.map(i => i.id); }\n\n  render() {\n    const { filter, record } = this.state;;\n    const { fieldsFilter } = filter;\n\n    const title = \"Rekap Pelanggaran\";\n    if (record) {\n      return (\n        <div className=\"container-fluid section-body\">\n          <h2>{title}</h2>\n          <PointRecordDetail record={record} close={this.hideDetail} />\n        </div>\n      )\n    }\n    const defaultClass = { id: 0, level: 'Semua Kelas'} as Class;\n    const selectedClassId = filter.fieldsFilter['classMember.classLevel.id='] ? filter.fieldsFilter['classMember.classLevel.id='] : '';\n\n    return (\n      <div className=\"container-fluid section-body\">\n        <h2>{title}</h2>\n        <hr />\n        <form className=\"form-filter\" onSubmit={this.reload}>\n          <FormGroup label=\"Cari\">\n            <div className=\"input-group\">\n              <input autoComplete=\"off\" name=\"classMember.student.user.fullName\" placeholder=\"Nama siswa\" className=\"form-control-sm\" value={fieldsFilter['classMember.student.user.fullName'] ?? ''} onChange={this.updateFieldsFilter} />\n              <select autoComplete=\"off\" value={selectedClassId} onChange={this.updateFieldsFilter} className=\"form-control-sm\" name=\"classMember.classLevel.id=\">\n                {[defaultClass, ...this.state.classes].map((c) => {\n                  return <option key={`class_${c.id}`} value={c.id}>{c.level}{c.letter} - {c.schoolName}</option>\n                })}\n              </select>\n            </div>\n          </FormGroup>\n          {this.state.showFilterDetail ?\n            <><div className=\"filter-sticky bg-white border border-gray pt-3 pb-3 pl-3 pr-3\">\n              <FormGroup label=\"Kategori\">\n                <select value={fieldsFilter['rulePoint.category.id=']} onChange={this.updateFieldsFilter} className=\"form-control-sm\" name=\"rulePoint.category.id=\">\n                  {[Category.clone({ id: '', name: 'Semua' }), ...this.state.categories].map((c) => {\n                    return <option onClick={() => this.setSelectedCategory(c)} key={`cat_${c.id}`} value={c.id}>{c.name}</option>\n                  })}\n                </select>\n              </FormGroup>\n              {\n                this.state.selectedCategory && this.state.selectedCategory.points &&\n                <FormGroup label=\"Pelanggaran\">\n                  <select value={fieldsFilter['rulePoint.name']} onChange={this.updateFieldsFilter} className=\"form-control-sm\" name=\"rulePoint.name\">\n                    {[{ id: '', name: 'Semua' }, ...this.state.selectedCategory.points].map((c) => {\n                      return <option key={`rp_${c.id}`} value={c.id == '' ? c.id : c.name}>{c.name}</option>\n                    })}\n                  </select>\n                </FormGroup>\n              }\n              <FormGroup label=\"Periode\">\n                <div className=\"input-group\">\n                  <FilterPeriod date={new Date(fieldsFilter['time>=d'])} onChange={(e) => this.updatePeriodFilter(e, 'time>=d')} />\n                </div>\n                <div className=\"input-group\">\n                  <FilterPeriod date={new Date(fieldsFilter['time<=d'])} onChange={(e) => this.updatePeriodFilter(e, 'time<=d')} />\n                </div>\n              </FormGroup>\n              <FormGroup label=\"Pemutihan\">\n                <select\n                  className=\"form-control-sm\"\n                  onChange={this.updateDroppedOption}\n                >\n                  <option value=\"dropped:\">Semua</option>\n                  <option value=\"dropped=null:\">Belum</option>\n                  <option value=\"dropped!null:\">Sudah</option>\n                </select>\n              </FormGroup>\n              <FormGroup label=\"Lokasi\">\n                <input name=\"location\" placeholder=\"Lokasi\" className=\"form-control-sm\" value={fieldsFilter['location'] ?? ''} onChange={this.updateFieldsFilter} />\n              </FormGroup>\n              <FormGroup label=\"Jumlah Tampilan\">\n                <input type=\"number\" name=\"limit\" className=\"form-control-sm\" value={filter.limit ?? 5} onChange={this.updateFilter} />\n              </FormGroup>\n              <FormGroup label=\"\">\n                <a className=\"btn btn-dark btn-sm\" onClick={this.hideFilterDetail}>Tutup</a>\n                <input className=\"ml-3 btn btn-primary btn-sm\" type=\"submit\" value=\"Cari\" />\n              </FormGroup>\n            </div>\n              <FormGroup label=\"\">\n                <a className=\"btn btn-dark btn-sm\" onClick={this.hideFilterDetail}>Tutup Detail Filter</a>\n              </FormGroup>\n            </>\n            : <FormGroup label=\"\">\n              <a className=\"btn btn-dark btn-sm\" onClick={this.showFilterDetail}>Tampil Detail Filter</a>\n            </FormGroup>}\n          <FormGroup label=\"Periode\">\n            {new Date(filter.fieldsFilter['time>=d']).toDateString()} - {new Date(filter.fieldsFilter['time<=d']).toDateString()}\n          </FormGroup>\n          <FormGroup>\n            <input className=\"btn btn-primary btn-sm\" type=\"submit\" value=\"Submit\" />\n            <a className=\"btn btn-secondary btn-sm ml-2\" onClick={this.resetFilter}>Reset</a>\n            <a onClick={this.dropAll} className=\"ml-2 btn btn-info btn-sm\" >Putihkan Semua</a>\n            <a onClick={this.undropAll} className=\"ml-2 btn btn-warning btn-sm\" >Reset Pemutihan Semua</a>\n          </FormGroup>\n        </form>\n        <NavigationButtons\n          activePage={filter.page ?? 0}\n          limit={filter.limit ?? 10}\n          totalData={this.state.totalData}\n          onClick={this.loadAtPage}\n        />\n        <ItemsList\n          isAdmin={this.isAdmin()}\n          startingNumber={(filter.page ?? 0) * (filter.limit ?? 10)}\n          recordLoadedForDetail={this.showDetail}\n          recordLoadedForEdit={this.openEditPage}\n          recordUpdated={this.loadItems}\n          followUp={this.followUp}\n          items={this.state.items}\n        />\n      </div>\n    )\n  }\n}\ninterface ItemProps {\n  isAdmin: boolean,\n  startingNumber: number,\n  items: PointRecord[],\n  recordLoadedForDetail(p: PointRecord): any,\n  recordLoadedForEdit(p: PointRecord): any,\n  recordUpdated(): any,\n  followUp(p: PointRecord): any\n}\nconst ItemsList = (props: ItemProps) => {\n  return (\n    <div style={{ overflow: 'auto' }}>\n      <table className=\"table \">\n        {tableHeader(\"No\", \"Siswa\", \"Kelas\", \"Tanggal\", \"Pelanggaran\", \"Poin\", \"Lokasi\", \"Gambar\", \"Pemutihan\", \"Opsi\")}\n        <tbody>\n          {props.items.map((item, i) => {\n            item = PointRecord.clone(item);\n            const optionTypes = props.isAdmin ?\n              ['detail', 'delete'] :\n              [(item.dropped ? null : 'edit'), 'detail'];\n            return (\n              <tr key={\"PointRecord-\" + i} className={item.dropped ? \"alert alert-success\" : ''}>\n                <td>{i + 1 + props.startingNumber}</td>\n                <td>{item.studentName}</td>\n                <td>{item.classLevel}{item.classLetter} {item.schoolName}</td>\n                <td>{new Date(item.time).toLocaleDateString()}</td>\n                <td>{item.ruleCategoryName} ({item.ruleName})</td>\n                <td>{item.point}</td>\n                <td>{item.location}</td>\n                <td>\n                  <img src={item.getPicture() ?? ''} width={50} height={50} />\n                </td>\n                <td>{item.dropped ? <i className=\"fas fa-check\" /> : \"-\"} </td>\n                <td>\n                  <div style={{ width: 'max-content' }}>\n                    {\n                      item.droppable ?\n                        <><DropPointButtons record={item} onUpdated={props.recordUpdated} /><p /></> :\n                        <p><i>Tidak ada pemutihan</i></p>\n                    }\n                    {/* {\n                      props.isAdmin ?\n                        <><DropPointButtons record={item} onUpdated={props.recordUpdated} /><p /></> :\n                        <a className=\"btn btn-dark btn-sm\" onClick={() => props.followUp(item)}>Follow Up</a>\n                    } */}\n                    <EditDeleteButton\n                      record={item}\n                      types={optionTypes}\n                      recordLoadedForDetail={props.recordLoadedForDetail}\n                      recordLoaded={props.recordLoadedForEdit}\n                      recordDeleted={props.recordUpdated}\n                      modelName={MODEL_NAME}\n                      menu={MENU}\n                    />\n                  </div>\n\n                </td>\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default withRouter(\n  connect(\n    mapCommonUserStateToProps\n  )(PointRecordSummary)\n)","import React, { FormEvent } from 'react'\nimport BaseComponent from '../../../BaseComponent';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\nimport Card from '../../../container/Card';\nimport FormGroup from '../../../form/FormGroup';\nimport Student from '../../../../models/Student';\nimport MasterDataService from '../../../../services/MasterDataService';\nimport WebRequest from '../../../../models/commons/WebRequest';\nimport WebResponse from '../../../../models/commons/WebResponse';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\nimport Class from '../../../../models/Class';\nimport { resolve } from 'inversify-react';\n\nclass State {\n  studentName?: string;\n  items: Student[] = [];\n  item?: Student;\n}\nclass StudentForm extends BaseComponent<any, State> {\n  state = new State();\n  @resolve(MasterDataService)\n  private masterDataService: MasterDataService;\n  constructor(props) {\n    super(props, true);\n  }\n  submit = (e: FormEvent) => {\n    e.preventDefault();\n    this.loadStudent();\n  }\n  itemsLoaded = (response: WebResponse) => {\n    this.setState({ items: response.result.items });\n  }\n  loadStudent = () => {\n    const request: WebRequest = {\n      modelName: 'student',\n      filter: {\n        limit: 15,\n        fieldsFilter: { name: this.state.studentName }\n      }\n    }\n    this.commonAjax(\n      this.masterDataService.list,\n      this.itemsLoaded,\n      this.showCommonErrorAlert,\n      request\n    )\n  }\n  setSelectedItem = (item: Student) => {\n    this.setState({ item: item, items: [], studentName: undefined }, () => {\n      if (this.props.setItem) {\n        this.props.setItem(item);\n      }\n    });\n  }\n  reset = () => {\n    this.setState({ item: undefined, items: [], studentName: undefined }, () => {\n      if (this.props.setItem) {\n        this.props.setItem(undefined);\n      }\n    });\n  }\n  render() {\n    const items: Student[] = this.state.items;\n    const selectedItem: Student | undefined = this.state.item;\n    return (\n      <form onReset={this.reset} onSubmit={this.submit}>\n        <Card title=\"Select Student\">\n          <FormGroup label=\"Search\">\n            <input placeholder=\"Name\" value={this.state.studentName ?? \"\"} className=\"form-control\" onChange={this.handleInputChange} name=\"studentName\" />\n            {items.length > 0 ? <div style={{ position: 'absolute', zIndex: 200 }} className=\"container-fluid bg-light rounded-sm border border-dark\">\n              {items.map(item => {\n                return (\n                  <div className=\"option-item\" onClick={() => {\n                    this.setSelectedItem(item);\n                  }} style={{ cursor: 'pointer' }} key={\"Student-\" + item.id} >{item.user?.fullName}</div>\n                )\n              })}\n              <a onClick={this.reset} className=\"option-item\">\n                <i className=\"fas fa-times mr-2\" />\n                <span>close</span>\n              </a>\n            </div> : null}\n          </FormGroup>\n          {selectedItem ?\n            <ItemDetail item={selectedItem} />\n            : null}\n          <hr />\n          <div className=\"btn-group float-right\">\n            <input type=\"submit\" className=\"btn btn-dark\" value=\"Search\" />\n            <input type=\"reset\" className=\"btn btn-secondary\" value=\"Reset\" />\n            <AnchorWithIcon to={\"/asrama/studentlist\"} iconClassName=\"fas fa-list\">Student List</AnchorWithIcon>\n          </div>\n        </Card>\n      </form>\n    )\n  }\n}\n\nconst ItemDetail = (props: { item: Student }) => {\n  return (\n    <>\n      <FormGroup label=\"Name\">{props.item.user?.fullName}</FormGroup>\n      <FormGroup label=\"Kelas\">{props.item.classLevel}{props.item.classLetter} {props.item.schoolName}</FormGroup>\n\n    </>\n  )\n}\n\nexport default withRouter(\n  connect(\n    mapCommonUserStateToProps\n  )(StudentForm)\n)","\nimport BaseEntity from './BaseEntity';\nimport Student from './Student';\n\nexport default class MedicalRecord extends BaseEntity {\n  day = new Date().getDate();\n  month = new Date().getMonth();\n  year = new Date().getFullYear();\n  temperature_morning?: number;\n  temperature_afternoon?: number;\n  breakfast?: boolean;\n  lunch?: boolean;\n  dinner?: boolean;\n  medicine_consumption = false;\n  genose_test?: boolean;\n  antigen_test?: boolean;\n  pcr_test?: boolean;\n  description?: string\n  student_id;\n  student?: Student;\n\n  public static clone = (obj: MedicalRecord): MedicalRecord => {\n    return Object.assign(new MedicalRecord(), obj);\n  }\n  public static instance = (student_id: number, d: number, m: number, y: number): MedicalRecord => {\n    const obj = new MedicalRecord();\n    obj.day = d;\n    obj.month = m;\n    obj.year = y;\n    obj.student_id = student_id;\n    return obj;\n  }\n}","import React, { ChangeEvent, Component, FormEvent } from 'react'\nimport BaseComponent from '../../../BaseComponent';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\nimport MedicalRecord from '../../../../models/MedicalRecord';\nimport StudentService from '../../../../services/StudentService';\nimport WebResponse from '../../../../models/commons/WebResponse';\nimport { twoDigits, monthName } from '../../../../utils/StringUtil';\nimport { resolve } from 'inversify-react';\n\nclass State {\n  record: MedicalRecord = new MedicalRecord();\n}\nclass MedicalRecordDailyInput extends BaseComponent<any, State> {\n  state = new State();\n  @resolve(StudentService)\n  private studentService: StudentService;\n  constructor(props) {\n    super(props, true);\n    this.state.record = MedicalRecord.instance(props.student.id, props.day, props.month, props.year);\n  }\n  reset = () => {\n    const props = this.props;\n    this.setState({ record: MedicalRecord.instance(props.student.id, props.day, props.month, props.year) });\n  }\n  setRecord = (record: MedicalRecord) => {\n    this.setState({ record: MedicalRecord.clone(record) });\n  }\n\n  onChange = (e: ChangeEvent) => {\n    const record = this.state.record;\n    const target = e.target as HTMLInputElement;\n    record[target.name] = target.type == 'checkbox' ? target.checked : target.value;\n    this.setState({ record: MedicalRecord.clone(record) });\n  }\n\n  recordSubmitted = (response: WebResponse) => {\n    this.showInfo(\"Data has been submitted\");\n  }\n\n  onSubmit = (e: FormEvent) => {\n    e.preventDefault();\n    const record: MedicalRecord = this.state.record;\n    record.student_id = this.props.student.id;\n    this.commonAjax(\n      this.studentService.submitMedicalRecord,\n      this.recordSubmitted,\n      this.showCommonErrorAlert,\n      record\n    )\n  }\n\n  render() {\n    const record = this.state.record;\n    const period = twoDigits(record.day) + \" \" + monthName(record.month - 1);\n    return (\n      <form onSubmit={this.onSubmit}>\n        <table className=\"table table-bordered table-striped\" style={{ fontSize: '0.8em' }}>\n          <tbody>\n            <SingleRow><h5 className='text-center'> {period}</h5></SingleRow>\n            <SingleRow>\n              <input type='number' onChange={this.onChange} placeholder=\"Suhu Pagi\" className=\"form-control\" name=\"temperature_morning\" value={record.temperature_morning ?? \"\"} />\n            </SingleRow>\n            <SingleRow>\n              <input type='number' onChange={this.onChange} placeholder=\"Suhu Sore\" className=\"form-control\" name=\"temperature_afternoon\" value={record.temperature_afternoon ?? \"\"} />\n            </SingleRow>\n            <SingleRow>\n              <Checkbox label=\"Sarapan\" onChange={this.onChange} name=\"breakfast\" checked={record.breakfast ?? false} />\n            </SingleRow>\n            <SingleRow>\n              <Checkbox label=\"Makan Siang\" onChange={this.onChange} name=\"lunch\" checked={record.lunch ?? false} />\n            </SingleRow>\n            <SingleRow>\n              <Checkbox label=\"Makan Malam\" onChange={this.onChange} name=\"dinner\" checked={record.dinner ?? false} />\n            </SingleRow>\n            <SingleRow>\n              <Checkbox label=\"Konsumsi Obat\" onChange={this.onChange} name=\"medicine_consumption\" checked={record.medicine_consumption ?? false} />\n            </SingleRow>\n            <SingleRow>\n              <Checkbox label=\"Tes Genose\" onChange={this.onChange} name=\"genose_test\" checked={record.genose_test ?? false} />\n            </SingleRow>\n            <SingleRow>\n              <Checkbox label=\"Tes Antigen\" onChange={this.onChange} name=\"antigen_test\" checked={record.antigen_test ?? false} />\n            </SingleRow>\n            <SingleRow>\n              <Checkbox label=\"Tes PCR\" onChange={this.onChange} name=\"pcr_test\" checked={record.pcr_test ?? false} />\n            </SingleRow>\n            <SingleRow>\n              <textarea placeholder=\"Catatan\" onChange={this.onChange} style={{ fontSize: '0.9em' }} name=\"description\" value={record.description ?? \"\"}\n                className=\"form-control\" rows={3} />\n            </SingleRow>\n            <SingleRow>\n              <button className=\"btn btn-success\" type=\"submit\">\n                <i className=\"fas fa-save\" /> {period}\n              </button>\n            </SingleRow>\n          </tbody>\n        </table>\n      </form>\n    )\n  }\n}\n\nconst Checkbox = (props: { onChange(e: ChangeEvent): any, label: string, name: string, checked: boolean }) => {\n\n  return (\n    <>{props.label}\n      <input type=\"checkbox\" style={{ marginRight: 5 }} className=\"form-control\"\n        onChange={props.onChange}\n        name={props.name}\n        checked={props.checked} />\n    </>\n  )\n}\nconst SingleRow = (props: { children: any }) => {\n  return (\n    <tr><td>\n      <div className=\"text-center\" style={{ minHeight: 40 }}>{props.children}</div></td></tr>\n  )\n}\n\nexport default\n  connect(\n    mapCommonUserStateToProps, null, null, { forwardRef: true }\n  )(MedicalRecordDailyInput)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\nimport StudentForm from './StudentForm';\nimport Student from '../../../../models/Student';\nimport FilterPeriod from '../../../form/FilterPeriod';\nimport Filter from '../../../../models/commons/Filter';\nimport { getMonthDays } from '../../../../utils/DateUtil';\nimport Card from '../../../container/Card';\nimport MedicalRecord from '../../../../models/MedicalRecord';\nimport MedicalRecordDailyInput from './MedicalRecordDailyInput';\nimport StudentService from '../../../../services/StudentService';\nimport WebResponse from '../../../../models/commons/WebResponse';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\nimport { doItLater } from '../../../../utils/EventUtil';\nimport BasePage from '../../BasePage';\nimport { resolve } from 'inversify-react';\nimport SimpleError from '../../../alert/SimpleError';\nclass State {\n  student?: Student;\n  month: number = new Date().getMonth() + 1;\n  year: number = new Date().getFullYear();\n  mappedItems: Map<number, MedicalRecord> = new Map()\n}\nclass MedicalRecordForm extends BasePage<any, State> {\n  state = new State();\n  @resolve(StudentService)\n  private studentService: StudentService;\n  private inputRefs: Map<number, any> = new Map();\n  constructor(props) {\n    super(props, \"Medical Record\", true);\n  }\n  setStudent = (student: Student | undefined) => {\n    if (student) {\n      student = Object.assign(new Student(), student);\n    }\n    this.setState({ student: student }, this.loadMonthlyRecord);\n  }\n  validateStudentData = () => {\n    const student = this.props.location.state ? this.props.location.state.student : undefined;\n    if (student) {\n      this.setStudent(student);\n    }\n  }\n\n  reset = () => {\n    doItLater(() => {\n      if (this.state.student)\n        this.inputRefs.forEach((ref: any, day: number) => {\n          if (ref) { ref.reset(); }\n        })\n    }, 100);\n  }\n  recordsLoaded = (response: WebResponse) => {\n    const mappedItems = this.toMap(response.result.items) as Map<number, MedicalRecord>;\n    this.setState({ mappedItems }, () => {\n      doItLater(() => {\n        this.inputRefs.forEach((ref: any, day: number) => {\n          let record = mappedItems.get(day);\n          if (!record) {\n            record = MedicalRecord.instance(this.state.student?.id ?? 0, day, this.state.month, this.state.year);\n          } else {\n            record = MedicalRecord.clone(record);\n          }\n          if (ref) {\n            ref.setRecord(record);\n          }\n        })\n      }, 100);\n    });\n  }\n\n\n  toMap = (items: MedicalRecord[]) => {\n    const map = new Map<number, MedicalRecord>();\n    for (let i = 0; i < items.length; i++) {\n      const item = items[i];\n      map.set(item.day, item);\n    }\n    return map;\n  }\n\n  loadMonthlyRecord = () => {\n    this.commonAjax(\n      this.studentService.loadMonthlyMedicalRecord,\n      this.recordsLoaded, this.showCommonErrorAlert,\n      this.state.student?.id, this.state.month, this.state.year\n    )\n  }\n\n  getFilter = (): Filter => {\n    const f = new Filter();\n    // f.month = this.state.month;\n    // f.year = this.state.year;\n    return f;\n  }\n\n  componentDidMount() {\n    this.validateLoginStatus(() => {\n      this.scrollTop();\n      this.validateStudentData();\n    });\n  }\n  dayCount = () => {\n    return getMonthDays(this.state.month, this.state.year);\n  }\n  render() {\n    const student = this.state.student;\n    const filter = this.getFilter();\n    const dayCount = this.dayCount();\n    const days: number[] = [];\n    for (let i = 1; i <= dayCount; i++) {\n      days.push(i);\n    }\n    const gridTemplateColumns = ('150px ').repeat(dayCount);\n\n    return (\n      <div className=\"container-fluid section-body\">\n        <h2> {student ? student.user?.fullName : this.title}</h2>\n        <hr />\n        <StudentForm setItem={this.setStudent} />\n        <p />\n        {student ?\n          <Card>\n            <div className=\"input-group\">\n              <FilterPeriod date={new Date()} disableDay onChange={this.handleInputChange} />\n              <div className=\"input-group-append\">\n                <AnchorWithIcon iconClassName=\"fas fa-redo\" onClick={this.loadMonthlyRecord}>Load Data</AnchorWithIcon>\n              </div>\n            </div>\n            <hr />\n            <div className=\"container-fluid  row\">\n              <div className=\"col-12\" style={{ overflow: 'auto' }}>\n                <div style={{ display: 'grid', gridTemplateColumns: gridTemplateColumns }}>\n\n                  {days.map(day =>\n                    <MedicalRecordDailyInput key={\"record-input-\" + day} student={student}\n                      ref={ref => { this.inputRefs.set(day, ref) }}\n                      year={this.state.year}\n                      month={this.state.month} day={day} />)}\n                </div>\n              </div>\n            </div>\n          </Card>\n          : <Warning />}\n      </div>\n    )\n  }\n\n}\n\n\nconst Warning = () => {\n  return (<SimpleError>\n    <i className=\"fas fa-exclamation-circle mr-2\" /><span>Please select student</span><hr />\n    <AnchorWithIcon to={\"/asrama/studentlist\"} iconClassName=\"fas fa-list\">Student List</AnchorWithIcon>\n  </SimpleError>)\n}\n\nexport default withRouter(\n  connect(\n    mapCommonUserStateToProps\n  )(MedicalRecordForm)\n)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport FormGroup from '../../form/FormGroup';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport Card from './../../container/Card';\r\n\r\nclass AboutUs extends BaseComponent<any, any> {\r\n  constructor(props) {\r\n    super(props, false);\r\n  }\r\n  componentDidMount() {\r\n    document.title = \"About Us\";\r\n  }\r\n  render() {\r\n    const appProfile = this.getApplicationProfile();\r\n    return (\r\n      <div className=\"section-body container-fluid mt-2\">\r\n        <h2>About Us</h2>\r\n        <Card title=\"Application\">\r\n          <FormGroup label=\"Name\">{appProfile.appName}</FormGroup>\r\n          <FormGroup><i>{appProfile.appDescription}</i></FormGroup>\r\n          <FormGroup label=\"Contact\">{appProfile.contact}</FormGroup>\r\n          <FormGroup label=\"Address\">{appProfile.address}</FormGroup>\r\n        </Card>\r\n        <p />\r\n        <Card title=\"Development Mode\">\r\n          {/* <FormGroup label=\"Repository\"><a target=\"_blank\" href=\"https://github.com/fajaralmu\">https://github.com/fajaralmu</a></FormGroup>\r\n                <FormGroup label=\"Front End\">React Js</FormGroup>\r\n                <FormGroup><a target=\"_blank\" href=\"https://github.com/fajaralmu/front-end-shopping-mart-v2\">https://github.com/fajaralmu/front-end-shopping-mart-v2</a></FormGroup>\r\n                <FormGroup label=\"Back End\">Java, Spring MVC</FormGroup>\r\n                <FormGroup><a target=\"_blank\" href=\"https://github.com/fajaralmu/universal-good-shop-v2\">https://github.com/fajaralmu/universal-good-shop-v2</a></FormGroup> */}\r\n        </Card>\r\n        <p />\r\n      </div>);\r\n  }\r\n}\r\nexport default withRouter(connect(\r\n  mapCommonUserStateToProps,\r\n)(AboutUs))","import React, { FormEvent } from 'react'\nimport BaseComponent from '../../BaseComponent';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\nimport MasterDataService from '../../../services/MasterDataService';\nimport Student from '../../../models/Student';\nimport WebRequest from '../../../models/commons/WebRequest';\nimport Filter from '../../../models/commons/Filter';\nimport WebResponse from '../../../models/commons/WebResponse';\nimport AnchorWithIcon from '../../navigation/AnchorWithIcon';\nimport './style.css'\nimport { resolve } from 'inversify-react';\n\nclass State {\n  items: Student[] = [];\n  keyword: string = \"\";\n}\nclass ClassMemberSearchForm extends BaseComponent<any, State> {\n  state = new State();\n  @resolve(MasterDataService)\n  private masterDataService: MasterDataService;\n  constructor(props) {\n    super(props, true);\n  }\n  itemsLoaded = (response: WebResponse) => {\n    this.setState({ items: response.result });\n  }\n\n  loadItems = (e: FormEvent) => {\n    e.preventDefault();\n    if (\"\" == this.state.keyword) return;\n    const req: WebRequest = {\n      filter: new Filter(),\n      modelName: 'classmembers',\n    }\n    if (req.filter)\n      req.filter.fieldsFilter = {\n        'student.user.fullName': this.state.keyword\n      }\n    this.commonAjax(\n      this.masterDataService.list,\n      this.itemsLoaded,\n      this.showCommonErrorAlert,\n      req,\n      'school-data'\n    )\n  }\n  select = (s: Student) => {\n    console.log('select', s);\n    this.props.selectItem(s);\n    this.setState({ items: [], keyword: \"\" });\n  }\n  reset = () => this.setState({ items: [] });\n\n  render() {\n\n    return (\n      <form id=\"form-search-student\" onSubmit={this.loadItems}>\n        <div className=\"mb-3\" style={{ position: 'absolute' }}>\n          <div className=\"input-group\">\n            <input name=\"keyword\" className=\"form-control\" onChange={this.handleInputChange} value={this.state.keyword}\n              placeholder=\"Cari Nama\" />\n            <input type=\"submit\" value=\"Cari\" className=\"btn btn-secondary\" />\n          </div>\n          {this.state.items.length > 0 ?\n            <div className=\"bg-light border rounded border-secondary\" style={{ position: 'relative', zIndex: 10, padding: 3 }}>\n              {this.state.items.map(s => {\n                return (\n                  <div onClick={() => this.select(s)} className=\"option-item\" key={`s_form_${s.id}`}>\n                    {s.name} {s.classLevel}{s.classLetter} {s.schoolName}\n                  </div>\n                )\n              })}\n              <AnchorWithIcon iconClassName=\"fas fa-times\" className=\"btn btn-dark w-100\" onClick={this.reset} >Tutup</AnchorWithIcon>\n            </div>\n            : null}\n        </div>\n      </form>\n    )\n  }\n\n}\n\nexport default withRouter(\n  connect(\n    mapCommonUserStateToProps\n  )(ClassMemberSearchForm)\n)","import { resolve } from 'inversify-react';\nimport React, { ChangeEvent, FormEvent } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\nimport Category from '../../../../models/Category';\nimport WebRequest from '../../../../models/commons/WebRequest';\nimport WebResponse from '../../../../models/commons/WebResponse';\nimport PointRecord from '../../../../models/PointRecord';\nimport RulePoint from '../../../../models/RulePoint';\nimport AttachmentInfo from '../../../../models/settings/AttachmentInfo';\nimport Student from '../../../../models/Student';\nimport MasterDataService from '../../../../services/MasterDataService';\nimport StudentService from '../../../../services/StudentService';\nimport { getAttachmentInfoFromFile } from '../../../../utils/ComponentUtil';\nimport { parseDate } from '../../../../utils/DateUtil';\nimport FormGroup from '../../../form/FormGroup';\nimport InputTime from '../../../form/InputTime';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\nimport BasePage from '../../BasePage';\nimport ClassMemberSearchForm from '../../shared/ClassMemberSearchForm';\n\nclass State {\n  record = new PointRecord();\n  categories: Category[] = [];\n  pointsMap: Record<number, RulePoint[]> = {};\n\n  selectedCategoryId?: number = 0;\n  selectedPointId?: number = 0;\n\n  attachment: AttachmentInfo | undefined;\n  editMode = false;\n  editModeRemoveImage = false;\n}\nclass PointRecordEdit extends BasePage<any, State> {\n  state = new State();\n  @resolve(StudentService)\n  private studentService: StudentService;\n  @resolve(MasterDataService)\n  private masterDataService: MasterDataService;\n  private inputTimeRef = React.createRef<InputTime>();\n  constructor(props) {\n    super(props, \"Edit Pelanggaran\", true);\n  }\n\n  componentReady() {\n    this.checkPassedData();\n    this.loadCategories();\n  }\n\n  categoriesLoaded = (response: WebResponse) => {\n    this.setState({ categories: response.result.items });\n  }\n\n  loadCategories = () => {\n    this.commonAjax(\n      this.studentService.getCategories,\n      this.categoriesLoaded,\n      this.showCommonErrorAlert\n    );\n  }\n  rulePointsLoaded = (categoryId: string, response: WebResponse) => {\n    const pointsMap = this.state.pointsMap;\n    pointsMap[categoryId.toString()] = response.result.items;\n    this.setState({ pointsMap });\n  }\n  loadRulePoints = (catId: string) => {\n    if (catId === '' || this.state.pointsMap[catId] != undefined) {\n      return;\n    }\n    const req: WebRequest = {\n      filter: { limit: 0, fieldsFilter: { 'category.id=': catId }, orderBy: 'name' },\n      modelName: 'rule-points',\n    }\n    this.commonAjax(\n      this.masterDataService.list,\n      (resp) => this.rulePointsLoaded(catId, resp),\n      this.showCommonErrorAlert,\n      req,\n      'asrama'\n    )\n  }\n  checkPassedData = () => {\n    if (this.props.location && this.props.location.state) {\n      const record = PointRecord.clone(this.props.location.state.record);\n      this.setState({\n        editMode: true,\n        record,\n        selectedCategoryId: record.ruleCategoryId,\n        attachment: this.props.location.state.attachment\n      }, this.updateInput);\n      this.loadRulePoints(record.ruleCategoryId?.toString() ?? '');\n    }\n  }\n  updateInput = () => {\n    /**\n     * time\n     */\n    if (this.inputTimeRef.current) {\n      this.inputTimeRef.current.updateFromProps();\n    }\n    /**\n     * etc\n     */\n  }\n  updateRecordField = (e: ChangeEvent) => {\n    const { record } = this.state;\n    const el = e.target as HTMLElement;\n    const name = el['name'];\n    const value = el['value']\n    record[name] = value;\n    this.setState({ record });\n  }\n  setSelectedRulePoint = (p: RulePoint) => {\n    const { record, selectedCategoryId } = this.state;\n    record.rulePointId = p.id;\n    record.point = p.point;\n    record.ruleName = p.name;\n    record.ruleCategoryId = selectedCategoryId;\n    this.setState({ record });\n  }\n  updateTime = (h: number, m: number, s: number) => {\n    const { record } = this.state;\n    record.setTime(h, m, s);\n    this.setState({ record });\n  }\n  updateDate = (e: ChangeEvent<HTMLInputElement>) => {\n    const date = parseDate(e.target.value);\n    const { record } = this.state;\n    record.time = date;\n    this.setState({ record: record });\n  }\n  submit = () => {\n    const { editMode, editModeRemoveImage } = this.state;\n    if (editMode) {\n      this.commonAjax(\n        this.studentService.updatePointRecord,\n        this.recordSubmitted,\n        this.showCommonErrorAlert,\n        this.state.record,\n        this.state.attachment,\n        editModeRemoveImage\n      )\n    } else {\n      this.commonAjax(\n        this.studentService.insertPointRecord,\n        this.recordSubmitted,\n        this.showCommonErrorAlert,\n        this.state.record,\n        this.state.attachment\n      )\n    }\n  }\n  recordSubmitted = (r: WebResponse) => {\n    this.setState({ record: new PointRecord(), attachment: undefined, selectedCategoryId: undefined }, () => {\n      this.showInfo(\"Data berhasil disimpan\");\n      this.scrollTop();\n    })\n  }\n  validateInput = () => {\n    const { classMemberId, rulePointId } = this.state.record;\n    return (classMemberId && rulePointId)\n  }\n  onSubmit = (e: FormEvent) => {\n    e.preventDefault();\n    if (!this.validateInput()) {\n      this.showError(\"Input tidak lengkap\");\n      return;\n    }\n    this.showConfirmation(\"Simpan data?\")\n      .then(ok => {\n        if (ok) { this.submit(); }\n      })\n  }\n  onRemoveImageOptionChanged = (e: ChangeEvent<HTMLInputElement>) => {\n    this.setState({ editModeRemoveImage: e.target.checked });\n  }\n  removeImage = () => {\n    this.showConfirmationDanger(\"Hapus gambar?\")\n      .then(ok => {\n        if (ok) {\n          const { record } = this.state;\n          this.setState({ record, attachment: undefined });\n        }\n      })\n  }\n  updatePicture = (e: ChangeEvent) => {\n    getAttachmentInfoFromFile(e.target as HTMLInputElement)\n      .then(attachment => {\n        this.setState({ attachment });\n      }).catch(console.error)\n  }\n  setStudent = (s: Student) => {\n    const { record } = this.state;\n    record.studentName = s.name\n    record.classMemberId = s.id;\n    record.classLetter = s.classLetter;\n    record.classLevel = s.classLevel;\n    record.schoolName = s.schoolName;\n    this.setState({ record });\n  }\n\n  updateCategory = (e: ChangeEvent<HTMLSelectElement>) => {\n    this.handleInputChange(e);\n    this.loadRulePoints(e.target.value);\n  }\n\n  updateRulePoint = (e: ChangeEvent<HTMLSelectElement>) => {\n    const { selectedCategoryId, pointsMap } = this.state;\n    if (!selectedCategoryId) return;\n    const filtered = pointsMap[selectedCategoryId].filter((r) => r.id?.toString() == e.target.value);\n    if (filtered.length == 0) return;\n    this.setSelectedRulePoint(filtered[0]);\n  }\n\n  render() {\n    const { editMode, editModeRemoveImage, record, selectedCategoryId, pointsMap, attachment } = this.state;\n    const pictureUrl = attachment ? attachment.url : record.getPicture();\n\n    return (\n      <div className=\"section-body container-fluid\">\n        <h2>Form Input Pelanggaran</h2>\n        <hr />\n        <FormGroup label=\"Siswa\" >\n          <ClassMemberSearchForm selectItem={this.setStudent} />\n        </FormGroup>\n        {\n          record.classMemberId &&\n          <FormGroup>\n            <div>{record.studentName} {record.classLevel}{record.classLetter} {record.schoolName}\n            </div>\n          </FormGroup>\n        }\n        <form onSubmit={this.onSubmit}>\n          <FormGroup label=\"Pelanggaran\">\n            <p>{record.ruleName ?? '-'} {record.point ?? ''}</p>\n            <p />\n            <select value={selectedCategoryId} name=\"selectedCategoryId\" onChange={this.updateCategory} className=\"form-control\">\n              <option value=\"\">Pilih Kategori</option>\n              {this.state.categories.map((cat: Category) => {\n                return (\n                  <option key={`cat_ed_opt_${cat.id}`} value={cat.id}>\n                    {cat.name}\n                  </option>\n                )\n              })}\n            </select>\n            <p />\n            <select value={record.rulePointId} className=\"form-control\" onChange={this.updateRulePoint} >\n              <option value=\"\">Pilih Pelanggaran</option>\n              {\n                selectedCategoryId &&\n                pointsMap[selectedCategoryId] &&\n                pointsMap[selectedCategoryId].map(p => {\n                  return (\n                    <option key={`rp_ed_opt_${p.id}`} value={p.id}>\n                      {p.name} ({p.point})\n                    </option>\n                  );\n                })\n              }\n            </select>\n          </FormGroup>\n          <FormGroup label=\"Tanggal\">\n            <input type=\"date\" className=\"form-control\" onChange={this.updateDate} name=\"date\" value={record.dateString()} />\n          </FormGroup>\n          <FormGroup label=\"Waktu\">\n            <InputTime ref={this.inputTimeRef} onChange={this.updateTime} value={record.timeString} />\n          </FormGroup>\n          <FormGroup label=\"Lokasi\">\n            <input type=\"text\" name=\"location\" onChange={this.updateRecordField} className=\"form-control\" value={record.location ?? \"\"} />\n          </FormGroup>\n          <FormGroup label=\"Deskripsi\">\n            <textarea className=\"form-control\" name=\"description\" onChange={this.updateRecordField} value={record.description ?? \"\"} />\n          </FormGroup>\n          <FormGroup label=\"Gambar\">\n            <div>\n              <img\n                src={pictureUrl ?? ''}\n                width={200}\n                height={200}\n                className=\"border border-dark mb-2\"\n              />\n            </div>\n            {\n              attachment &&\n              <AnchorWithIcon className=\"btn btn-danger btn-sm\" onClick={this.removeImage} iconClassName=\"fas fa-times\"  >Hapus Gambar</AnchorWithIcon>\n            }\n            <div>\n              <input\n                onChange={this.updatePicture}\n                type=\"file\"\n                accept=\"image/*\"\n                className=\"form-control\"\n              />\n            </div>\n          </FormGroup>\n          {\n            editMode &&\n            <FormGroup label=\"Hapus Gambar\">\n              <input id=\"remove-img-check\" type=\"checkbox\" checked={editModeRemoveImage} onChange={this.onRemoveImageOptionChanged} />\n              <label htmlFor=\"remove-img-check\" className=\"ml-2\">Hapus Gambar</label>\n            </FormGroup>\n          }\n          <FormGroup>\n            <Link className=\"btn btn-dark\" to=\"/asrama/pointsummary\">Kembali</Link>\n            <input type=\"submit\" className=\"btn btn-primary ml-3\" value=\"Submit\" />\n          </FormGroup>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(connect(mapCommonUserStateToProps)(PointRecordEdit))\n","import React from 'react'\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from './../../../../constant/stores';\nimport BasePage from './../../BasePage';\nimport StudentService from './../../../../services/StudentService';\nimport Student from './../../../../models/Student';\nimport { tableHeader } from './../../../../utils/CollectionUtil';\nimport WebResponse from './../../../../models/commons/WebResponse';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\nimport { resolve } from 'inversify-react';\n\ninterface FollowUpInfo {\n  student: Student,\n  TOTAL_POINT: any,\n  FOLLOW_UP_COUNT: number,\n}\nclass State {\n  followUpInfos: FollowUpInfo[] = [];\n}\nclass FollowUpReminder extends BasePage<any, State> {\n  state = new State();\n  @resolve(StudentService)\n  private studentService: StudentService;\n  constructor(props) {\n    super(props, \"Follow Up Pelanggaran\", true);\n  }\n  componentReady() {\n    this.loadReminder();\n  }\n  loadReminder = () => {\n    this.commonAjax(\n      this.studentService.getFollowUpReminders,\n      this.recordsLoaded,\n      console.error\n    )\n  }\n  recordsLoaded = (resp: WebResponse) => {\n    this.setState({ followUpInfos: resp.result.items });\n  }\n\n  render() {\n\n    return (\n      <div className=\"section-body container-fluid\">\n        <h2>Follow Up Pelanggaran</h2>\n        <p>Pelanggaran dengan poin di bawah {this.getApplicationProfile().warningPointLimit}</p>\n        <AnchorWithIcon iconClassName=\"fas fa-redo\" onClick={this.loadReminder} children=\"Reload\" />\n        <table className=\"table\">\n          {tableHeader(\"No\", \"Siswa\", \"Kelas\", \"Poin\", \"Penanganan\", \"Opsi\")}\n          <tbody>\n            {this.state.followUpInfos.map((info, i) => {\n              const { student } = info;\n              return (\n                <tr key={`f-i-${i}`}>\n                  <td>{i + 1}</td>\n                  <td>{info.student.user?.fullName}</td>\n                  <td>{student.classLevel}{student.classLetter} {student.schoolName}</td>\n                  <td>{info.TOTAL_POINT}</td>\n                  <td>{info.FOLLOW_UP_COUNT}</td>\n                  <td>\n                    <a className=\"btn btn-info btn-sm\" >\n                      Follow Up\n                    </a>\n                  </td>\n                </tr>\n              )\n            })}\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapCommonUserStateToProps\n  )(FollowUpReminder)\n)","\nimport BaseEntity from './BaseEntity';\n\nexport default class WarningAction extends BaseEntity {\n    name: string = 'SP1';\n    description: string | undefined;\n    classMemberId?: number;\n    classLevel?: number;\n    classLetter?: string;\n    // time?: Date;\n    // location?: string;\n\n    classMemberName?: string;\n    schoolName?: string;\n}","import React, { ChangeEvent } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\nimport WarningAction from '../../../models/WarningAction';\nimport ClassMemberSearchForm from '../shared/ClassMemberSearchForm';\nimport Filter from './../../../models/commons/Filter';\nimport Student from './../../../models/Student';\nimport { tableHeader } from './../../../utils/CollectionUtil';\nimport Modal from './../../container/Modal';\nimport FormGroup from './../../form/FormGroup';\nimport NavigationButtons from './../../navigation/NavigationButtons';\nimport BaseManagementPage from './BaseManagementPage';\nimport EditDeleteButton from './EditDeleteButton';\nclass State {\n  items: WarningAction[] = [];\n  filter: Filter = new Filter();\n  totalData: number = 0;\n  record: WarningAction = new WarningAction();\n}\nconst MODEL_NAME = 'warning-letters';\nconst MENU = 'asrama';\nclass WarningActionManagement extends BaseManagementPage<any, State> {\n  state = new State();\n  constructor(props) {\n    super(props, MODEL_NAME, MENU);\n  }\n  setStudent = (s: Student) => {\n    const { record } = this.state;\n    record.classMemberId = s.id;\n    record.classMemberName = s.name;\n    record.classLetter = s.classLetter;\n    record.classLevel = s.classLevel;\n    record.schoolName = s.schoolName;\n    this.setState({ record });\n  }\n  emptyRecord = () => new WarningAction();\n  onSubmit = () => {\n    if (!this.state.record.classMemberId) {\n      this.showError(\"Input tidak lengkap\");\n      return;\n    }\n    this.showConfirmation(\"Submit Data?\")\n      .then(ok => {\n        if (!ok) return;\n        if (this.state.record.id ?? 0 > 0) {\n          this.callApiUpdate(this.state.record.id, this.state.record);\n        } else {\n          this.callApiInsert(this.state.record);\n        }\n      })\n  }\n  render() {\n    const { filter } = this.state;\n    return (\n      <div className=\"container-fluid section-body\">\n        <h2>Peringatan</h2>\n        <hr />\n        {\n          this.isAdmin() &&\n          <RecordForm\n            formRef={this.formRef}\n            setStudent={this.setStudent}\n            resetForm={this.resetForm}\n            onSubmit={this.onSubmit}\n            record={this.state.record}\n            updateRecordProp={this.updateRecordProp}\n          />\n        }\n        <form onSubmit={this.reload}>\n          <FormGroup label=\"Cari\">\n            <select name=\"name\" className=\"form-control-sm\" value={filter.fieldsFilter['name'] ?? \"\"} onChange={this.updateFieldsFilter}>\n              <option value=\"\">Semua</option>\n              <option>SP1</option>\n              <option>SP2</option>\n              <option>SP3</option>\n            </select>\n            <input name=\"classMember.student.user.fullName\" placeholder=\"nama siswa\" className=\"form-control-sm\" value={filter.fieldsFilter['classMember.student.user.fullName'] ?? \"\"} onChange={this.updateFieldsFilter} />\n          </FormGroup>\n          <FormGroup label=\"Jumlah Tampilan\">\n            <input name=\"limit\" type=\"number\" className=\"form-control-sm\" value={filter.limit ?? 5} onChange={this.updateFilter} />\n          </FormGroup>\n          <FormGroup>\n            <input className=\"btn btn-primary btn-sm\" type=\"submit\" value=\"Submit\" />\n          </FormGroup>\n        </form>\n        <NavigationButtons\n          activePage={filter.page ?? 0}\n          limit={filter.limit ?? 10}\n          totalData={this.state.totalData}\n          onClick={this.loadAtPage}\n        />\n        <ItemsList\n          items={this.state.items}\n          isAdmin={this.isAdmin()}\n          recordLoaded={this.oneRecordLoaded}\n          recordDeleted={this.loadItems}\n          startingNumber={(filter.page ?? 0) * (filter.limit ?? 10)}\n        />\n      </div>\n    )\n  }\n\n}\ninterface ItemProps { isAdmin: boolean, startingNumber: number, items: WarningAction[], recordLoaded(item: any), recordDeleted() }\nconst ItemsList = (props: ItemProps) => {\n\n  return (\n    <div style={{ overflow: 'auto' }}>\n      <table className=\"table table-striped\">\n        {tableHeader(\"No\", \"Siswa\", \"Kelas\", \"Nama\", \"Deskripsi\", \"Tgl Simpan\", \"Opsi\")}\n        <tbody>\n          {props.items.map((item: WarningAction, i) => {\n            return (\n              <tr key={\"category-\" + i}>\n                <td>{i + 1 + props.startingNumber}</td>\n                <td>{item.classMemberName}</td>\n                <td>{item.classLevel}{item.classLetter} {item.schoolName}</td>\n                <td>{item.name}</td>\n                <td>{item.description}</td>\n                <td>{item.createdAt}</td>\n                <td>{props.isAdmin &&\n                  <EditDeleteButton\n                    recordLoaded={props.recordLoaded}\n                    recordDeleted={props.recordDeleted}\n                    record={item}\n                    modelName={MODEL_NAME}\n                    menu={MENU}\n                  />\n                }\n                </td>\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n    </div>\n  )\n}\nconst RecordForm = (props: { formRef: React.RefObject<Modal>, setStudent(s: Student), updateRecordProp(e: ChangeEvent): any, resetForm(): any, onSubmit(): any, record: WarningAction }) => {\n  const record = props.record;\n  return (\n    <div className=\"record-form mb-3\" >\n      <Modal show={false} ref={props.formRef} toggleable={true} title=\"Record Form\" >\n        <FormGroup label=\"Siswa\">\n          <ClassMemberSearchForm selectItem={props.setStudent} />\n        </FormGroup>\n        <FormGroup>\n          {record.classMemberName ?? ''} {record.classLevel ?? ''}{record.classLetter ?? ''} {record.schoolName ?? ''}\n        </FormGroup>\n        <form onSubmit={(e) => { e.preventDefault(); props.onSubmit() }}>\n          <FormGroup label=\"Nama\">\n            <select required value={record.name} onChange={props.updateRecordProp} className=\"form-control\" name=\"name\" >\n              <option>SP1</option>\n              <option>SP2</option>\n              <option>SP3</option>\n            </select>\n          </FormGroup>\n          <FormGroup label=\"Deskripsi\">\n            <textarea required className=\"form-control\" name=\"description\" onChange={props.updateRecordProp} value={record.description ?? \"\"} />\n          </FormGroup>\n          <FormGroup>\n            <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-sm mr-2\" />\n            <input type=\"reset\" className=\"btn btn-secondary btn-sm\" onClick={(e) => props.resetForm()} />\n          </FormGroup>\n        </form>\n      </Modal>\n    </div>\n  )\n}\n\nexport default withRouter(\n  connect(\n    mapCommonUserStateToProps\n  )(WarningActionManagement)\n)","import 'reflect-metadata';\nimport { injectable } from 'inversify';\nimport { contextPath } from './../constant/Url';\nimport ApplicationProfile from './../models/ApplicationProfile';\nimport { commonAjaxGetCalls, commonAjaxPostCalls } from './Promises';\n\n@injectable()\nexport default class ConfigurationService {\n  update = (appProfile: ApplicationProfile) => {\n    const endpoint = contextPath().concat('api/admin/asrama/config');\n    return commonAjaxPostCalls(endpoint, appProfile);\n  }\n  loadConfig = () => {\n    const endpoint = contextPath().concat('api/admin/asrama/config');\n    return commonAjaxGetCalls(endpoint);\n  }\n}","import React, { ChangeEvent } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport FormGroup from '../../form/FormGroup';\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\nimport ApplicationProfile from './../../../models/ApplicationProfile';\nimport ConfigurationService from './../../../services/ConfigurationService';\nimport BasePage from './../BasePage';\nimport { resolve } from 'inversify-react';\n\nclass State {\n  applicationProfile: ApplicationProfile = {}\n}\nclass ConfigSettingPage extends BasePage<any, State> {\n  readonly state = new State();\n  @resolve(ConfigurationService)\n  readonly configService: ConfigurationService;\n  constructor(props) {\n    super(props, \"Konfigurasi\", true);\n  }\n\n  componentReady() {\n    const applicationProfile = Object.assign({}, this.getApplicationProfile());\n    this.setState({ applicationProfile });\n  }\n\n  submit = () => {\n    this.commonAjax(\n      this.configService.update,\n      this.configUpdated,\n      this.showCommonErrorAlert,\n      this.state.applicationProfile\n    )\n  }\n  updateField = (e: ChangeEvent<HTMLInputElement>) => {\n    const { applicationProfile } = this.state;\n    applicationProfile[e.target.name] = e.target.type === 'number' ? parseInt(e.target.value) : e.target.value;\n    this.setState({ applicationProfile });\n  }\n  configUpdated = () => {\n    this.showInfo(\"Sukses, silakan muat ulang halaman\");\n  }\n  render() {\n    const {applicationProfile: profile} = this.state;\n    return (\n      <div className=\"container-fluid section-body\" >\n        <h2>Konfigurasi</h2>\n        <hr />\n        <div style={{ padding: 20 }} className=\"border border-secondary rounded\">\n          <form>\n            <FormGroup label=\"Nama Aplikasi\">\n              <input name='appName' onChange={this.updateField} className=\"form-control\" value={profile.appName ?? \"\"} required />\n            </FormGroup>\n            <FormGroup label=\"Deskripsi Aplikasi\">\n              <input name='appDescription' onChange={this.updateField} className=\"form-control\" value={profile.appDescription ?? \"\"} />\n            </FormGroup>\n            <FormGroup label=\"Batas Poin Peringatan\">\n              <input name='warningPointLimit' onChange={this.updateField} className=\"form-control\" type=\"number\" value={profile.warningPointLimit ?? -30} required />\n            </FormGroup>\n            <FormGroup label=\"Tanggal Rapor\">\n              <input name='reportDate' onChange={this.updateField} className=\"form-control\" value={profile.reportDate ?? ''} required />\n            </FormGroup>\n          </form>\n          <FormGroup>\n            <button className=\"btn btn-primary\" onClick={this.submit} >\n              Simpan\n            </button>\n          </FormGroup>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapCommonUserStateToProps\n  )(ConfigSettingPage)\n);","import React from 'react'\nimport BasePage from './../BasePage';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\nimport StudentService from './../../../services/StudentService';\nimport Class from './../../../models/Class';\nimport WebResponse from './../../../models/commons/WebResponse';\nimport FormGroup from '../../form/FormGroup';\nimport AttachmentInfo from './../../../models/settings/AttachmentInfo';\nimport { tableHeader } from './../../../utils/CollectionUtil';\nimport { contextPath } from './../../../constant/Url';\nimport { resolve } from 'inversify-react';\nimport StudentReportSummary from './StudentReportSummary';\nimport './StudentSemesterReport.scss';\n\nclass State {\n  classes: Class[] = [];\n  items: StudentReportSummary[] = [];\n}\n\nclass StudentSemesterReport extends BasePage<any, State> {\n  state = new State();\n  @resolve(StudentService)\n  private studentService: StudentService;\n  selectClassRef = React.createRef<HTMLSelectElement>();\n  constructor(props) {\n    super(props, \"Rapor Semester\", true);\n  }\n\n  componentReady() {\n    this.commonAjax(\n      this.studentService.getClasses,\n      this.classesLoaded,\n      this.showCommonErrorAlert\n    );\n  }\n\n  loadRaporData = (e: any) => {\n    if (e && e.preventDefault) {\n      e.preventDefault();\n    }\n    if (!this.selectClassRef.current) {\n      return;\n    }\n    const { value: classId } = this.selectClassRef.current;\n    this.commonAjax(\n      this.studentService.getRaporData,\n      this.raporDataLoaded,\n      this.showCommonErrorAlert,\n      classId\n    )\n  }\n  downloadData = () => {\n    if (!this.selectClassRef.current) {\n      return;\n    }\n    const { value: classId } = this.selectClassRef.current;\n    this.commonAjax(\n      this.studentService.downloadRaporData,\n      this.reportCreated,\n      this.showCommonErrorAlert,\n      classId\n    )\n  }\n  downloadRapor = () => {\n    if (!this.selectClassRef.current) {\n      return;\n    }\n    const { value: classId } = this.selectClassRef.current;\n    window.open(contextPath(`pages/asrama/report/${classId}`));\n  }\n\n  reportCreated = (attachment: AttachmentInfo) => {\n    this.showConfirmation(`Save File ${attachment.name}?`)\n      .then((ok) => {\n        if (!ok) return;\n        Object.assign(document.createElement('a'), {\n          target: '_blank',\n          download: attachment.name,\n          style: { display: 'none' },\n          href: attachment.url,\n        }).click();\n      })\n\n  }\n\n  classesLoaded = (response: WebResponse) => {\n    this.setState({ classes: response.result });\n  }\n  raporDataLoaded = (response: WebResponse) => {\n    this.setState({ items: response.result });\n  }\n  get reportHeader() {\n    const headers = ['No', 'Siswa', 'Kelas']\n    const { items } = this.state;\n    if (items.length == 0) return [];\n\n    items[0].categories.forEach((cat) => {\n      headers.push(cat.name);\n      headers.push(\"Predikat\");\n      headers.push(\"Keterangan\");\n    });\n    return headers;\n  }\n  render() {\n    const { classes, items } = this.state;\n\n    return (\n      <div className=\"container-fluid section-body\">\n        <h2>{this.title}</h2>\n        <form onSubmit={this.loadRaporData} className=\"mt-5\">\n          <FormGroup label=\"Kelas\">\n            <select ref={this.selectClassRef} className=\"form-control\">\n              {classes.map((c) => {\n                const { level, letter, id, schoolName } = c;\n                return <option key={`rapor_class_${id}`} value={id}>{level}{letter} {schoolName}</option>\n              })}\n            </select>\n          </FormGroup>\n          <FormGroup>\n            <input type=\"submit\" className=\"btn btn-success\" value=\"Load Data\" />\n            <a className=\"btn btn-link ml-2\" onClick={this.downloadData} >Download Detail Data</a>\n            <a className=\"btn btn-link ml-2\" onClick={this.downloadRapor} >Download Rapor</a>\n          </FormGroup>\n        </form>\n        {\n          items.length == 0 ?\n            <div className=\"alert alert-warning\">Tidak ada data</div> :\n            <div className=\"mt-5 bg-white border border-secondary\" style={{ overflow: 'auto' }}>\n              <table id=\"table-report-summary\" className=\"table table-striped\">\n                {tableHeader(...this.reportHeader)}\n                <tbody>\n                  {items.map((item, i) => {\n                    const { classMember, categories } = item;\n                    return (\n                      <tr key={`report_sum_${classMember.id}`} >\n                        <td>{i + 1}</td>\n                        <td>{classMember.name}</td>\n                        <td>{classMember.classLevel}{classMember.classLetter}</td>\n                        {categories.map((c) => {\n                          return (\n                            <React.Fragment key={`cat_items_${c.categoryId}_${classMember.id}`}>\n                              <td>{c.score}</td>\n                              <td children={c.predicateLetter} />\n                              <td children={c.predicateDescription} />\n                            </React.Fragment>\n                          )\n                        })}\n                      </tr>\n                    )\n                  })}\n                </tbody>\n              </table>\n            </div>\n        }\n      </div>\n    )\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapCommonUserStateToProps\n  )(StudentSemesterReport)\n)","\nimport BaseEntity from './BaseEntity';\nexport default class CategoryPredicate extends BaseEntity {\n    name: string | undefined;\n    code = 'A';\n    description: string | undefined;\n    ruleCategoryName: string;\n    ruleCategoryId: number | undefined;\n}","import React, { ChangeEvent } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport Category from '../../../models/Category';\r\nimport Filter from '../../../models/commons/Filter';\r\nimport WebRequest from '../../../models/commons/WebRequest';\r\nimport WebResponse from '../../../models/commons/WebResponse';\r\nimport { tableHeader } from '../../../utils/CollectionUtil';\r\nimport Modal from '../../container/Modal';\r\nimport FormGroup from '../../form/FormGroup';\r\nimport AnchorWithIcon from '../../navigation/AnchorWithIcon';\r\nimport NavigationButtons from '../../navigation/NavigationButtons';\r\nimport CategoryPredicate from './../../../models/CategoryPredicate';\r\nimport BaseManagementPage from './BaseManagementPage';\r\nimport EditDeleteButton from './EditDeleteButton';\r\n\r\nclass State {\r\n  items: CategoryPredicate[] = [];\r\n  filter = new Filter();\r\n  totalData = 0;\r\n  record = new CategoryPredicate();\r\n  categories: Category[] = [];\r\n  categoriesLoaded = false;\r\n}\r\nconst MODEL_NAME = 'rule-category-predicates';\r\nconst MENU = 'asrama';\r\nclass CategoryPredicateManagement extends BaseManagementPage<any, State> {\r\n  state = new State();\r\n  constructor(props) {\r\n    super(props, MODEL_NAME, MENU);\r\n    this.state.filter.limit = 10;\r\n    this.state.filter.orderBy = 'name';\r\n  }\r\n\r\n  onSubmit = () => {\r\n    // console.debug(\"RECORD: \", this.state.record);\r\n    this.showConfirmation(\"Submit Data?\")\r\n      .then(ok => {\r\n        const { record } = this.state;\r\n        if (!ok) return;\r\n        if (record.id ?? 0 > 0) {\r\n          this.callApiUpdate(record.id, record);\r\n        } else {\r\n          this.callApiInsert(record);\r\n        }\r\n      })\r\n  }\r\n  componentDidMount() {\r\n    this.validateLoginStatus(() => {\r\n      this.scrollTop();\r\n      this.loadCategories();\r\n    });\r\n  }\r\n  categoriesLoaded = (response: WebResponse) => {\r\n    this.setState({ categories: response.result.items, categoriesLoaded: true }, () => { this.resetForm(); this.loadItems() });\r\n  }\r\n  categoriesNotLoaded = (response: WebResponse) => {\r\n    this.setState({ categories: [], categoriesLoaded: true }, this.resetForm);\r\n  }\r\n  loadCategories = () => {\r\n    const filter = new Filter();\r\n    filter.limit = 0;\r\n    const req: WebRequest = {\r\n      filter: filter,\r\n      modelName: 'rule-categories'\r\n    }\r\n    this.commonAjax(\r\n      this.masterDataService.list,\r\n      this.categoriesLoaded,\r\n      this.categoriesNotLoaded,\r\n      req,\r\n      'asrama'\r\n    )\r\n  }\r\n\r\n  emptyRecord = () => {\r\n    const record = new CategoryPredicate();\r\n    if (this.state.categories.length > 0) {\r\n      record.ruleCategoryId = this.state.categories[0].id;\r\n    }\r\n    return record;\r\n  }\r\n\r\n  render() {\r\n    const { items, filter, categories, categoriesLoaded, record, totalData } = this.state;\r\n    if (categoriesLoaded && categories.length == 0) {\r\n      return (\r\n        <div className=\"container-fluid section-body\">\r\n          <h2>Kategori belum ada</h2>\r\n        </div>\r\n      )\r\n    }\r\n    const selectedCategoryId = filter.fieldsFilter && filter.fieldsFilter['category_id'] ? filter.fieldsFilter['category_id'] : \"ALL\";\r\n    return (\r\n      <div className=\"container-fluid section-body\">\r\n        <h2>Predikat Rapor</h2>\r\n        <hr />\r\n        <RecordForm\r\n          categories={categories}\r\n          reloadCategories={this.loadCategories}\r\n          formRef={this.formRef}\r\n          resetForm={this.resetForm}\r\n          onSubmit={this.onSubmit}\r\n          record={record}\r\n          updateRecordProp={this.updateRecordProp}\r\n        />\r\n        <form onSubmit={this.reload}>\r\n          <FormGroup label=\"Cari\">\r\n            <div className=\"input-group\">\r\n              <input name=\"name\" placeholder=\"nama\" className=\"form-control-sm\" value={filter.fieldsFilter ? filter.fieldsFilter['name'] : \"\"} onChange={this.updateFieldsFilter} />\r\n              <input name=\"code\" placeholder=\"kode\" className=\"form-control-sm\" value={filter.fieldsFilter ? filter.fieldsFilter['kode'] : \"\"} onChange={this.updateFieldsFilter} />\r\n              <select value={selectedCategoryId} className=\"form-control-sm\" name=\"category_id\" onChange={this.updateFieldsFilter} >\r\n                {[{ id: \"\", name: \"Semua Kategori\" }, ...categories].map((c) => {\r\n                  return <option key={\"filter-cat-\" + c.id} value={c.id}>{c.name}</option>\r\n                })}\r\n              </select>\r\n              <div className=\"input-group-append\">\r\n                <AnchorWithIcon className=\"btn btn-sm\" iconClassName=\"fas fa-redo\" onClick={this.loadCategories}>Reload</AnchorWithIcon>\r\n              </div>\r\n            </div>\r\n          </FormGroup>\r\n          <FormGroup label=\"Jumlah Tampilan\">\r\n            <input type=\"number\" name=\"limit\" className=\"form-control-sm\" value={filter.limit ?? 5} onChange={this.updateFilter} />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <input className=\"btn btn-primary btn-sm\" type=\"submit\" value=\"Submit\" />\r\n          </FormGroup>\r\n        </form>\r\n        <NavigationButtons\r\n          activePage={filter.page ?? 0}\r\n          limit={filter.limit ?? 5}\r\n          totalData={totalData}\r\n          onClick={this.loadAtPage}\r\n        />\r\n        <ItemsList\r\n          recordLoaded={this.oneRecordLoaded}\r\n          recordDeleted={this.loadItems}\r\n          startingNumber={(filter.page ?? 0) * (filter.limit ?? 10)} items={items} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\nconst ItemsList = (props: { startingNumber: number, items: CategoryPredicate[], recordLoaded(item: any), recordDeleted() }) => {\r\n  return (\r\n    <div style={{ overflow: 'auto' }}>\r\n      <table className=\"table table-striped\">\r\n        {tableHeader(\"No\", \"Kode\", \"Nama\", \"Deskripsi\", \"Kategori\", \"Opsi\")}\r\n        <tbody>\r\n          {props.items.map((item, i) => {\r\n            return (\r\n              <tr key={`RulePoint-${i}`}>\r\n                <td>{i + 1 + props.startingNumber}</td>\r\n                <td>{item.code}</td>\r\n                <td>{item.name}</td>\r\n                <td>{item.description}</td>\r\n                <td>{item.ruleCategoryName}</td>\r\n                <td>\r\n                  <EditDeleteButton\r\n                    recordLoaded={props.recordLoaded}\r\n                    recordDeleted={props.recordDeleted}\r\n                    record={item}\r\n                    modelName={MODEL_NAME}\r\n                    menu={MENU}\r\n                  />\r\n                </td>\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\nconst RecordForm = (props: {\r\n  categories: Category[], formRef: React.RefObject<Modal>,\r\n  updateRecordProp(e: ChangeEvent): any,\r\n  resetForm(): any, onSubmit(): any,\r\n  record: CategoryPredicate, reloadCategories(): any\r\n}) => {\r\n  return (\r\n    <form className=\"record-form mb-3\" onSubmit={(e) => { e.preventDefault(); props.onSubmit() }}>\r\n      <Modal show={false} ref={props.formRef} toggleable={true} title=\"Record Form\" >\r\n        <FormGroup label=\"Kode\">\r\n          <select required value={props.record.code} className=\"form-control-sm\" name=\"code\" onChange={props.updateRecordProp} >\r\n            <option>A</option>\r\n            <option>B</option>\r\n            <option>C</option>\r\n            <option>D</option>\r\n          </select>\r\n        </FormGroup>\r\n        <FormGroup label=\"Nama\">\r\n          <textarea className=\"form-control\" name=\"name\" onChange={props.updateRecordProp} value={props.record.name ?? \"\"} />\r\n        </FormGroup>\r\n        <FormGroup label=\"Deskripsi\">\r\n          <textarea className=\"form-control\" name=\"description\" onChange={props.updateRecordProp} value={props.record.description ?? \"\"} />\r\n        </FormGroup>\r\n        <FormGroup label=\"Category\">\r\n          <div className=\"input-group\">\r\n            <select required value={props.record.ruleCategoryId} className=\"form-control-sm\" name=\"ruleCategoryId\" onChange={props.updateRecordProp} >\r\n              {props.categories.map((c) => {\r\n                return <option key={`cat-${c.id}`} value={c.id}>{c.name}</option>\r\n              })}\r\n            </select>\r\n            <div className=\"input-group-append\">\r\n              <AnchorWithIcon className=\"btn btn-sm\" iconClassName=\"fas fa-redo\" onClick={props.reloadCategories}>Reload</AnchorWithIcon>\r\n            </div>\r\n          </div>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-sm mr-2\" />\r\n          <input value=\"Reset\" type=\"reset\" className=\"btn btn-secondary btn-sm\" onClick={(e) => props.resetForm()} />\r\n        </FormGroup>\r\n      </Modal>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapCommonUserStateToProps\r\n  )(CategoryPredicateManagement)\r\n)","\nimport BaseEntity from './BaseEntity';\nimport Student from './Student';\nexport default class RuleViolation extends BaseEntity {\n    name = '';\n    description: string | undefined;\n    student: Student | undefined;\n    classMemberId?: number;\n\n    classMemberName?: string;\n    classLevel?: number;\n    classLetter?: string;\n    schoolName?: string;\n    point = 0;\n\n}","import React, { ChangeEvent } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\nimport RuleViolation from '../../../models/RuleViolation';\nimport ClassMemberSearchForm from '../shared/ClassMemberSearchForm';\nimport BaseEntity from './../../../models/BaseEntity';\nimport Class from './../../../models/Class';\nimport Filter from './../../../models/commons/Filter';\nimport Student from './../../../models/Student';\nimport { tableHeader } from './../../../utils/CollectionUtil';\nimport Modal from './../../container/Modal';\nimport FormGroup from './../../form/FormGroup';\nimport NavigationButtons from './../../navigation/NavigationButtons';\nimport BaseManagementPage from './BaseManagementPage';\nimport EditDeleteButton from './EditDeleteButton';\n\nclass State {\n  items: RuleViolation[] = [];\n  filter: Filter = new Filter();\n  totalData: number = 0;\n  record: RuleViolation = new RuleViolation();\n}\n\nconst MODEL_NAME = 'general-broken-rules';\nconst MENU = 'asrama';\n\nclass RuleViolationManagement extends BaseManagementPage<any, State> {\n  state = new State();\n  constructor(props) {\n    super(props, MODEL_NAME, MENU);\n    this.state.filter = new Filter();\n    this.state.filter.orderBy = 'classMember.student.user.fullName';\n  }\n  setStudent = (s: Student) => {\n    const record = this.state.record;\n    record.student = s;\n    record.classMemberId = s.id;\n    record.classMemberName = s.name;\n    record.classLetter = s.classLetter;\n    record.classLevel = s.classLevel;\n    record.schoolName = s.schoolName;\n    this.setState({ record });\n  }\n  emptyRecord = (): BaseEntity => {\n    return new RuleViolation();\n  }\n  onSubmit = () => {\n    if (!this.state.record.classMemberId) {\n      this.showError(\"Input tidak lengkap\");\n      return;\n    }\n    this.showConfirmation(\"Submit Data?\")\n      .then(ok => {\n        if (!ok) return;\n        if (this.state.record.id ?? 0 > 0) {\n          this.callApiUpdate(this.state.record.id, this.state.record);\n        } else {\n          this.callApiInsert(this.state.record);\n        }\n      })\n  }\n  render() {\n    const filter: Filter = this.state.filter;\n    return (\n      <div className=\"container-fluid section-body\">\n        <h2>Pelanggaran Umum</h2>\n        <hr />\n        <RecordForm formRef={this.formRef} setStudent={this.setStudent} resetForm={this.resetForm} onSubmit={this.onSubmit} record={this.state.record} updateRecordProp={this.updateRecordProp} />\n        <form onSubmit={this.reload}>\n          <FormGroup label=\"Cari\">\n            <input name=\"name\" placeholder=\"nama pelanggaran\" className=\"form-control-sm\" value={filter.fieldsFilter['name'] ?? \"\"} onChange={this.updateFieldsFilter} />\n            <input name=\"classMember.student.user.fullName\" placeholder=\"nama siswa\" className=\"form-control-sm\" value={filter.fieldsFilter['classMember.student.user.fullName'] ?? \"\"} onChange={this.updateFieldsFilter} />\n          </FormGroup>\n          <FormGroup label=\"Jumlah Tampilan\">\n            <input name=\"limit\" type=\"number\" className=\"form-control-sm\" value={filter.limit ?? 5} onChange={this.updateFilter} />\n          </FormGroup>\n          <FormGroup>\n            <input className=\"btn btn-primary btn-sm\" type=\"submit\" value=\"Submit\" />\n          </FormGroup>\n        </form>\n        <NavigationButtons\n          activePage={filter.page ?? 0}\n          limit={filter.limit ?? 10}\n          totalData={this.state.totalData}\n          onClick={this.loadAtPage}\n        />\n        <ItemsList\n          items={this.state.items}\n          isAdmin={this.isAdmin()}\n          recordLoaded={this.oneRecordLoaded}\n          recordDeleted={this.loadItems}\n          startingNumber={(filter.page ?? 0) * (filter.limit ?? 10)}\n        />\n      </div>\n    )\n  }\n\n}\ninterface ItemProps { isAdmin: boolean, startingNumber: number, items: RuleViolation[], recordLoaded(item: any), recordDeleted() }\nconst ItemsList = (props: ItemProps) => {\n\n  return (\n    <div style={{ overflow: 'auto' }}>\n      <table className=\"table table-striped\">\n        {tableHeader(\"No\", \"Siswa\", \"Kelas\", \"Nama\", \"Deskripsi\", \"Poin\", \"Opsi\")}\n        <tbody>\n          {props.items.map((item: RuleViolation, i) => {\n\n            return (\n              <tr key={\"category-\" + i}>\n                <td>{i + 1 + props.startingNumber}</td>\n                <td>{item.classMemberName}</td>\n                <td>{item.classLevel}{item.classLetter} {item.schoolName}</td>\n                <td>{item.name}</td>\n                <td>{item.description}</td>\n                <td>{item.point}</td>\n                <td>\n                  <EditDeleteButton\n                    recordLoaded={props.recordLoaded}\n                    recordDeleted={props.recordDeleted}\n                    record={item}\n                    menu={MENU}\n                    modelName={MODEL_NAME} />\n                </td>\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n    </div>\n  )\n}\nconst RecordForm = (props: { formRef: React.RefObject<Modal>, setStudent(s: Student), updateRecordProp(e: ChangeEvent): any, resetForm(): any, onSubmit(): any, record: RuleViolation }) => {\n  const record = props.record;\n  return (\n    <div className=\"record-form mb-3\" >\n      <Modal show={false} ref={props.formRef} toggleable={true} title=\"Record Form\" >\n        <FormGroup label=\"Siswa\">\n          <ClassMemberSearchForm selectItem={props.setStudent} />\n        </FormGroup>\n        <FormGroup>\n          {record.classMemberName} - {record.classLevel}{record.classLetter} {record.schoolName}\n        </FormGroup>\n        <form onSubmit={(e) => { e.preventDefault(); props.onSubmit() }}>\n          <FormGroup label=\"Pelanggaran\">\n            <input required value={record.name} onChange={props.updateRecordProp} className=\"form-control\" name=\"name\" />\n          </FormGroup>\n          <FormGroup label=\"Deskripsi\">\n            <textarea required className=\"form-control\" name=\"description\" onChange={props.updateRecordProp} value={record.description ?? \"\"} />\n          </FormGroup>\n          <FormGroup label=\"Poin\">\n            <input required className=\"form-control\" name=\"point\" onChange={props.updateRecordProp} value={record.point} />\n          </FormGroup>\n          <FormGroup>\n            <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-sm mr-2\" />\n            <input type=\"reset\" className=\"btn btn-secondary btn-sm\" onClick={(e) => props.resetForm()} />\n          </FormGroup>\n        </form>\n      </Modal>\n    </div>\n  )\n}\n\nexport default withRouter(\n  connect(\n    mapCommonUserStateToProps\n  )(RuleViolationManagement)\n)","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../constant/stores';\r\nimport { withRouter, Switch, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Login from '../pages/login/Login';\r\nimport DashboardMain from '../pages/dashboard/main/DashboardMain';\r\nimport HomeMain from '../pages/home/HomeMain';\r\nimport Menu from '../../models/settings/Menu';\r\nimport MusyrifManagement from '../pages/management/MusyrifManagement';\r\nimport ManagementMain from '../pages/management/ManagementMain';\r\nimport CategoryManagement from '../pages/management/CategoryManagement';\r\nimport RulePointManagement from '../pages/management/RulePointManagement';\r\nimport StudentList from '../pages/asrama/StudentList';\r\nimport InputPointForm from '../pages/asrama/InputPointForm';\r\nimport PointRecordsManagement from '../pages/management/PointRecordsSummary';\r\nimport MedicalRecordForm from '../pages/asrama/medicalrecord/MedicalRecordForm';\r\nimport AboutUs from './../pages/home/AboutUs';\r\nimport Register from '../pages/login/Register';\r\nimport PointRecordEdit from '../pages/asrama/point-record/PointRecordEdit';\r\nimport FollowUpReminder from '../pages/dashboard/main/FollowUpReminder';\r\nimport WarningActionManagement from '../pages/management/WarningActionManagement';\r\nimport ConfigSettingPage from '../pages/settings/ConfigSettingPage';\r\nimport StudentSemesterReport from '../pages/report/StudentSemesterReport';\r\nimport CategoryPredicateManagement from '../pages/management/CategoryPredicateManagement';\r\nimport RuleViolationManagement from '../pages/management/RuleViolationManagement';\r\n\r\nclass ApplicationContent extends BaseComponent<any, any> {\r\n  constructor(props: any) {\r\n    super(props, false);\r\n  }\r\n  setSidebarMenus = (menus: Menu[]) => {\r\n    this.props.setSidebarMenus(menus);\r\n  }\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Switch>\r\n\r\n          {/* -------- home -------- */}\r\n          <Route exact path=\"/home\" render={\r\n            (props: any) => {\r\n              return <HomeMain />\r\n            }\r\n          } />\r\n          <Route exact path=\"/\" render={\r\n            (props: any) =>\r\n              <HomeMain />\r\n          } />\r\n          <Route exact path=\"/about\" render={\r\n            (props: any) =>\r\n              <AboutUs />\r\n          } />\r\n\r\n          {/* \r\n                     \r\n                    <Route exact path=\"/management\" render={\r\n                        (props: any) => {\r\n                            console.debug(\"MANAGEMENTS path\")\r\n                            return <MasterDataMain setSidebarMenus={this.setSidebarMenus} />\r\n                        }\r\n                    } />\r\n                    <Route exact path=\"/management/:code\" render={\r\n                        (props: any) =>\r\n                            <MasterDataMain setSidebarMenus={this.setSidebarMenus} />\r\n                    } /> */}\r\n\r\n\r\n          {/* ///////// PUBLIC ///////// */}\r\n\r\n        </Switch>\r\n        <LoginRoute />\r\n        <Asrama />\r\n        <Management />\r\n        <Dashboard />\r\n        <Setting />\r\n        <Report />\r\n      </Fragment>\r\n    )\r\n  }\r\n  componentDidMount() {\r\n    // document.title = \"Login\";\r\n  }\r\n\r\n}\r\n\r\nconst Setting = (props) => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/settings/config\" render={\r\n        (props: any) => <ConfigSettingPage />\r\n      } />\r\n    </Switch>\r\n  )\r\n}\r\nconst Report = (props) => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/report/studentreport\" render={\r\n        (props: any) => <StudentSemesterReport />\r\n      } />\r\n    </Switch>\r\n  )\r\n}\r\nconst Management = (props) => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/management\" render={\r\n        (props: any) => <ManagementMain />\r\n      } />\r\n      <Route exact path=\"/management/musyrifmanagement\" render={\r\n        (props: any) => <MusyrifManagement />\r\n      } />\r\n      <Route exact path=\"/management/rule_category\" render={\r\n        (props: any) => <CategoryManagement />\r\n      } />\r\n      <Route exact path=\"/management/rule_point\" render={\r\n        (props: any) => <RulePointManagement />\r\n      } />\r\n      <Route exact path=\"/management/warning_action\" render={\r\n        (props: any) => <WarningActionManagement />\r\n      } />\r\n      <Route exact path=\"/management/category_predicate\" render={\r\n        (props: any) => <CategoryPredicateManagement />\r\n      } />\r\n      <Route exact path=\"/management/rule_violation\" render={\r\n        (props: any) => <RuleViolationManagement />\r\n      } />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nconst Asrama = (proos) => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/asrama/studentlist\" render={\r\n        (props: any) => <StudentList />\r\n      } />\r\n      <Route exact path=\"/asrama/inputpoint\" render={\r\n        (props: any) => <InputPointForm />\r\n      } />\r\n      <Route exact path=\"/asrama/pointsummary\" render={\r\n        (props: any) => <PointRecordsManagement />\r\n      } />\r\n      <Route exact path=\"/asrama/pointrecordedit\" render={\r\n        (props: any) => <PointRecordEdit />\r\n      } />\r\n      <Route exact path=\"/asrama/medicalrecord\" render={\r\n        (props: any) => <MedicalRecordForm />\r\n      } />\r\n\r\n    </Switch>\r\n  )\r\n}\r\nconst LoginRoute = (props) => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/login\" render={\r\n        (props: any) =>\r\n          <Login />\r\n      } />\r\n    </Switch>\r\n  )\r\n}\r\n\r\n\r\nconst Dashboard = (props) => {\r\n  return (\r\n    <Switch>\r\n      {/* -------- dashboard -------- */}\r\n      <Route exact path=\"/dashboard\" render={\r\n        (props: any) => {\r\n\r\n          console.debug(\"dashboard path\")\r\n          return <DashboardMain />\r\n        }\r\n\r\n      } />\r\n      <Route exact path=\"/dashboard/followup\" render={\r\n        (props: any) =>\r\n          <FollowUpReminder />\r\n      } />\r\n    </Switch>\r\n  )\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => ({})\r\n\r\n\r\nexport default withRouter(connect(\r\n  mapCommonUserStateToProps,\r\n  mapDispatchToProps\r\n)(ApplicationContent))","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../constant/stores';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { performLogout } from './../../redux/actionCreators';\r\nimport Menu from '../../models/settings/Menu';\r\nimport './SideBar.css'\r\n\r\nclass SideBar extends BaseComponent<{ sidebarMenus?: Menu[], parentMenu: Menu }, any> {\r\n  constructor(props: { sidebarMenus?: Menu[] }) {\r\n    super(props, false);\r\n  }\r\n  isSidebarActive = (menu: Menu) => {\r\n    const parentMenu: Menu = this.props.parentMenu;\r\n    if (null == parentMenu) { return false; }\r\n    const pathName = (this.props as any).location.pathname;\r\n    return parentMenu.url + \"/\" + menu.url == pathName;\r\n  }\r\n  componentDidMount() {\r\n    window.addEventListener('scroll', this.handleScroll);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('scroll', this.handleScroll);\r\n  }\r\n\r\n  handleScroll(event) {\r\n    let scrollTop = event.srcElement.body.scrollTop,\r\n      itemTranslate = Math.min(0, scrollTop / 3 - 60);\r\n    // console.debug(\"scrollTop: \", scrollTop);\r\n\r\n  }\r\n  render() {\r\n    const { parentMenu } = this.props;\r\n    if (null == parentMenu) {\r\n      return null;\r\n    }\r\n    const menus = this.props.sidebarMenus ?? [];\r\n    const user = this.getLoggedUser();\r\n    return (\r\n      <ul id=\"sidebar\" className=\"sidebar-nav bg-light\">\r\n        <Brand show={parentMenu != null} brand={parentMenu} />\r\n        {menus.map(menu => {\r\n          if (menu.userAuthorized && !menu.userAuthorized(user)) {\r\n            return null;\r\n          }\r\n          const isActive = this.isSidebarActive(menu);\r\n          const menuClassName = isActive ? 'menu-active' : 'regular-menu';\r\n          return (\r\n            <li className={`sidebar-item ${menuClassName}`} key={`SIDEBAR_${menu.code}`}>\r\n              <Link to={[parentMenu.url, menu.url].join('/')}>\r\n                <span className=\"sidebar-icon\">\r\n                  <i className={Menu.getIconClassName(menu)} />\r\n                </span>\r\n                <span className=\"menu-label\">{menu.name}</span>\r\n              </Link>\r\n            </li>\r\n          )\r\n        })\r\n        }\r\n      </ul >\r\n    )\r\n  }\r\n\r\n}\r\nconst Brand = (props) => {\r\n  if (props.show == false) return null;\r\n  return (\r\n    <Fragment>\r\n      <li id=\"sidebar-brand\" className=\"sidebar-brand\" style={{ marginBottom: '20px' }}>\r\n        <div className=\"text-center pt-2 pb-2\">\r\n          <h3 className=\"text-dark\">\r\n            <i className={Menu.getIconClassName(props.brand)} />\r\n          </h3>\r\n          <Link to={props.brand.url} style={{ textDecoration: 'none' }}>\r\n            <h4 className=\"text-dark\">{props.brand.name}</h4>\r\n          </Link>\r\n        </div>\r\n      </li>\r\n      <li className={\"sidebar-item-brand \"} >\r\n        <Link to={props.brand.url}>\r\n          <span className=\"sidebar-icon\">\r\n            <i className={Menu.getIconClassName(props.brand)} />\r\n          </span>\r\n        </Link>\r\n      </li>\r\n    </Fragment>\r\n  )\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n  performLogout: (app: any) => dispatch(performLogout(app))\r\n});\r\n\r\nexport default withRouter(connect(\r\n  mapCommonUserStateToProps,\r\n  mapDispatchToProps\r\n)(SideBar));\r\n","import React, { Fragment } from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../constant/stores';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { performLogout } from './../../redux/actionCreators';\r\nimport Header from '../navigation/Header';\r\nimport ApplicationContent from './ApplicationContent';\r\nimport SideBar from '../navigation/SideBar';\r\nimport './Layout.css';\r\nimport Menu from '../../models/settings/Menu';\r\nimport { getMenuByMenuPath, extractMenuPath } from './../../constant/Menus';\r\nclass State {\r\n  showSidebar?: boolean = false;\r\n  activeMenuCode: any = null;\r\n  menu?: Menu;\r\n  sidebarMenus?: Menu[]\r\n};\r\nclass MainLayout extends BaseComponent<any, State> {\r\n  state = new State();\r\n  private currentPathName = '';\r\n  constructor(props: any) {\r\n    super(props, false);\r\n  }\r\n  setMenuNull = () => {\r\n    this.setState({ menu: undefined, showSidebar: false, activeMenuCode: null, sidebarMenus: undefined });\r\n  }\r\n  setMenu = (menu: Menu) => {\r\n    if (menu == null) {\r\n      return;\r\n    }\r\n    this.setState({ menu: menu, sidebarMenus: undefined, showSidebar: menu.showSidebar, activeMenuCode: menu.code });\r\n  }\r\n  setSidebarMenus = (sidebarMenus: Menu[]) => {\r\n    // console.debug(\"Set sidebar menus: \", menus);\r\n    this.setState({ sidebarMenus });\r\n  }\r\n  componentDidMount() {\r\n    this.setCurrentMenu();\r\n  }\r\n  componentDidUpdate() {\r\n    this.setCurrentMenu();\r\n  }\r\n  setCurrentMenu = () => {\r\n    const pathName = extractMenuPath(this.props.location.pathname);\r\n\r\n    if (pathName == this.currentPathName) {\r\n      return;\r\n    }\r\n    this.currentPathName = pathName;\r\n    const menu = getMenuByMenuPath(pathName);\r\n    if (menu == null) {\r\n      this.setMenuNull();\r\n    } else {\r\n      this.setMenu(menu);\r\n    }\r\n  }\r\n  getSubMenus = () => {\r\n    const menuState = this.state.menu;\r\n    if (menuState && menuState.subMenus != null && menuState.subMenus?.length > 0) {\r\n      return menuState.subMenus;\r\n    }\r\n    if (this.state.sidebarMenus) {\r\n      return this.state.sidebarMenus;\r\n    }\r\n    return null;\r\n  }\r\n  render() {\r\n    const showSidebar = this.state.showSidebar == true;\r\n    const className = showSidebar ? \"app-content\" : \"content\";\r\n    return (\r\n      <Fragment>\r\n        <Header\r\n          setMenuNull={this.setMenuNull}\r\n          activeMenuCode={this.state.activeMenuCode}\r\n          setMenu={this.setMenu}\r\n        />\r\n        <div id=\"content-wrapper\" className={`container-fluid  ${className}`}>\r\n          <ApplicationContent setSidebarMenus={this.setSidebarMenus} />\r\n        </div>\r\n        {showSidebar && <SideBar sidebarMenus={this.getSubMenus()} parentMenu={this.state.menu} />}\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n  performLogout: (app: any) => dispatch(performLogout(app))\r\n});\r\n\r\nexport default withRouter(connect(\r\n  mapCommonUserStateToProps,\r\n  mapDispatchToProps\r\n)(MainLayout));\r\n","import React, { Component } from 'react'\r\nimport './Loader.css'\r\n\r\ntype State = { timer: number, intervalId?: any }\r\n\r\nclass Loader extends Component<any, State> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      timer: 130,\r\n      intervalId: 0\r\n    }\r\n  }\r\n  update = () => {\r\n    if (this.state.timer < 0) {\r\n      clearInterval(this.state.intervalId);\r\n    }\r\n    console.log(\"tick\")\r\n    this.setState({ timer: this.state.timer - 1 })\r\n    if (this.state.timer < 0 && this.props.endMessage) {\r\n      this.props.endMessage();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.withTimer == true) {\r\n      let intervalId = setInterval(this.update, 1, null);\r\n      this.setState({ intervalId });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let className = \"message message-\" + this.props.type;\r\n\r\n    if (this.props.realtime == true) {\r\n      return <LoaderContent progress={this.props.progress} realtime={this.props.realtime} />\r\n    }\r\n\r\n    return (\r\n      <div className={className} >\r\n        <LoaderContent progress={this.props.progress} realtime={this.props.realtime} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction LoaderContent(props) {\r\n  if (props.realtime) {\r\n    return (\r\n      <div className=\"row container-fluid bg-light\" style={{ margin: 0, position: 'fixed', zIndex: 100 }}>\r\n        <div className=\"col-1\">\r\n          <span style={{ marginBottom: '3px' }} className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n        </div>\r\n        <div className=\"col-11 progress\" style={{ padding: 0, marginTop: '7px', height: '10px' }}  >\r\n          <div className=\"bg-primary\" style={{\r\n            width: props.progress + \"%\",\r\n            transitionDuration: '50ms',\r\n            margin: 0,\r\n          }}>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <button className=\"btn btn-dark \" type=\"button\" disabled>\r\n      <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n      <span className=\" \">Loading...</span>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Loader;","import 'reflect-metadata';\r\nimport { injectable } from 'inversify';\r\nimport { AxiosResponse } from 'axios';\r\nimport WebResponse from '../models/commons/WebResponse';\r\nimport { contextPath } from './../constant/Url';\r\nimport { updateAccessToken } from './../middlewares/Common';\r\nimport { commonAjaxGetCalls, commonAjaxPublicGetCalls } from './Promises';\r\n\r\n@injectable()\r\nexport default class UserService {\r\n  requestApplicationId = (callbackSuccess: (response: WebResponse) => any, callbackError: () => any) => {\r\n    const url = contextPath('api/public/asrama/config');\r\n    commonAjaxGetCalls(url).then((data) => {\r\n      if (data.code != '00') {\r\n        alert('Error requesting app ID');\r\n        return;\r\n      }\r\n      const response = data.rawAxiosResponse as AxiosResponse;\r\n      if (!response.headers['access-token'] || response.headers['access-token'] == '') {\r\n        throw new Error('Unauthenticated');\r\n      }\r\n      updateAccessToken(response);\r\n      console.debug('Header.AccessToken:', response.headers['access-token']);\r\n      callbackSuccess(data);\r\n    }).catch(e => {\r\n      console.error('Req app id: ', e);\r\n      callbackError();\r\n    });\r\n  }\r\n  getLoggedUser = (callbackSuccess: (data) => any, callbackError: () => any) => {\r\n    const url = contextPath() + 'api/user';\r\n    commonAjaxGetCalls(url).then(callbackSuccess)\r\n      .catch(e => {\r\n        console.error('ERROR requestApplicationId: ', e);\r\n        callbackError();\r\n      });\r\n  }\r\n  requestApplicationIdNoAuth = (callbackSuccess: (response: WebResponse) => any, callbackError: () => any) => {\r\n    const url = contextPath() + 'api/public/asrama/config';\r\n    commonAjaxPublicGetCalls(url).then(data => {\r\n      if (data.code != '00') {\r\n        alert('Error requesting app ID');\r\n        return;\r\n      }\r\n      callbackSuccess(data);\r\n    }).catch(e => {\r\n      console.error('ERROR requestApplicationId No Auth: ', e);\r\n      callbackError();\r\n    });\r\n  }\r\n}\r\n","\nimport React, { Component, Fragment, RefObject } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport SockJsClient from 'react-stomp';\nimport './App.css';\nimport Alert from './component/alert/Alert';\nimport MainLayout from './component/layout/MainLayout';\nimport Loader from './component/loader/Loader';\nimport Spinner from './component/loader/Spinner';\nimport AnchorWithIcon from './component/navigation/AnchorWithIcon';\nimport { mapCommonUserStateToProps } from './constant/stores';\nimport * as url from './constant/Url';\nimport WebResponse from './models/commons/WebResponse';\nimport User from './models/User';\nimport * as actions from './redux/actionCreators';\nimport UserService from './services/UserService';\nimport { doItLater, updateFavicon } from './utils/EventUtil';\nimport { performWebsocketConnection, registerWebSocketCallbacks, setWebSocketUrl } from './utils/websockets';\nimport { resolve } from 'inversify-react';\n\nclass State {\n  loading = false;\n  loadingPercentage  = 0;\n  requestId?: string;\n  mainAppUpdated = new Date();\n  showAlert  = false;\n  withProgress = false;\n  appIdStatus = \"Loading App Id\";\n  errorAuthenticatingApp = false;\n}\nclass App extends Component<any, State> {\n  private wsConnected = false;\n  private loadings = 0;\n  private alertTitle = \"Info\";\n  private alertBody: any = null;\n  private alertIsYesOnly = true;\n  private alertIsError = false;\n  private alertOnYesCallback = function (e) { };\n  private alertOnCancelCallback = function (e) { };\n  private wsUpdateHandler: Function | undefined = undefined;\n\n  @resolve(UserService)\n  private userService: UserService;\n  // alertRef: RefObject<Alert> = React.createRef();\n  alertCallback = {\n    title: \"Info\", message: \"Info\", yesOnly: false,\n    onOk: () => { }, onNo: () => { }\n  }\n\n  constructor(props: any) {\n    super(props);\n    this.state = new State();\n    this.props.setMainApp(this);\n  }\n  refresh = () => { this.setState({ mainAppUpdated: new Date() }); }\n\n  requestAppId = () => {\n    this.setState({ appIdStatus: \"Authenticating application\", errorAuthenticatingApp: false });\n    this.userService.requestApplicationId((reqIdResp) => {\n      this.getLoggedUser(reqIdResp);\n    }, this.retryRequestAppId)\n  }\n  getLoggedUser = (reqIdResp) => {\n    const onSuccess = (data) => {\n      this.setState({ errorAuthenticatingApp: false }, () => {\n        this.props.setRequestId(reqIdResp, this);\n        this.props.setLoggedUser(data.result);\n        this.refresh();\n      });\n    }\n    this.userService.getLoggedUser(onSuccess, console.error);\n  }\n  retryRequestAppId = () => {\n    this.setState({ appIdStatus: \"Authenticating application (Retrying)\", errorAuthenticatingApp: false });\n    this.userService.requestApplicationIdNoAuth((response) => {\n      this.props.setRequestId(response, this);\n      this.setState({ errorAuthenticatingApp: false });\n    }, () => this.setState({ errorAuthenticatingApp: true }))\n\n  }\n  incrementLoadings() {\n    this.loadings++;\n  }\n\n  decrementLoadings() {\n    this.loadings--;\n    if (this.loadings < 0) {\n      this.loadings = 0;\n    }\n  }\n\n  startLoading(withProgress: boolean = false) {\n    this.incrementLoadings();\n    this.setState({ loading: true, withProgress });\n  }\n\n  endLoading() {\n    this.decrementLoadings();\n    if (this.loadings == 0) {\n      if (this.state.withProgress) {\n        this.setState({ loadingPercentage: 100 }, this.smoothEndLoading);\n      } else {\n        this.setState({ loading: false, loadingPercentage: 0 });\n      }\n    }\n  }\n\n  smoothEndLoading = () => {\n    doItLater(() => {\n      this.setState({ loading: false, loadingPercentage: 0 });\n    }, 100);\n  }\n\n  handleProgress = (msg: WebResponse) => {\n    const percentageFloat: number = msg.percentage ?? 0;\n    let percentage = Math.floor(percentageFloat);\n    if (percentageFloat < 0 || percentageFloat > 100) {\n      this.endLoading();\n    }\n    this.setState({ loadingPercentage: percentage });\n  }\n\n  showAlert(title: string, body: any, yesOnly: boolean, yesCallback: Function, noCallback?: Function) {\n    this.alertTitle = title;\n    this.alertBody = body;\n    this.alertIsYesOnly = yesOnly;\n    const app = this;\n    this.alertOnYesCallback = function (e) {\n      app.dismissAlert();\n      yesCallback(e);\n    }\n    if (!yesOnly) {\n      this.alertOnCancelCallback = function (e) {\n        app.dismissAlert();\n        if (noCallback != null) {\n          noCallback(e);\n        }\n      };\n    }\n    this.setState({ showAlert: true });\n  }\n\n  dismissAlert() {\n    this.alertIsError = false;\n    this.setState({ showAlert: false })\n  }\n  showAlertError(title: string, body: any, yesOnly: boolean, yesCallback: Function, noCallback?: Function) {\n    this.alertIsError = true;\n    this.showAlert(title, body, yesOnly, yesCallback, noCallback)\n  }\n\n  componentDidUpdate() {\n    // console.debug(\"APP UPDATED\");\n    if (this.props.applicationProfile) {\n      updateFavicon(this.props.applicationProfile);\n    }\n    if (this.props.requestId && !this.wsConnected) {\n      this.initWebsocket();\n    }\n  }\n\n  componentDidMount() {\n    this.requestAppId();\n    this.setState({ loadingPercentage: 0 });\n  }\n\n  initWebsocket = () => {\n    setWebSocketUrl(url.contextPath('withProgress-app'));\n    registerWebSocketCallbacks({\n      subscribeUrl: `/wsResp/progress/${this.props.requestId}`,\n      callback: this.handleProgress  //must use lambda\n    },\n    {\n      subscribeUrl: `/wsResp/${this.props.requestId}/update`,\n      callback: (response) => this.handleWsUpdate(response)\n    });\n    performWebsocketConnection();\n    this.wsConnected = true;\n  }\n\n  private handleWsUpdate = (response: any) => {\n\n    if (this.wsUpdateHandler) {\n      this.wsUpdateHandler(response);\n    }\n  }\n\n  setWsUpdateHandler = (handler: Function | undefined) => {\n    this.wsUpdateHandler = handler;\n  }\n  resetWsUpdateHandler = () => {\n    this.setWsUpdateHandler(undefined);\n  }\n\n  render() {\n    if (!this.props.requestId) {\n      return (\n        <div className=\"text-center\" style={{ paddingTop: '10%' }}>\n          <h2>{this.state.appIdStatus}</h2>\n          {this.state.errorAuthenticatingApp ?\n            <AnchorWithIcon iconClassName=\"fas fa-redo\" onClick={this.retryRequestAppId} children=\"Retry\" /> :\n            <Spinner />}\n        </div>\n      )\n    }\n    return (\n      <Fragment>\n        <Loading withProgress={this.state.withProgress} loading={this.state.loading} loadingPercentage={this.state.loadingPercentage} />\n        {this.state.showAlert ?\n          <Alert title={this.alertTitle}\n            isError={this.alertIsError}\n            onClose={(e) => this.setState({ showAlert: false })}\n            yesOnly={this.alertIsYesOnly}\n            onYes={this.alertOnYesCallback} onNo={this.alertOnCancelCallback}\n          >{this.alertBody}</Alert> :\n          null}\n        <MainLayout />\n        {/* <SockJsClient url={usedHost + 'withProgress-app'} topics={['/wsResp/progress/' + this.props.requestId]}\n\n          onMessage={(msg: WebResponse) => { this.handleMessage(msg) }}\n          ref={this.clientRef} /> */}\n      </Fragment>\n    )\n  }\n}\n\nfunction Loading(props) {\n  if (props.loading == true) {\n    return (\n      <Loader withProgress={props.withProgress} progress={props.loadingPercentage} text=\"Please wait...\" type=\"loading\" />\n    );\n  }\n  return null;\n}\n\n\nconst mapDispatchToProps = (dispatch: Function) => ({\n  setLoggedUser: (user: User) => dispatch(actions.setLoggedUser(user)),\n  setMainApp: (app: App) => dispatch(actions.setMainApp(app)),\n  setRequestId: (response: WebResponse, app: App) => dispatch(actions.setRequestId(response, app)),\n})\n\nexport default withRouter(connect(\n  mapCommonUserStateToProps,\n  mapDispatchToProps\n)(App))\n","import { Container } from 'inversify';\nimport 'reflect-metadata'; \nimport ConfigurationService from './services/ConfigurationService';\nimport MasterDataService from './services/MasterDataService';\nimport StudentService from './services/StudentService';\nimport UserService from './services/UserService';\nimport MusyrifManagementService from './services/MusyrifManagementService';\n\nlet inversifyContainer = new Container();\n\ninversifyContainer.bind(ConfigurationService).toSelf().inSingletonScope();\ninversifyContainer.bind(MasterDataService).toSelf().inSingletonScope();\ninversifyContainer.bind(StudentService).toSelf().inSingletonScope();\ninversifyContainer.bind(UserService).toSelf().inSingletonScope();\ninversifyContainer.bind(MusyrifManagementService).toSelf().inSingletonScope();\n\nexport { inversifyContainer };\n\n","import React from 'react'\r\nimport App from './App'\r\nimport configureStore from './redux/configureStore'\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { Provider as InvesifyProvider } from 'inversify-react';\r\nimport { inversifyContainer } from './inversify.config';\r\n\r\nconst Root = (props: any) => {\r\n  const store = configureStore();\r\n  return (\r\n    <Provider store={store}>\r\n      <InvesifyProvider container={inversifyContainer} >\r\n        <HashRouter>\r\n          <App />\r\n        </HashRouter>\r\n      </InvesifyProvider>\r\n    </Provider>\r\n\r\n  );\r\n}\r\n\r\n\r\nexport default Root;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './Root.tsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}