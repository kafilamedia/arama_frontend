{"version":3,"sources":["models/AuthorityType.ts","redux/appReducer.js","redux/types.js","models/BaseEntity.ts","utils/StringUtil.ts","models/User.ts","models/settings/Menu.ts","constant/Menus.ts","redux/userReducer.js","models/settings/AttachmentInfo.ts","services/Promises.ts","services/MasterDataService.ts","services/UserService.ts","services/MusyrifManagementService.ts","services/StudentService.ts","services/ConfigurationService.ts","redux/servicesReducer.ts","redux/reducers.js","middlewares/UserMiddleware.ts","middlewares/RealtimeChatMiddleware.js","redux/configureStore.js","middlewares/Common.ts","constant/Url.js","redux/actionCreators.ts","constant/stores.js","component/loader/Loader.js","utils/EventUtil.ts","component/alert/Alert.js","models/ApplicationProfile.ts","utils/websockets.js","component/BaseComponent.tsx","component/navigation/Header.tsx","component/loader/Spinner.tsx","component/pages/login/Login.tsx","component/pages/BasePage.tsx","utils/ComponentUtil.ts","component/pages/dashboard/main/DashboardMain.tsx","component/pages/home/HomeMain.tsx","models/Employee.ts","utils/CollectionUtil.tsx","models/commons/Filter.ts","component/form/FormGroup.tsx","component/navigation/NavigationButtons.tsx","component/navigation/AnchorWithIcon.tsx","component/pages/management/EmployeeRow.tsx","component/navigation/AnchorButton.tsx","component/navigation/ToggleButton.tsx","component/pages/management/BaseManagementPage.tsx","component/pages/management/MusyrifManagement.tsx","component/pages/management/ManagementMain.tsx","models/Category.ts","component/container/Modal.tsx","component/pages/management/EditDeleteButton.tsx","component/pages/management/CategoryManagement.tsx","models/RulePoint.ts","component/pages/management/RulePointManagement.tsx","utils/DateUtil.ts","component/form/FilterPeriod.tsx","component/pages/dormitoryactivity/StudentList.tsx","models/Student.ts","models/PointRecord.ts","component/form/InputTime.tsx","component/pages/dormitoryactivity/form/FormStepThree.tsx","component/alert/SimpleError.tsx","component/pages/dormitoryactivity/form/FormStepTwo.tsx","component/pages/dormitoryactivity/form/FormStepOne.tsx","component/pages/dormitoryactivity/InputPointForm.tsx","component/container/Card.tsx","models/Class.ts","component/pages/dormitoryactivity/point-record/PointRecordDetail.tsx","component/pages/dormitoryactivity/DropPointButtons.tsx","component/pages/management/PointRecordsSummary.tsx","component/pages/dormitoryactivity/medicalrecord/StudentForm.tsx","models/MedicalRecord.ts","component/pages/dormitoryactivity/medicalrecord/MedicalRecordDailyInput.tsx","component/pages/dormitoryactivity/medicalrecord/MedicalRecordForm.tsx","component/pages/home/AboutUs.tsx","component/pages/login/Register.tsx","component/pages/shared/StudentSearchForm.tsx","component/pages/dormitoryactivity/point-record/PointRecordEdit.tsx","component/pages/dashboard/main/FollowUpReminder.tsx","models/WarningAction.ts","component/pages/management/WarningActionManagement.tsx","component/pages/settings/ConfigSettingPage.tsx","component/layout/ApplicationContent.tsx","component/navigation/SideBar.tsx","component/layout/MainLayout.tsx","App.tsx","Root.tsx","serviceWorker.js","index.js"],"names":["AuthorityType","initState","mainApp","undefined","reducer","state","action","type","payload","BaseEntity","id","index","uniqueId","string","String","Date","getUTCMilliseconds","toString","months","twoDigits","value","User","nickname","name","email","password","profileImage","roles","user","requestId","nip","role","i","this","length","Object","assign","Menu","code","description","url","pathVariables","iconUrl","color","fontColor","active","menuClass","authenticated","showSidebar","subMenus","userAuthorized","clone","element","hasRole","defaultMenuIconClassName","getIconClassName","menu","getMenus","menuSet","_menus","subMenu","push","admin_asrama","musyrif_asrama","loginKey","loginStatus","loginFailed","menus","menuData","loggedUser","loginAttempt","applicationProfile","assetsPath","result","message","profile","referer","refresh","setLoginKeyCookie","data","AttachmentInfo","blob","Blob","arg0","split","info","axios","require","commonAjaxPostCalls","endpoint","request","Promise","resolve","reject","post","headers","commonAuthorizedHeader","then","axiosResponse","updateAccessToken","response","rawAxiosResponse","catch","e","console","error","commonAjaxPublicPostCalls","commonHeader","MasterDataService","getOne","contextPath","concat","delete","list","update","updateApplicationProfile","responseType","debug","fileName","rawSplit","extension","window","URL","createObjectURL","attachmentInfo","commonAjaxPostCallsWithBlob","instance","UserService","updateProfile","saveUser","requestApplicationId","callbackSuccess","callbackError","alert","requestApplicationIdNoAuth","MusyrifManagementService","filter","emp","employee_id","StudentService","followUp","pointRecordId","record_id","getFollowUpReminders","submitMedicalRecord","record","req","medicalRecord","loadMonthlyMedicalRecord","studentId","month","year","fieldsFilter","student_id","setPointDropped","dropped","pointRecord","dropped_at","ConfigurationService","appProfile","services","userService","getInstance","masterDataService","musyrifManagementService","studentService","configurationService","rootReducer","combineReducers","appState","appReducer","userState","userReducer","servicesState","servicesReducers","initialState","performLoginMiddleware","store","next","meta","app","responseJson","loginSuccess","newAction","common","dispatch","log","finally","endLoading","getLoggedUserMiddleware","param","performLogoutMiddleware","logoutSuccess","setLoggedUserMiddleware","getMessagesMiddleware","fetch","method","body","JSON","stringify","json","err","storeChatMessageLocallyMiddleware","getStore","configureStore","createStore","applyMiddleware","userMiddleware","realtimeChatMiddleware","getRequestId","getLoginKey","LOGIN_KEY","getAssetsPath","getState","getCookie","accessToken","setCookie","cookieValue","cname","cvalue","exdays","d","setTime","getTime","expires","toUTCString","document","cookie","ca","decodeURIComponent","c","charAt","substring","indexOf","devMode","getElementById","rootValue","baseImageUrl","usedHost","apiAccount","performLogout","startLoading","mapCommonUserStateToProps","LoaderContent","props","realtime","className","style","margin","position","zIndex","marginBottom","aria-hidden","padding","marginTop","height","width","progress","transitionDuration","disabled","Loader","timer","intervalId","clearInterval","setState","endMessage","withTimer","setInterval","Component","doItLater","callback","intervalMs","timeout","setTimeout","clearTimeout","State","backColor","Backdrop","backgroundColor","bgColor","Footer","ref","yesButtonRef","onClick","onYes","yesOnly","noButtonRef","onNo","Header","fontClassName","title","onClose","Alert","close","React","createRef","isError","current","focus","headerClassName","display","children","ApplicationProfile","about","welcoming_message","pageIcon","backgroundUrl","contact","address","warning_point","stompClient","wsConnected","subscriptionCallbacks","Array","sendToWebsocket","requestObject","send","BaseComponent","parentApp","updated","validateLoginStatus","isUserLoggedIn","backToLogin","sendWebSocket","setWsUpdateHandler","handler","resetWsUpdateHandler","getApplicationProfile","handleInputChange","event","stateFieldName","target","checked","parseInt","el","doAjax","withProgress","successCallback","errorCallback","params","commonAjax","commonAjaxWithProgress","getLoggedUser","isAdmin","scrollTop","opt","top","behavior","scrollTo","showConfirmation","showAlert","showConfirmationDanger","showAlertError","showInfo","showError","showCommonSuccessAlert","showCommonErrorAlert","getServices","history","IState","showNavLinks","buttonToggleNavRef","toggleNavLinks","onLogout","ok","setMenu","click","label","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","map","isActive","activeMenuCode","key","to","setMenuNull","NavBarTop","paddingLeft","fontSize","UserIcon","marginRight","withRouter","connect","Spinner","innerDivs","visibility","show","loading","editPassword","Login","updateCredentialProperty","getAttribute","preventDefault","performLogin","onSubmit","login","onChange","PasswordField","placeholder","required","EmailField","autoFocus","username","BasePage","componentReady","getAttachmentInfoFromFile","fileInput","files","file","reader","FileReader","readAsDataURL","onload","setUrl","onerror","Error","attachment","DashboardMain","addPointRecord","pathname","updateImage","accept","src","HomeMain","imageUrl","backgroundImage","backgroundSize","Employee","tableHeader","values","Filter","limit","page","orderType","orderBy","contains","exacts","day","module","dayTo","monthTo","yearTo","maxValue","availabilityCheck","resetFieldsFilter","f","withLimit","FormGroup","orientation","NavigationButtons","buttonIndexes","generateButtonValues","totalData","activePage","lastIndex","nextPage","previusPage","currentPage","displayed_buttons","buttonCount","Math","ceil","min","max","AnchorWithIcon","btnClassName","attributes","iconClassName","tyle","EmployeeRow","getEmployee","employee","activeStatusUpdate","onUpdated","activateMusyrif","activate","isMusyrif","startingNumber","AnchorButton","ToggleButton","yesLabel","noLabel","BaseManagementPage","modelName","overrideLoading","formRef","emptyRecord","loadItems","itemsLoaded","items","updateFilter","dataset","updateFieldsFilter","loadAtPage","updateRecordProp","resetForm","oneRecordLoaded","item","showModal","recordUpdated","hideModal","callApiSubmit","reload","MusyrifManagement","setMusyrifOnly","musyrifOnly","onEmployeeStatusUpdate","EmployeeList","overflow","ManagementMain","Category","points","object","Modal","toggleable","footerContent","showFooter","EditDeleteButton","getRecord","rec","recordLoaded","recordLoadedForDetail","recordDeleted","loadRecord","loadRecordRequest","loadRecordForDetail","deleteRecord","hasType","types","CategoryManagement","category","ItemsList","RecordForm","RulePoint","category_id","point","droppable","categories","categoriesLoaded","RulePointManagement","rulePoint","categoriesNotLoaded","loadCategories","selectedCategoryId","reloadCategories","data-type","MONTHS","leapMonths","regularMonths","parseDate","s","b","m","days","arr","FilterPeriod","mode","Fragment","showlabel","hideDay","classes","StudentList","classesLoaded","loadClasses","getClasses","updateSelectedClass","inputPage","inputPoint","inputMedicalRecord","student","updateWithPointRecord","val","getDate","getMonth","getFullYear","selectedClassId","showPointRecord","level","sekolah","rombel","nama","colSpan","kelas","Student","nis","PointRecord","setDate","dateString","td","location","time","point_id","rule_point","pictures","getPicture","getTimestamp","DAYS","getDay","join","getHours","getMinutes","getSeconds","h","hour","minute","second","hours","minutesOrSeconds","InputTime","minutes","seconds","updateFromProps","updateValue","setNow","date","border","sec","marginLeft","FormStepThree","submit","updatePointRecord","updateDate","updateTime","setAttachment","removeAttachment","getAttachment","onBack","SimpleError","rulePoints","FormStepTwo","rulePointsLoaded","setRulePoint","loadRulePoints","getCategory","r","updateRulePoint","select","filteredItems","FormStepOne","setCategory","setSelectedCategory","updateCategory","formStep","savedRecord","InputPointForm","totalStep","validateStudentData","removeStudent","nextStep","step","submitRecord","submitPointRecord","recordSubmitted","back","Progress","Detail","toDateString","Warning","Card","Class","PointRecordDetail","pictureUrl","timeStamp","studentClassString","DropPointButtons","setDropped","isDropped","selectedCategory","showFilterDetail","defaultFieldsFilter","class_id","point_name","category_name","PointRecordSummary","classessLoaded","getCategories","cat","showDetail","hideDetail","hideFilterDetail","openEditPage","p","resetFilter","recordLoadedForEdit","optionTypes","studentName","StudentForm","loadStudent","setSelectedItem","setItem","reset","selectedItem","onReset","cursor","ItemDetail","MedicalRecord","temperature_morning","temperature_afternoon","breakfast","lunch","dinner","medicine_consumption","genose_test","antigen_test","pcr_test","obj","y","MedicalRecordDailyInput","setRecord","period","monthName","rows","Checkbox","SingleRow","minHeight","forwardRef","mappedItems","Map","MedicalRecordForm","inputRefs","setStudent","loadMonthlyRecord","forEach","recordsLoaded","toMap","get","set","getFilter","dayCount","getMonthDays","gridTemplateColumns","repeat","AboutUs","displayName","editPasswordRepeat","Register","UserModel","trim","userSaved","passwordMatch","fieldComplete","register","borderColor","CommonField","keyword","StudentSearchForm","selectItem","pointsMap","selectedPointId","PointRecordEdit","inputTimeRef","categoryId","catId","resp","checkPassedData","updateInput","updateRecordField","setSelectedRulePoint","validateInput","removeImage","updatePicture","categoryID","followUpInfos","FollowUpReminder","loadReminder","TOTAL_POINT","FOLLOW_UP_COUNT","WarningAction","WarningActionManagement","warningAction","ConfigSettingPage","configService","configUpdated","ApplicationContent","setSidebarMenus","exact","path","render","Setting","MusyrifManagementRoute","StudentsRoute","proos","LoginRoute","Dashboard","SideBar","isSidebarActive","parentMenu","pathName","addEventListener","handleScroll","removeEventListener","srcElement","sidebarMenus","brand","menuClassName","Brand","textAlign","paddingTop","paddingBottom","textDecoration","MainLayout","currentPathName","setCurrentMenu","pathRaw","firstPath","extractMenuPath","getMenuByMenuPath","getSubMenus","menuState","loadingPercentage","mainAppUpdated","appIdStatus","errorAuthenticatingApp","App","loadings","alertTitle","alertBody","alertIsYesOnly","alertIsError","alertOnYesCallback","alertOnCancelCallback","wsUpdateHandler","clientRef","alertCallback","onOk","requestAppId","setRequestId","retryRequestAppId","smoothEndLoading","handleProgress","msg","percentageFloat","percentage","floor","initWebsocket","callBackObjects","registerWebSocketCallbacks","subscribeUrl","handleWsUpdate","setMainApp","incrementLoadings","decrementLoadings","yesCallback","noCallback","dismissAlert","link","querySelector","createElement","setAttribute","head","appendChild","updateFavicon","Loading","text","loggedIn","actions","Root","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.246e1d40.chunk.js","sourcesContent":["\nexport   enum AuthorityType{\n    \n    admin_asrama = \"admin_asrama\",\n    musyrif_asrama = \"musyrif_asrama\",\n    user = \"user\"\n}\n","import * as types from './types'\r\n\r\nexport const initState = { \r\n    mainApp: undefined\r\n\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case types.SET_MAIN_APP:\r\n              \r\n            return { ...state, mainApp: action.payload }; \r\n       \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","/**\r\n * \r\n */\r\n \r\nexport const REMOVE_SHOP_ENTITY= \"remove_shop_entity\"; \r\nexport const FETCH_PRODUCT_CATEGORIES_ALL = \"all_product_categories\";\r\nexport const DO_LOGIN = \"do_login\";\r\nexport const DO_LOGOUT = \"do_logout\";    \r\nexport const SET_REQUEST_ID = \"SET_REQUEST_ID\"; \r\nexport const STORE_MESSAGE = \"store_message\";\r\nexport const GET_ENTITY_PROPERTY = \"get_entity_config\";\r\nexport const GET_MANAGEMENT_MENUS = \"GET_MANAGEMENT_MENUS\";\r\nexport const GET_MESSAGE = \"GET_MESSAGE\";\r\nexport const SET_MAIN_APP = \"SET_MAIN_APP\"; \r\nexport const GET_ENTITY_BY_ID = \"get_entity_by_id\";\r\nexport const UPDATE_ENTITY = \"update_entity\"; \r\nexport const REFRESH_LOGIN = \"refresh_login\";\r\nexport const GET_LOGGED_USER = \"get_logged_user\";\r\nexport const SET_LOGGED_USER = \"set_logged_user\";\r\nexport const SET_APPLICATION_PROFILE = \"SET_APPLICATION_PROFILE\";","\nexport default class BaseEntity{\n\tid?:any; \n\t \n\n}\n","let index = 1;\r\nexport const uniqueId = function () {\r\n\tlet string = new String(new Date().getUTCMilliseconds()).toString();\r\n\tindex++;\r\n\treturn index + \"-\" + string;\r\n}\r\n\r\nexport function beautifyNominal(val:any) {\r\n\tif (val == \"\" || val == null) return \"0\";\r\n\tconst isDecimal:boolean = new String(val).includes(\".\");\r\n\tconst isNegative:boolean = new String(val).startsWith(\"-\");\r\n\tif (isNegative) {\r\n\t\tval = new String(val).replace(\"-\",\"\");\r\n\t}\r\n\tconst rawVal = isDecimal? parseInt( new String(val).split(\".\")[0]) : parseInt(val);\r\n\tlet nominal = Math.abs(rawVal).toString();\r\n\tlet result = \"\";\r\n\tif (nominal.length > 3) { \r\n\t\tlet zeroIndex: number = 0;\r\n\t\tfor (let i = nominal.length - 1; i > 0; i--) {\r\n\t\t\tzeroIndex++; \r\n\t\t\tresult = nominal[i] + result;\r\n\t\t\tif (zeroIndex == 3 ) {\r\n\t\t\t\tresult = \".\" + result;\r\n\t\t\t\tzeroIndex = 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tresult = nominal[0] + result;\r\n\t} else {\r\n\t\tresult = val;\r\n\t}\r\n\tif (rawVal < 0) {\r\n\t\treturn rawVal;\r\n\t}\r\n\tif (isDecimal) {\r\n\t\tresult+= \",\"+ new String(val).split(\".\")[1];\r\n\t}\r\n\tif (isNegative) {\r\n\t\tresult = \"-\"+result;\r\n\t}\r\n\treturn result;\r\n}\r\n \r\n\r\nconst months = [\r\n\t\"Januari\", \"Ferbuari\", \"Maret\", \"April\", \"Mei\", \"Juni\",\r\n\t\"Juli\", \"Agustus\", \"September\", \"Oktober\", \"November\", \"Desember\"\r\n]\r\n\r\nexport const monthName = (index:number) => {\r\n\treturn months[index];\r\n}\r\n\r\nexport const monthYearString = function (m, y) {\r\n\tif (m == null || y == null) {\r\n\t\treturn \"-\";\r\n\t}\r\n\treturn months[m - 1] + \" \" + y;\r\n}\r\nexport const twoDigits = (value:number) :string => {\r\n    if (value >= 10) {\r\n        return   value.toString();\r\n    }\r\n    return \"0\"+value;\r\n}","import { AuthorityType } from './AuthorityType';\nimport BaseEntity from './BaseEntity';\n\nexport default class User extends BaseEntity{\n\tstatic clone(user: User): User {\n\t\t return Object.assign(new User(), user);\n\t}\n    hasRole(role: AuthorityType): boolean {\n        for (let i = 0; i < this.roles.length; i++) {\n\t\t\tconst element = this.roles[i];\n\t\t\tif (element == role) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n    }\n\tnickname?:string;\n\tname?:string;\n\temail?:string;\n\tpassword?:string;\n\tprofileImage?:string;\n\troles:AuthorityType[] = [AuthorityType.user];\n\trequestId?:string; \n\tnip?:string;\n\n}\n","import BaseEntity from '../BaseEntity'; \nimport { uniqueId } from '../../utils/StringUtil';\nimport { AuthorityType } from '../AuthorityType';\nimport User from './../User';\n\nexport default class Menu extends BaseEntity{\n\tstatic defaultMenuIconClassName:string = \"fas fa-folder\";\n\n\tcode:string = uniqueId();\n\tname?:string;\n\tdescription?:string;\n\turl?:string;\n\tpathVariables?:string; \n\ticonUrl?:string;\n\tcolor?:string;\n\tfontColor?:string;\n\trole:AuthorityType[] = [];\n\n\t//\n\tactive?:boolean = false;\n\tmenuClass?:string = \"fas fa-folder\";\n\tauthenticated?:boolean = false;\n\tshowSidebar?:boolean  = false;\n\tsubMenus?:Menu[] = undefined;\n\n\tstatic getIconClassName = (menu:Menu) => {\n\t\tif (undefined == menu.menuClass) {\n\t\t\treturn Menu.defaultMenuIconClassName;\n\t\t}\n\t\treturn menu.menuClass;\n\t}\n\n\tuserAuthorized? = (user?:User) : boolean => {\n\t\tif (this.role.length == 0) return true;\n\t\tif (!user) return false;\n\t\tuser = User.clone(user);\n\t\tfor (let i = 0; i < this.role.length; i++) {\n\t\t\tconst element = this.role[i];\n\t\t\tif (user.hasRole(element)){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n","\r\nimport { AuthorityType } from '../models/AuthorityType';\r\nimport Menu from '../models/settings/Menu';\r\n \r\n\r\nexport const getMenus = () => {\r\n    let menuSet: Menu[] = [];\r\n    for (let i = 0; i < _menus.length; i++) {\r\n        const element: Menu = _menus[i];\r\n        const menu:Menu = Object.assign(new Menu, element);\r\n        const subMenus:Menu[] = [];\r\n        if (element.subMenus) {\r\n            for (let i = 0; i < element.subMenus.length; i++) {\r\n                const subMenu = element.subMenus[i];\r\n                subMenus.push(Object.assign(new Menu, subMenu));\r\n            }\r\n            menu.subMenus = subMenus;\r\n        }\r\n        menuSet.push(menu);\r\n    }\r\n    \r\n    return menuSet;\r\n}\r\nexport const extractMenuPath = (pathName: string) => {\r\n    const pathRaw = pathName.split('/');\r\n   \r\n    let firstPath = pathRaw[0];\r\n    if (firstPath.trim() == \"\") {\r\n        firstPath = pathRaw[1];\r\n    }\r\n    return firstPath;\r\n}\r\nexport const getMenuByMenuPath = (pathName: string): Menu | null => {\r\n    const menus = getMenus();\r\n    try {\r\n        for (let i = 0; i < menus.length; i++) {\r\n            const menu: Menu = menus[i];\r\n            if (menu.url == \"/\" + pathName) {\r\n                return menu;\r\n            }\r\n        }\r\n        return null;\r\n    } catch (error) {\r\n        return null;\r\n    }\r\n}\r\n\r\nconst _menus: Menu[] = [\r\n    {\r\n        code: 'home',\r\n        name: \"Home\",\r\n        url: \"/home\",\r\n        menuClass: \"fa fa-home\",\r\n        active: false,\r\n        authenticated: false,\r\n        showSidebar: false,\r\n        role : []\r\n    },\r\n    \r\n    {\r\n        code: 'dashboard',\r\n        name: \"Dashboard\",\r\n        url: \"/dashboard\",\r\n        menuClass: \"fas fa-tachometer-alt\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true,\r\n        role: [AuthorityType.admin_asrama, AuthorityType.musyrif_asrama],\r\n        subMenus: [\r\n            {\r\n                code: 'followup',\r\n                name: 'Follow Up',\r\n                url: 'followup',\r\n                menuClass: 'fas fa-history',\r\n                role: [ AuthorityType.musyrif_asrama],\r\n            },\r\n            // {\r\n            //     code: 'dashboard_productsales',\r\n            //     name: 'Product Sales',\r\n            //     url: 'productsales',\r\n            //     menuClass: 'fas fa-chart-line',\r\n            //     role: [],\r\n            // }\r\n        ]\r\n    }, \r\n    {\r\n        code: 'management',\r\n        name: \"Manajemen\",\r\n        url: \"/management\",\r\n        menuClass: \"fas fa-mail-bulk\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true,\r\n        role: [AuthorityType.admin_asrama, AuthorityType.musyrif_asrama],\r\n        subMenus: [\r\n            {\r\n                code: 'musyrifmanagement',\r\n                name: 'Musyrif',\r\n                url: 'musyrifmanagement',\r\n                menuClass: 'fas fa-users',\r\n                role: [AuthorityType.admin_asrama],\r\n            },\r\n            {\r\n                code: 'rule_category',\r\n                name: 'Kategori Pelanggaran',\r\n                url: 'rule_category',\r\n                menuClass: 'fas fa-tags',\r\n                role: [AuthorityType.admin_asrama],\r\n            },\r\n            {\r\n                code: 'rule_point',\r\n                name: 'Poin Pelanggaran',\r\n                url: 'rule_point',\r\n                menuClass: 'fas fa-puzzle-piece',\r\n                role: [AuthorityType.admin_asrama],\r\n            }, \r\n            {\r\n                code: 'warning_action',\r\n                name: 'Peringatan',\r\n                url: 'warning_action',\r\n                menuClass: 'fas fa-exclamation-triangle',\r\n                role: [AuthorityType.admin_asrama, AuthorityType.musyrif_asrama],\r\n            }, \r\n        ]\r\n    }, \r\n    {\r\n        code: 'dormitoryactivity',\r\n        name: \"Asrama\",\r\n        url: \"/dormitoryactivity\",\r\n        menuClass: \"fas fa-school\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true,\r\n        role: [  AuthorityType.musyrif_asrama, AuthorityType.admin_asrama],\r\n        subMenus: [\r\n            {\r\n                code: 'studentlist',\r\n                name: 'Siswa',\r\n                url: 'studentlist',\r\n                menuClass: 'fas fa-users',\r\n                role: [ AuthorityType.musyrif_asrama],\r\n            },\r\n            {\r\n                code: 'input_point',\r\n                name: 'Form Pelanggaran Tipe 1',\r\n                url: 'inputpoint',\r\n                menuClass: 'fas fa-edit',\r\n                role: [ AuthorityType.musyrif_asrama],\r\n            }, \r\n            {\r\n                code: 'pointrecordedit',\r\n                name: 'Form Pelanggaran Tipe 2',\r\n                url: 'pointrecordedit',\r\n                menuClass: 'fas fa-edit',\r\n                role: [ AuthorityType.musyrif_asrama],\r\n            },\r\n            // {\r\n            //     code: 'medicalrecord',\r\n            //     name: 'Medical Record',\r\n            //     url: 'medicalrecord',\r\n            //     menuClass: 'fas fa-briefcase-medical',\r\n            //     role: [ AuthorityType.musyrif_asrama],\r\n            // },\r\n            {\r\n                code: 'pointsummary',\r\n                name: 'Rekap Pelanggaran',\r\n                url: 'pointsummary',\r\n                menuClass: 'fas fa-clipboard',\r\n                role: [ AuthorityType.musyrif_asrama, AuthorityType.admin_asrama],\r\n            },\r\n           \r\n            \r\n        ]\r\n    }, \r\n    {\r\n        code: 'settings',\r\n        name: \"Setting\",\r\n        url: \"/settings\",\r\n        menuClass: \"fas fa-cogs\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true,\r\n        role: [  AuthorityType.admin_asrama],\r\n        subMenus: [\r\n            {\r\n                code: 'config',\r\n                name: 'Konfigurasi',\r\n                url: 'config',\r\n                menuClass: 'fas fa-cog',\r\n                role: [ AuthorityType.admin_asrama],\r\n            },\r\n        ]\r\n    }\r\n    \r\n];\r\n","import * as types from './types'\r\nimport * as menuData from '../constant/Menus' \r\nimport { setLoginKeyCookie } from './../middlewares/Common';\r\n\r\nexport const initState = {\r\n    loginKey: null,\r\n    loginStatus: false,\r\n    loginFailed: false,\r\n    menus: menuData.getMenus(),\r\n    loggedUser: null,\r\n    loginAttempt: false,\r\n    requestId: null,\r\n    applicationProfile: {},\r\n    assetsPath: \"\"\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    \r\n    let result = {};\r\n    switch (action.type) { \r\n        case types.SET_REQUEST_ID:\r\n            \r\n            result = {\r\n                ...state, requestId: action.payload.message,\r\n                applicationProfile: action.payload.profile ?? {},\r\n                assetsPath: action.payload.profile.assetsPath\r\n            };\r\n            \r\n            if (action.payload.loginStatus == true) {\r\n                result.loggedUser = action.payload.user;\r\n                result.loginStatus = true;\r\n            } else {\r\n                result.loginStatus = false;\r\n                result.loggedUser = null;\r\n            }\r\n            // console.debug(\"result\");\r\n            // console.debug(\"action.payload.requestId: \",action.payload.message); \r\n            // console.debug(\"REQUEST_ID result.loginStatus:\", result.loginStatus)\r\n            action.payload.referer.refresh();\r\n\r\n            return result;\r\n        case types.DO_LOGIN:\r\n            result = {\r\n                ...state,\r\n                loginAttempt: true,\r\n                loginStatus: action.payload.loginStatus,\r\n                loginKey: action.payload.loginKey,\r\n                loginFailed: action.payload.loginStatus == false,\r\n                loggedUser: action.payload.loggedUser\r\n            };\r\n            return result;\r\n        case types.DO_LOGOUT:\r\n            result = {\r\n                ...state,\r\n                loginStatus: false,\r\n                loggedUser: null\r\n            };\r\n            setLoginKeyCookie(null);\r\n            return result;\r\n        case types.REFRESH_LOGIN:\r\n            result = {\r\n                ...state,\r\n                loginStatus: action.payload.loginStatus,\r\n                loggedUser: action.payload.loggedUser,\r\n                requestId: action.payload.requestId,\r\n            };\r\n            return result;\r\n        case types.GET_LOGGED_USER:\r\n            result = {\r\n                ...state, loggedUser: action.payload.data\r\n            };\r\n            return result;\r\n        case types.SET_LOGGED_USER:\r\n            result = {\r\n                ...state, loggedUser: action.payload.user\r\n            };\r\n            return result;\r\n        case types.SET_APPLICATION_PROFILE:\r\n            result = {\r\n                ...state, applicationProfile: action.payload.applicationProfile\r\n            };\r\n            return result;\r\n        default:\r\n            return { ...state };\r\n\r\n    }\r\n}\r\n\r\nexport default reducer;","export default class AttachmentInfo {\r\n    setUrl(arg0: string) {\r\n        this.url = arg0;\r\n        this.data = arg0.split(\",\")[1];\r\n    }\r\n    static nameOnly(name: any): AttachmentInfo {\r\n        const info = new AttachmentInfo();\r\n        info.name = name;\r\n        return info;\r\n    }\r\n    static instance(name: any, url:string): AttachmentInfo {\r\n        const info = new AttachmentInfo();\r\n        info.name = name;\r\n        info.url = url;\r\n        return info;\r\n    }\r\n    name: string = \"\";\r\n    blob: Blob = new Blob();\r\n    url: string = \"\";\r\n    data: string = \"\";\r\n}","\r\nimport { commonAuthorizedHeader, commonHeader } from '../middlewares/Common';\r\nimport WebResponse from '../models/commons/WebResponse';\r\nimport { updateAccessToken } from './../middlewares/Common';\r\nimport AttachmentInfo from '../models/settings/AttachmentInfo';\r\n\r\nconst axios = require('axios');\r\n\r\nexport const rejectedPromise = (message: any) => {\r\n    return new Promise((res, rej) => {\r\n        rej(message);\r\n    });\r\n}\r\n\r\nexport const emptyPromise = (defaultResponse: any) => new Promise(function (res, rej) {\r\n    res(defaultResponse);\r\n});\r\n\r\nexport const commonAjaxPostCalls = (endpoint: string, payload?: any) => {\r\n    const request = payload == null ? {} : payload;\r\n    return new Promise<WebResponse>(function (resolve, reject) {\r\n        axios.post(endpoint, request, {\r\n            headers: commonAuthorizedHeader()\r\n        })\r\n            .then(axiosResponse => {\r\n                updateAccessToken(axiosResponse);\r\n                const response: WebResponse = axiosResponse.data;\r\n                response.rawAxiosResponse = axiosResponse;\r\n                if (response.code == \"00\") {\r\n\r\n                    resolve(response);\r\n                }\r\n                else { reject(response); }\r\n            })\r\n            .catch((e: any) => { \r\n                \r\n                console.error(e); \r\n                reject(e); \r\n            });\r\n    })\r\n}\r\n\r\n\r\nexport const commonAjaxPublicPostCalls = (endpoint: string, payload?: any) => {\r\n    const request = payload == null ? {} : payload;\r\n    return new Promise<WebResponse>(function (resolve, reject) {\r\n        axios.post(endpoint, request, {\r\n            headers: commonHeader()\r\n        })\r\n            .then(axiosResponse => {\r\n                \r\n                const response: WebResponse = axiosResponse.data;\r\n                response.rawAxiosResponse = axiosResponse;\r\n                if (response.code == \"00\") {\r\n                    resolve(response);\r\n                }\r\n                else { reject(response); }\r\n            })\r\n            .catch((e: any) => { \r\n                \r\n                console.error(e); \r\n                reject(e); \r\n            });\r\n    })\r\n}\r\n\r\nexport const commonAjaxPostCallsWithBlob = (endpoint: string, payload?: any) => {\r\n    const request = payload == null ? {} : payload;\r\n    return new Promise<AttachmentInfo>(function (resolve, reject) {\r\n        axios.post(endpoint, request, {\r\n            responseType: 'blob' ,\r\n            headers: commonAuthorizedHeader()\r\n        })\r\n            .then(axiosResponse => {\r\n                updateAccessToken(axiosResponse);\r\n                \r\n                const response: any = axiosResponse.data;\r\n                response.rawAxiosResponse = axiosResponse;\r\n                console.debug(\"axiosResponse.headers: \", axiosResponse.headers);\r\n                let contentDisposition = axiosResponse.headers[\"content-disposition\"];\r\n                let fileName = contentDisposition.split(\"filename=\")[1];\r\n                let rawSplit = fileName.split(\".\");\r\n                let extension = rawSplit[rawSplit.length - 1];\r\n                let blob = new Blob([response], { type: extension });\r\n                let url = window.URL.createObjectURL(blob);\r\n                // let a = document.createElement(\"a\");\r\n\r\n                // document.body.appendChild(a);\r\n\r\n                // a.href = url;\r\n                // a.style.display = 'none';\r\n                // a.download = fileName;\r\n                // a.click();\r\n\r\n                // window.URL.revokeObjectURL(url);\r\n                const attachmentInfo:AttachmentInfo = new AttachmentInfo();\r\n                attachmentInfo.name = fileName;\r\n                attachmentInfo.blob = blob;\r\n                attachmentInfo.url = url;\r\n                resolve(attachmentInfo);\r\n                \r\n            })\r\n            .catch((e: any) => { console.error(e); reject(e); });\r\n    })\r\n}","\r\nimport Filter from '../models/commons/Filter';\r\nimport WebRequest from '../models/commons/WebRequest';\r\nimport { contextPath } from './../constant/Url';\r\nimport { commonAjaxPostCalls, commonAjaxPostCallsWithBlob } from './Promises';\r\nimport ApplicationProfile from './../models/ApplicationProfile';\r\n\r\nexport default class MasterDataService { \r\n    private static instance?: MasterDataService;\r\n\r\n    static getInstance(): MasterDataService {\r\n        if (this.instance == null) {\r\n            this.instance = new MasterDataService();\r\n        }\r\n        return this.instance;\r\n    }\r\n    /**\r\n     * Get one by ID\r\n     * @param request \r\n     */\r\n    getOne = (request:WebRequest) => {\r\n        const endpoint: string = contextPath().concat(\"api/masterdata/getbyid\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    delete = (request:WebRequest) => {\r\n        const endpoint: string = contextPath().concat(\"api/masterdata/delete\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    list = (request: WebRequest)  => {\r\n        const endpoint: string = contextPath().concat(\"api/masterdata/list\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n\r\n    }\r\n\r\n    update = (request: WebRequest) => {\r\n        const endpoint: string = contextPath().concat(\"api/masterdata/update\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n   \r\n    updateApplicationProfile = (applicationProfile: ApplicationProfile) => {\r\n        const request: WebRequest = {\r\n            profile: applicationProfile\r\n        }\r\n        const endpoint = contextPath().concat(\"api/app/setting/updateprofile\");\r\n        return commonAjaxPostCalls(endpoint, request)\r\n    }\r\n\r\n    generateReport(request: WebRequest) {\r\n        const endpoint: string = contextPath().concat(\"api/app/report/records\");\r\n        return commonAjaxPostCallsWithBlob(endpoint, request);\r\n\r\n    }\r\n}","\r\nimport User from './../models/User';\r\nimport WebRequest from '../models/commons/WebRequest';\r\nimport { contextPath } from './../constant/Url';\r\nimport { commonAjaxPostCalls, commonAjaxPublicPostCalls } from './Promises';\r\nimport WebResponse from '../models/commons/WebResponse';\r\nimport { updateAccessToken } from './../middlewares/Common';\r\nexport default class UserService {\r\n    private static instance?: UserService;\r\n\r\n    static getInstance(): UserService {\r\n        if (this.instance == null) {\r\n            this.instance = new UserService();\r\n        }\r\n        return this.instance;\r\n    }\r\n    updateProfile = (user: User) => {\r\n\r\n        const request: WebRequest = {\r\n            user: user\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/member/account/updateprofile\")\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    saveUser = (user: User) => {\r\n\r\n        const request: WebRequest = {\r\n            user: user\r\n        } \r\n        const endpoint = contextPath().concat(\"api/public/register\")\r\n        return commonAjaxPublicPostCalls(endpoint, request);\r\n    }\r\n    requestApplicationId = (callbackSuccess: (response: WebResponse) => any, callbackError: ()=>any) => {\r\n        const url = contextPath() + \"api/accountdashboard/requestid\";\r\n        commonAjaxPostCalls(url, {}).then(data => {\r\n            if (data.code != \"00\") {\r\n                alert(\"Error requesting app ID\");\r\n                return;\r\n            }\r\n            const response = data.rawAxiosResponse;\r\n            updateAccessToken(response);\r\n            console.debug(\"response header:\", response.headers['api_token']);\r\n            callbackSuccess(data);\r\n        }).catch(e => {\r\n            console.error(\"ERROR requestApplicationId: \", e);\r\n            callbackError();\r\n        })\r\n\r\n    }\r\n    requestApplicationIdNoAuth = (callbackSuccess: (response:WebResponse)=>any, callbackError: ()=>any) => {\r\n        const url =   contextPath() + \"api/account/requestid\";\r\n        commonAjaxPublicPostCalls(url, {}).then(data => {\r\n          if (data.code != \"00\") {\r\n              alert(\"Error requesting app ID\");\r\n              return;\r\n          } \r\n          callbackSuccess(data);\r\n      }).catch(e=>{\r\n          console.error(\"ERROR requestApplicationId No Auth: \", e);\r\n        //   alert(\"Error, please reload OR try again\");\r\n            callbackError();\r\n      })\r\n          \r\n      }\r\n\r\n}","\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport { contextPath } from './../constant/Url';\r\nimport Filter from '../models/commons/Filter';\r\nimport Employee from '../models/Employee';\r\nimport WebRequest from '../models/commons/WebRequest';\r\nexport default class MusyrifManagementService {\r\n\r\n    private static instance?: MusyrifManagementService;\r\n\r\n    static getInstance(): MusyrifManagementService {\r\n        if (this.instance == null) {\r\n            this.instance = new MusyrifManagementService();\r\n        }\r\n        return this.instance;\r\n    }\r\n    public employeeList(filter: Filter) {\r\n        return commonAjaxPostCalls(contextPath() + \"/api/musyrifmanagement/employees\", {\r\n            filter: filter\r\n        });\r\n    }\r\n    activate(emp: Employee, active: boolean) {\r\n        const request:WebRequest = {\r\n            employee_id : emp.id,\r\n            active : active,\r\n        }\r\n        return commonAjaxPostCalls(contextPath() + \"/api/musyrifmanagement/activate\", request);\r\n    }\r\n}","import { commonAjaxPostCalls } from './Promises';\r\nimport { contextPath } from '../constant/Url';\r\nimport PointRecord from './../models/PointRecord';\r\nimport AttachmentInfo from './../models/settings/AttachmentInfo';\r\nimport WebRequest from './../models/commons/WebRequest';\r\nimport MedicalRecord from './../models/MedicalRecord';\r\nimport WebResponse from '../models/commons/WebResponse';\r\nexport default class StudentService {\r\n   \r\n\r\n    private static instance?: StudentService;\r\n\r\n    static getInstance(): StudentService {\r\n        if (this.instance == null) {\r\n            this.instance = new StudentService();\r\n        }\r\n        return this.instance;\r\n    }\r\n    public submitPointRecord(pointRecord: PointRecord, attachmentInfo?:AttachmentInfo|undefined) {\r\n        if (attachmentInfo) {\r\n            attachmentInfo.data = \"\";\r\n        }\r\n        const req:WebRequest = {\r\n            pointRecord: pointRecord,\r\n            attachmentInfo: attachmentInfo\r\n        }\r\n        return commonAjaxPostCalls(contextPath() + \"api/dormitorymanagement/submitpointrecord\", req);\r\n    }\r\n    public getClasses() :Promise<WebResponse> {\r\n        return commonAjaxPostCalls(contextPath() + \"api/dormitorymanagement/classes\", {});\r\n    }\r\n    public getCategories() :Promise<WebResponse> {\r\n        return commonAjaxPostCalls(contextPath() + \"api/dormitorymanagement/rulecategories\", {});\r\n    }\r\n    public followUp = (pointRecordId:number):Promise<WebResponse> => {\r\n        return commonAjaxPostCalls(contextPath() + \"api/dormitorymanagement/followup\", {\r\n            record_id:pointRecordId\r\n        });\r\n    }\r\n    public getFollowUpReminders = ():Promise<WebResponse> => {\r\n        return commonAjaxPostCalls(contextPath() + \"api/dormitorymanagement/followupreminders\", {});\r\n    }\r\n    \r\n\r\n    public submitMedicalRecord = (record:MedicalRecord) => {\r\n        const req:WebRequest = {\r\n            medicalRecord: record\r\n        }\r\n        return commonAjaxPostCalls(contextPath() + \"api/dormitorymanagement/submitmedicalrecord\", req)\r\n    }\r\n    public loadMonthlyMedicalRecord = (studentId:number, month:number, year:number) => {\r\n        const req:WebRequest = {\r\n            filter: {\r\n                year:year, month:month,\r\n                fieldsFilter: {student_id:studentId}\r\n            }\r\n        }\r\n        return commonAjaxPostCalls(contextPath() + \"api/dormitorymanagement/monthlymedicalrecord\", req)\r\n    }\r\n\r\n    public setPointDropped = (id: number, dropped: boolean) => {\r\n        return commonAjaxPostCalls(contextPath() + \"api/dormitorymanagement/droppoint\", { \r\n            pointRecord : {\r\n                id: id,\r\n                dropped_at: dropped?new Date():null\r\n            }\r\n        });\r\n    }\r\n     \r\n}","\nimport { contextPath } from './../constant/Url';\nimport { commonAjaxPostCalls } from './Promises';\nimport ApplicationProfile from './../models/ApplicationProfile';\nexport default class ConfigurationService { \n    private static instance?: ConfigurationService;\n    static getInstance(): ConfigurationService {\n        if (this.instance == null) {\n            this.instance = new ConfigurationService();\n        }\n        return this.instance;\n    }\n    update = (appProfile:ApplicationProfile) => {\n        const endpoint: string = contextPath().concat(\"api/setting/updateconfig\");\n        return commonAjaxPostCalls(endpoint, {applicationProfile: appProfile });\n    }\n}","\r\nimport MasterDataService from '../services/MasterDataService';\r\nimport UserService from '../services/UserService';\r\n\r\nimport Services from './../services/Services';\r\nimport MusyrifManagementService from './../services/MusyrifManagementService';\r\nimport StudentService from '../services/StudentService';\r\nimport ConfigurationService from '../services/ConfigurationService';\r\n\r\nexport const initState: { services: Services } = {\r\n    services: {\r\n        userService: UserService.getInstance(), \r\n        masterDataService: MasterDataService.getInstance(),\r\n        musyrifManagementService: MusyrifManagementService.getInstance(),\r\n        studentService: StudentService.getInstance(),\r\n        configurationService: ConfigurationService.getInstance()\r\n    }\r\n\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default reducer;","import * as appReducer from \"./appReducer\"\r\nimport * as userReducer from \"./userReducer\" \r\nimport  * as servicesReducers from './servicesReducer';\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport const rootReducer = combineReducers(\r\n    {\r\n        appState: appReducer.reducer,\r\n        userState: userReducer.reducer, \r\n        servicesState: servicesReducers.reducer\r\n    }\r\n);\r\n\r\nexport const initialState = {\r\n    appState: appReducer.initState,\r\n    userState: userReducer.initState, \r\n    servicesState: servicesReducers.initState\r\n}\r\n\r\nexport default rootReducer;","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\nconst axios = require('axios');\r\nexport const performLoginMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGIN) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n    axios.post(action.meta.url, 'email='+action.meta.email+ '&password='+action.meta.password, {\r\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\r\n    }).then(axiosResponse => {\r\n        const responseJson = axiosResponse.data;\r\n        let loginKey: string = \"\";\r\n        let loginSuccess: boolean = false;\r\n       \r\n        if (responseJson.code != null && responseJson.code == \"00\") {\r\n            loginKey = axiosResponse.headers['api_token'];\r\n            // console.log(\"api_token: \", loginKey);\r\n            loginSuccess = true;\r\n        } else {\r\n        }\r\n        let newAction = Object.assign({}, action, {\r\n            payload: {\r\n                loginStatus: loginSuccess,\r\n                loginKey: loginKey,\r\n                loggedUser: responseJson.user\r\n            }\r\n        });\r\n        common.updateAccessToken(axiosResponse);\r\n        delete newAction.meta;\r\n        store.dispatch(newAction);\r\n    })\r\n        .catch(console.log)\r\n        .finally(() => { app.endLoading(); });\r\n\r\n}\r\n \r\n\r\nexport const getLoggedUserMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_LOGGED_USER) { return next(action); }\r\n\r\n    let headers = common.commonAuthorizedHeader();\r\n\r\n    axios.post(action.meta.url, (action.payload), {\r\n        headers: headers\r\n    }).then(response => {\r\n        const data = response.data;\r\n\r\n        if (!data) {\r\n            alert(\"Error performing request\");\r\n            return;\r\n        }\r\n\r\n        let newAction = Object.assign({}, action, { payload: { data } });\r\n        delete newAction.meta;\r\n        store.dispatch(newAction);\r\n    })\r\n        .catch(console.log).finally(param => {\r\n            action.meta.app.endLoading();\r\n            action.meta.app.refresh();\r\n        });\r\n}\r\n\r\n\r\nexport const performLogoutMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGOUT) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n\r\n    axios.post(action.meta.url, (action.payload), {\r\n        headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => {\r\n            const responseJson = response.data;\r\n            let logoutSuccess = false;\r\n            if (responseJson.code == \"00\") {\r\n                logoutSuccess = true;\r\n            } else {\r\n                alert(\"Logout Failed\");\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    loginStatus: !logoutSuccess\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(console.log).finally(param => app.endLoading());\r\n}\r\n\r\nexport const setLoggedUserMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.SET_LOGGED_USER) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\n\r\nconst POST_METHOD = \"post\"; \r\n\r\nexport const getMessagesMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_MESSAGE) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: common.commonAuthorizedHeader()\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"sendChatMessageMiddleware Response:\", data);\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n \r\nexport const storeChatMessageLocallyMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.STORE_MESSAGE) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n} \r\n\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport { initialState, rootReducer } from './reducers' \r\nimport * as userMiddleware from '../middlewares/UserMiddleware' \r\nimport * as realtimeChatMiddleware from '../middlewares/RealtimeChatMiddleware' \r\n \r\nlet store = null;\r\nexport const getStore = () => {\r\n    return store;\r\n}\r\nexport const configureStore = () => {\r\n    store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        applyMiddleware(   \r\n\r\n            //user related\r\n            userMiddleware.performLoginMiddleware,\r\n            userMiddleware.performLogoutMiddleware,  \r\n            userMiddleware.getLoggedUserMiddleware, \r\n            userMiddleware.setLoggedUserMiddleware,\r\n \r\n\r\n            /*realtime chat*/\r\n            realtimeChatMiddleware.storeChatMessageLocallyMiddleware,\r\n            realtimeChatMiddleware.getMessagesMiddleware,\r\n\r\n        )\r\n    );\r\n\r\n    return store;\r\n}\r\n   \r\n\r\nexport default configureStore;","import {  getStore } from '../redux/configureStore';\r\nexport const commonAuthorizedHeader = () => {\r\n    return {\r\n        'Content-Type': 'application/json',\r\n        'requestId': getRequestId(),//'localStorage.getItem(\"requestId\")',\r\n        'Authorization': 'Bearer '+getLoginKey()\r\n    }\r\n};\r\nexport const commonHeader = () => {\r\n    return {\r\n        'Content-Type': 'application/json',\r\n        'requestId': getRequestId(), \r\n    }\r\n};\r\n\r\nconst LOGIN_KEY:string = \"dormitory-app-login-key-2\";\r\n \r\nexport const getAssetsPath = () :string => {\r\n    const store = getStore(); \r\n    if (null == store) return \"\";\r\n    const state = store.getState();\r\n    return state.userState.assetsPath;\r\n}\r\n\r\nexport const getRequestId = () :string => {\r\n    const store = getStore();\r\n    if (null == store) return \"\";\r\n    const state = store.getState();\r\n    return state.userState.requestId;\r\n}\r\nexport const getLoginKey = () => {\r\n    return getCookie(LOGIN_KEY);\r\n}\r\n\r\nexport const updateAccessToken = (axiosResponse) => {\r\n    if (axiosResponse && axiosResponse.headers && axiosResponse.headers['api_token']) {\r\n        const accessToken = axiosResponse.headers['api_token'];\r\n        // console.debug(\"update access token: \", accessToken);\r\n        setCookie(LOGIN_KEY, accessToken);\r\n    }\r\n} \r\nexport const setLoginKeyCookie = (cookieValue:any) => {\r\n    setCookie(LOGIN_KEY, cookieValue);\r\n}\r\nexport const setCookie = function (cname, cvalue, exdays=1) {\r\n    var d = new Date();\r\n    d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\r\n    var expires = \"expires=\" + d.toUTCString();\r\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n}\r\nexport const getCookie = function (cname) {\r\n    var name = cname + \"=\";\r\n    var decodedCookie = decodeURIComponent(document.cookie);\r\n    var ca = decodedCookie.split(';');\r\n    for (var i = 0; i < ca.length; i++) {\r\n        var c = ca[i];\r\n        while (c.charAt(0) == ' ') {\r\n            c = c.substring(1);\r\n        }\r\n        if (c.indexOf(name) == 0) {\r\n            return c.substring(name.length, c.length);\r\n        }\r\n    }\r\n    return \"\";\r\n}","import { getAssetsPath } from \"../middlewares/Common\";\r\n\r\nconst devMode = \r\n    document.getElementById(\"rootPath\").value == \"${contextPath}\" || \r\n    document.getElementById(\"rootPath\").value == \"\";\r\nconst rootValue = devMode ?\r\n     \"/universal-good-shop/\" : document.getElementById(\"rootPath\").value+\"/\";\r\n\r\nexport const contextPath = function(){\r\n    const contextPath = devMode? \"http://localhost:8080\".concat(rootValue):rootValue;\r\n    //console.debug(\"contextPath: \",contextPath,document.getElementById(\"rootPath\").value);\r\n    return contextPath;\r\n}\r\n\r\n// export const baseImageUrl() = contextPath()+\"assets/images/\"; \r\n// export const baseImageUrl() = \"https://developmentmode.000webhostapp.com/uploaded_storage/\"; \r\n// export const baseImageUrl() = \"http://localhost/storage/images/\"; \r\nexport const baseImageUrl = () => getAssetsPath()+ \"images/\"; \r\nexport const baseDocumentUrl = () => getAssetsPath()+ \"documents/\"; \r\n// export const baseImageUrl() = contextPath()+\"WebAsset/Shop1/Images/\"; \r\n\r\nexport const POST = \"post\";\r\n","import * as types from './types'\r\nimport * as url from '../constant/Url'\r\nimport { contextPath } from '../constant/Url'; \r\nimport User from './../models/User';\r\nimport ApplicationProfile from './../models/ApplicationProfile';\r\nimport WebResponse from '../models/commons/WebResponse';\r\n\r\nconst usedHost = url.contextPath();\r\nconst apiBaseUrl = usedHost + \"api/public/\"\r\nconst apiEntityBaseUrl = usedHost + \"api/app/entity/\"\r\nconst apiAccount = usedHost + \"api/accountdashboard/\"\r\nconst apiAdmin = usedHost + \"api/app/admin/\"    \r\n\r\nexport const getEntityProperty = (entityName, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_PROPERTY,\r\n        payload: {\r\n            entity: entityName\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_PROPERTY,\r\n            url: apiEntityBaseUrl.concat(\"config\"),\r\n            app: app,\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\n\r\nexport const getManagementMenus = (app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_MANAGEMENT_MENUS,\r\n        payload: {},\r\n        meta: {\r\n            type: types.GET_MANAGEMENT_MENUS,\r\n            url: apiEntityBaseUrl.concat(\"managementpages\"),\r\n            app: app,\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n \r\n\r\nexport const setRequestId = (data:WebResponse, app) => {\r\n   \r\n    const ret= {\r\n        type: types.SET_REQUEST_ID,\r\n        payload: { loginStatus: data.loggedIn, referer:app, ...data },\r\n        meta: {\r\n            type: types.SET_REQUEST_ID, \r\n        }\r\n    };\r\n    // console.debug(\"setRequestId: \", ret);\r\n    return ret;\r\n}\r\n\r\nexport const getMessageList = (app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.GET_MESSAGE,\r\n        payload: {},\r\n        meta: {\r\n            type: types.GET_MESSAGE, app: app,\r\n            url: apiAdmin.concat(\"getmessages\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const storeMessageLocally = (messages) => {\r\n\r\n    return {\r\n        type: types.STORE_MESSAGE,\r\n        payload: {\r\n            entities: messages\r\n        },\r\n        meta: {\r\n            type: types.STORE_MESSAGE,\r\n        }\r\n    };\r\n}\r\n    \r\n\r\nexport const performLogout = (app) => {\r\n    app.startLoading();\r\n    let loginRequest = {\r\n        type: types.DO_LOGOUT,\r\n        payload: {},\r\n        meta: { app: app, type: types.DO_LOGOUT, url: apiAccount.concat(\"logout\") }\r\n    };\r\n    return loginRequest;\r\n}\r\n\r\nexport const performLogin = (email, password, app) => {\r\n    app.startLoading();\r\n    let loginRequest = {\r\n        type: types.DO_LOGIN,\r\n        payload: {},\r\n        meta: {\r\n            type: types.DO_LOGIN, \r\n            url: contextPath().concat(\"api/account/login\"),\r\n                email: email, password: password,\r\n                app: app\r\n        }\r\n    };\r\n    return loginRequest;\r\n}\r\n\r\nexport const getLoggedUser = (app) => {\r\n    app.startLoading();\r\n    let request = {\r\n        type: types.GET_LOGGED_USER,\r\n        payload: {},\r\n        meta: { type: types.GET_LOGGED_USER, url: apiAccount.concat(\"user\"), app: app }\r\n    };\r\n    return request;\r\n}\r\n\r\nexport const setLoggedUser = (user: User) => {\r\n\r\n    let request = {\r\n        type: types.SET_LOGGED_USER,\r\n        payload: { user: Object.assign(new User(), user) },\r\n        meta: { type: types.SET_LOGGED_USER }\r\n    };\r\n    return request;\r\n}\r\n\r\nexport const setApplicationProfile = (applicationProfile: ApplicationProfile) => {\r\n\r\n    let request = {\r\n        type: types.SET_APPLICATION_PROFILE,\r\n        payload: { applicationProfile: applicationProfile },\r\n        meta: { type: types.SET_APPLICATION_PROFILE }\r\n    };\r\n    return request;\r\n}\r\n\r\nexport const removeEntity = () => ({\r\n    type: types.REMOVE_SHOP_ENTITY,\r\n    payload: {},\r\n    meta: { type: types.REMOVE_SHOP_ENTITY }\r\n})\r\n\r\n\r\nexport const  setMainApp = (mainApp:any) => ({\r\n    type: types.SET_MAIN_APP,\r\n    payload: mainApp,\r\n    meta: { type: types.SET_MAIN_APP }\r\n})\r\n\r\n","\r\nexport const mapCommonUserStateToProps = (state) => {\r\n    return {\r\n        applicationProfile: state.userState.applicationProfile,\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n        requestId: state.userState.requestId, \r\n        services: state.servicesState.services,\r\n        mainApp: state.appState.mainApp\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport './Loader.css'\r\n\r\nclass Loader extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            timer: 130,\r\n            intervalId: 0\r\n        }\r\n        this.update = () => {\r\n            if (this.state.timer < 0) {\r\n                clearInterval(this.state.intervalId);\r\n            }\r\n            console.log(\"tick\")\r\n            this.setState({ timer: this.state.timer - 1 })\r\n            if (this.state.timer < 0 && this.props.endMessage) {\r\n                this.props.endMessage();\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.withTimer == true) {\r\n            let intervalId = setInterval(this.update, 1, null);\r\n            this.setState({ intervalId: intervalId });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let className = \"message message-\" + this.props.type;\r\n\r\n        if (this.props.realtime == true) {\r\n            return <LoaderContent progress={this.props.progress} realtime={this.props.realtime} />\r\n        }\r\n\r\n        return (\r\n            <div className={className} >\r\n                <LoaderContent progress={this.props.progress} realtime={this.props.realtime} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nfunction LoaderContent(props) {\r\n    if (props.realtime) {\r\n        return (\r\n            <div className=\"row container-fluid bg-light\" style={{margin:0, position: 'fixed', zIndex: 100 }}>\r\n                <div className=\"col-1\">\r\n                <span style={{marginBottom:'3px'}} className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                </div>\r\n                <div className=\"col-11 progress\" style={{padding:0, marginTop: '7px', height:'10px'}}  >\r\n                    <div className=\"bg-primary\" style={{\r\n                        width: props.progress + \"%\",\r\n                        transitionDuration: '50ms',\r\n                        margin: 0,\r\n                    }}>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <button className=\"btn btn-dark \" type=\"button\" disabled>\r\n            <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n            <span className=\" \">Loading...</span>\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Loader;","\r\nimport ApplicationProfile from './../models/ApplicationProfile';\r\nimport { baseImageUrl } from './../constant/Url';\r\nexport const doItLater = (callback:()=>any, intervalMs:number) => {\r\n    const timeout = setTimeout(()=>{\r\n       callback();\r\n        clearTimeout(timeout);\r\n      }, intervalMs)\r\n}\r\n\r\n\r\nexport const  updateFavicon = (profile: ApplicationProfile) => {\r\n    if (profile.pageIcon) {\r\n      let link = document.querySelector('link[rel=\"shortcut icon\"]') ||\r\n        document.querySelector('link[rel=\"icon\"]');\r\n      if (!link) {\r\n        link = document.createElement('link');\r\n        link.id = 'favicon';\r\n        link.setAttribute(\"rel\", 'shortcut icon');\r\n        document.head.appendChild(link);\r\n      }\r\n      link.setAttribute(\"href\", baseImageUrl() + profile.pageIcon);\r\n    }\r\n  }","import React, { Component } from 'react'\r\nimport { doItLater } from './../../utils/EventUtil';\r\nconst initialMargin = '-200px';\r\nconst transitionDuration = '200ms';\r\nclass State {\r\n    backColor  = 'transparent';\r\n    marginTop = initialMargin;\r\n}\r\nclass Alert extends Component  {\r\n    yesButtonRef;\r\n    noButtonRef;\r\n    state  = new State();\r\n    constructor(props) {\r\n        super(props);\r\n        this.yesButtonRef = React.createRef();\r\n        this.noButtonRef = React.createRef();\r\n    }\r\n    onYes = (e) => {\r\n        \r\n        this.close(()=>{\r\n            if (this.props.onYes) {\r\n                this.props.onYes(e);\r\n            }\r\n        });\r\n    }\r\n    close = (callback)=> {\r\n        doItLater(()=>{\r\n            this.setState({backColor:'transparent', marginTop: initialMargin}, ()=>{\r\n                doItLater(callback, 100);\r\n                \r\n            });\r\n        }, 100);\r\n    }\r\n    onNo = (e) => {\r\n        \r\n        this.close(()=>{\r\n            if (this.props.onNo) {\r\n                this.props.onNo(e);\r\n            }\r\n        });\r\n    }\r\n    onClose = (e) => {\r\n       \r\n        this.close(()=>{\r\n            if (this.props.onClose) {\r\n                this.props.onClose(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        const isError = this.props.isError == true;\r\n        if (!isError && this.yesButtonRef.current) {\r\n            this.yesButtonRef.current.focus();\r\n        } else if (isError && this.noButtonRef.current) {\r\n            this.noButtonRef.current.focus();\r\n        } else if (isError && this.yesButtonRef.current) {\r\n            this.yesButtonRef.current.focus();\r\n        }\r\n\r\n        doItLater(()=>{\r\n            this.setState({backColor:'rgba(100,100,100,0.7)', marginTop:'30vh'})\r\n        }, 100);\r\n    }\r\n\r\n    render() {\r\n        const title = this.props.title ? this.props.title : \"Info\";\r\n        const yesOnly = this.props.yesOnly == true;\r\n        const isError = this.props.isError == true;\r\n        const headerClassName = isError ? 'bg-danger' : 'bg-info';\r\n        const headerFontClassName = 'text-light';\r\n        return (\r\n            <>\r\n                <Backdrop bgColor={this.state.backColor} />\r\n                <div className=\"modal show\" style={{ display: 'block' }}  >\r\n                    <div className=\"modal-dialog -modal-dialog-centered\" \r\n                        style={{\r\n                            transitionDuration:  transitionDuration,\r\n                            marginTop: this.state.marginTop\r\n                        }}\r\n                    >\r\n                        <div className=\"modal-content\" style={{marginTop:'5px',}} >\r\n                            <Header fontClassName={headerFontClassName} className={headerClassName} title={title} onClose={this.onClose} />\r\n                            <div className=\"modal-body\" > {this.props.children} </div>\r\n                            <Footer noButtonRef={this.noButtonRef} yesButtonRef={this.yesButtonRef} yesOnly={yesOnly} onYes={this.onYes} onNo={this.onNo} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction Backdrop(props ) {\r\n    return (\r\n        <div className=\"modal-backdrop\" style={{ transitionDuration:transitionDuration, backgroundColor: props.bgColor }\r\n        } > </div>\r\n    );\r\n}\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <div className={\"modal-footer \" + props.className} >\r\n            <button ref={props.yesButtonRef} type=\"button\"\r\n                onClick={props.onYes} className=\"btn btn-outline-primary\" > Yes </button>\r\n            {props.yesOnly ? \r\n                null : \r\n                <button ref={props.noButtonRef} type=\"button\"\r\n                    onClick={props.onNo} className=\"btn btn-outline-secondary\" > No \r\n                </button>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Header(props) {\r\n    return (<div className={\"modal-header \" + props.className} >\r\n        <h5 className={\"modal-title \" + props.fontClassName} id=\"exampleModalCenterTitle\" > {props.title} </h5>\r\n        < button onClick={props.onClose} type=\"button\" className=\"close\" >\r\n            <span aria-hidden=\"true\" className={props.fontClassName} > <i className=\"fas fa-times\" /> </span>\r\n        </button>\r\n    </div>)\r\n}\r\n\r\nexport default Alert;","import BaseEntity from './BaseEntity';\n\nexport default class ApplicationProfile extends BaseEntity{\n\tname?:string;\n\tcode?:string;\n\tdescription?:string;\n\tabout?:string;\n\twelcoming_message?:string;\n\ticonUrl?:string;\n\tpageIcon?:string;\n\tbackgroundUrl?:string;\n\tcolor?:string;\n\tfontColor?:string;\n\tcontact?:string;\n\taddress?:string;\n    warning_point: number|undefined;\n\n}\n","import { doItLater } from './EventUtil';\r\nlet stompClient = undefined;\r\nlet wsConnected = false;\r\nlet websocketUrl = undefined;\r\nconst onConnectCallbacks = new Array();\r\nconst subscriptionCallbacks = new Array();\r\nexport const isWsConnected = () => {\r\n\treturn wsConnected == true;\r\n}\r\nexport const setWebSocketUrl = (url) => {\r\n\twebsocketUrl = url;\r\n}\r\nexport const sendToWebsocket = (url, requestObject) => {\r\n\tif (!wsConnected || !stompClient) {\r\n\t\tconsole.info(\"Connecting\");\r\n\t\treturn false;\r\n\t}\r\n\tconsole.debug(\"SEND WEBSOCKET\")\r\n\tstompClient.send(url, {}, JSON.stringify(requestObject));\r\n\treturn true;\r\n}\r\n\r\nexport const addOnWsConnectCallbacks = (...callbacks) => {\r\n\tfor (let i = 0; i < callbacks.length; i++) {\r\n\t\tconst element = callbacks[i];\r\n\t\tonConnectCallbacks.push(element);\r\n\t}\r\n}\r\n\r\nexport const performWebsocketConnection = () => {\r\n\r\n\treturn;\r\n\tvar socket = new window.SockJS(websocketUrl);\r\n\tstompClient  = window.Stomp.over(socket);\r\n\tstompClient .connect({}, function (frame) {\r\n\t\twsConnected = true;\r\n\t\t// setConnected(true);\r\n\t\tconsole.log('Websocket CONNECTED: ', websocketUrl, 'frame :', frame, stompClient.ws._transport.ws.url);\r\n\t\tconsole.debug(\"subscriptionCallbacks :\", subscriptionCallbacks.length);\r\n\t\t// document.getElementById(\"ws-info\").innerHTML =\r\n\t\t// stompClients.ws._transport.ws.url;\r\n\t\tfor (let i = 0; i < subscriptionCallbacks.length; i++) {\r\n\t\t\tconst callBackObject = subscriptionCallbacks[i];\r\n\r\n\t\t\tif (callBackObject) {\r\n\r\n\t\t\t\tstompClient.subscribe(callBackObject.subscribeUrl, (response) => {\r\n\t\t\t\t\tvar respObject = JSON.parse(response.body);\r\n\t\t\t\t\tcallBackObject.callback(respObject);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < onConnectCallbacks.length; i++) {\r\n\t\t\tconst callback = onConnectCallbacks[i];\r\n\t\t\tcallback(frame);\r\n\t\t}\r\n\r\n\t}, (e) => {\r\n\t\tconsole.warn(\"Error connection websocket, reconnect\");\r\n\t\tdoItLater(performWebsocketConnection, 2000);\r\n\t});\r\n\r\n\t \r\n}\r\n\r\n /**\r\n  * \r\n  * @param  {...WsCallback} callBackObjects \r\n  */\r\nexport const registerWebSocketCallbacks = (...callBackObjects) => {\r\n\r\n\tif (null == callBackObjects) {\r\n\t\treturn;\r\n\t}\r\n\tfor (var i = 0; i < callBackObjects.length; i++) {\r\n\t\tsubscriptionCallbacks.push(callBackObjects[i]);\r\n\t}\r\n}\r\n","import { Component } from 'react';\r\nimport WebResponse from '../models/commons/WebResponse';\r\nimport ApplicationProfile from './../models/ApplicationProfile';\r\nimport User from './../models/User';\r\nimport Services from './../services/Services';\r\nimport { AuthorityType } from '../models/AuthorityType';\r\nimport WebRequest from '../models/commons/WebRequest';\r\nimport { sendToWebsocket } from './../utils/websockets';\r\nimport { doItLater } from './../utils/EventUtil';\r\n\r\nexport default class BaseComponent extends Component<any, any> {\r\n    parentApp: any;\r\n    authenticated: boolean = true;\r\n    state: any = { updated: new Date() };\r\n    constructor(props: any, authenticated = false) {\r\n        super(props);\r\n\r\n        this.authenticated = authenticated\r\n        this.parentApp = props.mainApp;\r\n    }\r\n\r\n    validateLoginStatus = (callback ?:() => any) => {\r\n        if (this.authenticated == false) { \r\n            if (callback) {\r\n                callback();\r\n            }\r\n            return true; }\r\n        if (this.isUserLoggedIn() == false) {\r\n            this.backToLogin();\r\n            return false;\r\n        }\r\n        if (callback) {\r\n            callback();\r\n        }\r\n        return true;\r\n    }\r\n\r\n    protected sendWebSocket = (url: string, payload: WebRequest) => {\r\n        sendToWebsocket(url, payload);\r\n    }\r\n\r\n    protected setWsUpdateHandler = (handler: Function | undefined) => {\r\n        if (this.parentApp) {\r\n            this.parentApp.setWsUpdateHandler(handler);\r\n        }\r\n    }\r\n    protected resetWsUpdateHandler = () => {\r\n        if (this.parentApp) {\r\n            this.parentApp.resetWsUpdateHandler();\r\n        }\r\n    }\r\n\r\n    getApplicationProfile = (): ApplicationProfile => {\r\n        return this.props.applicationProfile == null ? new ApplicationProfile() : this.props.applicationProfile;\r\n    }\r\n\r\n    handleInputChange = (event: any, stateFieldName?:string|undefined) => {\r\n        const target = event.target;\r\n        let value = target.type == 'checkbox' ? target.checked : target.value;\r\n        if (target.type == 'number') {\r\n            value = parseInt(value);\r\n        }\r\n        if (stateFieldName) {\r\n            const el = this.state[stateFieldName];\r\n            el[target.name] = value;\r\n            this.setState({ [stateFieldName]: el});\r\n        } else {\r\n            this.setState({ [target.name]: value });\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n     * @param {boolean} withProgress \r\n     */\r\n    startLoading(withProgress: boolean) {\r\n        this.parentApp.startLoading(withProgress);\r\n    }\r\n\r\n    endLoading() {\r\n        this.parentApp.endLoading();\r\n    }\r\n    /**\r\n     * api response must be instance of WebResponse\r\n     * @param method returning Promise\r\n     * @param withProgress \r\n     * @param successCallback \r\n     * @param errorCallback \r\n     * @param params \r\n     */\r\n    doAjax = (method: Function, withProgress: boolean, successCallback: Function, errorCallback?: Function, ...params: any) => {\r\n        this.startLoading(withProgress);\r\n        \r\n        method(...params).then( (response: WebResponse) => {\r\n            if (successCallback) {\r\n                successCallback(response);\r\n            }\r\n        }).catch( (e) => {\r\n            if (errorCallback) {\r\n                errorCallback(e);\r\n            } else {\r\n                if (typeof (e) == 'string') {\r\n                    alert(\"Operation Failed: \" + e);\r\n                }\r\n                alert(\"resource not found\");\r\n            }\r\n        }).finally(() => {\r\n            this.endLoading();\r\n        })\r\n    }\r\n\r\n    commonAjax = (method: Function, successCallback: Function, errorCallback: Function, ...params: any) => {\r\n        this.doAjax(method, false, successCallback, errorCallback, ...params);\r\n    }\r\n    commonAjaxWithProgress = (method: Function, successCallback: Function, errorCallback: Function, ...params: any) => {\r\n        this.doAjax(method, true, successCallback, errorCallback, ...params);\r\n    }\r\n    getLoggedUser = (): User | undefined => {\r\n        const user: User | undefined = this.props.loggedUser;\r\n        if (!user) return undefined;\r\n        user.password = \"^_^\";\r\n        return Object.assign(new User(), user);\r\n    }\r\n    isAdmin = (): boolean => {\r\n        const user = this.getLoggedUser();\r\n        if (!user) return false;\r\n        return user.hasRole(AuthorityType.admin_asrama);\r\n    }\r\n    scrollTop = () => {\r\n        // console.info(\"SCROLL TOP\");\r\n        const opt:ScrollToOptions = { top:0,  behavior: 'smooth' };\r\n        doItLater(()=>{\r\n        window.scrollTo(opt);\r\n        }, 100);\r\n    }\r\n    isUserLoggedIn = (): boolean => {\r\n        const loggedIn = true == this.props.loginStatus && null != this.props.loggedUser;\r\n        return loggedIn;\r\n    }\r\n    showConfirmation = (body: any): Promise<boolean> => {\r\n        const app = this;\r\n        return new Promise(function (resolve, reject) {\r\n            const onYes = function (e) {\r\n                resolve(true);\r\n            }\r\n            const onNo = function (e) {\r\n                resolve(false);\r\n            }\r\n            app.parentApp.showAlert(\"Konfirmasi\", body, false, onYes, onNo);\r\n        });\r\n\r\n    }\r\n    showConfirmationDanger = (body: any): Promise<any> => {\r\n        const app = this;\r\n        return new Promise(function (resolve, reject) {\r\n            const onYes = function (e) {\r\n                resolve(true);\r\n            }\r\n            const onNo = function (e) {\r\n                resolve(false);\r\n            }\r\n            app.parentApp.showAlertError(\"Konfirmasi\", body, false, onYes, onNo);\r\n        });\r\n\r\n    }\r\n    showInfo = (body: any) => {\r\n        this.parentApp.showAlert(\"Info\", body, true, function () { });\r\n    }\r\n    showError = (body: any) => {\r\n        this.parentApp.showAlertError(\"Error\", body, true, function () { });\r\n    }\r\n\r\n    backToLogin() {\r\n        if (!this.authenticated || this.props.history == null) {\r\n            return;\r\n        }\r\n        this.props.history.push(\"/login\");\r\n    }\r\n    refresh() {\r\n        this.setState({ updated: new Date() });\r\n    }\r\n    showCommonSuccessAlert = () => {\r\n        this.showInfo(\"Success\");\r\n    }\r\n    showCommonErrorAlert = (e: any) => {\r\n        console.error(e);\r\n\r\n        let message;\r\n        if (e.response && e.response.data) {\r\n            message = e.response.data.message;\r\n        } else {\r\n            message = e;\r\n        }\r\n        this.showError(\"Operasi Gagal: \" + message);\r\n    }\r\n    componentDidMount() {\r\n        if (this.validateLoginStatus()) {\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.authenticated == true && this.isUserLoggedIn() == false) {\r\n            console.debug(typeof this, \"BACK TO LOGIN\");\r\n            this.validateLoginStatus();\r\n        }\r\n    }\r\n\r\n    getServices = (): Services => {\r\n        return this.props.services;\r\n    }\r\n}","\r\nimport React, { useRef, Fragment } from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../constant/stores';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { performLogout } from './../../redux/actionCreators';\r\nimport { getMenus } from '../../constant/Menus';\r\nimport './Header.css';\r\nimport User from './../../models/User';\r\nimport { baseImageUrl } from './../../constant/Url';\r\nimport Menu from './../../models/settings/Menu';\r\nclass IState {\r\n    showNavLinks: boolean = false;\r\n}\r\nclass Header extends BaseComponent {\r\n    state: IState = new IState();\r\n    buttonToggleNavRef: React.RefObject<HTMLButtonElement> = React.createRef();\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    toggleNavLinks = () => {\r\n        this.setState({ showNavLinks: !this.state.showNavLinks });\r\n    }\r\n    onLogout = (e: any) => {\r\n        const app = this;\r\n        app.showConfirmation(\"Logout?\").then(\r\n            function (ok) {\r\n                if (ok) {\r\n                    app.props.performLogout(app.parentApp);\r\n                }\r\n            }\r\n        )\r\n    }\r\n    setMenu = (menu: Menu) => {\r\n        if (this.state.showNavLinks && this.buttonToggleNavRef.current) {\r\n            this.buttonToggleNavRef.current.click();\r\n        }\r\n        this.props.setMenu(menu);\r\n\r\n    }\r\n    render() {\r\n        const showNavLinks: boolean = this.state.showNavLinks;\r\n        const menus = getMenus();\r\n        const user = this.getLoggedUser();\r\n        return (\r\n            <div className=\"bg-dark container-fluid\" style={{ position: 'fixed', zIndex: 55, padding: 0, margin: 0 }}>\r\n                <NavBarTop label={this.getApplicationProfile().name} />\r\n                <nav id=\"navbar\" className=\"navbar navbar-expand-lg navbar-dark bg-dark\" style={{ width: '100%' }}>\r\n                    {/* <div className=\"container-fluid\"></div> */}\r\n                    <a id=\"navbar-brand\" className=\"navbar-brand\" href=\"#\">{this.getApplicationProfile().name}</a>\r\n                    <button ref={this.buttonToggleNavRef} onClick={this.toggleNavLinks} className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target=\"#navbarToggler\" aria-controls=\"navbarToggler\"\r\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <i className={showNavLinks ? \"fas fa-times\" : \"fas fa-bars\"} />\r\n                    </button>\r\n                    <div className={\"collapse navbar-collapse\"} id=\"navbarToggler\">\r\n                        <ul id=\"navbar-top\" className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n                            {menus.map(menu => {\r\n                                if (menu == null || (menu.authenticated && !user)) return null;\r\n                                if (menu.userAuthorized && menu.userAuthorized(user) == false) return null;\r\n                                const isActive = this.props.activeMenuCode == menu.code;\r\n                                return (\r\n                                    <li key={\"header-menu-\" + new String(menu.code)} className={\"nav-item \" + (isActive ? \"active nav-active\" : \"nav-inactive\")}>\r\n                                        <Link onClick={() => this.setMenu(menu)} className={\"nav-link  \"}\r\n                                            to={menu.url}><span>{menu.name}</span>\r\n                                        </Link></li>\r\n                                )\r\n                            })}\r\n                        </ul >\r\n                        <form className=\"form-inline my-2 my-lg-0\">\r\n                            <UserIcon setMenuNull={this.props.setMenuNull}\r\n                                onLogout={this.onLogout} user={user} />\r\n                        </form >\r\n                    </div >\r\n                </nav >\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst NavBarTop = (props) => {\r\n    return (\r\n        <div id=\"navbar-brand-top\" style={{ paddingLeft: '0.5rem' }} className=\"container-fluid\">\r\n            <a style={{ fontSize: '15px' }} className=\"text-white navbar-brand\" href=\"#\">\r\n                <strong>{props.label}</strong>\r\n            </a>\r\n        </div>\r\n    );\r\n}\r\nconst UserIcon = (props: { user: User | undefined, setMenuNull(): any, onLogout(e): any }) => {\r\n    if (props.user) {\r\n        return (\r\n            <Fragment>\r\n                <Link onClick={props.setMenuNull} style={{ marginRight: \"5px\" }} className=\"btn btn-light btn-sm my-2 my-sm-0\"\r\n                    to='/settings/user-profile'>\r\n                    <i className=\"fas fa-user-circle\"/>\r\n                        &nbsp;{props.user.name}\r\n                </Link>\r\n                <a style={{ marginRight: '5px' }} className=\"btn btn-danger btn-sm  my-2 my-sm-0\"\r\n                    onClick={props.onLogout}><i className=\"fas fa-sign-out-alt\"></i>&nbsp;Logout\r\n\t\t\t\t</a>\r\n            </Fragment>);\r\n    }\r\n    return (\r\n\r\n        <Link style={{ marginRight: '5px' }} onClick={props.setMenuNull} className=\"btn btn-sm btn-info my-2 my-sm-0\"\r\n            to='/login'> <i className=\"fas fa-sign-in-alt\"></i>&nbsp;Login\r\n        </Link>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    performLogout: (app: any) => dispatch(performLogout(app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(Header))","\r\nimport React, { Component } from 'react';\r\nimport './Spinner.css';\r\nexport default class Spinner extends Component<any, any>{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const innerDivs:JSX.Element[] = new Array<JSX.Element>();\r\n        for (let i = 0; i <= 11; i++) {\r\n            innerDivs.push(<div key={\"spinner-item-\"+i}></div>);\r\n        }\r\n        return (\r\n            <div style={{width:'85px', height:'85px', display:'block'}} className=\"container-fluid text-center\" >\r\n                 <div style={{visibility:this.props.show == false?'hidden':'visible'}} className=\"lds-spinner\">\r\n                  {innerDivs}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","\r\n\r\nimport React, { RefObject, Component, FormEvent, Fragment, ChangeEvent } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport './Login.css';\r\nimport { performLogin } from '../../../redux/actionCreators';\r\nimport Spinner from './../../loader/Spinner';\r\nimport AnchorWithIcon from './../../navigation/AnchorWithIcon';\r\nclass IState {\r\n    loading: boolean = false; email: string = \"\"; editPassword: string = \"\";\r\n}\r\nclass Login extends BaseComponent {\r\n    state: IState = new IState();\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    startLoading = () => this.setState({ loading: true });\r\n    endLoading = () => this.setState({ loading: false });\r\n    login(e: FormEvent) {\r\n        e.preventDefault();\r\n        this.props.performLogin(this.state.email, this.state.editPassword, this);\r\n    }\r\n    componentDidMount() {\r\n        document.title = \"Login\";\r\n        if (this.isUserLoggedIn()) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n\r\n        if (this.isUserLoggedIn()) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n    updateCredentialProperty = (e: ChangeEvent) => {\r\n        const target = e.target as HTMLInputElement;\r\n        const name: string | null = target.getAttribute(\"name\");\r\n        if (null == name) return;\r\n        this.setState({ [name]: target.value });\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"Login\" style={{ marginTop: '20px' }} >\r\n                <form name='login' onSubmit={(e) => { this.login(e) }}\r\n                    method='POST' className=\"form-signin\">\r\n                    <div className=\"text-center\">\r\n                        <h2><i className=\"fas fa-user-circle\"></i></h2>\r\n                        <h1 className=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\r\n                    </div>\r\n                    <EmailField value={this.state.email} onChange={this.updateCredentialProperty} />\r\n                    <PasswordField value={this.state.editPassword} onChange={this.updateCredentialProperty} />\r\n                    {this.state.loading ? <Spinner /> :\r\n\r\n                        <Fragment>\r\n                            <button className=\"btn text-light\" style={{ marginRight: '5px', backgroundColor: 'rgb(9,26,78)' }} type=\"submit\">\r\n                                Sign in\r\n                            </button>\r\n                            {/* <AnchorWithIcon className=\"btn btn-light border border-dark \" to=\"register\" children=\"Register\" /> */}\r\n                        </Fragment>}\r\n                    <input name=\"transport_type\" type=\"hidden\" value=\"rest\" />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst PasswordField = ({ value, onChange }) => {\r\n    return <Fragment>\r\n        <label className=\"sr-only\">Password</label>\r\n        <input name=\"editPassword\" value={value} onChange={onChange} type=\"password\" id=\"inputPassword\" className=\"form-control\"\r\n            placeholder=\"Password\" required />\r\n    </Fragment>\r\n}\r\nconst EmailField = ({ value, onChange }) => {\r\n    return (<Fragment>\r\n        <label className=\"sr-only\">Email</label>\r\n        <input name=\"email\" value={value} onChange={onChange} type=\"text\"  className=\"form-control\"\r\n            placeholder=\"Email\" required autoFocus />\r\n    </Fragment>)\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    performLogin: (username: string, password: string, app: any) => dispatch(performLogin(username, password, app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(Login))","\nimport BaseComponent from './../BaseComponent';\nexport default class BasePage extends BaseComponent{\n    constructor(props, protected title:string | undefined|null= undefined, authenticated:boolean = false) {\n        super(props, authenticated);\n        if (title !== undefined && title !== null) {\n            document.title = title;\n        } else {\n            document.title = \"Asrama KIIS\";\n        }\n    }\n\n    componentDidMount() {\n        this.validateLoginStatus(()=>{\n            this.scrollTop();\n            this.componentReady();\n        })\n    }\n\n    protected componentReady() {\n\n    }\n    // componentWillUnmount() {\n    //     document.title = \"Asrama KIIS\";\n    // }\n}","import AttachmentInfo from '../models/settings/AttachmentInfo';\r\n \r\n  \r\nexport const getAttachmentInfoFromFile = (fileInput:HTMLInputElement): Promise<AttachmentInfo> => {\r\n    return new Promise<AttachmentInfo>((resolve, reject) =>{\r\n        if (null == fileInput.files || !fileInput.files[0]) {\r\n            reject(new Error(\"No file\"));\r\n            return;\r\n        }\r\n        try { \r\n            const file:File = fileInput.files[0]; \r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            console.debug(\"fileInput.files[0]: \", file);\r\n            reader.onload = function () { \r\n                const info:AttachmentInfo = new AttachmentInfo();\r\n                info.setUrl(new String(reader.result).toString());\r\n                // info.\r\n                info.name = file.name;\r\n                resolve(info);\r\n             }\r\n            reader.onerror = function (error) {\r\n                reject(error);\r\n            }\r\n        } catch (e) {\r\n            reject(e);\r\n        }\r\n    });\r\n\r\n}\r\n \r\n\r\n/**\r\n * \r\n * @param {Number} totalButton \r\n * @param {Number} currentPage \r\n */\r\nexport const createNavButtons = (totalButton, currentPage) => {\r\n    totalButton = Math.ceil(totalButton);\r\n    if (!currentPage) { currentPage = 0 }\r\n    let buttonData = new Array();\r\n    let min = currentPage - 3 < 0 ? 0 : currentPage - 3;\r\n    let max = currentPage + 3 > totalButton ? totalButton : currentPage + 3;\r\n\r\n    if (min != 0) {\r\n        buttonData.push({\r\n            text: 1,\r\n            value: 0\r\n        });\r\n    }\r\n\r\n    for (let index = min; index < max; index++) {\r\n        buttonData.push({\r\n            text: index + 1,\r\n            value: index\r\n        });\r\n    }\r\n\r\n    if (max != totalButton) {\r\n        buttonData.push({\r\n            text: totalButton,\r\n            value: totalButton - 1\r\n        });\r\n    }\r\n\r\n\r\n    return buttonData;\r\n}\r\n\r\n ","\r\n\r\nimport React, { ChangeEvent, FormEvent } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../../constant/stores'; \r\nimport User from './../../../../models/User';\r\nimport BasePage from './../../BasePage';\r\nimport AttachmentInfo from './../../../../models/settings/AttachmentInfo';\r\nimport { getAttachmentInfoFromFile } from './../../../../utils/ComponentUtil';\r\nimport StudentService from './../../../../services/StudentService';\r\n\r\nclass State {\r\n    attachment:AttachmentInfo | undefined;\r\n}\r\nclass DashboardMain extends BasePage {\r\n    state:State = new State();\r\n    studentService:StudentService;\r\n    constructor(props: any) {\r\n        super(props, \"Dashboard\", true);\r\n        this.studentService = this.getServices().studentService;\r\n    }\r\n\r\n    addPointRecord = (e:FormEvent) => {\r\n        e.preventDefault();\r\n        if (!this.state.attachment) return;\r\n        \r\n        this.props.history.push({\r\n            pathname: '/dormitoryactivity/pointrecordedit',\r\n              state: {attachment: this.state.attachment }\r\n         })\r\n    }\r\n    updateImage = (e:ChangeEvent) => {\r\n        getAttachmentInfoFromFile(e.target as HTMLInputElement) \r\n            .then(attachment=>{\r\n                this.setState({attachment:attachment});\r\n            }).catch(console.error)\r\n    }\r\n    render() {\r\n        const user: User | undefined = this.getLoggedUser();\r\n        if (!user) return null;\r\n        return (\r\n            <div  className=\" section-body container-fluid\">\r\n                <h2>Dashboard</h2>\r\n                <div className=\"alert alert-info\">\r\n                    Welcome, <strong>{user.name}  </strong>\r\n                    <hr/>\r\n                    {/* <p className=\"badge badge-dark text-capitalize\">{(user.roles).join(\", \")}</p> */}\r\n                   \r\n                </div>\r\n                {this.isAdmin()? null :\r\n                    <form className=\"mt-10 text-center\" onSubmit={this.addPointRecord}>\r\n                        <h1><i className=\"fas fa-camera\" /></h1>\r\n                        <h3> Input Pelanggaran</h3>\r\n                        <input onChange={this.updateImage} type=\"file\" accept=\"image/*\" className=\"form-control mt-3\" />\r\n                        <p/>\r\n                        {this.state.attachment?\r\n                        <div>\r\n                            <input type=\"submit\" className=\"btn btn-dark btn-large\" value=\"Selanjutnya\" />\r\n                            <img className=\"w-100 mt-5\" src={this.state.attachment.url}/>\r\n                            \r\n                        </div>\r\n                        : null}\r\n                    </form>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps\r\n)(DashboardMain))","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from '../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport ApplicationProfile from '../../../models/ApplicationProfile';\r\nimport { baseImageUrl } from '../../../constant/Url';\r\n\r\nclass HomeMain extends BaseComponent {\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Home\";\r\n    }\r\n    render() {\r\n        const applicationProfile: ApplicationProfile = this.getApplicationProfile();\r\n        const imageUrl: string = baseImageUrl() + applicationProfile.backgroundUrl;\r\n        return (\r\n            <div className=\"section-body container-fluid\" style={{padding:0}}>\r\n                <div className=\"jumbotron\"\r\n                    style={{\r\n                        margin:'0px',\r\n                        marginTop: '20px',\r\n                        backgroundImage: 'url(\"' + imageUrl + '\")',\r\n                        backgroundSize: 'cover',\r\n                        color: applicationProfile.fontColor??\"rgb(0,0,0)\"\r\n                    }}\r\n                >\r\n                    <h1 className=\"display-4\">{applicationProfile.name}</h1>\r\n                    <p className=\"lead\">{applicationProfile.description}</p>\r\n                    <hr className=\"my-4\" />\r\n                    <p>{applicationProfile.welcoming_message}</p>\r\n                    <Link className=\"btn btn-primary btn-lg\" to=\"/about\" role=\"button\">About Us</Link>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n} \r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps, \r\n)(HomeMain))","\r\nimport BaseEntity from './BaseEntity';\r\nimport User from './User';\r\nexport default class Employee extends BaseEntity\r\n{\r\n    user?:User;\r\n}","import React from 'react'\r\nimport { uniqueId } from './StringUtil';\r\nexport const tableHeader = (...values:string[]) => {\r\n   \r\n    return (<thead>\r\n        <tr>\r\n            {values.map((value)=>{\r\n\r\n                return <th key={uniqueId()}>{value}</th>\r\n            })}\r\n        </tr>\r\n    </thead>)\r\n}\r\nexport const groupArray = function (array, division) {\r\n    if (null == array || array.length == 0) { return [] }\r\n    const groupedArray = new Array();\r\n    const itemPerDivision = Math.ceil(array.length / division)\r\n\r\n    if (itemPerDivision == 1) {\r\n        groupedArray.push(array);\r\n        return groupedArray;\r\n    }\r\n\r\n    for (let i = 0; i < division; i++) {\r\n        groupedArray.push(new Array());\r\n    }\r\n\r\n    let index = 1;\r\n    let divisionIndex = 0;\r\n    for (let i = 0; i < array.length; i++) {\r\n        const element = array[i];\r\n        groupedArray[divisionIndex].push(element);\r\n\r\n        index++;\r\n        if (index > itemPerDivision) {\r\n            divisionIndex++;\r\n            index = 1;\r\n        }\r\n    }\r\n\r\n    return groupedArray;\r\n}\r\n","\nexport default class Filter{\n    static resetFieldsFilter = (f:Filter) : Filter => {\n        for (const key in f.fieldsFilter) {\n\t\t\tf.fieldsFilter[key] = \"\";\n\t\t}\n\t\treturn f;\n    }\n    static withLimit = (arg0: number): Filter => {\n\t\tconst f =new Filter();\n\t\tf.limit = arg0;\n        return f;\n    }\n\tlimit? :number = 5; \n\tpage? :number = 0;\n\torderType?:string;\n\torderBy?:string;\n\tcontains?:boolean; \n\texacts?:boolean;\n\tday?:number;\n\tyear?:number;\n\tmonth?:number;\n\tmodule?:string;\n\tfieldsFilter:Record<string, any> = {};\n\tdayTo?:number;\n\tmonthTo?:number;\n\tyearTo?:number;\n\tmaxValue?:number;\n\tavailabilityCheck?:boolean;\n\t \n\n}\n","\r\nimport React, { Component } from 'react';\r\ninterface Props {\r\n    orientation?:string,\r\n    show?:boolean,\r\n    children:any,\r\n    label?:any,\r\n    className?:string,\r\n}\r\nexport default class FormGroup extends Component<Props, any>\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        if (false == this.props.show) return null;\r\n        const orientation = this.props.orientation == 'vertical' ? 'vertical' : 'horizontal';\r\n        return (\r\n            <div className={`form-group ${this.props.className} ` + (orientation == 'vertical' ? '' : 'row')}>\r\n                <label className={(orientation == 'vertical' ? '' : 'col-sm-3')}><strong>{this.props.label ? this.props.label : null}</strong></label>\r\n                <div className={(orientation == 'vertical' ? '' : 'col-sm-9')}>\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nimport { uniqueId } from './../../utils/StringUtil';\r\ninterface IProps {\r\n    limit: number,\r\n    totalData: number,\r\n    activePage: number,\r\n    onClick: any\r\n}\r\nexport default class NavigationButtons extends Component<IProps, any> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        const buttonIndexes = generateButtonValues(this.props.limit, this.props.totalData, this.props.activePage);\r\n        if (buttonIndexes.length == 0) { return null }\r\n        const lastIndex = buttonIndexes[buttonIndexes.length - 1];\r\n        const nextPage = this.props.activePage + 1 >= lastIndex  ? 0 : this.props.activePage + 1;\r\n        const previusPage = this.props.activePage - 1 < 0? lastIndex-1 : this.props.activePage - 1;\r\n        return (<div>\r\n            <nav aria-label=\"Page navigation example\">\r\n                <ul className=\"pagination\">\r\n                    <li className=\"page-item\"><a className=\"page-link\" onClick={(e) => this.props.onClick(previusPage)}>Previous</a></li>\r\n                    {buttonIndexes.map((page, i) => {\r\n                        return <li key={\"NAV-\"+uniqueId()} className={\"page-item \"+(page-1 == this.props.activePage?\"active\":\"\")}><a className=\"page-link \" onClick={(e) => this.props.onClick(page - 1)} >{page}</a></li>\r\n                    })}\r\n                    <li className=\"page-item\"><a className=\"page-link\" onClick={(e) => this.props.onClick(nextPage)}>Next</a></li>\r\n                </ul>\r\n            </nav>\r\n        </div>)\r\n    }\r\n}\r\n\r\nconst generateButtonValues = (limit: number, totalData: number, currentPage: number) => {\r\n\r\n    /* DISPLAYED BUTTONS */\r\n    const displayed_buttons: number[] = [];\r\n    const buttonCount = Math.ceil(totalData / limit);\r\n\r\n    // console.debug(\"current page:\", currentPage);\r\n    const min = (currentPage) - 1;\r\n    const max = (currentPage) + 3;\r\n    // const min = (currentPage) - 2;\r\n    // const max = (currentPage) + 2;\r\n\r\n    // console.debug(\"min\", min, \"current page:\", currentPage, \"max\", max);\r\n    if (buttonCount > 1) {\r\n        displayed_buttons.push(1);\r\n    }\r\n    for (let i = min; i <= max; i++) {\r\n        if (i > 1 && i <= buttonCount) {\r\n            (displayed_buttons.push(i));\r\n        }\r\n    }\r\n    if (max < buttonCount) {\r\n        displayed_buttons.push(buttonCount);\r\n    }\r\n    return displayed_buttons;\r\n}\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\ninterface IProps{\r\n    show?:boolean, attributes?:any, iconClassName?:string, to?:string, className?:string,\r\n    style?:any, onClick?(e:any):any, children?:any\r\n}\r\nexport default class AnchorWithIcon extends Component<IProps, any>\r\n{\r\n    constructor(props: any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        if (this.props.show == false) return null;\r\n        const btnClassName = this.props.className ?? \"btn btn-outline-secondary\";\r\n        if (this.props.to) {\r\n            return <Link {...this.props.attributes} to={this.props.to} style={this.props.style} onClick={this.props.onClick} className={btnClassName} >\r\n                {this.props.iconClassName ?\r\n                    <span style={{ marginRight: this.props.children?'5px':'0px' }}><i className={this.props.iconClassName} /></span>\r\n                    :\r\n                    null}\r\n                {this.props.children}\r\n            </Link>\r\n        }\r\n        return (\r\n            <a {...this.props.attributes} tyle={this.props.style} onClick={this.props.onClick} className={btnClassName} >\r\n                {this.props.iconClassName ?\r\n                    <span style={{ marginRight: this.props.children?'5px':'0px' }}><i className={this.props.iconClassName} /></span>\r\n                    :\r\n                    null}\r\n                {this.props.children}\r\n            </a>\r\n        )\r\n    }\r\n}","\r\nimport BaseComponent from './../../BaseComponent';\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport Employee from './../../../models/Employee';\r\nimport { AuthorityType } from '../../../models/AuthorityType';\r\nimport MusyrifManagementService from './../../../services/MusyrifManagementService';\r\nimport ToggleButton from './../../navigation/ToggleButton';\r\nimport WebResponse from '../../../models/commons/WebResponse';\r\nimport AnchorWithIcon from './../../navigation/AnchorWithIcon';\r\nclass EmployeeRow extends BaseComponent {\r\n    musyrifManagementService: MusyrifManagementService;\r\n    constructor(props) {\r\n        super(props, true);\r\n        this.musyrifManagementService = this.getServices().musyrifManagementService;\r\n    }\r\n\r\n    getEmployee = (): Employee => {\r\n        return this.props.employee;\r\n    }\r\n    activeStatusUpdate = (response: WebResponse) => {\r\n        // this.showInfo(\"Success\");\r\n        if (this.props.onUpdated) {\r\n            this.props.onUpdated();\r\n        }\r\n    }\r\n    activateMusyrif = (active: boolean) => {\r\n        const emp = this.getEmployee();\r\n        this.commonAjax(\r\n            this.musyrifManagementService.activate,\r\n            this.activeStatusUpdate,\r\n            this.showCommonErrorAlert,\r\n            emp, active);\r\n\r\n    }\r\n    render() {\r\n        const props = this.props;\r\n        const emp = this.getEmployee();\r\n        const isMusyrif = emp.user?.hasRole(AuthorityType.musyrif_asrama);\r\n        return (\r\n            <tr key={emp.id} >\r\n                <td>{props.startingNumber + 1}</td>\r\n                <td>{emp.user?.name}</td>\r\n                <td>{emp.user?.email}</td>\r\n                <td>{emp.user?.nip}</td>\r\n                <td><i className={isMusyrif ? \"fas fa-check text-success\" : \"fas fa-times\"} /></td>\r\n                <td> {isMusyrif == true ?\r\n                    <AnchorWithIcon className=\"btn btn-danger btn-sm\" onClick={(e) => this.activateMusyrif(false)} >\r\n                        Nonaktifkan\r\n                    </AnchorWithIcon> :\r\n                    <AnchorWithIcon className=\"btn btn-success btn-sm\" onClick={(e) => this.activateMusyrif(true)} >\r\n                        Jadikan musyrif\r\n                    </AnchorWithIcon>\r\n                }\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps\r\n)(EmployeeRow))","\r\nimport React, { Component } from 'react';\r\ninterface IProps {\r\n    show?:boolean;\r\n    className?:string;\r\n    style?:any;\r\n    onClick?:any;\r\n    iconClassName?:string;\r\n    attributes?:any;\r\n}\r\nexport default class AnchorButton extends Component<IProps, any>\r\n{\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        if (this.props.show == false) return null;\r\n        const btnClassName = this.props.className??\"btn btn-outline-secondary\";\r\n        return (\r\n            <a style={this.props.style} {...this.props.attributes} onClick={this.props.onClick} className={btnClassName} >\r\n                {this.props.iconClassName?\r\n                <span style={this.props.children?{marginRight:'5px'}:{}}><i className={this.props.iconClassName}/></span>\r\n                :\r\n                null}\r\n                {this.props.children}\r\n            </a>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport AnchorButton from './AnchorButton';\r\ninterface Props {\r\n    onClick(val:boolean):void,\r\n    active:boolean,\r\n    yesLabel?:string,\r\n    noLabel?:string\r\n}\r\nexport default class ToggleButton extends Component<Props, any>{\r\n    \r\n    render() {\r\n        const props = this.props;\r\n        const active = this.props.active;\r\n        return (\r\n            <div className=\"btn-group\">\r\n                <AnchorButton className={\"btn  btn-sm \" + (active ? \"btn-dark\" : \"btn-outline-dark\")} onClick={(e) => this.props.onClick(true)} >\r\n                    {props.yesLabel??\"Yes\"}</AnchorButton>\r\n                <AnchorButton className={\"btn  btn-sm \" + (active == false ? \"btn-dark\" : \"btn-outline-dark\")} onClick={(e) => this.props.onClick(false)}  >\r\n                    {props.noLabel??\"No\"}</AnchorButton>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}","import React, { ChangeEvent } from 'react'\r\nimport BaseComponent from './../../BaseComponent';\r\nimport Modal from './../../container/Modal';\r\nimport MasterDataService from './../../../services/MasterDataService';\r\nimport WebResponse from '../../../models/commons/WebResponse';\r\nimport WebRequest from '../../../models/commons/WebRequest';\r\nimport BasePage from './../BasePage';\r\nimport './Management.css'\r\nimport BaseEntity from './../../../models/BaseEntity';\r\n\r\nexport default  class BaseManagementPage extends BasePage {\r\n    protected masterDataService: MasterDataService;\r\n    protected modelName: string = \"undefined\";\r\n    protected formRef: React.RefObject<Modal> = React.createRef(); \r\n\r\n    emptyRecord = () : BaseEntity => { \r\n        throw new Error(\"Empty Record Method is Not Implemented....\");\r\n    }\r\n\r\n    constructor(props, modelName?: string, protected overrideLoading: boolean = false) {\r\n        super(props, \"Asrama KIIS\", true);\r\n        if (modelName) {\r\n            this.modelName = modelName;\r\n        }\r\n        this.masterDataService = this.getServices().masterDataService;\r\n         \r\n    }\r\n    startLoading = (withProgress: boolean = false) => {\r\n        if (this.overrideLoading) {\r\n            this.setState({ loading: true });\r\n        } else {\r\n            super.startLoading(withProgress);\r\n        }\r\n    }\r\n    endLoading = () => {\r\n        if (this.overrideLoading) {\r\n            this.setState({ loading: false });\r\n        } else {\r\n            super.endLoading();\r\n        }\r\n    }\r\n    loadItems = () => {\r\n        const request: WebRequest = {\r\n            filter: this.state.filter,\r\n            modelName: this.modelName\r\n        }\r\n        this.commonAjax(\r\n            this.masterDataService.list,\r\n            this.itemsLoaded,\r\n            this.showCommonErrorAlert,\r\n            request\r\n        )\r\n    }\r\n    itemsLoaded = (response: WebResponse) => {\r\n        this.setState({ items: response.items, totalData: response.totalData });\r\n    }\r\n    \r\n    updateFilter = (e: ChangeEvent) => {\r\n        const filter = this.state.filter;\r\n        const target = (e.target as any);\r\n\r\n        if (!target.value || target.value == \"\") {\r\n            return;\r\n        }\r\n\r\n        let value:any;\r\n        if (target.type == 'number' || (target.dataset && target.dataset['type'] == 'number')) {\r\n            value = parseInt(target.value);\r\n        } else {\r\n            value = target.value;\r\n        }\r\n        filter[target.name] = value;\r\n        this.setState({ filter: filter })\r\n    }\r\n    updateFieldsFilter = (e: ChangeEvent) => {\r\n        const filter = this.state.filter;\r\n        const target = (e.target as any);\r\n        if (!filter.fieldsFilter) {\r\n            filter.fieldsFilter = {};\r\n        }\r\n        filter.fieldsFilter[target.name] = target.value;\r\n        this.setState({ filter: filter })\r\n    }\r\n    loadAtPage = (page: number) => {\r\n        const filter = this.state.filter;\r\n        filter.page = page;\r\n        this.setState({ filter: filter }, this.loadItems);\r\n    }\r\n    updateRecordProp = (e: ChangeEvent) => {\r\n        const target = e.target as any;\r\n        const dataset = target.dataset;\r\n        let value:any;\r\n        if (dataset['type'] && dataset['type'] == 'boolean') {\r\n            value = target.value == \"true\" ? true : false;\r\n        } else {\r\n            value =  target.value;\r\n        }\r\n        const record = this.state.record;\r\n        record[target.name] = value;\r\n        this.setState({ record: record });\r\n    }\r\n    resetForm = (callback?: () => any) => {\r\n        this.setState({ record: this.emptyRecord() }, callback);\r\n    }\r\n    oneRecordLoaded =  (item: any) => {\r\n        this.setState({ record: item }, () => {\r\n            if (this.formRef.current) {\r\n                this.formRef.current.showModal();\r\n            }\r\n            this.scrollTop();\r\n        });\r\n    }\r\n    componentDidMount() {\r\n        super.componentDidMount();\r\n        this.scrollTop();\r\n        this.loadItems();\r\n    }\r\n    recordUpdated = (response: WebResponse) => {\r\n        this.resetForm(() => {\r\n            if (this.formRef.current) {\r\n                this.formRef.current.hideModal();\r\n            }\r\n            this.showInfo(\"Success Update\");\r\n            this.loadItems();\r\n        });\r\n    }\r\n    protected callApiSubmit = (request: WebRequest) => {\r\n        this.commonAjax(\r\n            this.masterDataService.update,\r\n            this.recordUpdated,\r\n            this.showCommonErrorAlert,\r\n            request\r\n        )\r\n    }\r\n\r\n    reload = (e:any) => {\r\n        if (e) {\r\n            e.preventDefault();\r\n        }\r\n        this.loadAtPage(0);\r\n    }\r\n}","import React, { ChangeEvent } from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport Employee from './../../../models/Employee';\r\nimport { tableHeader } from './../../../utils/CollectionUtil';\r\nimport Filter from '../../../models/commons/Filter'; \r\nimport FormGroup from './../../form/FormGroup';\r\nimport NavigationButtons from './../../navigation/NavigationButtons';\r\nimport EmployeeRow from './EmployeeRow';\r\nimport User from '../../../models/User';\r\nimport ToggleButton from './../../navigation/ToggleButton';\r\nimport BaseManagementPage from './BaseManagementPage';\r\nclass State {\r\n    items:Employee[] = [];\r\n    filter:Filter = new Filter();\r\n    totalData:number = 0;\r\n}\r\nclass MusyrifManagement extends BaseManagementPage{\r\n    state:State = new State();\r\n    constructor(props) {\r\n        super(props, 'employee');\r\n        this.state.filter.limit = 10;\r\n        this.state.filter.fieldsFilter = {\r\n            'musyrif_only':true\r\n        }\r\n    }\r\n    emptyRecord = () => new Employee();\r\n    setMusyrifOnly = (musyrifOnly:boolean) => {\r\n        const filter = this.state.filter;\r\n        if (!filter.fieldsFilter) {\r\n            filter.fieldsFilter = {};\r\n        }\r\n        filter.fieldsFilter['musyrif_only'] = musyrifOnly;\r\n        this.setState({filter: filter}, ()=> this.loadAtPage(0))\r\n    }\r\n    onEmployeeStatusUpdate = () => {\r\n        this.loadItems();\r\n    }\r\n    render() {\r\n        const filter = this.state.filter;\r\n        const musyrifOnly :boolean = filter.fieldsFilter && filter.fieldsFilter['musyrif_only']&&filter.fieldsFilter['musyrif_only'] == true;\r\n        return (\r\n            <div  className=\"section-body container-fluid\">\r\n                <h2>Musyrif</h2>\r\n                <hr/>\r\n               \r\n                <form onSubmit={this.reload}>\r\n                    <FormGroup label=\"Cari\">\r\n                        <input name=\"name\" placeholder=\"Nama atau email\" className=\"form-control-sm\" value={filter.fieldsFilter?filter.fieldsFilter['name']:\"\"} onChange={this.updateFieldsFilter} />\r\n                    </FormGroup>\r\n                    <FormGroup label=\"Jumlah Tampilan\">\r\n                        <input name=\"limit\" type=\"number\" className=\"form-control-sm\" value={filter.limit??5} onChange={this.updateFilter} />\r\n                    </FormGroup>\r\n                    <FormGroup label=\"Opsi\">\r\n                        <ToggleButton active={musyrifOnly} onClick={this.setMusyrifOnly} noLabel=\"Semua pegawai\" yesLabel=\"Hanya musyrif\" />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <input className=\"btn btn-primary btn-sm\" type=\"submit\" value=\"Submit\"/>\r\n                    </FormGroup>\r\n                </form>\r\n                <NavigationButtons activePage={filter.page??0} limit={filter.limit??5} totalData={this.state.totalData}\r\n                    onClick={this.loadAtPage} />\r\n                <EmployeeList onUpdated={this.onEmployeeStatusUpdate} startingNumber={(filter.page??0) *( filter.limit?? 5)} items={this.state.items} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst EmployeeList = (props:{onUpdated:()=>void,startingNumber:number, items:Employee[]}) => {\r\n    const items = props.items;\r\n    return (\r\n        <div className=\"container-fluid\" style={{overflow:'scroll'}}>\r\n        <table className=\"table table-striped\" >\r\n            {tableHeader(\"No\", \"Nama\", \"Email\", \"NIP\", \"Role: Musyrif\", \"Opsi\")}\r\n            <tbody>\r\n                {items.map((emp,i)=>{\r\n                    if (emp.user) {\r\n                        emp.user = User.clone(emp.user);\r\n                    }\r\n                    return (\r\n                        <EmployeeRow onUpdated={props.onUpdated} employee={emp} startingNumber={props.startingNumber+i} key={emp.id} />\r\n                    )\r\n                })}\r\n            </tbody>\r\n        </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(\r\n    connect(\r\n        mapCommonUserStateToProps\r\n    )(MusyrifManagement)\r\n)","import React from 'react'\r\nimport BaseComponent from './../../BaseComponent';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport BasePage from './../BasePage';\r\nclass ManagementMain extends BasePage\r\n{\r\n    constructor(props) {\r\n        super(props, \"Management\", true);\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container-fluid section-body\">\r\n                <h2>Halaman Manajemen</h2>\r\n                <div className=\"alert alert-info\">\r\n                    Welcome, <strong>{this.getLoggedUser()?.name}</strong>\r\n                    <hr/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(\r\n    connect(\r\n        mapCommonUserStateToProps\r\n    )(ManagementMain)\r\n)","\r\nimport BaseEntity from './BaseEntity';\r\nimport RulePoint from './RulePoint';\r\nexport default class Category extends BaseEntity\r\n{\r\n    name?:string;\r\n    description?:string;\r\n\r\n    points:RulePoint[] | undefined;\r\n\r\n    static clone = (object:any) : Category => {\r\n        return Object.assign(new Category, object);\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nimport AnchorButton from '../navigation/AnchorButton';\r\nclass IState {\r\n    show:boolean = true\r\n}\r\ninterface IProps {\r\n    toggleable?:boolean, show?:boolean, title?:string, style?:any, footerContent?:any,showFooter?:boolean\r\n}\r\nexport default class Modal extends Component<IProps, IState> {\r\n    state:IState = new IState();\r\n    constructor(props: any) {\r\n        super(props);\r\n    }\r\n    hideModal = () => {\r\n        this.setState({show:false});\r\n    }\r\n    showModal = () => {\r\n        this.setState({show:true});\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.show == false) { this.setState({show:false}); }\r\n    }\r\n    render() {\r\n    //    if (this.props.show == false) { return null; }\r\n        const title = this.props.title?? \"Title\"; \r\n        if (this.props.toggleable == true && this.state.show == false) {\r\n            return (\r\n                <AnchorButton style={{marginBottom:'10px'}} onClick={this.showModal} iconClassName=\"fas fa-angle-down\" >Show {title}</AnchorButton>\r\n            )\r\n        }\r\n        const props = (({ style, show, footerContent, toggleable, ...props }) => props)(this.props) // remove b and c\r\n        return (\r\n            <div {...props} className=\"modal-content \" style={{...this.props.style, marginBottom:'10px'}}>\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">{title}</h5>\r\n                    {this.props.toggleable?\r\n                    <button type=\"button\" className=\"btn btn-sm\" onClick={this.hideModal} aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\">\r\n                            <i className='fas fa-times'/>\r\n                        </span>\r\n                    </button>\r\n                    :\r\n                    null}\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    {this.props.children}\r\n                </div>\r\n                {this.props.footerContent || this.props.showFooter == true?\r\n                <div className=\"modal-footer\">\r\n                    {this.props.footerContent}\r\n                </div>\r\n                :null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React from 'react'\r\nimport BaseComponent from './../../BaseComponent';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport AnchorWithIcon from './../../navigation/AnchorWithIcon';\r\nimport BaseEntity from './../../../models/BaseEntity';\r\nimport MasterDataService from './../../../services/MasterDataService';\r\nimport WebRequest from '../../../models/commons/WebRequest';\r\nimport WebResponse from '../../../models/commons/WebResponse'; \r\nclass EditDeleteButton extends BaseComponent\r\n{\r\n    masterDataService:MasterDataService;\r\n    constructor(props) {\r\n        super(props, true);\r\n        this.masterDataService = this.getServices().masterDataService;\r\n    }\r\n\r\n    get modelName  () : string   {\r\n        return this.props.modelName;\r\n    }\r\n    getRecord = () : BaseEntity => {\r\n        const rec = this.props.record;\r\n        if (!rec) {\r\n            alert(\"this.props.record undefined\");\r\n            return {};\r\n        }\r\n        return rec;\r\n    }\r\n    recordLoaded = (response:WebResponse) => {\r\n        if (this.props.recordLoaded) {\r\n            this.props.recordLoaded(response.item);\r\n        }\r\n    }\r\n    recordLoadedForDetail = (response:WebResponse) => {\r\n        if (this.props.recordLoadedForDetail) {\r\n            this.props.recordLoadedForDetail(response.item);\r\n        }\r\n    }\r\n    recordDeleted = (response:WebResponse) => {\r\n        this.showInfo(\"Record has been deleted\");\r\n        if (this.props.recordDeleted) {\r\n            this.props.recordDeleted(response.item);\r\n        }\r\n    }\r\n    get loadRecordRequest():WebRequest {\r\n        const req :WebRequest = {\r\n            record_id : this.getRecord().id,\r\n            modelName : this.modelName\r\n        }\r\n        return req;\r\n    }\r\n    loadRecord = () => {\r\n        \r\n        this.commonAjax(\r\n            this.masterDataService.getOne,\r\n            this.recordLoaded,\r\n            this.showCommonErrorAlert,\r\n            this.loadRecordRequest\r\n        )\r\n    }\r\n    loadRecordForDetail = () => {\r\n\r\n        this.commonAjax(\r\n            this.masterDataService.getOne,\r\n            this.recordLoadedForDetail,\r\n            this.showCommonErrorAlert,\r\n            this.loadRecordRequest\r\n        )\r\n    }\r\n    deleteRecord = () => {\r\n        this.showConfirmationDanger(\"Delete record?\")\r\n        .then(ok=>{\r\n            if (!ok) return;\r\n            this.commonAjax(\r\n                this.masterDataService.delete,\r\n                this.recordDeleted,\r\n                this.showCommonErrorAlert,\r\n                this.loadRecordRequest\r\n            )\r\n        })\r\n    }\r\n    hasType = (type:string):boolean => {\r\n        if (!this.props.types) return false;\r\n        return  (this.props.types as string[]).indexOf(type) >= 0;\r\n    }\r\n    render() {\r\n        const types:string[] | undefined = this.props.types ?? undefined;\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {this.hasType('detail') ?\r\n                    <AnchorWithIcon onClick={this.loadRecordForDetail} iconClassName=\"fas fa-info-circle\" className=\"btn btn-info btn-sm\"/>\r\n                    :\r\n                    null}\r\n                {types === undefined || this.hasType('edit') ?\r\n                    <AnchorWithIcon onClick={this.loadRecord} iconClassName=\"fas fa-edit\" className=\"btn btn-warning btn-sm\"/>\r\n                    :\r\n                    null}\r\n                {types === undefined || this.hasType('delete') ?\r\n                    <AnchorWithIcon onClick={this.deleteRecord} iconClassName=\"fas fa-times\" className=\"btn btn-danger btn-sm\"/>\r\n                    :\r\n                    null}\r\n               \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(\r\n    connect(\r\n        mapCommonUserStateToProps\r\n    )(EditDeleteButton)\r\n)","\r\nimport React, { ChangeEvent } from 'react'\r\nimport BaseComponent from './../../BaseComponent';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport Filter from '../../../models/commons/Filter';\r\nimport Category from './../../../models/Category';\r\nimport WebRequest from '../../../models/commons/WebRequest';\r\nimport FormGroup from './../../form/FormGroup';\r\nimport NavigationButtons from './../../navigation/NavigationButtons';\r\nimport Modal from './../../container/Modal';\r\nimport EditDeleteButton from './EditDeleteButton'\r\nimport { tableHeader } from './../../../utils/CollectionUtil';\r\nimport BaseManagementPage from './BaseManagementPage';\r\nimport BaseEntity from './../../../models/BaseEntity';\r\nclass State {\r\n    items: Category[] = [];\r\n    filter: Filter = new Filter();\r\n    totalData: number = 0;\r\n    record: Category = new Category();\r\n\r\n}\r\nclass CategoryManagement extends BaseManagementPage {\r\n    state: State = new State();\r\n    constructor(props) {\r\n        super(props, 'category');\r\n        this.state.filter.limit = 10;\r\n    }\r\n    \r\n    onSubmit = () => {\r\n        // console.debug(\"RECORD: \", this.state.record);\r\n        this.showConfirmation(\"Submit Data?\")\r\n            .then(ok => {\r\n                if (!ok) return;\r\n\r\n                const request: WebRequest = {\r\n                    category: this.state.record,\r\n                    modelName: this.modelName\r\n                }\r\n                this.callApiSubmit(request);\r\n            })\r\n    }\r\n    \r\n    emptyRecord = ():BaseEntity => new Category(); \r\n    render() {\r\n        const filter: Filter = this.state.filter;\r\n        return (\r\n            <div className=\"container-fluid section-body\">\r\n                <h2>Kategori Pelanggaran</h2>\r\n                <hr />\r\n                <RecordForm formRef={this.formRef} resetForm={this.resetForm} onSubmit={this.onSubmit} record={this.state.record} updateRecordProp={this.updateRecordProp} />\r\n                <form onSubmit={this.reload}>\r\n                    <FormGroup label=\"Cari\">\r\n                        <input name=\"name\" placeholder=\"nama\" className=\"form-control-sm\" value={filter.fieldsFilter ? filter.fieldsFilter['name'] : \"\"} onChange={this.updateFieldsFilter} />\r\n                    </FormGroup>\r\n                    <FormGroup label=\"Jumlah Tampilan\">\r\n                        <input name=\"limit\" type=\"number\" className=\"form-control-sm\" value={filter.limit ?? 5} onChange={this.updateFilter} />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <input className=\"btn btn-primary btn-sm\" type=\"submit\" value=\"Submit\" />\r\n                    </FormGroup>\r\n                </form>\r\n                <NavigationButtons activePage={filter.page ?? 0} limit={filter.limit ?? 5} totalData={this.state.totalData}\r\n                    onClick={this.loadAtPage} />\r\n                <ItemsList \r\n                    recordLoaded={this.oneRecordLoaded}\r\n                    recordDeleted={this.loadItems}\r\n                    startingNumber={(filter.page??0)*(filter.limit??10)} items={this.state.items} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst ItemsList = (props: {startingNumber:number, items:Category[], recordLoaded(item:any), recordDeleted()}) => {\r\n\r\n    return (\r\n        <div style={{overflow:'scroll'}}>\r\n        <table className=\"table table-striped\">\r\n            {tableHeader(\"No\", \"Nama\", \"Deskripsi\", \"Opsi\")}\r\n            <tbody>\r\n                    {props.items.map((item, i)=>{\r\n\r\n                        return (\r\n                            <tr key={\"category-\"+i}>\r\n                                <td>{i+1+props.startingNumber}</td>\r\n                                <td>{item.name}</td>\r\n                                <td>{item.description}</td>\r\n                                <td><EditDeleteButton \r\n                                    recordLoaded={props.recordLoaded}\r\n                                    recordDeleted={props.recordDeleted}\r\n                                    record={item} modelName={'category'}/></td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n        </table>\r\n        </div>\r\n    )\r\n}\r\nconst RecordForm = (props: { formRef:React.RefObject<Modal>, updateRecordProp(e: ChangeEvent): any, resetForm():any, onSubmit(): any, record: Category }) => {\r\n\r\n    return (\r\n        <form className=\"record-form mb-3\" onSubmit={(e) => { e.preventDefault(); props.onSubmit() }}>\r\n            <Modal show={false} ref={props.formRef} toggleable={true} title=\"Record Form\" >\r\n                <FormGroup label=\"Nama\"><input required value={props.record.name ?? \"\"} onChange={props.updateRecordProp} className=\"form-control-sm\" name=\"name\" /></FormGroup>\r\n                <FormGroup label=\"Deskripsi\">\r\n                    <textarea required className=\"form-control\" name=\"description\" onChange={props.updateRecordProp} value={props.record.description ?? \"\"} />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-sm\" />\r\n                    &nbsp;\r\n                    <input type=\"reset\"   className=\"btn btn-secondary btn-sm\" onClick={(e)=>props.resetForm()} />\r\n                </FormGroup>\r\n            </Modal>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default withRouter(\r\n    connect(\r\n        mapCommonUserStateToProps\r\n    )(CategoryManagement)\r\n)","\r\nimport BaseEntity from './BaseEntity';\r\nimport Category from './Category';\r\nexport default class RulePoint extends BaseEntity\r\n{\r\n    \r\n    category?:Category;\r\n    category_id?:any;\r\n    name?:string;\r\n    description?:string;\r\n    point:number = 1;\r\n    droppable?:boolean = true;\r\n}","import React, { ChangeEvent } from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport RulePoint from './../../../models/RulePoint';\r\nimport Filter from '../../../models/commons/Filter';\r\nimport Modal from './../../container/Modal';\r\nimport FormGroup from './../../form/FormGroup';\r\nimport WebRequest from '../../../models/commons/WebRequest';\r\nimport NavigationButtons from './../../navigation/NavigationButtons';\r\nimport EditDeleteButton from './EditDeleteButton';\r\nimport { tableHeader } from './../../../utils/CollectionUtil';\r\nimport BaseManagementPage from './BaseManagementPage';\r\nimport Category from './../../../models/Category';\r\nimport WebResponse from '../../../models/commons/WebResponse';\r\nimport AnchorWithIcon from './../../navigation/AnchorWithIcon';\r\nclass State {\r\n    items: RulePoint[] = [];\r\n    filter: Filter = new Filter();\r\n    totalData: number = 0;\r\n    record: RulePoint = new RulePoint();\r\n    categories: Category[] = [];\r\n    categoriesLoaded:boolean = false;\r\n\r\n}\r\nclass RulePointManagement extends BaseManagementPage\r\n{\r\n    state: State = new State();\r\n    \r\n    constructor(props) {\r\n        super(props, 'rulepoint');\r\n        this.state.filter.limit = 10;\r\n    }\r\n\r\n    onSubmit = () => {\r\n        // console.debug(\"RECORD: \", this.state.record);\r\n        this.showConfirmation(\"Submit Data?\")\r\n            .then(ok => {\r\n                if (!ok) return;\r\n\r\n                const request: WebRequest = {\r\n                    rulePoint: this.state.record,\r\n                    modelName: this.modelName\r\n                }\r\n                this.callApiSubmit(request);\r\n            })\r\n    }\r\n    componentDidMount() {\r\n        this.validateLoginStatus(()=>{\r\n            this.scrollTop();\r\n            this.loadCategories();\r\n        });\r\n    }\r\n    categoriesLoaded = (response: WebResponse) => {\r\n        this.setState({categories:response.items, categoriesLoaded: true}, ()=>{ this.resetForm(); this.loadItems() });\r\n    }\r\n    categoriesNotLoaded = (response: WebResponse) => {\r\n        this.setState({categories: [], categoriesLoaded: true}, this.resetForm);\r\n    }\r\n    loadCategories = () => {\r\n        const filter:Filter = new Filter();\r\n        filter.limit = 0;\r\n        const req:WebRequest = {\r\n            filter: filter,\r\n            modelName: 'category'\r\n        }\r\n        this.commonAjax(\r\n            this.masterDataService.list,\r\n            this.categoriesLoaded,\r\n            this.categoriesNotLoaded,\r\n            req\r\n        )\r\n    }\r\n    \r\n    emptyRecord = ():any => {\r\n        const record = new RulePoint();\r\n        if (this.state.categories.length > 0) {\r\n            record.category_id = this.state.categories[0].id;\r\n        }\r\n        return record;\r\n    }\r\n    \r\n    render() {\r\n        const filter: Filter = this.state.filter;\r\n        const categories: Category[] = this.state.categories;\r\n        if (this.state.categoriesLoaded && categories.length == 0) {\r\n            return (\r\n                <div className=\"container-fluid section-body\">\r\n                    <h2>Kategori pelanggaran belum ada</h2>\r\n                </div>\r\n            )\r\n        }\r\n        const selectedCategoryId = filter.fieldsFilter && filter.fieldsFilter['category_id'] ? filter.fieldsFilter['category_id'] : \"ALL\";\r\n        return (\r\n            <div className=\"container-fluid section-body\">\r\n                <h2>Poin Pelanggaran</h2>\r\n                <hr />\r\n                <RecordForm categories={categories} reloadCategories={this.loadCategories} formRef={this.formRef} resetForm={this.resetForm} onSubmit={this.onSubmit} record={this.state.record} updateRecordProp={this.updateRecordProp} />\r\n                <form onSubmit={this.reload}>\r\n                <FormGroup label=\"Cari\">\r\n                    <div className=\"input-group\">\r\n                        <input name=\"name\" placeholder=\"nama\" className=\"form-control-sm\" value={filter.fieldsFilter ? filter.fieldsFilter['name'] : \"\"} onChange={this.updateFieldsFilter} />\r\n                        <select value={selectedCategoryId} className=\"form-control-sm\" name=\"category_id\" onChange={this.updateFieldsFilter} >\r\n                            {[{id:\"\", name:\"Semua Kategori\"},...categories].map((c)=>{\r\n                                return <option key={\"filter-cat-\"+c.id} value={c.id}>{c.name}</option>\r\n                            })}\r\n                        </select>\r\n                        <div className=\"input-group-append\">\r\n                            <AnchorWithIcon className=\"btn btn-sm\" iconClassName=\"fas fa-redo\" onClick={this.loadCategories}>Reload</AnchorWithIcon>\r\n                        </div>\r\n                    </div>\r\n                </FormGroup>\r\n                    <FormGroup label=\"Jumlah Tampilan\">\r\n                        <input type=\"number\" name=\"limit\" className=\"form-control-sm\" value={filter.limit ?? 5} onChange={this.updateFilter} />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <input className=\"btn btn-primary btn-sm\" type=\"submit\" value=\"Submit\" />\r\n                    </FormGroup>\r\n                </form>\r\n                <NavigationButtons activePage={filter.page ?? 0} limit={filter.limit ?? 5} totalData={this.state.totalData}\r\n                    onClick={this.loadAtPage} />\r\n                <ItemsList \r\n                    recordLoaded={this.oneRecordLoaded}\r\n                    recordDeleted={this.loadItems}\r\n                    startingNumber={(filter.page??0)*(filter.limit??10)} items={this.state.items} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst ItemsList = (props: {startingNumber:number, items:RulePoint[], recordLoaded(item:any), recordDeleted()}) => {\r\n\r\n    return (\r\n        <div style={{overflow:'scroll'}}>\r\n        <table className=\"table table-striped\">\r\n            {tableHeader(\"No\", \"Nama\", \"Poin\", \"Deskripsi\", \"Kategori\", \"Pemutihan\", \"Opsi\")}\r\n            <tbody>\r\n                    {props.items.map((item, i)=>{\r\n                        return (\r\n                            <tr key={`RulePoint-${i}`}>\r\n                                <td>{i+1+props.startingNumber}</td>\r\n                                <td>{item.name}</td>\r\n                                <td>{item.point}</td>\r\n                                <td>{item.description}</td>\r\n                                <td>{item.category?.name}</td>\r\n                                <td>{item.droppable ? \"Ya\" : \"TIdak\"}</td>\r\n                                <td><EditDeleteButton \r\n                                    recordLoaded={props.recordLoaded}\r\n                                    recordDeleted={props.recordDeleted}\r\n                                    record={item} modelName={'rulepoint'}/></td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n        </table>\r\n        </div>\r\n    )\r\n}\r\nconst RecordForm = (props: { categories:Category[], formRef:React.RefObject<Modal>, \r\n    updateRecordProp(e: ChangeEvent): any, \r\n    resetForm():any, onSubmit(): any,\r\n    record: RulePoint, reloadCategories():any }) => {\r\n\r\n    return (\r\n        <form className=\"record-form mb-3\" onSubmit={(e) => { e.preventDefault(); props.onSubmit() }}>\r\n            <Modal show={false} ref={props.formRef} toggleable={true} title=\"Record Form\" >\r\n                <FormGroup label=\"Nama\"><input value={props.record.name ?? \"\"} onChange={props.updateRecordProp} className=\"form-control-sm\" name=\"name\" required/></FormGroup>\r\n                <FormGroup label=\"Poin\"><input type=\"number\" value={props.record.point} onChange={props.updateRecordProp} className=\"form-control-sm\" name=\"point\" required/></FormGroup>\r\n                <FormGroup label=\"Deskripsi\">\r\n                    <textarea className=\"form-control\" name=\"description\" onChange={props.updateRecordProp} value={props.record.description ?? \"\"}  />\r\n                </FormGroup>\r\n                <FormGroup label=\"Dapat diputihkan\">\r\n                    <select className=\"form-control-sm\" data-type=\"boolean\" name=\"droppable\" onChange={props.updateRecordProp} value={props.record.droppable == true ? \"true\":\"false\"} required>\r\n                        <option value={\"true\"} >Ya</option>\r\n                        <option value={\"false\"}>Tidak</option>\r\n                    </select>\r\n                </FormGroup>\r\n                <FormGroup label=\"Category\">\r\n                    <div className=\"input-group\">\r\n                        <select required value={props.record.category_id} className=\"form-control-sm\" name=\"category_id\" onChange={props.updateRecordProp} >\r\n                            {props.categories.map((c)=>{\r\n\r\n                                return <option key={\"cat-\"+c.id} value={c.id}>{c.name}</option>\r\n                            })}\r\n                        </select>\r\n                        <div className=\"input-group-append\">\r\n                        <AnchorWithIcon className=\"btn btn-sm\" iconClassName=\"fas fa-redo\" onClick={props.reloadCategories}>Reload</AnchorWithIcon>\r\n                        </div>\r\n                    </div>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-sm\" />\r\n                    &nbsp;\r\n                    <input value=\"Reset\" type=\"reset\" className=\"btn btn-secondary btn-sm\" onClick={(e)=>props.resetForm()} />\r\n                </FormGroup>\r\n            </Modal>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default withRouter(\r\n    connect(\r\n        mapCommonUserStateToProps\r\n    )(RulePointManagement)\r\n)","import { join } from \"path\";\r\nimport { twoDigits } from './StringUtil';\r\n\r\nexport const MONTHS = [\r\n    \"Januari\",\r\n    \"Februari\",\r\n    \"Maret\",\r\n    \"April\",\r\n    \"Mei\",\r\n    \"Juni\",\r\n    \"Juli\",\r\n    \"Agustus\",\r\n    \"September\",\r\n    \"Oktober\",\r\n    \"November\",\r\n    \"Desember\"\r\n]\r\n\r\nconst leapMonths = [ 31, (  29  ), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\r\nconst regularMonths = [ 31, (  28  ), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\r\n/**\r\n * \r\n * @param {Number} month starts at 0\r\n */\r\nexport const getMonthDays = (month:number, year:number = new Date().getFullYear()) : number=> {\r\n    if(year % 4 == 0){\r\n        return leapMonths[month];\r\n    }\r\n    return regularMonths[month];\r\n}\r\n\r\nexport const getInputReadableDate = (date:Date) :string => {\r\n    const year = date.getFullYear();\r\n\r\n    const arr = [year, twoDigits(date.getMonth()+1), twoDigits(date.getDate())];\r\n    return arr.join(\"-\");\r\n}\r\nexport function addDays(date:Date, days:number) :Date{\r\n    const result:Date = new Date(date);\r\n    result.setDate(result.getDate() + days);\r\n    return result;\r\n  }\r\n  export const getDiffDays = (a:Date, b:Date) : number => {\r\n    // Discard the time and time-zone information.\r\n\r\n    console.debug(\"DIFF DATE \",a,\" vs \", b);\r\n    const _MS_PER_DAY = 1000 * 60 * 60 * 24;\r\n    const utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());\r\n    const utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate()); \r\n    return Math.floor((utc2 - utc1) / _MS_PER_DAY);\r\n}\r\n\r\nexport const parseDate = (s:string) :Date => {\r\n    var b:string[] = s.split(/\\D/);\r\n    var m = parseInt(b[1]);\r\n    return new Date(parseInt(b[0]), --m, parseInt(b[2]));\r\n  }\r\nexport const timerString = (inputSeconds:number ) => {\r\n    let hour = 0;\r\n    let minutes:number = 0;\r\n    let seconds = 0;\r\n    let totalSeconds = inputSeconds;\r\n    if (totalSeconds >= 3600) {\r\n        hour = totalSeconds/ 3600;\r\n        totalSeconds = totalSeconds % 3600;\r\n    }\r\n    if (totalSeconds >= 60) {\r\n        minutes = totalSeconds/60;\r\n        totalSeconds = totalSeconds%60;\r\n    }\r\n    seconds = totalSeconds; \r\n\r\n    return  twoDigits(hour)+\":\"+twoDigits(Math.floor(minutes))+\":\"+twoDigits(seconds);\r\n}\r\n\r\n\r\n\r\n","import React, { ChangeEvent } from 'react';\nimport Filter from '../../models/commons/Filter';\nimport { MONTHS } from './../../utils/DateUtil';\n\nconst days = (): number[] => {\n    const arr: number[] = [];\n    for (let i = 1; i <= 31; i++) {\n        arr.push(i);\n    }\n    return arr;\n}\nconst  FilterPeriod = (props: { showlabel?:boolean, hideDay?:boolean, mode?: string, filter: Filter, onChange(e: ChangeEvent): any, }) => {\n    const filter: Filter = props.filter;\n    if (props.mode == \"to\") {\n        return (\n            <React.Fragment>\n                {props.showlabel === true? <input className=\"form-control-sm\" value=\"Sampai tanggal\" disabled /> :null}\n                {props.hideDay != true?\n                <select data-type=\"number\" className=\"form-control-sm\" name=\"dayTo\" value={filter.dayTo ?? 0} onChange={props.onChange}>\n                    {days().map((d) => {\n                        return <option key={\"f-d-\" + d} value={d}>{d == 0 ? 'day' : d}</option>\n                    })}\n                </select> :null}\n                <select data-type=\"number\" className=\"form-control-sm\" name=\"monthTo\" value={filter.monthTo ?? 0} onChange={props.onChange}>\n                    {MONTHS.map((m, i) => {\n                        return <option key={\"f-m-\" + i} value={(i + 1)}>{m}</option>\n                    })}\n                </select>\n                <input name=\"yearTo\" placeholder=\"year\" className=\"form-control-sm\" value={filter.yearTo ?? \"\"} onChange={props.onChange} />\n            </React.Fragment>\n\n        )\n    }\n    return (\n        <React.Fragment>\n            {props.showlabel === true?<input className=\"form-control-sm\" value=\"Dari tanggal\" disabled /> :null}\n            {props.hideDay != true?<select data-type=\"number\" className=\"form-control-sm\" name=\"day\" value={filter.day ?? 0} onChange={props.onChange}>\n                {days().map((d) => {\n                    return <option key={\"f-d-\" + d} value={d}>{d == 0 ? 'day' : d}</option>\n                })}\n            </select>: null}\n            <select data-type=\"number\" className=\"form-control-sm\" name=\"month\" value={filter.month ?? 0} onChange={props.onChange}>\n                {MONTHS.map((m, i) => {\n                    return <option key={\"f-m-\" + i} value={(i + 1)}>{m}</option>\n                })}\n            </select>\n            <input name=\"year\" placeholder=\"year\" className=\"form-control-sm\" value={filter.year?? \"\"} onChange={props.onChange} />\n        </React.Fragment>\n    )\n}\n\nexport default  FilterPeriod;","import React, { ChangeEvent } from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport Student from '../../../models/Student';\r\nimport StudentService from '../../../services/StudentService';\r\nimport Filter from '../../../models/commons/Filter';\r\nimport WebResponse from '../../../models/commons/WebResponse';\r\nimport Class from '../../../models/Class';\r\nimport FormGroup from '../../form/FormGroup';\r\nimport NavigationButtons from '../../navigation/NavigationButtons';\r\nimport { tableHeader } from '../../../utils/CollectionUtil';\r\nimport AnchorWithIcon from '../../navigation/AnchorWithIcon';\r\nimport MasterDataService from '../../../services/MasterDataService';\r\nimport BaseManagementPage from '../management/BaseManagementPage';\r\nimport Spinner from '../../loader/Spinner';\r\nimport FilterPeriod from './../../form/FilterPeriod';\r\nimport { MONTHS } from './../../../utils/DateUtil';\r\nimport ToggleButton from './../../navigation/ToggleButton';\r\nclass State {\r\n    items: Student[] = [];\r\n    classes: Class[] = [];\r\n    totalData: number = 0;\r\n    filter: Filter = new Filter();\r\n    loading: boolean = false;\r\n}\r\nclass StudentList extends BaseManagementPage {\r\n    state: State = new State();\r\n    studentService: StudentService;\r\n    masterDataService: MasterDataService;\r\n    constructor(props) {\r\n        super(props, 'student');\r\n        this.studentService = this.getServices().studentService;\r\n        this.masterDataService = this.getServices().masterDataService;\r\n        this.state.filter.limit = 10;\r\n        this.state.filter.day = this.state.filter.dayTo = new Date().getDate();\r\n        this.state.filter.month = this.state.filter.monthTo = new Date().getMonth() + 1;\r\n        this.state.filter.year = this.state.filter.yearTo = new Date().getFullYear();\r\n        this.state.filter.fieldsFilter = {\r\n            'class_id': '',\r\n            'with_point_record': false\r\n        }\r\n    } \r\n    itemsLoaded = (response: WebResponse) => {\r\n        this.setState({ items: response.items, totalData: response.totalData });\r\n    }\r\n    classesLoaded = (response: WebResponse) => {\r\n        this.setState({ classes: response.items }, this.loadItems);\r\n    }\r\n    loadItems = () => {\r\n        this.commonAjax(\r\n            this.masterDataService.list,\r\n            this.itemsLoaded,\r\n            this.showCommonErrorAlert,\r\n            { modelName: 'student', filter: this.state.filter }\r\n        )\r\n    }\r\n    loadAtPage = (page: number) => {\r\n        const filter = this.state.filter;\r\n        filter.page = page;\r\n        this.setState({ filter: filter }, this.loadItems);\r\n    }\r\n    loadClasses = () => {\r\n        this.commonAjax(\r\n            this.studentService.getClasses,\r\n            this.classesLoaded,\r\n            this.showCommonErrorAlert,\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.validateLoginStatus(() => {\r\n            this.scrollTop();\r\n            this.loadClasses();\r\n        })\r\n    }\r\n    updateSelectedClass = (e: ChangeEvent) => {\r\n        const target = e.target as HTMLSelectElement;\r\n        const filter = this.state.filter;\r\n        if (!filter.fieldsFilter) {\r\n            filter.fieldsFilter = {};\r\n        }\r\n        filter.fieldsFilter['class_id'] = target.value;\r\n        this.setState({ filter: filter });\r\n    }\r\n    inputPage = (type: string, s: Student) => {\r\n        switch (type) {\r\n            case 'pointrecord':\r\n                this.inputPoint(s);\r\n                break;\r\n            case 'medicalrecord':\r\n                this.inputMedicalRecord(s);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    inputPoint = (student: Student) => {\r\n        this.props.history.push({\r\n            pathname: \"/dormitoryactivity/inputpoint\",\r\n            state: { student: student }\r\n        })\r\n    }\r\n    inputMedicalRecord = (student: Student) => {\r\n        this.props.history.push({\r\n            pathname: \"/dormitoryactivity/medicalrecord\",\r\n            state: { student: student }\r\n        })\r\n    }\r\n    updateWithPointRecord = (val: boolean) => {\r\n        const filter = this.state.filter;\r\n        if (filter.fieldsFilter) {\r\n            filter.fieldsFilter['with_point_record'] = val;\r\n        }\r\n        this.setState({ filter: filter });\r\n    }\r\n    onSubmit = (e) => { e.preventDefault(); this.loadAtPage(0) }\r\n    render() {\r\n\r\n        const filter = this.state.filter;\r\n        const classes = this.state.classes;\r\n        const defaultClass: Class = { id: \"\", level: \"Semua Kelas\", sekolah: {} };\r\n        const selectedClassId = filter.fieldsFilter && filter.fieldsFilter['class_id'] ? filter.fieldsFilter['class_id'] : \"\";\r\n        const showPointRecord = filter.fieldsFilter && filter.fieldsFilter['with_point_record'] && filter.fieldsFilter['with_point_record'] == true;\r\n        return (\r\n            <div className=\"container-fluid section-body\">\r\n                <h2>Siswa</h2>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                    <FormGroup label=\"Cari\">\r\n                        <div className=\"input-group\">\r\n                            <input name=\"name\" placeholder=\"Nama\" className=\"form-control-sm\" value={filter.fieldsFilter ? filter.fieldsFilter['name'] : \"\"} onChange={this.updateFieldsFilter} />\r\n                            <select value={selectedClassId} onChange={this.updateFieldsFilter} className=\"form-control-sm\" name=\"class_id\">\r\n                                {[defaultClass, ...classes].map((c) => {\r\n                                    return <option key={'class_' + c.id} value={c.id}>{c.level}{c.rombel} - {c.sekolah?.nama}</option>\r\n                                })}\r\n                            </select>\r\n                        </div>\r\n                    </FormGroup>\r\n                    <FormGroup label=\"Jumlah Tampilan\">\r\n                        <input name=\"limit\" type=\"number\" className=\"form-control-sm\" value={filter.limit ?? 5} onChange={this.updateFilter} />\r\n                    </FormGroup>\r\n                    <FormGroup label=\"Periode\">\r\n                        <ToggleButton active={showPointRecord}\r\n                            yesLabel={\"tampilkan poin\"} noLabel=\"tanpa poin\"\r\n                            onClick={this.updateWithPointRecord}\r\n                        />\r\n                        {showPointRecord ?\r\n                            <React.Fragment>\r\n                                <div className=\"input-group\">\r\n                                    <FilterPeriod filter={filter} onChange={this.updateFilter} />\r\n                                </div>\r\n                                <div className=\"input-group\">\r\n                                    <FilterPeriod mode={\"to\"} filter={filter} onChange={this.updateFilter} />\r\n                                </div>\r\n                            </React.Fragment> : null}\r\n                    </FormGroup>\r\n                    {showPointRecord ?\r\n                        <FormGroup>\r\n                            {filter.day} {MONTHS[(filter.month ?? 1) - 1]} {filter.year} - {filter.dayTo} {MONTHS[(filter.monthTo ?? 1) - 1]} {filter.yearTo}\r\n                        </FormGroup>\r\n                        : null}\r\n                    <FormGroup>\r\n                        <input type=\"submit\" className=\"btn btn-primary btn-sm\" value=\"Submit\" />\r\n                    </FormGroup>\r\n\r\n                </form>\r\n                <p />\r\n                <NavigationButtons onClick={this.loadAtPage} activePage={filter.page ?? 0} limit={filter.limit ?? 10} totalData={this.state.totalData} />\r\n                <ItemsList showPointRecord={showPointRecord} loading={this.state.loading} inputPage={this.inputPage} startingNumber={(filter.page ?? 0) * (filter.limit ?? 10)} items={this.state.items} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst ItemsList = (props: { showPointRecord: boolean, loading: boolean, startingNumber: number, inputPage(type: string, s: Student): any, items: Student[] }) => {\r\n\r\n    return (\r\n        <div style={{ overflow: 'scroll' }}>\r\n            <table className=\"table table-striped\">\r\n                {props.showPointRecord ? tableHeader(\"No\", \"\", \"Name\", \"Kelas\", \"Point\") : tableHeader(\"No\", \"\", \"Name\", \"Kelas\")}\r\n                <tbody>\r\n                    {props.loading ?\r\n                        <tr><td colSpan={5}><Spinner /></td></tr>\r\n\r\n                        : props.items.map((student, i) => {\r\n\r\n                            return (\r\n                                <tr key={\"student-\" + i}>\r\n                                    <td>{i + 1 + props.startingNumber}</td>\r\n                                    <td>\r\n                                        <div style={{ width: '100px' }}>\r\n                                            <AnchorWithIcon className=\"btn\" onClick={(e) => props.inputPage('pointrecord', student)} iconClassName=\"far fa-edit\" />\r\n                                            <AnchorWithIcon className=\"btn\" onClick={(e) => props.inputPage('medicalrecord', student)} iconClassName=\"fas fa-notes-medical\" />\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        {student.user?.name}</td>\r\n                                    <td>{student.kelas?.level} {student.kelas?.rombel} {student.kelas?.sekolah?.nama}</td>\r\n                                    {props.showPointRecord ? <td>{student.point}</td> : null}\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps\r\n)(StudentList))","\r\nimport BaseEntity from './BaseEntity';\r\nimport User from './User';\r\nimport Class from './Class';\r\nexport default class Student extends BaseEntity\r\n{\r\n    nis?:string;\r\n    kelas?:Class;\r\n    user?:User;\r\n\r\n    point?:number;\r\n}","\nimport BaseEntity from './BaseEntity';\nimport { parseDate } from './../utils/DateUtil';\nimport { twoDigits as td } from './../utils/StringUtil';\nimport RulePoint from './RulePoint';\nimport Student from './Student';\nimport Pictures from './Pictures';\nimport { contextPath } from './../constant/Url';\nexport default class PointRecord extends BaseEntity\n{\n    setTime(h: number, m: number, s: number) {\n        this.time = [td(h), td(m), td(s)].join(\":\");\n    }\n    setDate = (d: Date) => {\n        this.day = d.getDate();\n        this.month = d.getMonth() + 1;\n        this.year = d.getFullYear();\n    }\n    dateString = () :string=>{\n        return `${this.year}-${td(this.month)}-${td(this.day)}`;\n    }\n    location?:string;\n    day:number = new Date().getDate();\n    month:number = new Date().getMonth()+1;\n    year:number = new Date().getFullYear();\n    time:string;\n    description?:string;\n    student_id?:string;\n    point_id?:number;\n\n    rule_point?:RulePoint;\n    student?:Student;\n    dropped_at?:Date;\n\n    pictures:Pictures[] = [];\n\n    constructor() {\n        super();\n        const d = new Date();\n        this.time =  [td(d.getHours()), td(d.getMinutes()), td(d.getSeconds())].join(\":\");\n    }\n\n    /**\n     * get picture URL\n     */\n    getPicture = () :string|null => {\n        if (this.pictures.length == 0) {\n            return null;\n        }\n        return  contextPath()+'upload/POINT_RECORD/'+this.pictures[0].name;\n    }\n\n    getDate = ():Date => {\n        return parseDate(this.dateString());\n    }\n\n    getTimestamp = () :string => {\n\n        const d = this.getDate();\n        const day = DAYS[d.getDay()];\n        return day+\", \"+[\n            td(d.getDate()), td(d.getMonth()+1), d.getFullYear()\n        ].join(\"/\")+\" \"+this.time;\n    }\n\n    public static clone = (object:PointRecord) => {\n        return Object.assign(new PointRecord(), object);\n    }\n}\n\nconst DAYS = [\n    \"Ahad\", \"Senin\", \"Selasa\", \"Rabu\", \"Kamis\", \"Jumat\", \"Sabtu\"\n]","import React from 'react';\nimport { Component, ChangeEvent } from 'react';\nimport { twoDigits } from './../../utils/StringUtil';\ninterface Props{\n    onChange(h:number,m:number,s:number):any,\n    value:string,\n}\nclass State {\n    hour:number = new Date().getHours();\n    minute:number = new Date().getMinutes();\n    second:number = new Date().getSeconds();\n}\nconst hours:number[] = [\n    0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,\n];\nconst minutesOrSeconds = ()  : number[]=> {\n    const arr:number[]=  [];\n    for (let i = 1; i < 60; i++) {\n        arr.push(i);   \n    }\n    return arr; \n}\nexport default class InputTime extends Component<Props, any> {\n    state:State = new State();\n    minutes:number[];\n    seconds:number[] ;\n    constructor (props) {\n        super(props);\n        this.minutes = minutesOrSeconds();\n        this.seconds = minutesOrSeconds();\n    }\n    componentDidMount() {\n        this.updateFromProps();\n    }\n    updateFromProps = () => {\n        try {\n            const val = this.props.value.split(\":\");\n            this.setState({hour: parseInt(val[0]), minute: parseInt(val[1]), second: parseInt(val[2])});\n        } catch (error) {\n            \n        }\n    }\n    updateValue = (e:ChangeEvent) => {\n        const target = e.target as HTMLSelectElement;\n        if (target) {\n            const name = target.name;\n            this.setState({[name]: target.value}, this.onChange);\n        }\n        \n    }\n    setNow = () => {\n        const date = new Date();\n        this.setState({\n            hour: date.getHours(),\n            minute: date.getMinutes(),\n            second: date.getSeconds()\n        }, this.onChange)\n    }\n    onChange = () => {\n        this.props.onChange(this.state.hour, this.state.minute, this.state.second)\n    }\n    render() {\n         \n        return (<div className=\"form-control bg-light\">\n            <select name=\"hour\" style={{border:'none'}} value={this.state.hour} onChange={this.updateValue} >\n                {hours.map((hour)=>{\n                    return <option key={\"HOUR-\"+hour} value={hour} >{twoDigits(hour)}</option>\n                })}\n            </select>\n            <select name=\"minute\" style={{border:'none'}}  value={this.state.minute} onChange={this.updateValue}>\n                {this.minutes.map((min)=>{\n                    return <option key={\"MIN-\"+min} value={min} >{twoDigits(min)}</option>\n                })}\n            </select>\n            <select name=\"second\" style={{border:'none'}}  value={this.state.second} onChange={this.updateValue}>\n                {this.seconds.map((sec)=>{\n                    return <option key={\"SEC-\"+sec} value={sec} >{twoDigits(sec)}</option>\n                })}\n            </select>\n            <a style={{marginLeft: 5}}  onClick={this.setNow} ><i className=\"fas fa-history\"/></a>\n        </div>)\n    }\n}","import React, { ChangeEvent } from 'react'\nimport BaseComponent from '../../../BaseComponent';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\nimport RulePoint from '../../../../models/RulePoint';\nimport FormGroup from '../../../form/FormGroup';\nimport PointRecord from '../../../../models/PointRecord';\nimport { parseDate } from '../../../../utils/DateUtil';\nimport InputTime from '../../../form/InputTime';\nimport { getAttachmentInfoFromFile } from '../../../../utils/ComponentUtil';\nimport AttachmentInfo from '../../../../models/settings/AttachmentInfo';\nclass State {\n    pointRecord: PointRecord = new PointRecord();\n}\nclass FormStepThree extends BaseComponent {\n    state: State = new State();\n    constructor(props) {\n        super(props, true);\n    }\n\n    onSubmit = () => {\n        this.showConfirmation(\"Submit Data?\")\n            .then(ok => {\n                if (ok) {  \n                    this.props.submit(this.state.pointRecord);\n                }\n            })\n    }\n    get rulePoint (): RulePoint  {\n        return this.props.rulePoint;\n    }\n    updatePointRecord = (e: ChangeEvent) => {\n        const target = e.target as any;\n        const pointRecord = this.state.pointRecord;\n        pointRecord[target.name] = target.value;\n        this.setState({ pointRecord: pointRecord });\n\n    }\n    updateDate = (e: ChangeEvent) => {\n        const date: Date = parseDate((e.target as HTMLInputElement).value);\n        const pointRecord = this.state.pointRecord;\n        pointRecord.setDate(date);\n        this.setState({ pointRecord: pointRecord });\n    }\n    updateTime = (h: number, m: number, s: number) => {\n        const pointRecord = this.state.pointRecord;\n        pointRecord.setTime(h, m, s);\n        this.setState({ pointRecord: pointRecord });\n    }\n    setAttachment = (e: ChangeEvent) => {\n        const target = e.target as HTMLInputElement;\n        getAttachmentInfoFromFile(target).then((attachment: AttachmentInfo) => {\n            this.props.setAttachment(attachment);\n        });\n    }\n    removeAttachment = () => {\n        this.props.removeAttachment();\n    }\n    getAttachment = (): AttachmentInfo | undefined => {\n        return this.props.attachmentInfo;\n    }\n    render() {\n        const rulePoint: RulePoint = this.rulePoint;\n        const pointRecord: PointRecord = this.state.pointRecord;\n        const attachment = this.getAttachment();\n        return (\n            <form onSubmit={(e) => { e.preventDefault(); this.onSubmit() }}>\n                <FormGroup label=\"Category\">{rulePoint.category?.name} - {rulePoint.name} <span className=\"badge badge-dark\">{rulePoint.point}</span></FormGroup>\n                <FormGroup label=\"Date\">\n                    <input type=\"date\" className=\"form-control\" onChange={this.updateDate} name=\"date\" value={pointRecord.dateString()} />\n                </FormGroup>\n                <FormGroup label=\"Time\">\n                    <InputTime onChange={this.updateTime} value={pointRecord.time} />\n                </FormGroup>\n                <FormGroup label=\"Location\">\n                    <input className=\"form-control\" onChange={this.updatePointRecord} name=\"location\" value={pointRecord.location ?? \"\"} />\n                </FormGroup>\n                <FormGroup label=\"Picture\">\n                    {attachment ?\n                        <>\n                            <img style={{marginRight:10}} className=\"border border-dark\" src={attachment.url} width={100} height={100} />\n                            <AnchorWithIcon iconClassName=\"fas fa-times\" className=\"btn btn-danger\" onClick={this.removeAttachment}></AnchorWithIcon>\n                        </>\n                        : <input type=\"file\" accept={\"image/*\"} className=\"form-control\" onChange={this.setAttachment} name=\"attachment\" />\n                    }\n                </FormGroup>\n                <FormGroup label=\"Description\">\n                    <textarea value={pointRecord.description ?? \"\"} onChange={this.updatePointRecord} name=\"description\" className=\"form-control\"></textarea>\n                </FormGroup>\n                <AnchorWithIcon className=\"btn btn-secondary float-left\" iconClassName=\"fas fa-arrow-left\" onClick={this.props.onBack} >Back</AnchorWithIcon>\n                <button className=\"btn btn-success float-right\" >Submit</button>\n            </form>\n        )\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(FormStepThree)\n)","\r\nimport React, { Component } from 'react';\r\nexport default class SimpleError extends Component<any, any>\r\n{\r\n\r\n    render() {\r\n        if (this.props.show == false) return null;\r\n        return (\r\n            <div style={ this.props.style} className=\"alert alert-danger\">\r\n                {this.props.children??\"Error Occured\"}\r\n            </div>\r\n        )\r\n    }\r\n}","\nimport React, { ChangeEvent } from 'react'\nimport BaseComponent from '../../../BaseComponent';\nimport MasterDataService from '../../../../services/MasterDataService';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\nimport FormGroup from '../../../form/FormGroup';\nimport Category from '../../../../models/Category';\nimport RulePoint from '../../../../models/RulePoint';\nimport WebRequest from '../../../../models/commons/WebRequest';\nimport WebResponse from '../../../../models/commons/WebResponse';\nimport Spinner from '../../../loader/Spinner';\nimport SimpleError from '../../../alert/SimpleError';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\nclass State { \n    rulePoints: RulePoint[]  = []; \n    loading:boolean = false;\n}\nclass FormStepTwo extends BaseComponent {\n    masterDataService: MasterDataService;\n    state:State = new State();\n    constructor(props) {\n        super(props, true);\n        this.masterDataService = this.getServices().masterDataService;\n    }\n    startLoading = () => this.setState({loading:true});\n    endLoading = () => this.setState({loading:false});\n    rulePointsLoaded = (response: WebResponse) => {\n        this.setState({ rulePoints: response.items }, () => {\n            if (response.items.length > 0) {\n                if (!this.props.rulePoint) {\n                    this.setRulePoint(response.items[0]);\n                }\n            }\n        });\n    }\n    \n    loadRulePoints = () => {\n        if (null == this.getCategory()) return;\n        const req: WebRequest = {\n            filter: {limit:0, fieldsFilter:{category_id:this.getCategory().id}},\n            modelName: 'rulepoint',\n        }\n        this.commonAjax(\n            this.masterDataService.list,\n            this.rulePointsLoaded,\n            this.showCommonErrorAlert,\n            req\n        )\n    }\n    getCategory = ()  : Category => {\n        return this.props.category;\n    }\n    componentDidMount() {\n        super.componentDidMount();\n        this.loadRulePoints();\n    }\n    onSubmit = () => {\n        this.props.onSubmit();\n    }\n    setRulePoint = (r:RulePoint) => {\n        this.props.setRulePoint(r);\n    }\n    updateRulePoint = (e:ChangeEvent) => {\n        const select = (e.target as HTMLSelectElement);\n        const filteredItems = this.state.rulePoints.filter((r:RulePoint)=>{\n            return r.id.toString() == select.value;\n        })\n        if (filteredItems.length == 0) return;\n\n        this.setRulePoint(filteredItems[0]);\n    }\n    render() {\n        const category = this.getCategory();\n\n        if (null == category) {\n            return <SimpleError>Category not found</SimpleError>\n        }\n        if (this.state.loading) {\n            return <Spinner/>\n        }\n        if (this.state.rulePoints.length == 0) {\n            return <SimpleError>Rule Points for {category.name} not found</SimpleError>\n        }\n\n        const rulePoints =this.state.rulePoints;\n        return (\n            <form onSubmit={e => { e.preventDefault(); this.onSubmit() }} >\n                <FormGroup label=\"Category\" children={category.name}/>\n                <FormGroup label=\"Name\">\n                <select className=\"form-control\" onChange={this.updateRulePoint} value={this.props.rulePoint ? this.props.rulePoint.id : null} >\n                    {rulePoints.map((r:RulePoint) => {\n                        return <option key={`select-rulePoint-${r.id}`} value={r.id}>{r.name}</option>\n                    })}\n                </select>\n                </FormGroup>\n                <FormGroup label=\"Point\" children={this.props.rulePoint?.point}/>\n                <hr/>\n                <AnchorWithIcon className=\"btn btn-secondary float-left\"  iconClassName=\"fas fa-arrow-left\" onClick={this.props.onBack} >Back</AnchorWithIcon>\n                <AnchorWithIcon className=\"btn btn-info float-right\" iconClassName=\"fas fa-arrow-right\" onClick={this.onSubmit} >Next</AnchorWithIcon>\n            </form>\n        );\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(FormStepTwo)\n)","\nimport React, { ChangeEvent } from 'react'\nimport BaseComponent from '../../../BaseComponent';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\nimport WebResponse from '../../../../models/commons/WebResponse';\nimport WebRequest from '../../../../models/commons/WebRequest';\nimport Category from '../../../../models/Category';\nimport MasterDataService from '../../../../services/MasterDataService';\nimport FormGroup from '../../../form/FormGroup';\nimport SimpleError from '../../../alert/SimpleError';\nimport Spinner from '../../../loader/Spinner';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\nimport Filter from '../../../../models/commons/Filter';\nclass State {\n    categories: Category[] = [];\n    loading: boolean = false;\n}\nclass FormStepOne extends BaseComponent {\n    state: State = new State();\n    masterDataService: MasterDataService;\n    constructor(props) {\n        super(props, true);\n        this.masterDataService = this.getServices().masterDataService;\n    }\n    categoriesLoaded = (response: WebResponse) => {\n        this.setState({ categories: response.items, categoriesLoaded: true }, () => {\n            if (response.items.length > 0) {\n                if (!this.props.category) {\n                    this.setCategory(response.items[0]);\n                }\n            }\n        });\n    }\n    startLoading = () => this.setState({ loading: true });\n    endLoading = () => this.setState({ loading: false });\n    setCategory = (c: Category) => {\n        this.props.setSelectedCategory(c);  \n    }\n    loadCategories = () => {\n        const req: WebRequest = {\n            filter: Filter.withLimit(0),\n            modelName: 'category'\n        }\n        this.commonAjax(\n            this.masterDataService.list,\n            this.categoriesLoaded,\n            this.showCommonErrorAlert,\n            req\n        )\n    }\n    componentDidMount() {\n        super.componentDidMount();\n        this.loadCategories();\n    }\n    onSubmit = () => {\n        this.props.onSubmit();\n    }\n    updateCategory = (e:ChangeEvent) => {\n        const select = (e.target as HTMLSelectElement);\n        const filteredItems = this.state.categories.filter((c:Category)=>{\n            return c.id.toString() == select.value;\n        })\n        if (filteredItems.length == 0) return;\n\n        this.setCategory(filteredItems[0]);\n    }\n    render() {\n        const categories = this.state.categories;\n        const category = this.props.category;\n        if (this.state.loading) {\n            return <Spinner />\n        }\n        if (categories.length == 0) {\n            return <SimpleError>Categories not found</SimpleError>\n        }\n        return (\n            <form onSubmit={(e) => { e.preventDefault(); this.onSubmit() }}>\n                <FormGroup label=\"Category\">\n                    <select className=\"form-control\" onChange={this.updateCategory} value={category ? category.id??\"\" : \"\"} >\n                        {categories.map((c) => {\n                            return <option key={`select-cat-${c.id}`} value={c.id}>{c.name}</option>\n                        })}\n                    </select>\n                </FormGroup>\n                <hr/>\n                <AnchorWithIcon className=\"btn btn-secondary float-left\" iconClassName=\"fas fa-arrow-left\" onClick={this.props.onBack} >Back</AnchorWithIcon>\n                \n                <AnchorWithIcon className=\"btn btn-info float-right\" iconClassName=\"fas fa-arrow-right\" onClick={this.onSubmit}>Next</AnchorWithIcon>\n            </form >\n\n\n        )\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(FormStepOne)\n)","\nimport React from 'react'\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\nimport Student from '../../../models/Student';\nimport AnchorWithIcon from '../../navigation/AnchorWithIcon';\nimport Modal from '../../container/Modal';\nimport FormStepThree from './form/FormStepThree';\nimport FormStepTwo from './form/FormStepTwo';\nimport FormStepOne from './form/FormStepOne';\nimport Category from '../../../models/Category';\nimport RulePoint from '../../../models/RulePoint';\nimport SimpleError from '../../alert/SimpleError';\nimport PointRecord from '../../../models/PointRecord';\nimport StudentService from '../../../services/StudentService';\nimport WebResponse from '../../../models/commons/WebResponse';\nimport FormGroup from '../../form/FormGroup';\nimport { doItLater } from '../../../utils/EventUtil';\nimport AttachmentInfo from './../../../models/settings/AttachmentInfo';\nimport BasePage from './../BasePage';\n\nclass State {\n    student?: Student\n    category?: Category;\n    rulePoint?: RulePoint;\n    formStep: number = 0;\n    savedRecord?: PointRecord;\n    attachmentInfo?:AttachmentInfo;\n}\nclass InputPointForm extends BasePage {\n    state: State = new State();\n    studentService: StudentService;\n    totalStep: number = 4;\n    constructor(props) {\n        super(props, \"Input Point Record\", true);\n        this.studentService = this.getServices().studentService;\n    }\n    validateStudentData = () => {\n        if (!this.props.location.state) {\n            return;\n        }\n        const student = this.props.location.state.student;\n        if (student) {\n            this.setState({ student: Object.assign(new Student(), student) });\n        }\n    }\n    componentDidMount() {\n        super.componentDidMount();\n        this.validateStudentData();\n        this.scrollTop();\n        doItLater(()=>{\n            this.nextStep(1);\n        }, 200);\n        \n    }\n    setAttachment = (attachmentInfo:AttachmentInfo|undefined) => {\n        this.setState({attachmentInfo:attachmentInfo});\n    }\n    removeStudent = () => {\n       this.setState({formStep: 0}, ()=>{\n           doItLater(()=>{\n               this.setState({student:undefined})\n           }, 500); \n       })\n    }\n    removeAttachment = () => {\n        this.setAttachment(undefined);\n    }\n    setCategory = (c: Category) => {\n        this.setState({ category: c });\n    }\n    setRulePoint = (r: RulePoint) => {\n        this.setState({ rulePoint: r });\n    }\n    nextStep = (step: number) => {\n        this.setState({ formStep: step });\n    }\n    submitRecord = (record: PointRecord) => {\n        \n        if (!this.state.student || !this.state.rulePoint) {\n            alert(\"ERROR: student or rulePoint missing!\");\n            return;\n        }\n        record.student_id = this.state.student?.id;\n        record.point_id = this.state.rulePoint?.id;\n        this.commonAjax(\n            this.studentService.submitPointRecord,\n            this.recordSubmitted,\n            this.showCommonErrorAlert,\n            record, this.state.attachmentInfo\n        )\n    }\n    recordSubmitted = (response: WebResponse) => {\n        this.setState({ savedRecord: response.item, formStep: 4 }, this.scrollTop);\n    }\n    render() {\n        const student: Student | undefined = this.state.student;\n        if (!student) {\n            return <Warning />\n        }\n\n        return (\n            <div className=\"container-fluid section-body\">\n                <h2>Form Input Pelanggaran</h2>\n                <Modal title={student.user?.name + \" - \" + student.kelas?.level + student.kelas?.rombel + \" \" + student.kelas?.sekolah?.nama}>\n\n                    <Progress step={this.state.formStep} totalStep={this.totalStep} />\n                    {this.state.formStep == 1 ?\n                         <FormStepOne category={this.state.category} \n                            onBack={this.removeStudent}\n                            setSelectedCategory={this.setCategory}\n                            onSubmit={() => { this.nextStep(2) }} />\n                        : null}\n                    {this.state.formStep == 2 && this.state.category ?\n                        <FormStepTwo\n                            rulePoint={this.state.rulePoint}\n                            \n                            setRulePoint={this.setRulePoint}\n                            category={this.state.category} onBack={() => this.nextStep(1)} onSubmit={() => { this.nextStep(3) }}\n                        /> : null}\n                    {this.state.formStep == 3 && this.state.category && this.state.rulePoint ?\n                        <FormStepThree submit={this.submitRecord}\n                            attachmentInfo={this.state.attachmentInfo}\n                            setAttachment={this.setAttachment}\n                            removeAttachment={this.removeAttachment} \n                            rulePoint={this.state.rulePoint}\n                            onBack={() => this.nextStep(2)}\n                        /> : null}\n                    {this.state.formStep == 4 && this.state.savedRecord ?\n                        <Detail back={() => this.setState({ student: null })} record={this.state.savedRecord} />\n                        : null\n                    }\n                    \n                </Modal>\n            </div>\n        )\n    }\n}\n\nconst Progress = (props: { step: number, totalStep: number }) => {\n    return (\n        <div className=\"progress\" style={{ height:'5px', marginBottom: 15}}>\n            <div className=\"bg-info\" style={{transitionDuration: '500ms', width: (props.step / props.totalStep * 100) + '%' }}  ></div>\n        </div>\n    )\n}\n\nconst Detail = (props: { record: PointRecord, back(): any }) => {\n    const record = PointRecord.clone(props.record);\n    const date = record.getDate();\n    return (\n        <div>\n            <h4 className=\"text-center text-success\"><i className=\"fas fa-check\" style={{ marginRight: 5 }} />Record saved</h4>\n            <p />\n            <FormGroup label=\"Date\">{date.toDateString()} {record.time}</FormGroup>\n            <FormGroup label=\"Category\">{record.rule_point?.category?.name}</FormGroup>\n            <FormGroup label=\"Name\">{record.rule_point?.name}</FormGroup>\n            <FormGroup label=\"Point\">{record.rule_point?.point}</FormGroup>\n            <FormGroup label=\"Location\">{record.location}</FormGroup>\n            {record.getPicture()?\n            <FormGroup label=\"Picture\">\n                <img src={record.getPicture()??\"\"} width={200} height={200} />\n            </FormGroup>\n            :null}\n            <hr />\n            <FormGroup><a onClick={props.back} className=\"btn btn-dark\">Ok</a></FormGroup>\n        </div>\n    )\n}\n\nconst Warning = () => {\n    return (\n        <div className=\"container-fluid section-body\">\n            <h2>Form Input Pelanggaran</h2>\n            <SimpleError>\n                <i className=\"fas fa-exclamation-circle\" />&nbsp;Please select student <hr />\n                <AnchorWithIcon to={\"/dormitoryactivity/studentlist\"} iconClassName=\"fas fa-list\">Student List</AnchorWithIcon>\n            </SimpleError>\n        </div>\n    )\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(InputPointForm)\n)","\r\nimport React, { Component } from 'react';\r\nexport default class Card extends Component<any, any> {\r\n    constructor(props: any) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div {...this.props.attributes} className={\"card \" + this.props.className}>\r\n                {this.props.title ? <div className=\"card-header\">\r\n                    {this.props.title}\r\n                </div> : null}\r\n                <div className=\"card-body\">\r\n                    {this.props.children}\r\n                </div>\r\n                {this.props.footerContent != undefined ?\r\n                    <div className=\"card-footer\">\r\n                        {this.props.footerContent}\r\n                    </div>\r\n                    : null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","\r\nimport School from './School';\r\nimport Student from './Student';\r\n\r\nexport default class Class {\r\n    static studentClassString(student: Student| undefined): string {\r\n        return (student?.kelas?.level??\"\") +(student?.kelas?.rombel??\"\") + \" \" + (student?.kelas?.sekolah?.nama??\"\");\r\n    }\r\n    id?:string;\r\n    name?:string;\r\n    level?:string;\r\n    rombel?:string;\r\n    sekolah?:School;\r\n}","\nimport React, { Component } from 'react'\nimport PointRecord from '../../../../models/PointRecord';\nimport Card from '../../../container/Card';\nimport FormGroup from '../../../form/FormGroup';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\nimport Class from '../../../../models/Class';\nimport { doItLater } from './../../../../utils/EventUtil';\n\ninterface IProps {\n    record:PointRecord;\n    close():any;\n}\nexport default class PointRecordDetail extends Component<IProps, any> {\n\n    componentDidMount() {\n        const opt:ScrollToOptions = { top:0,  behavior: 'smooth' };\n        doItLater(()=>{\n            window.scrollTo(opt);\n        }, 100);\n    }\n\n    render() {\n        const record = PointRecord.clone(this.props.record);\n        const pictureUrl = record.getPicture();\n        const timeStamp = record.getTimestamp();\n        return <Card title={\"Detail Pelanggaran\"} footerContent={<AnchorWithIcon className=\"btn btn-dark\" onClick={this.props.close} >Ok</AnchorWithIcon>}>\n            <FormGroup label=\"Nama\">{record.student?.user?.name} - {Class.studentClassString(record.student)}</FormGroup>\n            <FormGroup label=\"Pelanggaran\">\n                <strong>{record.rule_point?.category?.name}</strong> - {record.rule_point?.name} <span className=\"badge badge-dark\">{record.rule_point?.point}</span>\n            </FormGroup>\n            <FormGroup label=\"Waktu\" children={timeStamp} />\n            <FormGroup label=\"Lokasi\" children={record.location??\"-\"} />\n            <FormGroup label=\"Deskripsi\" children={record.description??\"-\"} />\n            <FormGroup label=\"Diputihkan\" children={record.dropped_at??\"-\"} />\n            \n            <FormGroup label=\"Gambar\">\n                {pictureUrl?\n                <img src={pictureUrl} width={200} height={200} className=\"border border-dark\" />:null}\n            </FormGroup>\n        </Card>\n    }\n}","import React from 'react'\nimport BaseComponent from './../../BaseComponent';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\nimport PointRecord from './../../../models/PointRecord';\nimport AnchorWithIcon from './../../navigation/AnchorWithIcon';\nimport StudentService from './../../../services/StudentService';\n\nclass State {\n    loading: boolean = false;\n}\nclass DropPointButtons extends BaseComponent {\n    studentService: StudentService;\n    state: State = new State();\n    constructor(props) {\n        super(props, true);\n        this.studentService = this.getServices().studentService;\n    }\n    startLoading = () => { this.setState({ loading: true }); }\n    endLoading = () => { this.setState({ loading: false }); }\n    getRecord = (): PointRecord => {\n        return this.props.record;\n    }\n\n    setDropped = (isDropped: boolean) => {\n        const item = this.getRecord();\n        this.commonAjax(this.studentService.setPointDropped,\n            this.props.onUpdated,\n            this.showCommonErrorAlert,\n            item.id, isDropped);\n    }\n    render() {\n        const item = this.getRecord();\n        if (this.state.loading) {\n\n            return <button className=\"btn btn-info btn-sm\">\n                <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n            </button>\n        }\n        return (\n            item.dropped_at ?\n                <AnchorWithIcon onClick={(e) => this.setDropped(false)} className=\"btn btn-secondary btn-sm\" iconClassName=\"fas fa-arrow-up\">\n                    Reset\n                </AnchorWithIcon> :\n                <AnchorWithIcon onClick={(e) => this.setDropped(true)} className=\"btn btn-success btn-sm\" iconClassName=\"fas fa-arrow-down\">\n                    Putihkan\n                </AnchorWithIcon>\n        )\n    }\n}\n\nexport default withRouter(connect(\n    mapCommonUserStateToProps\n)(DropPointButtons))","import React  from 'react'\nimport BaseManagementPage from './BaseManagementPage';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\nimport EditDeleteButton from './EditDeleteButton'\nimport PointRecord from '../../../models/PointRecord';\nimport Filter from '../../../models/commons/Filter';\nimport FormGroup from '../../form/FormGroup';\nimport NavigationButtons from '../../navigation/NavigationButtons';\nimport { tableHeader } from '../../../utils/CollectionUtil';\nimport FilterPeriod from '../../form/FilterPeriod';\nimport PointRecordDetail from '../dormitoryactivity/point-record/PointRecordDetail';\nimport StudentService from '../../../services/StudentService';\nimport WebResponse from '../../../models/commons/WebResponse';\nimport Category from '../../../models/Category';\nimport Class from '../../../models/Class';\nimport { MONTHS } from './../../../utils/DateUtil';\nimport DropPointButtons from '../dormitoryactivity/DropPointButtons';\nclass State {\n    items: PointRecord[] = [];\n    filter: Filter = new Filter();\n    totalData: number = 0;\n    record?: PointRecord;\n    loading: boolean = false;\n    categories: Category[] = [];\n    classes: Class[] = [];\n    selectedCategory:Category| undefined;\n    showFilterDetail:boolean = false;\n}\nconst defaultFieldsFilter = {name:'', dropped : '',  class_id : '', point_name : '', category_name:'',location: ''  }\n\nclass PointRecordSummary extends BaseManagementPage {\n    state: State = new State();\n    private studentService:StudentService;\n    constructor(props) {\n        super(props, 'pointrecord', false);\n         \n        this.studentService = this.getServices().studentService;\n\n        const f = new Filter();\n        const d = new Date();\n        \n        f.limit = 10;\n        f.day = f.dayTo = d.getDate();\n        f.month = 1; //January\n        f.monthTo = d.getMonth() + 1;\n        f.year = f.yearTo = d.getFullYear();\n        f.fieldsFilter =  defaultFieldsFilter;\n\n        this.state.filter = f;  \n    }\n \n    componentDidMount() {\n        super.componentDidMount();\n        this.loadCategories();\n        this.loadClasses();\n    }\n    loadClasses = () => {\n        this.commonAjax(this.studentService.getClasses,\n            this.classessLoaded, console.error)\n    }\n    loadCategories = () => {\n        this.commonAjax(this.studentService.getCategories,\n            this.categoriesLoaded, console.error);\n    }\n    categoriesLoaded = (response:WebResponse) => this.setState({categories: response.items}); \n    classessLoaded = (response:WebResponse) =>  this.setState({classes: response.items}); \n\n    setSelectedCategory = (cat:Category) => {\n        const filter = this.state.filter;\n        if (cat.id == \"\") {\n            filter.fieldsFilter['point_name'] = '';\n        }\n        this.setState({filter: filter, selectedCategory:cat});\n    }\n\n    showDetail = (item:PointRecord) => this.setState({record: item}); \n    hideDetail = () => this.setState({record: undefined}, this.scrollTop);\n    showFilterDetail = () =>  this.setState({showFilterDetail: true}); \n    hideFilterDetail = () =>  this.setState({showFilterDetail: false}); \n    \n    openEditPage = (p:PointRecord) => {\n        this.props.history.push({\n            pathname: '/dormitoryactivity/pointrecordedit',\n              state: {record: p }\n         })\n    }\n\n    resetFilter = () => {\n        const f = this.state.filter;\n        this.setState({filter: Filter.resetFieldsFilter(f)});\n    }\n    followUp = (p:PointRecord) => {\n        this.commonAjax(\n            this.studentService.followUp,\n            this.showCommonSuccessAlert,\n            this.showCommonErrorAlert,\n            p.id\n        )\n    }\n\n    render() {\n        const filter = this.state.filter;\n        const fieldsFilter = filter.fieldsFilter;\n        \n        const title = \"Rekap Pelanggaran\";\n        if (this.state.record) {\n            return (\n                <div className=\"container-fluid section-body\">\n                    <h2>{title}</h2>\n                    <PointRecordDetail record={this.state.record} close={this.hideDetail} />\n                </div>\n            )\n        }\n        const defaultClass: Class = { id: \"\", level: \"Semua Kelas\", sekolah: {} };\n        const selectedClassId =  filter.fieldsFilter['class_id'] ? filter.fieldsFilter['class_id'] : \"\";\n\n        return (\n            <div className=\"container-fluid section-body\">\n                <h2>{title}</h2>\n                <hr />\n                <form className=\"form-filter\" onSubmit={this.reload}>\n                    <FormGroup label=\"Cari\">\n                        <div className=\"input-group\">\n                            <input name=\"name\" placeholder=\"Nama siswa\" className=\"form-control-sm\" value={fieldsFilter['name'] ?? \"\"} onChange={this.updateFieldsFilter} />\n                            <select value={selectedClassId} onChange={this.updateFieldsFilter} className=\"form-control-sm\" name=\"class_id\">\n                                {[defaultClass, ...this.state.classes].map((c) => {\n                                    return <option key={`class_${c.id}`} value={c.id}>{c.level}{c.rombel} - {c.sekolah?.nama}</option>\n                                })}\n                            </select>  \n                        </div>\n                    </FormGroup>\n                    {this.state.showFilterDetail?\n                    <><div  className=\"filter-sticky bg-white border border-gray pt-3 pb-3 pl-3 pr-3\">\n                        <FormGroup label=\"Kategori\"> \n                                <select value={fieldsFilter['category_name']} onChange={this.updateFieldsFilter} className=\"form-control-sm\" name=\"category_name\">\n                                    {[Category.clone({id:\"\", name:\"Semua\"}), ...this.state.categories].map((c) => {\n                                        return <option onClick={()=> this.setSelectedCategory(c)}  key={`cat_${c.id}`} value={c.id == \"\" ? c.id :c.name}>{c.name}</option>\n                                    })}\n                                </select> \n                        </FormGroup>\n                        {this.state.selectedCategory && this.state.selectedCategory.points?\n                            <FormGroup label=\"Pelanggaran\">\n                                <select value={fieldsFilter['point_name']} onChange={this.updateFieldsFilter} className=\"form-control-sm\" name=\"point_name\">\n                                    {[{id:\"\", name:\"Semua\"}, ...this.state.selectedCategory.points].map((c) => {\n                                        return <option key={`rp_${c.id}`} value={c.id == \"\" ? c.id :c.name}>{c.name}</option>\n                                    })}\n                                </select>\n                            </FormGroup>:\n                        null}\n                        <FormGroup label=\"Periode\">\n                            <div className=\"input-group\">\n                                <FilterPeriod filter={filter} onChange={this.updateFilter} />\n                            </div>\n                            <div className=\"input-group\">\n                                <FilterPeriod mode={\"to\"} filter={filter} onChange={this.updateFilter} />\n                            </div> \n                        </FormGroup>\n                        <FormGroup label=\"Pemutihan\">\n                            <select name=\"dropped\" className=\"form-control-sm\" value={fieldsFilter['dropped']?? ''} onChange={this.updateFieldsFilter}>\n                                <option value=\"\">Semua</option>\n                                <option value=\"false\">Belum</option>\n                                <option value=\"true\">Sudah</option>\n                            </select>\n                        </FormGroup>\n                        <FormGroup label=\"Lokasi\">\n                            <input name=\"location\" placeholder=\"Lokasi\" className=\"form-control-sm\" value={fieldsFilter['location']??\"\"} onChange={this.updateFieldsFilter} />\n                        </FormGroup>\n                        <FormGroup label=\"Jumlah Tampilan\">\n                            <input type=\"number\" name=\"limit\" className=\"form-control-sm\" value={filter.limit ?? 5} onChange={this.updateFilter} />\n                        </FormGroup>\n                        <FormGroup label=\"\">\n                            <a className=\"btn btn-dark btn-sm\" onClick={this.hideFilterDetail}>Tutup</a>\n                            <input className=\"ml-3 btn btn-primary btn-sm\" type=\"submit\" value=\"Cari\" />\n                        </FormGroup>\n                    </div>\n                    <FormGroup label=\"\">\n                        <a className=\"btn btn-dark btn-sm\" onClick={this.hideFilterDetail}>Tutup Detail Filter</a>\n                    </FormGroup>\n                    </>\n                    :<FormGroup label=\"\">\n                        <a className=\"btn btn-dark btn-sm\" onClick={this.showFilterDetail}>Tampil Detail Filter</a>\n                    </FormGroup> }\n                    <FormGroup label=\"Periode\">\n                        {filter.day} {MONTHS[(filter.month ?? 1) - 1]} {filter.year} - {filter.dayTo} {MONTHS[(filter.monthTo ?? 1) - 1]} {filter.yearTo}\n                    </FormGroup>\n                    <FormGroup>\n                        <input className=\"btn btn-primary btn-sm\" type=\"submit\" value=\"Submit\" />\n                        <a className=\"btn btn-secondary btn-sm ml-3\" onClick={this.resetFilter}>Reset</a>\n                    </FormGroup>\n                </form>\n                <NavigationButtons activePage={filter.page ?? 0} limit={filter.limit ?? 10} totalData={this.state.totalData}\n                    onClick={this.loadAtPage} />\n                <ItemsList isAdmin={this.isAdmin()} startingNumber={(filter.page ?? 0) * (filter.limit ?? 10)}  \n                    recordLoadedForDetail={this.showDetail}\n                    recordLoadedForEdit={this.openEditPage}\n                    recordUpdated={this.loadItems} followUp={this.followUp}\n                    items={this.state.items} />\n            </div>\n        )\n    }\n}\ninterface ItemProps { \n    isAdmin:boolean,  startingNumber: number, \n    items: PointRecord[], recordLoadedForDetail(p: PointRecord):any,\n    recordLoadedForEdit(p: PointRecord):any, recordUpdated():any, followUp(p:PointRecord):any\n}\nconst ItemsList = (props: ItemProps) => {\n\n    return (\n        <div style={{ overflow: 'scroll' }}>\n            <table className=\"table \">\n                {tableHeader(\"No\", \"Siswa\", \"Kelas\", \"Tanggal\", \"Pelanggaran\", \"Poin\", \"Lokasi\", \"Gambar\", \"Pemutihan\", \"Opsi\")}\n                <tbody>\n                    {props.items.map((item, i) => {\n                            item = PointRecord.clone(item);\n                            const student = item.student;\n                            const optionTypes = props.isAdmin?\n                                                    ['detail', 'delete'] :\n                                                    [ (item.dropped_at?null:'edit'),'detail'];\n                            return (\n                                <tr key={\"PointRecord-\" + i}  className={item.dropped_at?\"alert alert-success\":\"\" }>\n                                    <td>{i + 1 + props.startingNumber}</td>\n                                    <td>{student?.user?.name}</td>\n                                    <td>{Class.studentClassString(student)}</td>\n                                    <td>{item.getTimestamp()}</td>\n                                    <td>{item.rule_point?.name} ({item.rule_point?.category?.name})</td>\n                                    <td>{item.rule_point?.point}</td>\n                                    <td>{item.location}</td>\n                                    <td>{item.getPicture() ?\n                                        <img src={item.getPicture() ?? \"\"} width={50} height={50} />: null}</td>\n                                    <td>{item.dropped_at ? <i className=\"fas fa-check\"/>  : \"-\"} </td>\n                                    <td>\n                                        <div style={{width:'max-content'}}>\n                                            <DropPointButtons record={item} onUpdated={props.recordUpdated} /><p/>\n                                            {/* {props.isAdmin? <><DropPointButtons record={item} onUpdated={props.recordUpdated} /><p/></> : \n                                            <a className=\"btn btn-dark btn-sm\" onClick={()=>props.followUp(item)}>Follow Up</a>} */}\n                                            <EditDeleteButton record={item} \n                                                types={optionTypes}\n                                                recordLoadedForDetail={props.recordLoadedForDetail}\n                                                recordLoaded={props.recordLoadedForEdit} \n                                                modelName={'pointrecord'} />\n                                        </div>\n                                       \n                                    </td>\n                                </tr>\n                            )\n                        })}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(PointRecordSummary)\n)","import React, { FormEvent } from 'react'\nimport BaseComponent from './../../../BaseComponent';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from './../../../../constant/stores';\nimport Card from './../../../container/Card';\nimport FormGroup from './../../../form/FormGroup';\nimport Student from './../../../../models/Student';\nimport MasterDataService from './../../../../services/MasterDataService';\nimport WebRequest from './../../../../models/commons/WebRequest';\nimport WebResponse from './../../../../models/commons/WebResponse';\nimport AnchorWithIcon from './../../../navigation/AnchorWithIcon';\nimport Class from './../../../../models/Class';\nclass State {\n    studentName?:string;\n    items:Student[] = [];\n    item?:Student;\n}\nclass StudentForm extends BaseComponent{\n\n    state:State = new State();\n    masterDataService:MasterDataService;\n    constructor(props) {\n        super(props, true);\n        this.masterDataService = this.getServices().masterDataService;\n    }\n\n    submit = (e:FormEvent) => {\n        e.preventDefault();\n        this.loadStudent();\n    }\n    itemsLoaded = (response: WebResponse) => {\n        this.setState({items: response.items});\n    }\n    loadStudent = () => {\n        const request:WebRequest = {\n            modelName:'student',\n            filter:{\n                limit: 15,\n                fieldsFilter: {  name:this.state.studentName  }\n            }\n        }\n        this.commonAjax(\n            this.masterDataService.list,\n            this.itemsLoaded,\n            this.showCommonErrorAlert,\n            request\n        )\n    }\n    setSelectedItem = (item:Student) => {\n        this.setState({item:item,  items:[], studentName:undefined}, ()=> {\n            if (this.props.setItem) {\n                this.props.setItem(item);\n            }\n        });\n    }\n    reset = () => {\n        this.setState({item:undefined, items:[], studentName:undefined}, () => {\n            if (this.props.setItem) {\n                this.props.setItem(undefined);\n            }\n        });\n    }\n    render() {\n        const items:Student[] = this.state.items;\n        const selectedItem:Student | undefined = this.state.item;\n        return (\n            <form onReset={this.reset} onSubmit={this.submit}>\n                <Card title=\"Select Student\">\n                    <FormGroup label=\"Search\">\n                        <input placeholder=\"Name\" value={this.state.studentName??\"\"} className=\"form-control\" onChange={this.handleInputChange} name=\"studentName\" />\n                        {items.length > 0?<div style={{position:'absolute', zIndex: 200}} className=\"container-fluid bg-light rounded-sm border border-dark\">\n                                {items.map(item=>{\n                                    return (\n                                        <div className=\"option-item\"onClick={()=>{\n                                            this.setSelectedItem(item);\n                                        }} style={{cursor: 'pointer'}} key={\"Student-\"+item.id} >{item.user?.name}</div>\n                                    )\n                                })}\n                                <a onClick={this.reset} className=\"option-item\"><i className=\"fas fa-times\"/>&nbsp;close</a>\n                            </div>:null}\n                    </FormGroup>\n                    {selectedItem?\n                    <ItemDetail item={selectedItem} />\n                    :null}\n                    <hr/>\n                    <div className=\"btn-group float-right\">\n                        <input type=\"submit\" className=\"btn btn-dark\" value=\"Search\" />\n                        <input type=\"reset\" className=\"btn btn-secondary\" value=\"Reset\" />\n                        <AnchorWithIcon to={\"/dormitoryactivity/studentlist\"} iconClassName=\"fas fa-list\">Student List</AnchorWithIcon>\n                    </div>\n                </Card>\n            </form>\n        )\n    }\n}\n\nconst ItemDetail = (props:{item:Student}) => {\n\n    return (\n        <>\n            <FormGroup label=\"Name\">{props.item.user?.name}</FormGroup>\n            <FormGroup label=\"Kelas\">{Class.studentClassString(props.item)}</FormGroup>\n            \n        </>\n    )\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(StudentForm)\n)","\nimport BaseEntity from './BaseEntity';\nimport Student from './Student';\nexport default class MedicalRecord extends BaseEntity {\n      day: number = new Date().getDate();\n      month: number = new Date().getMonth();\n      year: number = new Date().getFullYear();\n      temperature_morning?: number;\n      temperature_afternoon?: number;\n      breakfast?: boolean;\n      lunch?: boolean;\n      dinner?: boolean;\n      medicine_consumption: boolean = false;\n      genose_test?: boolean;\n      antigen_test?: boolean;\n      pcr_test?: boolean;\n      description?: string\n      student_id;\n      student?: Student;\n\n      public static clone = (obj:MedicalRecord) : MedicalRecord => {\n            return Object.assign(new MedicalRecord(), obj);\n      }\n      public static instance = (student_id:string, d: number, m: number, y: number): MedicalRecord => {\n            const obj = new MedicalRecord();\n            obj.day = d;\n            obj.month = m;\n            obj.year = y;\n            obj.student_id = student_id;\n            return obj;\n      }\n}","import React, { ChangeEvent, Component, FormEvent } from 'react'\nimport BaseComponent from './../../../BaseComponent';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from './../../../../constant/stores';\nimport MedicalRecord from './../../../../models/MedicalRecord';\nimport StudentService from './../../../../services/StudentService';\nimport WebResponse from './../../../../models/commons/WebResponse';\nimport { twoDigits, monthName } from '../../../../utils/StringUtil';\n\nclass State {\n    record: MedicalRecord = new MedicalRecord();\n}\nclass MedicalRecordDailyInput extends BaseComponent {\n    state: State = new State();\n    studentService: StudentService;\n    constructor(props) {\n        super(props, true);\n        this.studentService = this.getServices().studentService;\n        this.state.record = MedicalRecord.instance(props.student.id, props.day, props.month, props.year);\n    }\n    reset = () => {\n        const props = this.props;\n        this.setState({ record: MedicalRecord.instance(props.student.id, props.day, props.month, props.year) });\n    }\n    setRecord = (record: MedicalRecord) => {\n        this.setState({ record: MedicalRecord.clone(record) });\n    }\n\n    onChange = (e: ChangeEvent) => {\n        const record = this.state.record;\n        const target = e.target as HTMLInputElement;\n        record[target.name] = target.type == 'checkbox' ? target.checked : target.value;\n        this.setState({ record: MedicalRecord.clone(record) });\n    }\n\n    recordSubmitted = (response: WebResponse) => {\n        this.showInfo(\"Data has been submitted\");\n    }\n\n    onSubmit = (e: FormEvent) => {\n        e.preventDefault();\n        const record: MedicalRecord = this.state.record;\n        record.student_id = this.props.student.id;\n        this.commonAjax(\n            this.studentService.submitMedicalRecord,\n            this.recordSubmitted,\n            this.showCommonErrorAlert,\n            record\n        )\n    }\n\n    render() {\n        const record = this.state.record;\n        const period = twoDigits(record.day) + \" \" + monthName(record.month - 1);\n        return (\n            <form onSubmit={this.onSubmit}>\n                <table className=\"table table-bordered table-striped\" style={{ fontSize: '0.8em' }}>\n                    <tbody>\n                        <SingleRow><h5 className='text-center'> {period}</h5></SingleRow>\n                        <SingleRow>\n                            <input type='number' onChange={this.onChange} placeholder=\"Suhu Pagi\" className=\"form-control\" name=\"temperature_morning\" value={record.temperature_morning ?? \"\"} />\n                        </SingleRow>\n                        <SingleRow>\n                            <input type='number' onChange={this.onChange} placeholder=\"Suhu Sore\" className=\"form-control\" name=\"temperature_afternoon\" value={record.temperature_afternoon ?? \"\"} />\n                        </SingleRow>\n                        <SingleRow>\n                            <Checkbox label=\"Sarapan\" onChange={this.onChange} name=\"breakfast\" checked={record.breakfast ?? false} />\n                        </SingleRow>\n                        <SingleRow>\n                            <Checkbox label=\"Makan Siang\" onChange={this.onChange} name=\"lunch\" checked={record.lunch ?? false} />\n                        </SingleRow>\n                        <SingleRow>\n                            <Checkbox label=\"Makan Malam\" onChange={this.onChange} name=\"dinner\" checked={record.dinner ?? false} />\n                        </SingleRow>\n                        <SingleRow>\n                            <Checkbox label=\"Konsumsi Obat\" onChange={this.onChange} name=\"medicine_consumption\" checked={record.medicine_consumption ?? false} />\n                        </SingleRow>\n                        <SingleRow>\n                            <Checkbox label=\"Tes Genose\" onChange={this.onChange} name=\"genose_test\" checked={record.genose_test ?? false} />\n                        </SingleRow>\n                        <SingleRow>\n                            <Checkbox label=\"Tes Antigen\" onChange={this.onChange} name=\"antigen_test\" checked={record.antigen_test ?? false} />\n                        </SingleRow>\n                        <SingleRow>\n                            <Checkbox label=\"Tes PCR\" onChange={this.onChange} name=\"pcr_test\" checked={record.pcr_test ?? false} />\n                        </SingleRow>\n                        <SingleRow>\n                            <textarea placeholder=\"Catatan\" onChange={this.onChange} style={{ fontSize: '0.9em' }} name=\"description\" value={record.description ?? \"\"}\n                                className=\"form-control\" rows={3} />\n                        </SingleRow>\n                        <SingleRow>\n                            <button className=\"btn btn-success\" type=\"submit\">\n                                <i className=\"fas fa-save\" /> {period}\n                            </button>\n                        </SingleRow>\n                    </tbody>\n                </table>\n            </form>\n        )\n    }\n}\n\nconst Checkbox = (props: { onChange(e: ChangeEvent): any, label: string, name: string, checked: boolean }) => {\n\n    return (\n        <>{props.label}\n            <input type=\"checkbox\" style={{ marginRight: 5 }} className=\"form-control\"\n                onChange={props.onChange}\n                name={props.name}\n                checked={props.checked} />\n        </>\n    )\n}\nconst SingleRow = (props: { children: any }) => {\n    return (\n        <tr><td>\n            <div className=\"text-center\" style={{ minHeight: 40 }}>{props.children}</div></td></tr>\n    )\n}\n\nexport default\n    connect(\n        mapCommonUserStateToProps, null, null, { forwardRef: true }\n    )(MedicalRecordDailyInput)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\nimport StudentForm from './StudentForm';\nimport Student from './../../../../models/Student';\nimport FilterPeriod from './../../../form/FilterPeriod';\nimport Filter from './../../../../models/commons/Filter';\nimport { getMonthDays } from './../../../../utils/DateUtil';\nimport Card from './../../../container/Card';\nimport MedicalRecord from './../../../../models/MedicalRecord';\nimport MedicalRecordDailyInput from './MedicalRecordDailyInput';\nimport StudentService from './../../../../services/StudentService';\nimport WebResponse from './../../../../models/commons/WebResponse';\nimport AnchorWithIcon from './../../../navigation/AnchorWithIcon';\nimport { doItLater } from './../../../../utils/EventUtil';\nimport BasePage from './../../BasePage';\nimport SimpleError from './../../../alert/SimpleError';\nclass State {\n    student?: Student;\n    month: number = new Date().getMonth() + 1;\n    year: number = new Date().getFullYear();\n    mappedItems: Map<number, MedicalRecord> = new Map()\n}\nclass MedicalRecordForm extends BasePage {\n    state: State = new State();\n    studentService: StudentService;\n    inputRefs: Map<number, any> = new Map();\n    constructor(props) {\n        super(props, \"Medical Record\", true);\n        this.studentService = this.getServices().studentService;\n    }\n    setStudent = (student: Student | undefined) => {\n        if (student) {\n            student = Object.assign(new Student(), student);\n        }\n        this.setState({ student: student }, this.loadMonthlyRecord);\n    }\n    validateStudentData = () => {\n        const student = this.props.location.state?this.props.location.state.student : undefined;\n        if (student) {\n            this.setStudent(student);\n        }\n    }\n    \n    reset = () => {\n        doItLater(() => {\n            if (this.state.student)\n            this.inputRefs.forEach((ref: any, day: number) => {\n                if (ref) { ref.reset(); }\n            })\n        }, 100);\n    }\n    recordsLoaded = (response: WebResponse) => {\n\n        const mappedItems:Map<String, MedicalRecord> = this.toMap(response.items);\n        \n        this.setState({ mappedItems: mappedItems }, () => {\n            doItLater(() => {\n                this.inputRefs.forEach((ref: any, day: number) => {\n                    let record = mappedItems.get(day.toString());\n                    if (!record) {\n                        record = MedicalRecord.instance(this.state.student?.id, day, this.state.month, this.state.year);\n                    } else {\n                        record = MedicalRecord.clone(record);\n                    }\n                    if (ref) {\n                        ref.setRecord(record);\n                    }\n                })\n            }, 100);\n        });\n    }\n\n\n    toMap = (items: MedicalRecord[]): Map<String, MedicalRecord> => {\n        const map: Map<String, MedicalRecord> = new Map();\n        for (let i = 0; i < items.length; i++) {\n            const item = items[i];\n            map.set(item.day.toString(), item);\n        }\n        return map;\n    }\n\n    loadMonthlyRecord = () => {\n        this.commonAjax(\n            this.studentService.loadMonthlyMedicalRecord,\n            this.recordsLoaded, this.showCommonErrorAlert,\n            this.state.student?.id, this.state.month, this.state.year\n        )\n    }\n\n    getFilter = (): Filter => {\n        const f = new Filter();\n        f.month = this.state.month;\n        f.year = this.state.year;\n        return f;\n    }\n\n    componentDidMount() {\n        this.validateLoginStatus(()=>{\n            this.scrollTop();\n            this.validateStudentData();\n        });\n    }\n    dayCount = () => {\n        return getMonthDays(this.state.month, this.state.year);\n    }\n    render() {\n        const student = this.state.student;\n        const filter = this.getFilter();\n        const dayCount = this.dayCount();\n        const days: number[] = [];\n        for (let i = 1; i <= dayCount; i++) {\n            days.push(i);\n        }\n        const gridTemplateColumns = ('150px ').repeat(dayCount);\n\n        return (\n            <div className=\"container-fluid section-body\">\n                <h2> {student ? student.user?.name: this.title}</h2> \n                <hr/>\n                <StudentForm setItem={this.setStudent} />\n                <p />\n                {student ?\n                    <Card>\n                        <div className=\"input-group\">\n                            <FilterPeriod filter={filter} hideDay onChange={this.handleInputChange} />\n                            <div className=\"input-group-append\">\n                            <AnchorWithIcon iconClassName=\"fas fa-redo\" onClick={this.loadMonthlyRecord}>Load Data</AnchorWithIcon>\n                            </div>\n                        </div>\n                        <hr/>\n                        <div className=\"container-fluid  row\"> \n                            <div className=\"col-12\" style={{ overflow: 'scroll' }}>\n                                <div style={{ display: 'grid', gridTemplateColumns: gridTemplateColumns }}>\n\n                                    {days.map(day =>\n                                        <MedicalRecordDailyInput key={\"record-input-\" + day} student={student}\n                                            ref={ref => {this.inputRefs.set(day, ref)}}\n                                            year={this.state.year}\n                                            month={this.state.month} day={day} />)}\n                                </div>\n                            </div>\n                        </div>\n                    </Card>\n                    : <Warning/>}\n            </div>\n        )\n    }\n\n}\n\n\nconst Warning = () => {\n    return (<SimpleError>\n                <i className=\"fas fa-exclamation-circle\" />&nbsp;Please select student <hr />\n                <AnchorWithIcon to={\"/dormitoryactivity/studentlist\"} iconClassName=\"fas fa-list\">Student List</AnchorWithIcon>\n            </SimpleError> )\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(MedicalRecordForm)\n)","import React from 'react';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport Card from './../../container/Card';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport ApplicationProfile from './../../../models/ApplicationProfile';\r\nimport FormGroup from '../../form/FormGroup';\r\nclass AboutUs extends BaseComponent {\r\n    constructor(props) {\r\n        super(props, false);\r\n    }\r\n    componentDidMount() {\r\n        document.title = \"About Us\";\r\n    }\r\n    render() {\r\n        const appProfile:ApplicationProfile = this.getApplicationProfile();\r\n        return (<div className=\"section-body container-fluid\" style={{marginTop:'20px'}}>\r\n            <h2>About Us</h2>\r\n            <Card title=\"Application\">\r\n                <FormGroup label=\"Name\">{appProfile.name}</FormGroup>\r\n                <FormGroup  ><i>{appProfile.description}</i></FormGroup>\r\n                <FormGroup label=\"Contact\">{appProfile.contact}</FormGroup>\r\n                <FormGroup label=\"Address\">{appProfile.address}</FormGroup>\r\n            </Card>\r\n            <p/>\r\n            <Card title=\"Development Mode\">\r\n                {/* <FormGroup label=\"Repository\"><a target=\"_blank\" href=\"https://github.com/fajaralmu\">https://github.com/fajaralmu</a></FormGroup>\r\n                <FormGroup label=\"Front End\">React Js</FormGroup>\r\n                <FormGroup><a target=\"_blank\" href=\"https://github.com/fajaralmu/front-end-shopping-mart-v2\">https://github.com/fajaralmu/front-end-shopping-mart-v2</a></FormGroup>\r\n                <FormGroup label=\"Back End\">Java, Spring MVC</FormGroup>\r\n                <FormGroup><a target=\"_blank\" href=\"https://github.com/fajaralmu/universal-good-shop-v2\">https://github.com/fajaralmu/universal-good-shop-v2</a></FormGroup> */}\r\n            </Card>\r\n            <p/>\r\n        </div>);\r\n    }\r\n}\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps, \r\n)(AboutUs))","\r\n\r\nimport React, { FormEvent, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from '../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport './Login.css';\r\nimport Spinner from '../../loader/Spinner';\r\nimport UserService from './../../../services/UserService';\r\nimport UserModel from './../../../models/User';\r\nimport WebResponse from '../../../models/commons/WebResponse'; \r\nclass IState {\r\n    loading: boolean = false; displayName: string = \"\";\r\n    username: string = \"\";\r\n    editPassword: string = \"\";\r\n    editPasswordRepeat: string = \"\";\r\n}\r\nclass Register extends BaseComponent {\r\n    state: IState = new IState();\r\n    userService: UserService;\r\n    constructor(props: any) {\r\n        super(props, false);\r\n        this.userService = this.getServices().userService;\r\n    }\r\n    startLoading = () => this.setState({ loading: true });\r\n    endLoading = () => this.setState({ loading: false });\r\n    register(e: FormEvent) {\r\n        e.preventDefault();\r\n        if (this.fieldComplete()) {\r\n            if (this.passwordMatch() == false) {\r\n                this.showCommonErrorAlert(\"Password mismatch\");\r\n                return;\r\n            }\r\n            this.saveUser();\r\n        } else {\r\n            this.showCommonErrorAlert(\"Field is not complete\");\r\n        }\r\n    }\r\n    saveUser = () => {\r\n        const user = new UserModel();\r\n        user.password = this.state.editPassword.trim();\r\n        user.nickname = this.state.username.trim();\r\n        user.name = this.state.displayName.trim();\r\n        this.commonAjax(\r\n            this.userService.saveUser,\r\n            this.userSaved,\r\n            this.showCommonErrorAlert,\r\n            user\r\n        );\r\n    }\r\n    userSaved = (response: WebResponse) => {\r\n        this.showConfirmation(\"Success\")\r\n            .then((ok) => {\r\n                this.backToLogin();\r\n            })\r\n    }\r\n    passwordMatch = () => {\r\n        return this.state.editPassword.trim() != \"\" && this.state.editPassword.trim() == this.state.editPasswordRepeat.trim();\r\n    }\r\n    fieldComplete = () => {\r\n        return this.state.displayName.trim() != \"\"\r\n            && this.state.username.trim() != \"\"\r\n            && this.state.editPassword.trim() != \"\"\r\n            && this.state.editPasswordRepeat.trim() != \"\";\r\n    }\r\n    componentDidMount() {\r\n        document.title = \"Register\";\r\n        if (this.isUserLoggedIn()) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.isUserLoggedIn()) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"RegisterForm\" className=\"Register-wrapper\" style={{ margin: 0, padding: 0 }}>\r\n                <div className=\"text-center\" style={{ marginTop: '25px' }}>\r\n                    <h1>Register</h1>\r\n                </div>\r\n                <form name='Register' onSubmit={(e) => { this.register(e) }}\r\n                    method='POST' className=\"form-signin text-center\">\r\n                    <CommonField name=\"username\" value={this.state.username} onChange={this.handleInputChange} />\r\n                    <CommonField name=\"displayName\" value={this.state.displayName} onChange={this.handleInputChange} />\r\n\r\n                    <PasswordField name=\"editPassword\" value={this.state.editPassword} onChange={this.handleInputChange} />\r\n                    <PasswordField name=\"editPasswordRepeat\" value={this.state.editPasswordRepeat} onChange={this.handleInputChange} />\r\n\r\n                    {this.state.loading ? <Spinner /> :\r\n                        <button className=\"btn text-light\" style={{ backgroundColor: 'rgb(9,26,78)' }} type=\"submit\">\r\n                            Register\r\n                        </button>}\r\n                    <p />\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst PasswordField = ({ name, value, onChange }) => {\r\n    return <Fragment>\r\n        <label className=\"sr-only\">Password</label>\r\n        <input style={{ borderColor: 'rgb(9,26,78)' }} name={name} value={value} onChange={onChange} type=\"password\" id=\"inputPassword\" className=\"form-control\"\r\n            placeholder={name} required />\r\n        <p />\r\n    </Fragment>\r\n}\r\nconst CommonField = ({ name, value, onChange }) => {\r\n    return (<Fragment>\r\n        <label className=\"sr-only\">Username</label>\r\n        <input style={{ borderColor: 'rgb(9,26,78)' }} name={name} value={value} onChange={onChange} type=\"text\" id=\"username\" className=\"form-control\"\r\n            placeholder={name} required autoFocus />\r\n        <p />\r\n    </Fragment>)\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    //  performRegister: (username: string, password: string, app: any) => dispatch(performRegister(username, password, app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(Register))","import React, { FormEvent } from 'react'\nimport BaseComponent from './../../BaseComponent';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\nimport MasterDataService from './../../../services/MasterDataService';\nimport Student from './../../../models/Student';\nimport WebRequest from './../../../models/commons/WebRequest';\nimport Filter from '../../../models/commons/Filter';\nimport WebResponse from './../../../models/commons/WebResponse';\nimport AnchorWithIcon from './../../navigation/AnchorWithIcon';\nimport './style.css'\nimport Class from './../../../models/Class';\n\nclass State {\n    items:Student[] = [];\n    keyword:string = \"\";\n}\nclass StudentSearchForm extends BaseComponent\n{\n\n    state:State = new State();\n    private masterDataService:MasterDataService;\n    constructor(props) {\n        super(props, true);\n        this.masterDataService = this.getServices().masterDataService;\n    }\n    itemsLoaded = (response: WebResponse) => {\n        this.setState({items: response.items});\n    }\n    \n    loadItems = (e:FormEvent) => {\n        e.preventDefault();\n        if (\"\" == this.state.keyword) return;\n        const req:WebRequest = {\n            filter:new Filter(),\n            modelName:'student',\n        }\n        if (req.filter)\n            req.filter.fieldsFilter = {\n                'name':this.state.keyword\n            }\n        this.commonAjax(\n            this.masterDataService.list,\n            this.itemsLoaded,  this.showCommonErrorAlert,\n            req\n        )\n    }\n    select = (s:Student) => {\n        this.props.selectItem(s);\n        this.setState({items: [], keyword: \"\"});\n    }\n    reset = () => this.setState({items: []});\n\n    render() {\n\n        return (\n            <form id=\"form-search-student\" onSubmit={this.loadItems}>\n            <div className=\"mb-3\" style={{position:'absolute'}}>\n                <div className=\"input-group\">\n                    <input name=\"keyword\" className=\"form-control\" onChange={this.handleInputChange} value={this.state.keyword}\n                        placeholder=\"Cari Nama\" />\n                    <input type=\"submit\" value=\"Cari\" className=\"btn btn-secondary\" />\n                </div>\n                {this.state.items.length > 0?\n                <div className=\"bg-light border rounded border-secondary\" style={{position:'relative', zIndex: 10, padding: 3}}>\n                    {this.state.items.map(s=>{\n                        return (\n                            <div onClick={()=> this.select(s)} className=\"option-item\" key={`s_form_${s.id}`}>\n                                {s.user?.name} {Class.studentClassString(s)}\n                            </div>\n                        )\n                    })}\n                    <AnchorWithIcon iconClassName=\"fas fa-times\" className=\"btn btn-dark w-100\" onClick={this.reset} >Tutup</AnchorWithIcon>\n                </div>\n                :null}\n            </div>\n            </form>\n        )\n    }\n\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(StudentSearchForm)\n)","import React, { ChangeEvent, FormEvent } from 'react'\nimport BasePage from './../../BasePage';\nimport { withRouter, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from './../../../../constant/stores';\nimport PointRecord from './../../../../models/PointRecord';\nimport FormGroup from '../../../form/FormGroup';\nimport Class from './../../../../models/Class';\nimport StudentService from './../../../../services/StudentService';\nimport WebResponse from './../../../../models/commons/WebResponse';\nimport Category from './../../../../models/Category';\nimport WebRequest from './../../../../models/commons/WebRequest';\nimport RulePoint from './../../../../models/RulePoint';\nimport MasterDataService from './../../../../services/MasterDataService';\nimport InputTime from './../../../form/InputTime';\nimport { parseDate } from '../../../../utils/DateUtil';\nimport AnchorWithIcon from './../../../navigation/AnchorWithIcon';\nimport AttachmentInfo from './../../../../models/settings/AttachmentInfo';\nimport { getAttachmentInfoFromFile } from '../../../../utils/ComponentUtil';\nimport Student from './../../../../models/Student'; \nimport StudentSearchForm from '../../shared/StudentSearchForm';\n\nclass State {\n    record : PointRecord  = new PointRecord();\n    categories:Category[] = [];\n    pointsMap:Record<string, RulePoint[]> = {}; \n\n    selectedCategoryId:string = \"\";\n    selectedPointId:string = \"\";\n\n    attachment:AttachmentInfo|undefined;\n}\nclass PointRecordEdit extends BasePage{\n    \n    state:State = new State();\n    studentService:StudentService;\n    masterDataService:MasterDataService;\n    inputTimeRef:React.RefObject<InputTime> = React.createRef();\n    constructor(props) {\n        super(props, \"Edit Pelanggaran\", true);\n        this.studentService = this.getServices().studentService;\n        this.masterDataService = this.getServices().masterDataService;\n    }\n\n    componentReady() {\n        this.checkPassedData();\n        this.loadCategories();\n    }\n\n    categoriesLoaded = (response: WebResponse) => {\n        this.setState({categories: response.items});\n    }\n    \n    loadCategories = () => {\n        this.commonAjax(\n            this.studentService.getCategories,\n            this.categoriesLoaded,  this.showCommonErrorAlert\n        )\n    }\n     \n    rulePointsLoaded = (categoryId:string, response:WebResponse) => {\n        const pointsMap = this.state.pointsMap;\n        pointsMap[categoryId.toString()] = response.items;\n        this.setState({pointsMap: pointsMap});\n    }\n    loadRulePoints = (catId:string) => {  \n        console.debug(\"Load rule point\");\n        if (catId === \"\" || this.state.pointsMap[catId] != undefined) {\n            console.debug(\"Cannot load rule point\");\n            return;\n        }\n        const req: WebRequest = {\n            filter: {limit:0, fieldsFilter:{category_id: catId}},\n            modelName: 'rulepoint',\n        }\n        this.commonAjax(\n            this.masterDataService.list,\n            (resp) => this.rulePointsLoaded(catId, resp),\n            this.showCommonErrorAlert,\n            req\n        )\n    }\n\n    checkPassedData = () => {\n        if (this.props.location &&  this.props.location.state) { \n            this.setState({\n                record: PointRecord.clone(this.props.location.state.record),\n                attachment: this.props.location.state.attachment\n             }, this.updateInput);\n        }\n    }\n    updateInput = () => {\n        /**\n         * time\n         */\n        if (this.inputTimeRef.current) {\n            this.inputTimeRef.current.updateFromProps();\n        }\n        /**\n         * etc\n         */\n    }\n\n    updateRecordField =(e:ChangeEvent) => {\n        const record = this.state.record;\n        const el = e.target as HTMLElement;\n        const name = el['name'];\n        const value = el['value']\n        record[name] =  value;\n        this.setState({record: record});\n    }\n    setSelectedRulePoint = (p:RulePoint) => {\n        const record = this.state.record;\n        record.rule_point = p;\n        record.point_id = p.id;\n        this.setState({record: record});\n    }\n\n    updateTime = (h: number, m: number, s: number) => {\n        const record = this.state.record;\n        record.setTime(h, m, s);\n        this.setState({ record: record });\n    }\n    updateDate = (e: ChangeEvent) => {\n        const date: Date = parseDate((e.target as HTMLInputElement).value);\n        const record = this.state.record;\n        record.setDate(date);\n        this.setState({ pointRecord: record });\n    }\n    submit = () => {\n        this.commonAjax(\n            this.studentService.submitPointRecord,\n            this.recordSubmitted,\n            this.showCommonErrorAlert,\n            this.state.record, this.state.attachment\n        )\n    }\n    recordSubmitted = (r:WebResponse) => {\n        this.setState({record : new PointRecord(), attachment: undefined, selectedCategoryId: \"\"}, ()=> {\n            this.showInfo(\"Data berhasil disimpan\");\n            this.scrollTop();\n        })\n    }\n\n    validateInput = () => {\n        const rec = this.state.record;\n        return ( rec.student_id && rec.point_id  )\n    }\n\n    onSubmit = (e:FormEvent) => {\n        e.preventDefault();\n        if (!this.validateInput()) {\n            this.showError(\"Input tidak lengkap\");\n            return;\n        }\n        this.showConfirmation(\"Simpan data?\")\n        .then(ok=>{\n            if (ok) {  this.submit();  }\n        })\n    }\n    removeImage = () => {\n        this.showConfirmationDanger(\"Hapus gambar?\")\n        .then(ok=>{\n            if (ok) {\n                const record = this.state.record;\n                record.pictures = [];\n                this.setState({record: record, attachment: undefined});\n            }\n        })\n    }\n    updatePicture = (e:ChangeEvent) => {\n        getAttachmentInfoFromFile(e.target as HTMLInputElement)\n        .then(attachment=>{ \n            this.setState({attachment:attachment});\n        }).catch(console.error)\n    }\n    setStudent = (s:Student) => {\n        const record = this.state.record;\n        record.student = s;\n        record.student_id = s.id;\n        this.setState({record: record, });\n    }\n\n    updateCategory = (e:ChangeEvent) => {\n        this.handleInputChange(e);\n        this.loadRulePoints((e.target as HTMLSelectElement).value);\n    }\n\n    updateRulePoint = (e:ChangeEvent) => {\n        const catId =  this.state.selectedCategoryId;\n        const p = this.state.pointsMap[catId].filter((r:RulePoint)=>{\n            return r.id.toString() == (e.target as HTMLSelectElement).value;\n        })\n        if (p.length == 0) return;\n        this.setSelectedRulePoint(p[0]);\n    }\n    \n    render() {\n\n        const record = this.state.record;\n        const categoryID = this.state.selectedCategoryId;\n        const pointsMap = this.state.pointsMap;\n        const pictureUrl = this.state.attachment?this.state.attachment.url : record.getPicture();\n\n        return (\n            <div className=\"section-body container-fluid\">\n                <h2>Form Input Pelanggaran</h2>\n                <hr/>\n                <FormGroup  label=\"Siswa\" >\n                    <StudentSearchForm selectItem={this.setStudent} />\n                </FormGroup>\n                {record.student? <FormGroup>\n                    <div  >{record.student.user?.name ?? \"\"} {Class.studentClassString(record.student)}\n                    </div> \n                </FormGroup>\n                : null}\n                 \n                <form onSubmit={this.onSubmit}>\n                    <FormGroup label=\"Pelanggaran\">\n                        <p>{record.rule_point?.name??\"-\"} {record.rule_point? `(${record.rule_point.point})` :\"\"}</p>\n                        <p/>\n                        <select value={categoryID} name=\"selectedCategoryId\" onChange={this.updateCategory} className=\"form-control\">\n                             <option value=\"\">Pilih Kategori</option>\n                             {this.state.categories.map((cat:Category)=>{\n                                 return (\n                                    <option key={`cat_ed_opt_${cat.id}`} value={cat.id}>\n                                        {cat.name}\n                                    </option>\n                                 )\n                             })}\n                         </select>\n                         <p/>\n                         <select className=\"form-control\" onChange={this.updateRulePoint} >\n                             <option value=\"\">Pilih Pelanggaran</option>\n                             {pointsMap[categoryID]?\n                                pointsMap[categoryID].map(p=>{\n                                 return (\n                                    <option  key={`rp_ed_opt_${p.id}`} value={p.id}>\n                                        {p.name} ({p.point})\n                                    </option>\n                                 )\n                             }) : null}\n                         </select>\n                    </FormGroup>\n                    <FormGroup label=\"Tanggal\">\n                        <input type=\"date\" className=\"form-control\" onChange={this.updateDate} name=\"date\" value={record.dateString()} />\n                    </FormGroup>\n                    <FormGroup label=\"Waktu\">\n                        <InputTime ref={this.inputTimeRef} onChange={this.updateTime} value={record.time} />\n                    </FormGroup>\n                    <FormGroup label=\"Lokasi\">\n                        <input type=\"text\" name=\"location\" onChange={this.updateRecordField} className=\"form-control\" value={record.location??\"\"} />\n                    </FormGroup>\n                    <FormGroup label=\"Deskripsi\">\n                        <textarea className=\"form-control\" name=\"description\" onChange={this.updateRecordField} value={record.description??\"\"} />\n                    </FormGroup>\n                    <FormGroup label=\"Gambar\">\n                        {pictureUrl?\n                            <>\n                                <img src={pictureUrl} width={200} height={200} className=\"border border-dark\" />\n                                <p/> \n                                <AnchorWithIcon className=\"btn btn-danger btn-sm\"  onClick={this.removeImage} iconClassName=\"fas fa-times\"  >Hapus Gambar</AnchorWithIcon>\n                            </>:\n                            <div>\n                                <input onChange={this.updatePicture} type=\"file\" accept=\"image/*\" className=\"form-control\" />\n                            </div>\n                        }\n                    </FormGroup>\n                    <FormGroup>\n                        <Link className=\"btn btn-dark\" to=\"/dormitoryactivity/pointsummary\">Kembali</Link>\n                        <input type=\"submit\" className=\"btn btn-primary ml-3\" value=\"Submit\" />\n                    </FormGroup>\n                    {/* <FormGroup label=\"Siswa\">\n                        <input type=\"text\" className=\"form-control\" value={record.student?.user?.name} />\n                    </FormGroup> */}\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    \n)(PointRecordEdit))\n","import React from 'react' \nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from './../../../../constant/stores';\nimport BasePage from './../../BasePage';\nimport StudentService from './../../../../services/StudentService';\nimport Student from './../../../../models/Student';\nimport { tableHeader } from './../../../../utils/CollectionUtil';\nimport WebResponse from './../../../../models/commons/WebResponse';\nimport Class from './../../../../models/Class';\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\ninterface FollowUpInfo {\n    student:Student,\n    TOTAL_POINT:any,\n    FOLLOW_UP_COUNT:number,\n}\nclass State {\n    followUpInfos:FollowUpInfo[] = [];\n}\nclass FollowUpReminder extends BasePage\n{\n    state:State = new State();\n    private studentService:StudentService;\n    constructor(props) {\n        super(props, \"Follow Up Pelanggaran\",true);\n        this.studentService = this.getServices().studentService;\n    }\n    componentReady(){\n        // if (this.isAdmin()) return;\n        this.loadReminder();\n    }\n    loadReminder = () => {\n        this.commonAjax(\n            this.studentService.getFollowUpReminders,\n            this.recordsLoaded,\n            console.error\n        )\n    }\n    recordsLoaded = (r:WebResponse) => {\n        this.setState({followUpInfos:r.items});\n    }\n\n    render(){\n\n        return (\n            <div className=\"section-body container-fluid\">\n                <h2>Follow Up Pelanggaran</h2>\n                <p>Pelanggaran dengan poin di bawah {this.getApplicationProfile().warning_point}</p>\n                <AnchorWithIcon iconClassName=\"fas fa-redo\" onClick={this.loadReminder} children=\"Reload\"/>\n                <table className=\"table\">\n                    {tableHeader(\"No\", \"Siswa\", \"Kelas\", \"Poin\", \"Penanganan\", \"Opsi\")}\n                    <tbody>\n                        {this.state.followUpInfos.map((info, i)=>{\n                            return (\n                                <tr key={`f-i-${i}`}>\n                                    <td>{i+1}</td>\n                                    <td>{info.student.user?.name}</td>\n                                    <td>{Class.studentClassString(info.student)}</td>\n                                    <td>{info.TOTAL_POINT}</td>\n                                    <td>{info.FOLLOW_UP_COUNT}</td>\n                                    <td>\n                                        <a className=\"btn btn-info btn-sm\" >\n                                            Follow Up\n                                        </a>\n                                    </td>\n                                </tr>\n                            )\n                        })}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(FollowUpReminder)\n)","\nimport BaseEntity from './BaseEntity';\nimport Student from './Student';\nexport default class WarningAction extends BaseEntity\n{\n    name:string|undefined;\n    description:string|undefined;\n    student:Student|undefined;\n    student_id:string| undefined;\n}","import React, { ChangeEvent } from 'react'\nimport BaseManagementPage from './BaseManagementPage';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\nimport WarningAction from '../../../models/WarningAction';\nimport Filter from './../../../models/commons/Filter';\nimport WebRequest from './../../../models/commons/WebRequest';\nimport FormGroup from './../../form/FormGroup';\nimport NavigationButtons from './../../navigation/NavigationButtons';\nimport { tableHeader } from './../../../utils/CollectionUtil';\nimport EditDeleteButton from './EditDeleteButton';\nimport Class from './../../../models/Class';\nimport Modal from './../../container/Modal';\nimport StudentSearchForm from '../shared/StudentSearchForm';\nimport Student from './../../../models/Student';\nimport BaseEntity from './../../../models/BaseEntity';\nclass State {\n    items: WarningAction[] = [];\n    filter: Filter = new Filter();\n    totalData: number = 0;\n    record: WarningAction = new WarningAction();\n\n}\nclass WarningActionManagement extends BaseManagementPage {\n\n    state:State = new State();\n    constructor(props) {\n        super(props, 'warningaction');\n    }\n    setStudent = (s:Student) => {\n        const record = this.state.record;\n        record.student = s;\n        record.student_id = s.id;\n        this.setState({record: record});\n    }\n    emptyRecord = (): BaseEntity => {\n        return new WarningAction();\n    }\n    onSubmit = () => {\n        // console.debug(\"RECORD: \", this.state.record);\n        this.showConfirmation(\"Submit Data?\")\n            .then(ok => {\n                if (!ok) return;\n                \n                const request: WebRequest = {\n                    warningAction: this.state.record,\n                    modelName: this.modelName\n                }\n                this.callApiSubmit(request);\n            })\n    }\n    render() {\n        const filter: Filter = this.state.filter;\n        return (\n            <div className=\"container-fluid section-body\">\n                <h2>Daftar Peringatan</h2>\n                <hr />\n                {this.isAdmin()?\n                <RecordForm formRef={this.formRef} setStudent={this.setStudent} resetForm={this.resetForm} onSubmit={this.onSubmit} record={this.state.record} updateRecordProp={this.updateRecordProp} />\n                :null}\n                <form onSubmit={this.reload}>\n                    <FormGroup label=\"Cari\">\n                        <input name=\"name\" placeholder=\"nama peringatan\" className=\"form-control-sm\" value={filter.fieldsFilter['name']?? \"\"} onChange={this.updateFieldsFilter} />\n                        <input name=\"student_name\" placeholder=\"nama siswa\" className=\"form-control-sm\" value={filter.fieldsFilter['student_name']?? \"\"} onChange={this.updateFieldsFilter} />\n                    </FormGroup>\n                    <FormGroup label=\"Jumlah Tampilan\">\n                        <input name=\"limit\" type=\"number\" className=\"form-control-sm\" value={filter.limit ?? 5} onChange={this.updateFilter} />\n                    </FormGroup>\n                    <FormGroup>\n                        <input className=\"btn btn-primary btn-sm\" type=\"submit\" value=\"Submit\" />\n                    </FormGroup>\n                </form>\n                <NavigationButtons activePage={filter.page ?? 0} limit={filter.limit ?? 5} totalData={this.state.totalData}\n                    onClick={this.loadAtPage} />\n                <ItemsList \n                    isAdmin={this.isAdmin()}\n                    recordLoaded={this.oneRecordLoaded}\n                    recordDeleted={this.loadItems}\n                    startingNumber={(filter.page??0)*(filter.limit??10)} items={this.state.items} />\n            </div>\n        )\n    }\n\n}\ninterface ItemProps {isAdmin:boolean ,startingNumber:number, items:WarningAction[], recordLoaded(item:any), recordDeleted()}\nconst ItemsList = (props: ItemProps) => {\n\n    return (\n        <div style={{overflow:'scroll'}}>\n        <table className=\"table table-striped\">\n            {tableHeader(\"No\", \"Siswa\", \"Kelas\", \"Nama\", \"Deskripsi\", \"Opsi\")}\n            <tbody>\n                    {props.items.map((item:WarningAction, i)=>{\n\n                        return (\n                            <tr key={\"category-\"+i}>\n                                <td>{i+1+props.startingNumber}</td>\n                                <td>{item.student?.user?.name}</td>\n                                <td>{Class.studentClassString(item.student)}</td>\n                                <td>{item.name}</td>\n                                <td>{item.description}</td>\n                                <td>{props.isAdmin?\n                                    <EditDeleteButton \n                                        recordLoaded={props.recordLoaded}\n                                        recordDeleted={props.recordDeleted}\n                                        record={item} modelName={'warningaction'}/>:null}\n                                </td>\n                            </tr>\n                        )\n                    })}\n                </tbody>\n        </table>\n        </div>\n    )\n}\nconst RecordForm = (props: { formRef:React.RefObject<Modal>, setStudent(s:Student), updateRecordProp(e: ChangeEvent): any, resetForm():any, onSubmit(): any, record: WarningAction }) => {\n    const record = props.record;\n    return (\n        <div className=\"record-form mb-3\" >\n            <Modal show={false} ref={props.formRef} toggleable={true} title=\"Record Form\" >\n                <FormGroup label=\"Siswa\">\n                    <StudentSearchForm selectItem={props.setStudent} />\n                    \n                </FormGroup>\n                {record.student?\n                        <FormGroup children={record.student.user?.name+ \" \" +Class.studentClassString(record.student)} />:null\n                    }\n                <form onSubmit={(e) => { e.preventDefault(); props.onSubmit() }}>\n                <FormGroup label=\"Nama\"><input placeholder=\"Nama peringatan\" required value={record.name ?? \"\"} onChange={props.updateRecordProp} className=\"form-control-sm\" name=\"name\" /></FormGroup>\n                <FormGroup label=\"Deskripsi\">\n                    <textarea required className=\"form-control\" name=\"description\" onChange={props.updateRecordProp} value={record.description ?? \"\"} />\n                </FormGroup>\n                <FormGroup>\n                    <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-sm\" />\n                    &nbsp;\n                    <input type=\"reset\"   className=\"btn btn-secondary btn-sm\" onClick={(e)=>props.resetForm()} />\n                </FormGroup>\n                </form>\n            </Modal>\n        </div>\n    )\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(WarningActionManagement)\n)","import React, { FormEvent } from 'react'\nimport BasePage from './../BasePage';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\nimport ApplicationProfile from './../../../models/ApplicationProfile';\nimport FormGroup from '../../form/FormGroup';\nimport ConfigurationService from './../../../services/ConfigurationService';\nimport WebResponse from './../../../models/commons/WebResponse';\n\nclass State {\n    applicationProfile:ApplicationProfile = new ApplicationProfile();\n}\nclass ConfigSettingPage extends BasePage\n{\n    state:State = new State();\n    configService:ConfigurationService;\n    constructor(props) {\n        super(props, \"Konfigurasi\", true);\n        this.configService = this.getServices().configurationService;\n    }\n\n    componentReady() {\n        this.setState({\n            applicationProfile: Object.assign(new ApplicationProfile(), this.getApplicationProfile())\n        });\n    }\n\n    submit = (e:FormEvent) => {\n        e.preventDefault();\n        console.debug(this.state.applicationProfile)\n        this.commonAjax(\n            this.configService.update,\n            this.configUpdated,\n            this.showCommonErrorAlert,\n            this.state.applicationProfile\n        )\n    }\n    configUpdated = (response: WebResponse) => {\n        this.showInfo(\"Sukses, silakan muat ulang halaman\");\n    }\n\n    render() {\n        const profile = this.state.applicationProfile;\n        return (\n            <div className=\"container-fluid section-body\" >\n                <h2>Konfigurasi</h2>\n                <hr/>\n                <form style={{padding:5}} onSubmit={this.submit} className=\"border border-secondary rounded \">\n                    <FormGroup label=\"Nama Aplikasi\">\n                        <input name='name' onChange={(e)=>this.handleInputChange(e, 'applicationProfile')} className=\"form-control\" value={profile.name??\"\"} />\n                    </FormGroup>\n                    <FormGroup label=\"Deskripsi Aplikasi\">\n                        <input name='description' onChange={(e)=>this.handleInputChange(e, 'applicationProfile')} className=\"form-control\" value={profile.description??\"\"} />\n                    </FormGroup>\n                    <FormGroup label=\"Batas Poin Peringatan\">\n                        <input name='warning_point' onChange={(e)=>this.handleInputChange(e, 'applicationProfile')} className=\"form-control\" type=\"number\" value={profile.warning_point??-30} />\n                    </FormGroup>\n                    <FormGroup>\n                        <input type=\"submit\" value=\"Simpan\" className=\"btn btn-primary\" />\n                    </FormGroup>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapCommonUserStateToProps\n    )(ConfigSettingPage)\n)","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../constant/stores';\r\nimport { withRouter, Switch, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Login from '../pages/login/Login';\r\nimport DashboardMain from '../pages/dashboard/main/DashboardMain';\r\nimport HomeMain from '../pages/home/HomeMain';\r\nimport Menu from '../../models/settings/Menu'; \r\nimport MusyrifManagement from '../pages/management/MusyrifManagement';\r\nimport ManagementMain from '../pages/management/ManagementMain';\r\nimport CategoryManagement from '../pages/management/CategoryManagement';\r\nimport RulePointManagement from '../pages/management/RulePointManagement';\r\nimport StudentList from '../pages/dormitoryactivity/StudentList';\r\nimport InputPointForm from '../pages/dormitoryactivity/InputPointForm';\r\nimport PointRecordsManagement from '../pages/management/PointRecordsSummary';\r\nimport MedicalRecordForm from '../pages/dormitoryactivity/medicalrecord/MedicalRecordForm';\r\nimport AboutUs from './../pages/home/AboutUs';\r\nimport Register from '../pages/login/Register'; \r\nimport PointRecordEdit from '../pages/dormitoryactivity/point-record/PointRecordEdit';\r\nimport FollowUpReminder from '../pages/dashboard/main/FollowUpReminder';\r\nimport WarningActionManagement from '../pages/management/WarningActionManagement';\r\nimport ConfigSettingPage from '../pages/settings/ConfigSettingPage';\r\n\r\nclass ApplicationContent extends BaseComponent {\r\n \r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    setSidebarMenus = (menus: Menu[]) => {\r\n        this.props.setSidebarMenus(menus);\r\n    }\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Switch>\r\n                   \r\n                    {/* -------- home -------- */}\r\n                    <Route exact path=\"/home\" render={\r\n                        (props: any) => {\r\n                            return <HomeMain />\r\n                        }\r\n                    } />\r\n                    <Route exact path=\"/\" render={\r\n                        (props: any) =>\r\n                            <HomeMain />\r\n                    } />\r\n                    <Route exact path=\"/about\" render={\r\n                        (props: any) =>\r\n                            <AboutUs />\r\n                    } />\r\n                     \r\n{/* \r\n                     \r\n                    <Route exact path=\"/management\" render={\r\n                        (props: any) => {\r\n                            console.debug(\"MANAGEMENTS path\")\r\n                            return <MasterDataMain setSidebarMenus={this.setSidebarMenus} />\r\n                        }\r\n                    } />\r\n                    <Route exact path=\"/management/:code\" render={\r\n                        (props: any) =>\r\n                            <MasterDataMain setSidebarMenus={this.setSidebarMenus} />\r\n                    } /> */}\r\n\r\n\r\n                    {/* ///////// PUBLIC ///////// */}\r\n\r\n                </Switch>\r\n                <LoginRoute />\r\n                <StudentsRoute />\r\n                <MusyrifManagementRoute/>\r\n                <Dashboard />\r\n                <Setting/>\r\n            </Fragment>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        // document.title = \"Login\";\r\n    }\r\n\r\n}\r\n\r\nconst Setting  = (props) => {\r\n\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/settings/config\" render={\r\n                (props:any) => <ConfigSettingPage />\r\n            } />\r\n        </Switch>\r\n    )\r\n}\r\nconst MusyrifManagementRoute  = (props) => {\r\n\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/management\" render={\r\n                (props:any) => <ManagementMain />\r\n            } />\r\n            <Route exact path=\"/management/musyrifmanagement\" render={\r\n                (props:any) => <MusyrifManagement />\r\n            } />\r\n            <Route exact path=\"/management/rule_category\" render={\r\n                (props:any) => <CategoryManagement />\r\n            } />\r\n            <Route exact path=\"/management/rule_point\" render={\r\n                (props:any) => <RulePointManagement />\r\n            } />\r\n            <Route exact path=\"/management/warning_action\" render={\r\n                (props:any) => <WarningActionManagement />\r\n            } />\r\n        </Switch>\r\n    )\r\n}\r\n\r\nconst StudentsRoute = (proos) => {\r\n\r\n    return (\r\n        <Switch>\r\n             <Route exact path=\"/dormitoryactivity/studentlist\" render={\r\n                (props:any) => <StudentList />\r\n            } />\r\n             <Route exact path=\"/dormitoryactivity/inputpoint\" render={\r\n                (props:any) => <InputPointForm/>\r\n            } />\r\n             <Route exact path=\"/dormitoryactivity/pointsummary\" render={\r\n                (props:any) => <PointRecordsManagement/>\r\n            } />\r\n             <Route exact path=\"/dormitoryactivity/pointrecordedit\" render={\r\n                (props:any) => <PointRecordEdit/>\r\n            } />\r\n             <Route exact path=\"/dormitoryactivity/medicalrecord\" render={\r\n                (props:any) => <MedicalRecordForm/>\r\n            } />\r\n            \r\n        </Switch>\r\n    )\r\n}\r\nconst LoginRoute = (props) => {\r\n\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/login\" render={\r\n                (props: any) =>\r\n                    <Login />\r\n            } />\r\n            <Route exact path=\"/register\" render={\r\n                (props: any) =>\r\n                    <Register />\r\n            } />\r\n        </Switch>\r\n    )\r\n}\r\n\r\n\r\nconst Dashboard = (props) => {\r\n    return (\r\n        <Switch>\r\n            {/* -------- dashboard -------- */}\r\n            <Route exact path=\"/dashboard\" render={\r\n                (props: any) => {\r\n                   \r\n                        console.debug(\"dashboard path\")   \r\n                       return  <DashboardMain />\r\n                }\r\n                   \r\n            } />\r\n              <Route exact path=\"/dashboard/followup\" render={\r\n                (props: any) =>\r\n                    <FollowUpReminder />\r\n            } /> \r\n        </Switch>\r\n    )\r\n}\r\n \r\n\r\nconst mapDispatchToProps = (dispatch: Function) => ({})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(ApplicationContent))","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../constant/stores';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { performLogout } from './../../redux/actionCreators';\r\nimport Menu from '../../models/settings/Menu';\r\nimport './SideBar.css'\r\n\r\nclass SideBar extends BaseComponent {\r\n    constructor(props: { sidebarMenus?: Menu[] }) {\r\n        super(props, false);\r\n    }\r\n    isSidebarActive = (menu: Menu) => {\r\n        const parentMenu: Menu = this.props.parentMenu;\r\n        if (null == parentMenu) { return false; }\r\n        const pathName = this.props.location.pathname;\r\n        return parentMenu.url + \"/\" + menu.url == pathName;\r\n    }\r\n    componentDidMount() {\r\n        window.addEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    handleScroll(event) {\r\n        let scrollTop = event.srcElement.body.scrollTop,\r\n            itemTranslate = Math.min(0, scrollTop / 3 - 60);\r\n        // console.debug(\"scrollTop: \", scrollTop);\r\n\r\n    }\r\n    render() {\r\n        const parentMenu: Menu = this.props.parentMenu;\r\n        if (null == parentMenu) { return null }\r\n        const menus: Menu[] = this.props.sidebarMenus == null ? [] : this.props.sidebarMenus;\r\n        const user = this.getLoggedUser();\r\n        return (\r\n            <ul id=\"sidebar\" className=\"sidebar-nav bg-light\">\r\n                <Brand show={parentMenu != null} brand={parentMenu} />\r\n\r\n                {menus.map(menu => {\r\n                    if (menu.userAuthorized && !menu.userAuthorized(user)) return null;\r\n                    const isActive: boolean = this.isSidebarActive(menu);\r\n                    const menuClassName = isActive ? 'menu-active' : 'regular-menu';\r\n                    return (\r\n                        <li className={\"sidebar-item \" + menuClassName} key={\"SIDEBAR_\" + menu.code}><Link to={parentMenu.url + \"/\" + menu.url}>\r\n                            <span className=\"sidebar-icon\"><i className={Menu.getIconClassName(menu)}></i></span>\r\n                            <span className={'menu-label'} >{menu.name}</span>\r\n                        </Link></li>\r\n                    )\r\n                })\r\n                }\r\n            </ul >\r\n        )\r\n    }\r\n\r\n}\r\nconst Brand = (props) => {\r\n    if (props.show == false) return null;\r\n    return (\r\n        <Fragment>\r\n            <li id=\"sidebar-brand\" className=\"sidebar-brand\" style={{ marginBottom: '20px' }}>\r\n                <div style={{\r\n                    textAlign: 'center', paddingTop: '10px',\r\n                    paddingBottom: '10px'\r\n                }}>\r\n                    <h3 className=\"text-dark\">\r\n                        <i className={Menu.getIconClassName(props.brand)}></i>\r\n                    </h3>\r\n                    <Link to={props.brand.url} style={{ textDecoration: 'none' }}><h4 className=\"text-dark\">{props.brand.name}</h4></Link>\r\n                </div>\r\n            </li>\r\n            <li className={\"sidebar-item-brand \"} >\r\n                <Link to={props.brand.url}>\r\n                    <span className=\"sidebar-icon\"><i className={Menu.getIconClassName(props.brand)}></i></span>\r\n                </Link>\r\n            </li>\r\n        </Fragment>\r\n    )\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    performLogout: (app: any) => dispatch(performLogout(app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(SideBar))","import React, { Fragment } from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../constant/stores';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { performLogout } from './../../redux/actionCreators';\r\nimport Header from '../navigation/Header';\r\nimport ApplicationContent from './ApplicationContent';\r\nimport SideBar from '../navigation/SideBar';\r\nimport './Layout.css';\r\nimport Menu from '../../models/settings/Menu';\r\nimport { getMenuByMenuPath, extractMenuPath } from './../../constant/Menus';\r\nclass IState {\r\n    showSidebar: boolean = false;\r\n    activeMenuCode: any = null;\r\n    menu?: Menu;\r\n    sidebarMenus?: Menu[]\r\n};\r\nclass MainLayout extends BaseComponent {\r\n    state: IState = new IState();\r\n    currentPathName: string = \"\";\r\n    constructor(props: any) {\r\n        super(props, false);\r\n        this.state = {\r\n            ...this.state,\r\n        }\r\n    }\r\n    setMenuNull = () => {\r\n        this.setState({ menu: undefined, showSidebar: false, activeMenuCode: null, sidebarMenus: null });\r\n    }\r\n    setMenu = (menu: Menu) => {\r\n        if (menu == null) {\r\n            return;\r\n        }\r\n        this.setState({ menu: menu, sidebarMenus: null, showSidebar: menu.showSidebar, activeMenuCode: menu.code });\r\n    }\r\n    setSidebarMenus = (menus: Menu[]) => {\r\n        // console.debug(\"Set sidebar menus: \", menus);\r\n        this.setState({ sidebarMenus: menus });\r\n    }\r\n    componentDidMount() {\r\n        this.setCurrentMenu();\r\n    }\r\n    componentDidUpdate() {\r\n        this.setCurrentMenu();\r\n    }\r\n    setCurrentMenu = () => {\r\n        const pathName = extractMenuPath(this.props.location.pathname);\r\n\r\n        if (pathName == this.currentPathName) {\r\n            return;\r\n        }\r\n        this.currentPathName = pathName;\r\n        const menu = getMenuByMenuPath(pathName);\r\n        if (menu == null) {\r\n            this.setMenuNull();\r\n        } else {\r\n            this.setMenu(menu);\r\n        }\r\n    }\r\n    getSubMenus = () :Menu[]|null => {\r\n        const menuState:Menu|undefined = this.state.menu;\r\n        if (menuState && menuState.subMenus != null && menuState.subMenus?.length > 0) {\r\n            return menuState.subMenus;\r\n        }\r\n        if (this.state.sidebarMenus) {\r\n            return this.state.sidebarMenus;\r\n        }\r\n        return null;\r\n    }\r\n    render() {\r\n        const showSidebar: boolean = this.state.showSidebar == true;\r\n        const className = showSidebar ? \"app-content\" : \"content\";\r\n        return (\r\n            <Fragment>\r\n                <Header setMenuNull={this.setMenuNull} activeMenuCode={this.state.activeMenuCode} setMenu={this.setMenu} />\r\n                <div id=\"content-wrapper\" className={\"container-fluid  \" + className}>\r\n                    <ApplicationContent setSidebarMenus={this.setSidebarMenus} />\r\n                </div>\r\n                {showSidebar ?\r\n                    <SideBar sidebarMenus={this.getSubMenus()} parentMenu={this.state.menu} />\r\n                    : null}\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    performLogout: (app: any) => dispatch(performLogout(app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(MainLayout))","\nimport React, { Component, Fragment, RefObject } from 'react';\nimport './App.css';\nimport { withRouter } from 'react-router-dom'\nimport * as actions from './redux/actionCreators'\nimport { connect } from 'react-redux'\nimport SockJsClient from 'react-stomp';\nimport * as url from './constant/Url';\nimport { mapCommonUserStateToProps } from './constant/stores';\nimport Loader from './component/loader/Loader';\nimport Alert from './component/alert/Alert';\nimport MainLayout from './component/layout/MainLayout';\nimport WebResponse from './models/commons/WebResponse';\nimport Spinner from './component/loader/Spinner';\nimport { performWebsocketConnection, setWebSocketUrl, registerWebSocketCallbacks } from './utils/websockets';\nimport UserService from './services/UserService';\nimport AnchorWithIcon from './component/navigation/AnchorWithIcon';\nimport { time } from 'console';\nimport { doItLater, updateFavicon } from './utils/EventUtil';\n\nclass IState {\n  loading: boolean = false;\n  loadingPercentage: number = 0;\n  requestId?: string;\n  mainAppUpdated: Date = new Date();\n  showAlert: boolean = false;\n  realtime: boolean = false;\n  appIdStatus: string = \"Loading App Id\";\n  errorAuthenticatingApp: boolean = false;\n}\nclass App extends Component<any, IState> {\n  wsConnected: boolean = false;\n  loadings: number = 0;\n  alertTitle: String = \"Info\";\n  alertBody: any = null;\n  alertIsYesOnly: boolean = true;\n  alertIsError: boolean = false;\n  alertOnYesCallback: Function = function (e) { };\n  alertOnCancelCallback: Function = function (e) { };\n  wsUpdateHandler: Function | undefined = undefined;\n  clientRef: RefObject<SockJsClient> = React.createRef();\n  userService: UserService;\n  // alertRef: RefObject<Alert> = React.createRef();\n  alertCallback = {\n    title: \"Info\", message: \"Info\", yesOnly: false,\n    onOk: () => { }, onNo: () => { }\n  }\n\n  constructor(props: any) {\n    super(props);\n    this.state = new IState();\n    this.userService = this.props.services.userService;\n\n    this.props.setMainApp(this);\n  }\n  refresh = () => { this.setState({ mainAppUpdated: new Date() }); }\n\n  requestAppId = () => {\n    this.setState({ appIdStatus: \"Authenticating application\", errorAuthenticatingApp: false });\n    this.userService.requestApplicationId((response) => {\n      this.props.setRequestId(response, this);\n      this.refresh();\n      this.setState({ errorAuthenticatingApp: false });\n    }, this.retryRequestAppId)\n\n  }\n  retryRequestAppId = () => {\n    this.setState({ appIdStatus: \"Authenticating application (Retrying)\", errorAuthenticatingApp: false });\n    this.userService.requestApplicationIdNoAuth((response) => {\n      this.props.setRequestId(response, this);\n      this.setState({ errorAuthenticatingApp: false });\n    },\n      () =>\n        this.setState({ errorAuthenticatingApp: true }))\n\n  }\n  incrementLoadings() {\n    this.loadings++;\n  }\n\n  decrementLoadings() {\n    this.loadings--;\n    if (this.loadings < 0) {\n      this.loadings = 0;\n    }\n  }\n\n  startLoading(realtime: boolean = false) {\n    this.incrementLoadings();\n    this.setState({ loading: true, realtime: realtime });\n  }\n\n  endLoading() {\n    this.decrementLoadings();\n    if (this.loadings == 0) {\n      if (this.state.realtime) {\n        this.setState({ loadingPercentage: 100 }, this.smoothEndLoading);\n      } else {\n        this.setState({ loading: false, loadingPercentage: 0 });\n      }\n    }\n  }\n\n  smoothEndLoading = () => {\n    doItLater(() => {\n      this.setState({ loading: false, loadingPercentage: 0 });\n    }, 100);\n  }\n\n  handleProgress = (msg: WebResponse) => {\n    const percentageFloat: number = msg.percentage ?? 0;\n    let percentage = Math.floor(percentageFloat);\n    if (percentageFloat < 0 || percentageFloat > 100) {\n      this.endLoading();\n    }\n    this.setState({ loadingPercentage: percentage });\n  }\n\n  showAlert(title: string, body: any, yesOnly: boolean, yesCallback: Function, noCallback?: Function) {\n    this.alertTitle = title;\n    this.alertBody = body;\n    this.alertIsYesOnly = yesOnly;\n    const app = this;\n    this.alertOnYesCallback = function (e) {\n      app.dismissAlert();\n      yesCallback(e);\n    }\n    if (!yesOnly) {\n      this.alertOnCancelCallback = function (e) {\n        app.dismissAlert();\n        if (noCallback != null) {\n          noCallback(e);\n        }\n      };\n    }\n    this.setState({ showAlert: true });\n  }\n\n  dismissAlert() {\n    this.alertIsError = false;\n    this.setState({ showAlert: false })\n  }\n  showAlertError(title: string, body: any, yesOnly: boolean, yesCallback: Function, noCallback?: Function) {\n    this.alertIsError = true;\n    this.showAlert(title, body, yesOnly, yesCallback, noCallback)\n  }\n\n  componentDidUpdate() {\n    // console.debug(\"APP UPDATED\");\n    if (this.props.applicationProfile) {\n      updateFavicon(this.props.applicationProfile);\n    }\n    if (this.props.requestId && !this.wsConnected) {\n      this.initWebsocket();\n    }\n  }\n\n  componentDidMount() {\n    this.requestAppId();\n    this.setState({ loadingPercentage: 0 });\n  }\n\n  initWebsocket = () => {\n    setWebSocketUrl(url.contextPath() + 'realtime-app');\n    registerWebSocketCallbacks({\n      subscribeUrl: \"/wsResp/progress/\" + this.props.requestId,\n      callback: this.handleProgress  //must use lambda\n    },\n      {\n        subscribeUrl: \"/wsResp/\" + this.props.requestId + \"/update\",\n        callback: (response) => this.handleWsUpdate(response)\n      });\n    performWebsocketConnection();\n    this.wsConnected = true;\n  }\n\n  private handleWsUpdate = (response: any) => {\n\n    if (this.wsUpdateHandler) {\n      this.wsUpdateHandler(response);\n    }\n  }\n\n  setWsUpdateHandler = (handler: Function | undefined) => {\n    this.wsUpdateHandler = handler;\n  }\n  resetWsUpdateHandler = () => {\n    this.setWsUpdateHandler(undefined);\n  }\n\n  render() {\n    if (!this.props.requestId) {\n      return (\n        <div className=\"text-center\" style={{ paddingTop: '10%' }}>\n          <h2>{this.state.appIdStatus}</h2>\n          {this.state.errorAuthenticatingApp ?\n            <AnchorWithIcon iconClassName=\"fas fa-redo\" onClick={this.retryRequestAppId} children=\"Retry\" /> :\n            <Spinner />}\n        </div>\n      )\n    }\n    return (\n      <Fragment>\n        <Loading realtime={this.state.realtime} loading={this.state.loading} loadingPercentage={this.state.loadingPercentage} />\n        {this.state.showAlert ?\n          <Alert title={this.alertTitle}\n            isError={this.alertIsError}\n            onClose={(e) => this.setState({ showAlert: false })}\n            yesOnly={this.alertIsYesOnly}\n            onYes={this.alertOnYesCallback} onNo={this.alertOnCancelCallback}\n          >{this.alertBody}</Alert> :\n          null}\n        <MainLayout />\n        {/* <SockJsClient url={usedHost + 'realtime-app'} topics={['/wsResp/progress/' + this.props.requestId]}\n\n          onMessage={(msg: WebResponse) => { this.handleMessage(msg) }}\n          ref={this.clientRef} /> */}\n      </Fragment>\n    )\n  }\n}\n\nfunction Loading(props) {\n  if (props.loading == true) {\n    return (\n      <Loader realtime={props.realtime} progress={props.loadingPercentage} text=\"Please wait...\" type=\"loading\" />\n    );\n  }\n  return null;\n}\n\n\nconst mapDispatchToProps = (dispatch: Function) => ({\n  setMainApp: (app: App) => dispatch(actions.setMainApp(app)),\n  setRequestId: (response: WebResponse, app: App) => dispatch(actions.setRequestId(response, app)),\n})\n\nexport default withRouter(connect(\n  mapCommonUserStateToProps,\n  mapDispatchToProps\n)(App))\n","import React from 'react'\r\nimport App from './App'\r\nimport configureStore from './redux/configureStore'\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n \r\nconst Root = (props:any)  => {\r\n\r\n    const store = configureStore();\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <App/>\r\n            </HashRouter>\r\n        </Provider>  \r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Root;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './Root.tsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}